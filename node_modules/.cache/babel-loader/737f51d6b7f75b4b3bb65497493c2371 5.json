{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Home/pages/home.jsx\";\nimport React, { useCallback, useState } from 'react';\nimport { EmptyContainerWrapper, RootContent } from '../../../UIComponents/GlobalStyles';\nimport { FixedHeader } from '../../../Components/FixedHeader';\nimport { HomeFixedHeaderComponent } from '../organisms';\nimport { useHomeList } from '../../../Hooks/home';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { $orgModel } from '../../../Models/org-model';\nimport { useHistory } from 'react-router-dom';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { OrganizationCard, OrganizationCardSkeleton } from '../../../Components/Cards/OrganizationCard';\nimport { NoSearchResultSvg } from '../../../Icons/NoSearchResult';\nimport { Title } from '../../../UIComponents/Typography/Title';\nimport { useTranslation } from 'react-i18next';\nimport { OrgsSearchInput } from '../molecules';\nimport org from '../../../Service/org';\nconst skeleton = generateSkeleton(10);\nexport const Home = () => {\n  const {\n    push\n  } = useHistory();\n  const {\n    t\n  } = useTranslation();\n  const {\n    loadMore\n  } = useHomeList();\n  const [modal, setModal] = useState(false);\n  const [orgList, setOrgList] = useState([]);\n  const [orgSearch, setOrgSearch] = useState('');\n  const {\n    $allOrgList: {\n      data,\n      result,\n      loading,\n      forceLoading\n    }\n  } = useStore($orgModel);\n\n  const handleOrgItemClick = item => {\n    push(`/${item.slug_name}/offerings`);\n  };\n\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (orgSearch.length > 3) {\n      const data = {\n        clear: true,\n        params: {\n          search: orgSearch\n        }\n      };\n      org.getAllOrg(data).then(res => {\n        if (res) {\n          setOrgList(res.data.results);\n        }\n      });\n    }\n  }, [orgSearch]);\n\n  const onClose = () => {\n    setModal(false) && setOrgList([]);\n  };\n\n  return /*#__PURE__*/React.createElement(RootContent, {\n    paddingTop: 62,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OrgsSearchInput, {\n    visible: modal,\n    onCancel: onClose,\n    setModal: setModal,\n    setOrgSearch: setOrgSearch,\n    orgSearch: orgSearch,\n    handleSubmit: handleSubmit,\n    orgList: orgList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FixedHeader, {\n    component: /*#__PURE__*/React.createElement(HomeFixedHeaderComponent, {\n      setModal: setModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    next: loadMore,\n    hasMore: !loading && !!result.next,\n    dataLength: result.nextOffset || 10,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, forceLoading === 2 && data ? /*#__PURE__*/React.createElement(React.Fragment, null, data.length > 0 ? /*#__PURE__*/React.createElement(Row, {\n    className: \"container\",\n    gutter: [0, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 45\n    }\n  }, data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(OrganizationCard, {\n    name: item.name,\n    imgUrl: item.logo,\n    containerPath: () => handleOrgItemClick(item),\n    category: item.category.name,\n    ethics: item.rating.ethics.level,\n    aesthetics: item.rating.aesthetics.level,\n    professional: item.rating.professional.level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 61\n    }\n  })))) : /*#__PURE__*/React.createElement(EmptyContainerWrapper, {\n    style: {\n      height: '80vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(NoSearchResultSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 49\n    }\n  }, t('no_search_result')))) : /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(OrganizationCardSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 45\n    }\n  }))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Home/pages/home.jsx"],"names":["React","useCallback","useState","EmptyContainerWrapper","RootContent","FixedHeader","HomeFixedHeaderComponent","useHomeList","InfiniteScroll","Col","Row","useStore","$orgModel","useHistory","generateSkeleton","OrganizationCard","OrganizationCardSkeleton","NoSearchResultSvg","Title","useTranslation","OrgsSearchInput","org","skeleton","Home","push","t","loadMore","modal","setModal","orgList","setOrgList","orgSearch","setOrgSearch","$allOrgList","data","result","loading","forceLoading","handleOrgItemClick","item","slug_name","handleSubmit","e","preventDefault","length","clear","params","search","getAllOrg","then","res","results","onClose","next","nextOffset","map","idx","name","logo","category","rating","ethics","level","aesthetics","professional","height"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react'\nimport {EmptyContainerWrapper, RootContent} from '../../../UIComponents/GlobalStyles'\nimport {FixedHeader} from '../../../Components/FixedHeader'\nimport {HomeFixedHeaderComponent} from '../organisms'\nimport {useHomeList} from '../../../Hooks/home'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {$orgModel} from '../../../Models/org-model'\nimport {useHistory} from 'react-router-dom'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {OrganizationCard, OrganizationCardSkeleton} from '../../../Components/Cards/OrganizationCard'\nimport {NoSearchResultSvg} from '../../../Icons/NoSearchResult'\nimport {Title} from '../../../UIComponents/Typography/Title'\nimport {useTranslation} from 'react-i18next'\nimport {OrgsSearchInput} from '../molecules'\nimport org from '../../../Service/org'\n\nconst skeleton = generateSkeleton(10)\nexport const Home = () => {\n    const {push} = useHistory()\n    const {t} = useTranslation()\n    const {loadMore} = useHomeList()\n    const [modal, setModal] = useState(false)\n    const [orgList, setOrgList] = useState([])\n    const [orgSearch, setOrgSearch] = useState('')\n    const {$allOrgList: {data, result, loading, forceLoading}} = useStore($orgModel)\n    \n    const handleOrgItemClick = (item) => {\n        push(`/${item.slug_name}/offerings`)\n    }\n    \n    const handleSubmit = useCallback((e) => {\n        e.preventDefault()\n        if (orgSearch.length > 3) {\n            const data = {\n                clear: true,\n                params: {\n                    search: orgSearch\n                }\n            }\n            org.getAllOrg(data)\n                .then(res => {\n                    if (res) {\n                        setOrgList(res.data.results)\n                    }\n                })\n        }\n    }, [orgSearch])\n    \n    const onClose = () => {\n        setModal(false) &&\n        setOrgList([])\n    }\n    \n    return (\n        <RootContent paddingTop={62}>\n            <OrgsSearchInput\n                visible={modal}\n                onCancel={onClose}\n                setModal={setModal}\n                setOrgSearch={setOrgSearch}\n                orgSearch={orgSearch}\n                handleSubmit={handleSubmit}\n                orgList={orgList}\n            />\n            <FixedHeader component={<HomeFixedHeaderComponent setModal={setModal}/>}/>\n            <InfiniteScroll\n                next={loadMore}\n                hasMore={!loading && !!result.next}\n                dataLength={result.nextOffset || 10}\n                loader={<>...loading</>}\n            >\n                {\n                    forceLoading === 2 && data\n                        ? (\n                            <>\n                                {\n                                    data.length > 0\n                                        ? (\n                                            <Row className='container' gutter={[0, 12]}>\n                                                {\n                                                    data.map((item, idx) => (\n                                                        <Col span={24} key={`${idx + 1}`}>\n                                                            <OrganizationCard\n                                                                name={item.name}\n                                                                imgUrl={item.logo}\n                                                                containerPath={() => handleOrgItemClick(item)}\n                                                                category={item.category.name}\n                                                                ethics={item.rating.ethics.level}\n                                                                aesthetics={item.rating.aesthetics.level}\n                                                                professional={item.rating.professional.level}\n                                                            />\n                                                        </Col>\n                                                    ))\n                                                }\n                                            </Row>\n                                        ) : (\n                                            <EmptyContainerWrapper style={{height: '80vh'}}>\n                                                <NoSearchResultSvg/>\n                                                <Title level={4}>{t('no_search_result')}</Title>\n                                            </EmptyContainerWrapper>\n                                        )\n                                }\n                            </>\n                        )\n                        : (\n                            <Row>\n                                {\n                                    skeleton.map((item, idx) => (\n                                        <Col span={24} key={`${idx + 1}`}>\n                                            <OrganizationCardSkeleton/>\n                                        </Col>\n                                    ))\n                                }\n                            </Row>\n                        )\n                }\n            </InfiniteScroll>\n        \n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}