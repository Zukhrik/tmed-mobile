{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as Yup from'yup';import{useFormik}from'formik';import{useStore}from'effector-react';import{useEffect,useState}from'react';import{$accountModel}from'../../Models/account-model';var defaultValue={name:'',gender:'',region:'',surname:'',lastname:'',birthday:'',category:''};export function useVerificationPersonalData(){var _useState=useState(defaultValue),_useState2=_slicedToArray(_useState,2),initialValues=_useState2[0],setInitialsValues=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),mounted=_useState4[0],setMounted=_useState4[1];var validationSchema=Yup.object().shape({});var _useStore=useStore($accountModel),$accountInfo=_useStore.$accountInfo;var formik=useFormik({initialValues:initialValues,validationSchema:validationSchema,enableReinitialize:true});var getData=function getData(value){return value||'';};useEffect(function(){var accountData=$accountInfo.data;if(!!accountData&&!mounted){setInitialsValues(_objectSpread(_objectSpread({},defaultValue),{},{name:getData(accountData.name),gender:getData(accountData.gender),surname:getData(accountData.surname),lastname:getData(accountData.lastname),birthday:getData(accountData.birthday),region:getData(accountData.region)?getData(accountData.region):undefined,category:getData(accountData.main_cat)?getData(accountData.main_cat):undefined}));setMounted(true);}},[$accountInfo.data,mounted]);return{formik:formik};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/account/use-verification-personal-data.js"],"names":["Yup","useFormik","useStore","useEffect","useState","$accountModel","defaultValue","name","gender","region","surname","lastname","birthday","category","useVerificationPersonalData","initialValues","setInitialsValues","mounted","setMounted","validationSchema","object","shape","$accountInfo","formik","enableReinitialize","getData","value","accountData","data","undefined","main_cat"],"mappings":"yUAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,SAAT,KAA0B,QAA1B,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,aAAT,KAA8B,4BAA9B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,EADa,CAEnBC,MAAM,CAAE,EAFW,CAGnBC,MAAM,CAAE,EAHW,CAInBC,OAAO,CAAE,EAJU,CAKnBC,QAAQ,CAAE,EALS,CAMnBC,QAAQ,CAAE,EANS,CAOnBC,QAAQ,CAAE,EAPS,CAArB,CAUA,MAAO,SAASC,CAAAA,2BAAT,EAAuC,CAC5C,cAA2CV,QAAQ,CAACE,YAAD,CAAnD,wCAAOS,aAAP,eAAsBC,iBAAtB,eACA,eAA8BZ,QAAQ,CAAC,KAAD,CAAtC,yCAAOa,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,gBAAgB,CAAGnB,GAAG,CAACoB,MAAJ,GAAaC,KAAb,CAAmB,EAAnB,CAAzB,CACA,cAAyBnB,QAAQ,CAACG,aAAD,CAAjC,CAAQiB,YAAR,WAAQA,YAAR,CAEA,GAAMC,CAAAA,MAAM,CAAGtB,SAAS,CAAC,CACvBc,aAAa,CAAbA,aADuB,CAEvBI,gBAAgB,CAAhBA,gBAFuB,CAGvBK,kBAAkB,CAAE,IAHG,CAAD,CAAxB,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACzB,MAAOA,CAAAA,KAAK,EAAI,EAAhB,CACD,CAFD,CAIAvB,SAAS,CAAC,UAAM,CACd,GAAMwB,CAAAA,WAAW,CAAGL,YAAY,CAACM,IAAjC,CAEA,GAAI,CAAC,CAACD,WAAF,EAAiB,CAACV,OAAtB,CAA+B,CAE7BD,iBAAiB,gCACZV,YADY,MAEfC,IAAI,CAAEkB,OAAO,CAACE,WAAW,CAACpB,IAAb,CAFE,CAGfC,MAAM,CAAEiB,OAAO,CAACE,WAAW,CAACnB,MAAb,CAHA,CAIfE,OAAO,CAAEe,OAAO,CAACE,WAAW,CAACjB,OAAb,CAJD,CAKfC,QAAQ,CAAEc,OAAO,CAACE,WAAW,CAAChB,QAAb,CALF,CAMfC,QAAQ,CAAEa,OAAO,CAACE,WAAW,CAACf,QAAb,CANF,CAOfH,MAAM,CAAEgB,OAAO,CAACE,WAAW,CAAClB,MAAb,CAAP,CAA8BgB,OAAO,CAACE,WAAW,CAAClB,MAAb,CAArC,CAA4DoB,SAPrD,CAQfhB,QAAQ,CAAEY,OAAO,CAACE,WAAW,CAACG,QAAb,CAAP,CAAgCL,OAAO,CAACE,WAAW,CAACG,QAAb,CAAvC,CAAgED,SAR3D,GAAjB,CAUAX,UAAU,CAAC,IAAD,CAAV,CACD,CACF,CAjBQ,CAiBN,CAACI,YAAY,CAACM,IAAd,CAAoBX,OAApB,CAjBM,CAAT,CAmBA,MAAO,CACLM,MAAM,CAANA,MADK,CAAP,CAGD","sourcesContent":["import * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { useStore } from 'effector-react';\r\nimport { useEffect, useState } from 'react';\r\nimport { $accountModel } from '../../Models/account-model';\r\n\r\nconst defaultValue = {\r\n  name: '',\r\n  gender: '',\r\n  region: '',\r\n  surname: '',\r\n  lastname: '',\r\n  birthday: '',\r\n  category: '',\r\n}\r\n\r\nexport function useVerificationPersonalData() {\r\n  const [initialValues, setInitialsValues] = useState(defaultValue)\r\n  const [mounted, setMounted] = useState(false)\r\n  const validationSchema = Yup.object().shape({})\r\n  const { $accountInfo } = useStore($accountModel)\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    enableReinitialize: true,\r\n  })\r\n\r\n  const getData = (value) => {\r\n    return value || ''\r\n  }\r\n\r\n  useEffect(() => {\r\n    const accountData = $accountInfo.data\r\n\r\n    if (!!accountData && !mounted) {\r\n\r\n      setInitialsValues({\r\n        ...defaultValue,\r\n        name: getData(accountData.name),\r\n        gender: getData(accountData.gender),\r\n        surname: getData(accountData.surname),\r\n        lastname: getData(accountData.lastname),\r\n        birthday: getData(accountData.birthday),\r\n        region: getData(accountData.region) ? getData(accountData.region) : undefined,\r\n        category: getData(accountData.main_cat) ? getData(accountData.main_cat) : undefined,\r\n      })\r\n      setMounted(true)\r\n    }\r\n  }, [$accountInfo.data, mounted])\r\n\r\n  return {\r\n    formik\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}