{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OverlayOfferingGroup/index.jsx\";\nimport React from 'react';\nimport { OfferGroupWrapper } from '../style';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { $offeringsModel } from '../../../../Models/offerings-model';\nimport { OfferingGroupItem } from '../OfferingGroupItem';\nimport { INFO_MAT } from '../../../../Constants/app';\nexport const OverlayOfferingGroup = () => {\n  const {\n    $offeringGroupList: {\n      data\n    }\n  } = useStore($offeringsModel);\n  return /*#__PURE__*/React.createElement(OfferGroupWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [12, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, data && data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    key: `${idx + 1}`,\n    span: 8,\n    style: {\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(OfferingGroupItem, {\n    size: $device && $device === INFO_MAT ? 110 : 75,\n    shape: \"square\",\n    name: item.name,\n    imgUrl: item.image,\n    path: generateUrl(item.id),\n    isActive: () => groupId && groupId === String(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OverlayOfferingGroup/index.jsx"],"names":["React","OfferGroupWrapper","Col","Row","useStore","$offeringsModel","OfferingGroupItem","INFO_MAT","OverlayOfferingGroup","$offeringGroupList","data","map","item","idx","border","$device","name","image","generateUrl","id","groupId","String"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,QAAgC,UAAhC;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,eAAR,QAA8B,oCAA9B;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACtC,QAAM;AAACC,IAAAA,kBAAkB,EAAE;AAACC,MAAAA;AAAD;AAArB,MAA+BN,QAAQ,CAACC,eAAD,CAA7C;AAEA,sBACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQK,IAAI,IAAIA,IAAI,CAACC,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACb,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAArB;AAAwB,IAAA,IAAI,EAAE,CAA9B;AAAiC,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AACI,IAAA,IAAI,EAAEC,OAAO,IAAIA,OAAO,KAAKR,QAAvB,GAAkC,GAAlC,GAAwC,EADlD;AAEI,IAAA,KAAK,EAAC,QAFV;AAGI,IAAA,IAAI,EAAEK,IAAI,CAACI,IAHf;AAII,IAAA,MAAM,EAAEJ,IAAI,CAACK,KAJjB;AAKI,IAAA,IAAI,EAAEC,WAAW,CAACN,IAAI,CAACO,EAAN,CALrB;AAMI,IAAA,QAAQ,EAAE,MAAMC,OAAO,IAAIA,OAAO,KAAKC,MAAM,CAACT,IAAI,CAACO,EAAN,CANjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADI,CAFhB,CADJ,CADJ;AAoBH,CAvBM","sourcesContent":["import React from 'react'\nimport {OfferGroupWrapper} from '../style'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {$offeringsModel} from '../../../../Models/offerings-model'\nimport {OfferingGroupItem} from '../OfferingGroupItem'\nimport {INFO_MAT} from '../../../../Constants/app'\n\nexport const OverlayOfferingGroup = () => {\n    const {$offeringGroupList: {data}} = useStore($offeringsModel)\n    \n    return (\n        <OfferGroupWrapper>\n            <Row gutter={[12, 12]}>\n                {\n                    data && data.map((item, idx) => (\n                        <Col key={`${idx + 1}`} span={8} style={{border: '1px solid #ccc'}}>\n                            <OfferingGroupItem\n                                size={$device && $device === INFO_MAT ? 110 : 75}\n                                shape='square'\n                                name={item.name}\n                                imgUrl={item.image}\n                                path={generateUrl(item.id)}\n                                isActive={() => groupId && groupId === String(item.id)}\n                            />\n                        </Col>\n                    ))\n                }\n            </Row>\n        </OfferGroupWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}