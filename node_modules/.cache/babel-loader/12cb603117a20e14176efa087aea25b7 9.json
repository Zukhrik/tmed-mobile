{"ast":null,"code":"import React from'react';import{Col,Row}from'antd';import{useStore}from'effector-react';import{useGoBack}from'../../../Hooks/app';import{useTranslation}from'react-i18next';import{useOrderList}from'../../../Hooks/org';import{useHistory,useParams}from'react-router-dom';import{$orderModel}from'../../../Models/order-model';import{FixedHeader}from'../../../Components/FixedHeader';import{RootContent}from'../../../UIComponents/GlobalStyles';import{QRCodeCartCard}from'../../../Components/Cards/QRCodeCartCard';import{EmptyOrderContainer}from'../../Records/organisms';import{QRCodeCartCardSkeleton}from'../../../Components/Cards';import{generateSkeleton}from'../../../utils/skeleton-utils';var skeleton=generateSkeleton(10);export var AccountRecords=function AccountRecords(){useOrderList(5);var _useHistory=useHistory(),push=_useHistory.push;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useParams=useParams(),username=_useParams.username;var _useStore=useStore($orderModel),_useStore$$orderList=_useStore.$orderList,data=_useStore$$orderList.data,forceLoading=_useStore$$orderList.forceLoading,result=_useStore$$orderList.result;var _useGoBack=useGoBack({pathname:\"/@\".concat(username)}),goBack=_useGoBack.goBack;var handlePush=function handlePush(item){var responsible=item.responsible.id;var status=item.status;if(responsible&&status===5){push(\"/@\".concat(username,\"/records/\").concat(item.id));}};return/*#__PURE__*/React.createElement(RootContent,{height:\"100vh\",paddingTop:62,paddingBottom:65},/*#__PURE__*/React.createElement(FixedHeader,{goBack:goBack,title:t('records')}),/*#__PURE__*/React.createElement(Row,{gutter:[0,12],className:\"container\"},forceLoading===2?/*#__PURE__*/React.createElement(React.Fragment,null,data&&data.length>0?/*#__PURE__*/React.createElement(React.Fragment,null,data.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{span:24,key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(QRCodeCartCard,{src:item.responsible.org.logo,time:item.meet_date,cost:item.total_cost,url:function url(){return handlePush(item);},count:result&&result.count,title:item.responsible.org.name,text:item.responsible.org.category.name,specialistImg:item.responsible.user.avatar,specialistName:item.responsible.user.full_name,specialistCat:item.responsible.user.main_cat.name}));})):/*#__PURE__*/React.createElement(EmptyOrderContainer,null)):/*#__PURE__*/React.createElement(React.Fragment,null,skeleton.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{span:24,key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(QRCodeCartCardSkeleton,null));}))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/organisms/account-records.jsx"],"names":["React","Col","Row","useStore","useGoBack","useTranslation","useOrderList","useHistory","useParams","$orderModel","FixedHeader","RootContent","QRCodeCartCard","EmptyOrderContainer","QRCodeCartCardSkeleton","generateSkeleton","skeleton","AccountRecords","push","t","username","$orderList","data","forceLoading","result","pathname","goBack","handlePush","item","responsible","id","status","length","map","idx","org","logo","meet_date","total_cost","count","name","category","user","avatar","full_name","main_cat"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {useGoBack} from '../../../Hooks/app'\nimport {useTranslation} from 'react-i18next'\nimport {useOrderList} from '../../../Hooks/org'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {$orderModel} from '../../../Models/order-model'\nimport {FixedHeader} from '../../../Components/FixedHeader'\nimport {RootContent} from '../../../UIComponents/GlobalStyles'\nimport {QRCodeCartCard} from '../../../Components/Cards/QRCodeCartCard'\nimport {EmptyOrderContainer} from '../../Records/organisms'\nimport {QRCodeCartCardSkeleton} from '../../../Components/Cards'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\n\nconst skeleton = generateSkeleton(10)\nexport const AccountRecords = () => {\n    useOrderList(5)\n    const {push} = useHistory()\n    const {t} = useTranslation()\n    const {username} = useParams()\n    const {$orderList: {data, forceLoading, result}} = useStore($orderModel)\n    const {goBack} = useGoBack({pathname: `/@${username}`})\n    \n    const handlePush = (item) => {\n        const responsible = item.responsible.id\n        const status = item.status\n        \n        if (responsible && status === 5) {\n            push(`/@${username}/records/${item.id}`)\n        }\n    }\n    \n    return (\n        <RootContent\n            height='100vh'\n            paddingTop={62}\n            paddingBottom={65}\n        >\n            <FixedHeader\n                goBack={goBack}\n                title={t('records')}\n            />\n            <Row gutter={[0, 12]} className='container'>\n                {\n                    forceLoading === 2\n                        ? <>\n                            {\n                                data && data.length > 0\n                                    ? (\n                                        <>\n                                            {\n                                                data.map((item, idx) => (\n                                                    <Col\n                                                        span={24}\n                                                        key={`${idx + 1}`}\n                                                    >\n                                                        <QRCodeCartCard\n                                                            src={item.responsible.org.logo}\n                                                            time={item.meet_date}\n                                                            cost={item.total_cost}\n                                                            url={() => handlePush(item)}\n                                                            count={result && result.count}\n                                                            title={item.responsible.org.name}\n                                                            text={item.responsible.org.category.name}\n                                                            specialistImg={item.responsible.user.avatar}\n                                                            specialistName={item.responsible.user.full_name}\n                                                            specialistCat={item.responsible.user.main_cat.name}\n                                                        />\n                                                    </Col>\n                                                ))\n                                            }\n                                        </>\n                                    ) : (\n                                        <EmptyOrderContainer/>\n                                    )\n                            }\n                        </>\n                        : <>\n                            {\n                                skeleton.map((item, idx) => (\n                                    <Col span={24} key={`${idx + 1}`}>\n                                        <QRCodeCartCardSkeleton/>\n                                    </Col>\n                                ))\n                            }\n                        </>\n                }\n            </Row>\n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}