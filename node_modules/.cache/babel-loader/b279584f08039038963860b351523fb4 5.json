{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/organisms/my-orders.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { $orderModel } from '../../../Models/order-model';\nimport { RecordCard } from '../molecules';\nimport moment from 'moment';\nimport { useOrderList } from '../../../Hooks/org';\nimport { useHistory } from 'react-router-dom';\nexport const MyOrders = () => {\n  useOrderList();\n  const {\n    push\n  } = useHistory();\n  const {\n    $orderList: {\n      data\n    }\n  } = useStore($orderModel);\n  return /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    style: {\n      paddingBottom: 65\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(RecordCard, {\n    meet: moment(item.meet_date).format('LT'),\n    status: item.status,\n    date: moment(item.meet_date).format('DD/MM/YY'),\n    name: item.responsible.user.full_name,\n    category: item.responsible.user.main_cat.name,\n    src: item.responsible.org.logo,\n    containerPush: () => push(`/records/detail/${item.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/organisms/my-orders.jsx"],"names":["React","Col","Row","useStore","$orderModel","RecordCard","moment","useOrderList","useHistory","MyOrders","push","$orderList","data","paddingBottom","map","item","idx","meet_date","format","status","responsible","user","full_name","main_cat","name","org","logo","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,WAAR,QAA0B,6BAA1B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1BF,EAAAA,YAAY;AACZ,QAAM;AAACG,IAAAA;AAAD,MAASF,UAAU,EAAzB;AACA,QAAM;AAACG,IAAAA,UAAU,EAAE;AAACC,MAAAA;AAAD;AAAb,MAAuBT,QAAQ,CAACC,WAAD,CAArC;AAEA,sBACI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAsB,IAAA,KAAK,EAAE;AAACS,MAAAA,aAAa,EAAE;AAAhB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,IAAI,CAACE,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACL,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAEV,MAAM,CAACS,IAAI,CAACE,SAAN,CAAN,CAAuBC,MAAvB,CAA8B,IAA9B,CADV;AAEI,IAAA,MAAM,EAAEH,IAAI,CAACI,MAFjB;AAGI,IAAA,IAAI,EAAEb,MAAM,CAACS,IAAI,CAACE,SAAN,CAAN,CAAuBC,MAAvB,CAA8B,UAA9B,CAHV;AAII,IAAA,IAAI,EAAEH,IAAI,CAACK,WAAL,CAAiBC,IAAjB,CAAsBC,SAJhC;AAKI,IAAA,QAAQ,EAAEP,IAAI,CAACK,WAAL,CAAiBC,IAAjB,CAAsBE,QAAtB,CAA+BC,IAL7C;AAMI,IAAA,GAAG,EAAET,IAAI,CAACK,WAAL,CAAiBK,GAAjB,CAAqBC,IAN9B;AAOI,IAAA,aAAa,EAAE,MAAMhB,IAAI,CAAE,mBAAkBK,IAAI,CAACY,EAAG,EAA5B,CAP7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFR,CADJ;AAoBH,CAzBM","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {$orderModel} from '../../../Models/order-model'\nimport {RecordCard} from '../molecules'\nimport moment from 'moment'\nimport {useOrderList} from '../../../Hooks/org'\nimport {useHistory} from 'react-router-dom'\n\nexport const MyOrders = () => {\n    useOrderList()\n    const {push} = useHistory()\n    const {$orderList: {data}} = useStore($orderModel)\n    \n    return (\n        <Row gutter={[0, 12]} style={{paddingBottom: 65}}>\n            {\n                data.map((item, idx) => (\n                    <Col span={24} key={`${idx + 1}`}>\n                        <RecordCard\n                            meet={moment(item.meet_date).format('LT')}\n                            status={item.status}\n                            date={moment(item.meet_date).format('DD/MM/YY')}\n                            name={item.responsible.user.full_name}\n                            category={item.responsible.user.main_cat.name}\n                            src={item.responsible.org.logo}\n                            containerPush={() => push(`/records/detail/${item.id}`)}\n                        />\n                    </Col>\n                ))\n            }\n        \n        </Row>\n    )\n}"]},"metadata":{},"sourceType":"module"}