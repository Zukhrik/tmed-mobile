{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useCallback,useEffect}from'react';import{useStore}from'effector-react';import{$postModel,commentReplyListMount}from'../../Models/post-model';import{useParams}from'react-router-dom';var initialParams={limit:10,offset:0};export function useCommentReplyList(comment_id){var _useStore=useStore($postModel),_useStore$$commentRep=_useStore.$commentReplyList,data=_useStore$$commentRep.data,result=_useStore$$commentRep.result;var _useParams=useParams(),post_id=_useParams.post_id;console.log(data,result);var loadMore=useCallback(function(){if(result.nextOffset){var params=_objectSpread(_objectSpread({},initialParams),{},{offset:result.nextOffset,comment_id:comment_id,post_id:post_id});commentReplyListMount(params);}},[result.nextOffset,comment_id,post_id]);useEffect(function(){var params={initialParams:initialParams,post_id:post_id,comment_id:comment_id};commentReplyListMount(params);},[comment_id,post_id]);return{loadMore:loadMore};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/post/use-comment-reply-list.js"],"names":["useCallback","useEffect","useStore","$postModel","commentReplyListMount","useParams","initialParams","limit","offset","useCommentReplyList","comment_id","$commentReplyList","data","result","post_id","console","log","loadMore","nextOffset","params"],"mappings":"oKAAA,OAAQA,WAAR,CAAqBC,SAArB,KAAqC,OAArC,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CACA,OAAQC,UAAR,CAAoBC,qBAApB,KAAgD,yBAAhD,CACA,OAAQC,SAAR,KAAwB,kBAAxB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,KAAK,CAAE,EADW,CAElBC,MAAM,CAAE,CAFU,CAAtB,CAKA,MAAO,SAASC,CAAAA,mBAAT,CAA6BC,UAA7B,CAAyC,CAC5C,cAA4CR,QAAQ,CAACC,UAAD,CAApD,iCAAOQ,iBAAP,CAA2BC,IAA3B,uBAA2BA,IAA3B,CAAiCC,MAAjC,uBAAiCA,MAAjC,CACA,eAAkBR,SAAS,EAA3B,CAAOS,OAAP,YAAOA,OAAP,CACAC,OAAO,CAACC,GAAR,CAAYJ,IAAZ,CAAkBC,MAAlB,EAEA,GAAMI,CAAAA,QAAQ,CAAGjB,WAAW,CAAC,UAAM,CAC/B,GAAIa,MAAM,CAACK,UAAX,CAAuB,CACnB,GAAMC,CAAAA,MAAM,gCACLb,aADK,MAERE,MAAM,CAAEK,MAAM,CAACK,UAFP,CAGRR,UAAU,CAAEA,UAHJ,CAIRI,OAAO,CAAEA,OAJD,EAAZ,CAMAV,qBAAqB,CAACe,MAAD,CAArB,CACH,CACJ,CAV2B,CAUzB,CAACN,MAAM,CAACK,UAAR,CAAoBR,UAApB,CAAgCI,OAAhC,CAVyB,CAA5B,CAYAb,SAAS,CAAC,UAAM,CACZ,GAAMkB,CAAAA,MAAM,CAAG,CACXb,aAAa,CAAbA,aADW,CAEXQ,OAAO,CAAEA,OAFE,CAGXJ,UAAU,CAAEA,UAHD,CAAf,CAKAN,qBAAqB,CAACe,MAAD,CAArB,CACH,CAPQ,CAON,CAACT,UAAD,CAAaI,OAAb,CAPM,CAAT,CASA,MAAO,CAACG,QAAQ,CAARA,QAAD,CAAP,CACH","sourcesContent":["import {useCallback, useEffect} from 'react'\nimport {useStore} from 'effector-react'\nimport {$postModel, commentReplyListMount} from '../../Models/post-model'\nimport {useParams} from 'react-router-dom'\n\nconst initialParams = {\n    limit: 10,\n    offset: 0\n}\n\nexport function useCommentReplyList(comment_id) {\n    const {$commentReplyList: {data, result}} = useStore($postModel)\n    const {post_id} = useParams()\n    console.log(data, result)\n    \n    const loadMore = useCallback(() => {\n        if (result.nextOffset) {\n            const params = {\n                ...initialParams,\n                offset: result.nextOffset,\n                comment_id: comment_id,\n                post_id: post_id\n            }\n            commentReplyListMount(params)\n        }\n    }, [result.nextOffset, comment_id, post_id])\n    \n    useEffect(() => {\n        const params = {\n            initialParams,\n            post_id: post_id,\n            comment_id: comment_id\n        }\n        commentReplyListMount(params)\n    }, [comment_id, post_id])\n    \n    return {loadMore}\n}"]},"metadata":{},"sourceType":"module"}