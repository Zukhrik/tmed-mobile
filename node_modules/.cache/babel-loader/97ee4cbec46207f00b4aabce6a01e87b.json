{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import moment from'moment';import order from'../../Service/order';import{getWeekDay}from'../../utils/time-utils';import{useCallback,useEffect,useState}from'react';export var formatter='YYYY-MM-DD HH:mm:ss';export var strHourToInt=function strHourToInt(strHour){return parseInt(strHour.split(':')[0]);};var getDateTime=function getDateTime(number){var now=new Date().toDateString();var time=String(number.toFixed(2)).split('.').join(':');return new Date(\"\".concat(now,\" \").concat(time));};export function useSpecialistDate(_ref){var job=_ref.job,dateData=_ref.dateData,active=_ref.active,handleChange=_ref.handleChange;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(getWeekDay(new Date())),_useState4=_slicedToArray(_useState3,2),currentWeekday=_useState4[0],setCurrentWeekday=_useState4[1];var _useState5=useState(new Date()),_useState6=_slicedToArray(_useState5,2),date=_useState6[0],setDate=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),hours=_useState8[0],setHours=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),meetTimes=_useState10[0],setMeetTimes=_useState10[1];var _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),requestData=_useState12[0],setRequestData=_useState12[1];var _useState13=useState(true),_useState14=_slicedToArray(_useState13,2),isCurrentDate=_useState14[0],setIsCurrentDate=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),requestLoading=_useState16[0],setRequestLoading=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),mounted=_useState18[0],setMounted=_useState18[1];var generateData=useCallback(function(data){var tmp={};for(var i=0;i<data.length;i++){var id=moment(data[i].meet_date).format(formatter);var meetTime=moment(data[i].meet_date).format('HH.mm');tmp[id]={id:data[i].id,user:data[i].user,meetTime:parseFloat(meetTime).toFixed(1),meetTimeStr:moment(data[i].meet_date).format('HH:mm')};}return tmp;},[]);var addClientData=useCallback(function(order){if(dateData&&dateData.id){var meetTime=moment(dateData.id).format('HH.mm');order[dateData.id]={id:active.id,user:active.user,meetTime:parseFloat(meetTime).toFixed(1),meetTimeStr:moment(dateData.id).format('HH:mm')};return order;}return false;},[active,dateData]);var renderMeetRow=useCallback(function(id){var strHour=moment(id).format('HH:mm');var hourInt=strHourToInt(strHour);return meetTimes[hourInt]&&Object.values(meetTimes[hourInt]).sort(function(a,b){return a-b;});},[meetTimes]);var getOrgOrder=useCallback(function(params){setRequestLoading(true);order.getOrgOrderResponsible(params).then(function(res){var data=res.data.results;var orders=generateData(data);var withClientOrder=addClientData(orders);if(withClientOrder){orders=withClientOrder;}setRequestData(orders);}).finally(function(){return setRequestLoading(false);}).catch(function(){setRequestLoading(false);});},[generateData,addClientData]);useEffect(function(){if(job&&job.operating_mode&&job.operating_mode[currentWeekday]){var data=job.operating_mode[currentWeekday];var breaks=data.breaks;var to=parseInt(data.to);var interval=data.proc_interval;var tmp=[];var possibleMeetTime={};var from=parseInt(data.from);var a=data.from;while(a<to){for(var i=0;i<breaks.length;i++){if(parseInt(a)===parseInt(breaks[i].from)&&(breaks[i].from>=a||a<breaks[i].to)){a=breaks[i].to;}}possibleMeetTime[parseInt(a)]=possibleMeetTime[parseInt(a)]?_objectSpread({},possibleMeetTime[parseInt(a)]):{};var strHour=moment(new Date(new Date(getDateTime(a)).setMinutes(new Date(getDateTime(a===from?data.from:a)).getMinutes()+interval)));var id=moment(new Date(\"\".concat(date.toDateString(),\" \").concat(moment(getDateTime(a)).format('HH:mm')))).format(formatter);possibleMeetTime[parseInt(a)][id]={intDate:a,isPossible:isCurrentDate,strDate:\"\".concat(moment(getDateTime(a)).format('HH:mm'),\" - \").concat(strHour.format('HH:mm')),dateString:moment(new Date(\"\".concat(date.toDateString(),\" \").concat(moment(getDateTime(a)).format('HH:mm')))).format(formatter)};a=parseFloat(strHour.format('HH.mm'));}setMeetTimes(possibleMeetTime);if(isCurrentDate){from=moment(new Date()).format('H');}for(var _i=from;_i<to;_i++){var _id=moment(new Date(\"\".concat(date.toDateString(),\" 0\").concat(_i,\":00\"))).format(formatter);if(_i<10){tmp.push({hour:\"0\".concat(_i,\":00\"),interval:data.proc_interval,id:_id});}else{tmp.push({hour:\"\".concat(_i,\":00\"),interval:data.proc_interval,id:_id});}}setHours(tmp);setError(null);}else{setError('Не рабочий день');}},[job,currentWeekday,date,isCurrentDate]);var getOrders=useCallback(function(id){var data={responsible_id:id,params:{limit:200,offset:0,meet_date__gt:moment(new Date(\"\".concat(date.toDateString(),\" 00:00\"))).format(formatter),meet_date__lt:moment(new Date(\"\".concat(date.toDateString(),\" 23:59\"))).format(formatter)}};getOrgOrder(data);},[date,getOrgOrder]);var changeClientDate=useCallback(function(meet_date,meetTime){var orders=_objectSpread({},requestData);var params={id:active.id,user:active.user,meetTime:parseFloat(meetTime).toFixed(1),meetTimeStr:moment(meet_date).format('HH:mm')};if(dateData&&dateData.id&&orders[dateData.id]){delete orders[dateData.id];}var clientDate={date:meet_date,id:meet_date};handleChange(clientDate);orders[meet_date]=params;setRequestData(orders);},[active,dateData,requestData,handleChange]);var onChange=useCallback(function(meetDate){var meet_date=moment(new Date(\"\".concat(date.toDateString(),\" \").concat(moment(getDateTime(meetDate)).format('HH:mm')))).format(formatter);var meetTime=moment(meet_date).format('HH.mm');changeClientDate(meet_date,meetTime);},[changeClientDate,date]);var selectDate=useCallback(function(date){setDate(new Date(date));setCurrentWeekday(getWeekDay(new Date(date)));if(moment(date).format('YYYY-MM-DD')===moment(new Date()).format('YYYY-MM-DD')){setIsCurrentDate(true);}else{setIsCurrentDate(false);}},[]);useEffect(function(){if(!mounted&&job){getOrders(job.id);setMounted(true);}},[getOrders,mounted,job]);return{hours:hours,renderMeetRow:renderMeetRow,requestData:requestData,onChange:onChange,selectDate:selectDate,date:date,requestLoading:requestLoading,error:error};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/checkout/use-specialist-date.js"],"names":["moment","order","getWeekDay","useCallback","useEffect","useState","formatter","strHourToInt","strHour","parseInt","split","getDateTime","number","now","Date","toDateString","time","String","toFixed","join","useSpecialistDate","job","dateData","active","handleChange","error","setError","currentWeekday","setCurrentWeekday","date","setDate","hours","setHours","meetTimes","setMeetTimes","requestData","setRequestData","isCurrentDate","setIsCurrentDate","requestLoading","setRequestLoading","mounted","setMounted","generateData","data","tmp","i","length","id","meet_date","format","meetTime","user","parseFloat","meetTimeStr","addClientData","renderMeetRow","hourInt","Object","values","sort","a","b","getOrgOrder","params","getOrgOrderResponsible","then","res","results","orders","withClientOrder","finally","catch","operating_mode","breaks","to","interval","proc_interval","possibleMeetTime","from","setMinutes","getMinutes","intDate","isPossible","strDate","dateString","push","hour","getOrders","responsible_id","limit","offset","meet_date__gt","meet_date__lt","changeClientDate","clientDate","onChange","meetDate","selectDate"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport order from '../../Service/order'\nimport {getWeekDay} from '../../utils/time-utils'\nimport {useCallback, useEffect, useState} from 'react'\n\nexport const formatter = 'YYYY-MM-DD HH:mm:ss'\n\nexport const strHourToInt = (strHour) => parseInt(strHour.split(':')[0])\n\nconst getDateTime = (number) => {\n    const now = new Date().toDateString()\n    const time = String(number.toFixed(2)).split('.').join(':')\n    return new Date(`${now} ${time}`)\n}\n\nexport function useSpecialistDate({job, dateData, active, handleChange}) {\n    const [error, setError] = useState([])\n    const [currentWeekday, setCurrentWeekday] = useState(getWeekDay(new Date()))\n    const [date, setDate] = useState(new Date())\n    const [hours, setHours] = useState([])\n    const [meetTimes, setMeetTimes] = useState({})\n    const [requestData, setRequestData] = useState({})\n    const [isCurrentDate, setIsCurrentDate] = useState(true)\n    const [requestLoading, setRequestLoading] = useState(false)\n    const [mounted, setMounted] = useState(false)\n    \n    \n    const generateData = useCallback((data) => {\n        const tmp = {}\n        for (let i = 0; i < data.length; i++) {\n            const id = moment(data[i].meet_date).format(formatter)\n            const meetTime = moment(data[i].meet_date).format('HH.mm')\n            tmp[id] = {\n                id: data[i].id,\n                user: data[i].user,\n                meetTime: parseFloat(meetTime).toFixed(1),\n                meetTimeStr: moment(data[i].meet_date).format('HH:mm')\n            }\n        }\n        return tmp\n    }, [])\n    \n    const addClientData = useCallback((order) => {\n        if (dateData && dateData.id) {\n            const meetTime = moment(dateData.id).format('HH.mm')\n            order[dateData.id] = {\n                id: active.id,\n                user: active.user,\n                meetTime: parseFloat(meetTime).toFixed(1),\n                meetTimeStr: moment(dateData.id).format('HH:mm')\n            }\n            return order\n        }\n        \n        return false\n    }, [active, dateData])\n    \n    const renderMeetRow = useCallback((id) => {\n        const strHour = moment(id).format('HH:mm')\n        const hourInt = strHourToInt(strHour)\n        return meetTimes[hourInt]\n            && Object.values(meetTimes[hourInt]).sort((a, b) => a - b)\n    }, [meetTimes])\n    \n    const getOrgOrder = useCallback((params) => {\n        setRequestLoading(true)\n        order.getOrgOrderResponsible(params)\n            .then(res => {\n                const data = res.data.results\n                let orders = generateData(data)\n                const withClientOrder = addClientData(orders)\n                if (withClientOrder) {\n                    orders = withClientOrder\n                }\n                setRequestData(orders)\n            })\n            .finally(() => setRequestLoading(false))\n            .catch(() => {\n                setRequestLoading(false)\n            })\n    }, [generateData, addClientData])\n    \n    useEffect(() => {\n        if (job && job.operating_mode && job.operating_mode[currentWeekday]) {\n            const data = job.operating_mode[currentWeekday]\n            const breaks = data.breaks\n            const to = parseInt(data.to)\n            const interval = data.proc_interval\n            const tmp = []\n            const possibleMeetTime = {}\n            let from = parseInt(data.from)\n            let a = data.from\n            \n            while (a < to) {\n                for (let i = 0; i < breaks.length; i++) {\n                    if (parseInt(a) === parseInt(breaks[i].from) && (breaks[i].from >= a || a < breaks[i].to)) {\n                        a = breaks[i].to\n                    }\n                }\n                \n                possibleMeetTime[parseInt(a)] = possibleMeetTime[parseInt(a)]\n                    ? {...possibleMeetTime[parseInt(a)]}\n                    : {}\n                \n                const strHour = moment(new Date(new Date(getDateTime(a))\n                    .setMinutes(new Date(getDateTime(a === from ? data.from : a)).getMinutes() + interval)))\n                \n                const id = moment(new Date(`${date.toDateString()} ${moment(getDateTime(a)).format('HH:mm')}`)).format(formatter)\n                \n                possibleMeetTime[parseInt(a)][id] = {\n                    intDate: a,\n                    isPossible: isCurrentDate,\n                    strDate: `${moment(getDateTime(a)).format('HH:mm')} - ${strHour.format('HH:mm')}`,\n                    dateString: moment(new Date(`${date.toDateString()} ${moment(getDateTime(a)).format('HH:mm')}`)).format(formatter)\n                }\n                a = parseFloat(strHour.format('HH.mm'))\n            }\n            \n            setMeetTimes(possibleMeetTime)\n            \n            if (isCurrentDate) {\n                from = moment(new Date()).format('H')\n            }\n            \n            for (let i = from; i < to; i++) {\n                const id = moment(new Date(`${date.toDateString()} 0${i}:00`)).format(formatter)\n                if (i < 10) {\n                    tmp.push({hour: `0${i}:00`, interval: data.proc_interval, id})\n                } else {\n                    tmp.push({hour: `${i}:00`, interval: data.proc_interval, id})\n                }\n            }\n            setHours(tmp)\n            setError(null)\n        } else {\n            setError('Не рабочий день')\n        }\n    }, [job, currentWeekday, date, isCurrentDate])\n    \n    const getOrders = useCallback((id) => {\n        const data = {\n            responsible_id: id,\n            params: {\n                limit: 200,\n                offset: 0,\n                meet_date__gt: moment(new Date(`${date.toDateString()} 00:00`)).format(formatter),\n                meet_date__lt: moment(new Date(`${date.toDateString()} 23:59`)).format(formatter)\n            }\n        }\n        getOrgOrder(data)\n    }, [date, getOrgOrder])\n    \n    const changeClientDate = useCallback((meet_date, meetTime) => {\n        const orders = {...requestData}\n        const params = {\n            id: active.id,\n            user: active.user,\n            meetTime: parseFloat(meetTime).toFixed(1),\n            meetTimeStr: moment(meet_date).format('HH:mm')\n        }\n        if (dateData && dateData.id && orders[dateData.id]) {\n            delete orders[dateData.id]\n        }\n        \n        const clientDate = {\n            date: meet_date,\n            id: meet_date\n        }\n        \n        handleChange(clientDate)\n        orders[meet_date] = params\n        setRequestData(orders)\n    }, [active, dateData, requestData, handleChange])\n    \n    const onChange = useCallback((meetDate) => {\n        const meet_date = moment(new Date(`${date.toDateString()} ${moment(getDateTime(meetDate)).format('HH:mm')}`)).format(formatter)\n        const meetTime = moment(meet_date).format('HH.mm')\n        changeClientDate(meet_date, meetTime)\n        \n    }, [changeClientDate, date])\n    \n    const selectDate = useCallback((date) => {\n        setDate(new Date(date))\n        setCurrentWeekday(getWeekDay(new Date(date)))\n        \n        if (moment(date).format('YYYY-MM-DD') === moment(new Date()).format('YYYY-MM-DD')) {\n            setIsCurrentDate(true)\n        } else {\n            setIsCurrentDate(false)\n        }\n    }, [])\n    \n    useEffect(() => {\n        if (!mounted && job) {\n            getOrders(job.id)\n            setMounted(true)\n        }\n    }, [getOrders, mounted, job])\n    \n    return {\n        hours,\n        renderMeetRow,\n        requestData,\n        onChange,\n        selectDate,\n        date,\n        requestLoading,\n        error\n    }\n}"]},"metadata":{},"sourceType":"module"}