{"ast":null,"code":"import{useInView}from'react-intersection-observer';import{useEffect}from'react';import{useStore}from'effector-react';import{$chatModel}from'../../Models/chat-model';import{$accountModel}from'../../Models/account-model';export function useChatIsRead(_ref){var item=_ref.item;var _useStore=useStore($chatModel),chatActionSendMessage=_useStore.$chatSocketActions.chatActionSendMessage;var _useStore2=useStore($accountModel),currentProfile=_useStore2.$profiles.currentProfile;var _useInView=useInView({threshold:0.25,delay:300}),ref=_useInView.ref,inView=_useInView.inView,entry=_useInView.entry;useEffect(function(){if(inView&&item&&currentProfile){var target=entry.target;var id=Number(target.getAttribute('data-id'));var message_id=item.id,sender=item.sender,is_read=item.is_read;if(id===message_id&&!is_read&&sender.username!==currentProfile.slug_name){var data={action:'read',message_id:message_id};if(chatActionSendMessage){chatActionSendMessage(JSON.stringify(data));}}}},[entry,inView,item,chatActionSendMessage,currentProfile]);return{ref:ref};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/chat/use-chat-is-read.js"],"names":["useInView","useEffect","useStore","$chatModel","$accountModel","useChatIsRead","item","chatActionSendMessage","$chatSocketActions","currentProfile","$profiles","threshold","delay","ref","inView","entry","target","id","Number","getAttribute","message_id","sender","is_read","username","slug_name","data","action","JSON","stringify"],"mappings":"AAAA,OAAQA,SAAR,KAAwB,6BAAxB,CACA,OAAQC,SAAR,KAAwB,OAAxB,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CACA,OAAQC,UAAR,KAAyB,yBAAzB,CACA,OAAQC,aAAR,KAA4B,4BAA5B,CAEA,MAAO,SAASC,CAAAA,aAAT,MAA+B,IAAPC,CAAAA,IAAO,MAAPA,IAAO,CAClC,cAAsDJ,QAAQ,CAACC,UAAD,CAA9D,CAA4BI,qBAA5B,WAAOC,kBAAP,CAA4BD,qBAA5B,CACA,eAAsCL,QAAQ,CAACE,aAAD,CAA9C,CAAmBK,cAAnB,YAAOC,SAAP,CAAmBD,cAAnB,CACA,eAA6BT,SAAS,CAAC,CACnCW,SAAS,CAAE,IADwB,CAEnCC,KAAK,CAAE,GAF4B,CAAD,CAAtC,CAAOC,GAAP,YAAOA,GAAP,CAAYC,MAAZ,YAAYA,MAAZ,CAAoBC,KAApB,YAAoBA,KAApB,CAMAd,SAAS,CAAC,UAAM,CACZ,GAAIa,MAAM,EAAIR,IAAV,EAAkBG,cAAtB,CAAsC,CAClC,GAAOO,CAAAA,MAAP,CAAiBD,KAAjB,CAAOC,MAAP,CACA,GAAMC,CAAAA,EAAE,CAAGC,MAAM,CAACF,MAAM,CAACG,YAAP,CAAoB,SAApB,CAAD,CAAjB,CACA,GAAWC,CAAAA,UAAX,CAA0Cd,IAA1C,CAAOW,EAAP,CAAuBI,MAAvB,CAA0Cf,IAA1C,CAAuBe,MAAvB,CAA+BC,OAA/B,CAA0ChB,IAA1C,CAA+BgB,OAA/B,CACA,GAAIL,EAAE,GAAKG,UAAP,EAAqB,CAACE,OAAtB,EAAiCD,MAAM,CAACE,QAAP,GAAoBd,cAAc,CAACe,SAAxE,CAAmF,CAC/E,GAAMC,CAAAA,IAAI,CAAG,CAACC,MAAM,CAAE,MAAT,CAAiBN,UAAU,CAAVA,UAAjB,CAAb,CACA,GAAIb,qBAAJ,CAA2B,CACvBA,qBAAqB,CAACoB,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAD,CAArB,CACH,CACJ,CACJ,CACJ,CAZQ,CAYN,CAACV,KAAD,CAAQD,MAAR,CAAgBR,IAAhB,CAAsBC,qBAAtB,CAA6CE,cAA7C,CAZM,CAAT,CAcA,MAAO,CAACI,GAAG,CAAHA,GAAD,CAAP,CACH","sourcesContent":["import {useInView} from 'react-intersection-observer'\r\nimport {useEffect} from 'react'\r\nimport {useStore} from 'effector-react'\r\nimport {$chatModel} from '../../Models/chat-model'\r\nimport {$accountModel} from '../../Models/account-model'\r\n\r\nexport function useChatIsRead({item}) {\r\n    const {$chatSocketActions: {chatActionSendMessage}} = useStore($chatModel)\r\n    const {$profiles: {currentProfile}} = useStore($accountModel)\r\n    const {ref, inView, entry} = useInView({\r\n        threshold: 0.25,\r\n        delay: 300\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        if (inView && item && currentProfile) {\r\n            const {target} = entry\r\n            const id = Number(target.getAttribute('data-id'))\r\n            const {id: message_id, sender, is_read} = item\r\n            if (id === message_id && !is_read && sender.username !== currentProfile.slug_name) {\r\n                const data = {action: 'read', message_id}\r\n                if (chatActionSendMessage) {\r\n                    chatActionSendMessage(JSON.stringify(data))\r\n                }\r\n            }\r\n        }\r\n    }, [entry, inView, item, chatActionSendMessage, currentProfile])\r\n\r\n    return {ref}\r\n}"]},"metadata":{},"sourceType":"module"}