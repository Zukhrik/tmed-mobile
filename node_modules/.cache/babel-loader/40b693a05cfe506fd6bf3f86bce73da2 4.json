{"ast":null,"code":"import{useCallback,useEffect}from'react';import{deviceMount}from'../../Models/app';import{DESKTOP,INFO_MAT,MOBILE,TABLET}from'../../Constants/app';export function useIsMobile(){var getDevice=useCallback(function(){var device=null;var width=window.innerWidth;if(width>1200){device=DESKTOP;}else if(width>1050&&width<1090){device=INFO_MAT;}else if(width<1200&&width>768){device=TABLET;}else if(width<768){device=MOBILE;}deviceMount(device);},[]);useEffect(function(){getDevice();window.addEventListener('resize',getDevice);return function(){window.removeEventListener('resize',getDevice);};},[getDevice]);}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/app/use-is-mobile.js"],"names":["useCallback","useEffect","deviceMount","DESKTOP","INFO_MAT","MOBILE","TABLET","useIsMobile","getDevice","device","width","window","innerWidth","addEventListener","removeEventListener"],"mappings":"AAAA,OAAQA,WAAR,CAAqBC,SAArB,KAAqC,OAArC,CACA,OAAQC,WAAR,KAA0B,kBAA1B,CACA,OAAQC,OAAR,CAAiBC,QAAjB,CAA2BC,MAA3B,CAAmCC,MAAnC,KAAgD,qBAAhD,CAEA,MAAO,SAASC,CAAAA,WAAT,EAAuB,CAE1B,GAAMC,CAAAA,SAAS,CAAGR,WAAW,CAAC,UAAM,CAChC,GAAIS,CAAAA,MAAM,CAAG,IAAb,CACA,GAAMC,CAAAA,KAAK,CAAGC,MAAM,CAACC,UAArB,CACA,GAAIF,KAAK,CAAG,IAAZ,CAAkB,CACdD,MAAM,CAAGN,OAAT,CACH,CAFD,IAEM,IAAGO,KAAK,CAAG,IAAR,EAAgBA,KAAK,CAAG,IAA3B,CAAgC,CAClCD,MAAM,CAAGL,QAAT,CACH,CAFK,IAEC,IAAIM,KAAK,CAAG,IAAR,EAAgBA,KAAK,CAAG,GAA5B,CAAiC,CACpCD,MAAM,CAAGH,MAAT,CACH,CAFM,IAEA,IAAII,KAAK,CAAG,GAAZ,CAAiB,CACpBD,MAAM,CAAGJ,MAAT,CACH,CACDH,WAAW,CAACO,MAAD,CAAX,CACH,CAb4B,CAa1B,EAb0B,CAA7B,CAeAR,SAAS,CAAC,UAAM,CACZO,SAAS,GACTG,MAAM,CAACE,gBAAP,CAAwB,QAAxB,CAAkCL,SAAlC,EAEA,MAAO,WAAM,CACTG,MAAM,CAACG,mBAAP,CAA2B,QAA3B,CAAqCN,SAArC,EACH,CAFD,CAGH,CAPQ,CAON,CAACA,SAAD,CAPM,CAAT,CAQH","sourcesContent":["import {useCallback, useEffect} from 'react'\nimport {deviceMount} from '../../Models/app'\nimport {DESKTOP, INFO_MAT, MOBILE, TABLET} from '../../Constants/app'\n\nexport function useIsMobile() {\n    \n    const getDevice = useCallback(() => {\n        let device = null\n        const width = window.innerWidth\n        if (width > 1200) {\n            device = DESKTOP\n        }else if(width > 1050 && width < 1090){\n            device = INFO_MAT\n        } else if (width < 1200 && width > 768) {\n            device = TABLET\n        } else if (width < 768) {\n            device = MOBILE\n        }\n        deviceMount(device)\n    }, [])\n    \n    useEffect(() => {\n        getDevice()\n        window.addEventListener('resize', getDevice)\n        \n        return () => {\n            window.removeEventListener('resize', getDevice)\n        }\n    }, [getDevice])\n}"]},"metadata":{},"sourceType":"module"}