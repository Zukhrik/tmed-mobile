{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useUrlParams}from'../app';import{URL_KEYS}from'../../Constants';import{useParams}from'react-router-dom';import{useCallback,useEffect}from'react';import{$offeringsModel,offeringForceLoading,orgOfferGroupListMount,orgOfferingsListMount}from'../../Models/offerings-model';import{useStore}from'effector-react';var initialParams={limit:20,offset:0};export function useOfferingList(){var _useUrlParams=useUrlParams(),urlData=_useUrlParams.urlData;var _useParams=useParams(),organization=_useParams.organization;var group=urlData[URL_KEYS.OFFERING_GROUP_ID];var specialist=urlData[URL_KEYS.SPECIALIST_ID];var _useStore=useStore($offeringsModel),result=_useStore.$offeringsList.result;var getOfferingGroupList=useCallback(function(params){if(organization){var data=_objectSpread({organization:organization},params);orgOfferGroupListMount(data);}},[organization]);var getOrgOfferingsList=useCallback(function(params){if(organization){var data=_objectSpread({organization:organization},params);orgOfferingsListMount(data);}},[organization]);var loadMoreOfferings=useCallback(function(){if(result.nextOffset){var data={params:_objectSpread(_objectSpread({},initialParams),{},{offset:result.nextOffset})};if(specialist){data['params']['responsible']=specialist;}else{delete data['params']['responsible'];}if(group){data['params']['group']=group;}getOrgOfferingsList(data);}},[getOrgOfferingsList,specialist,group,result]);useEffect(function(){var timeout=null;timeout=setTimeout(function(){var data={clear:true,params:_objectSpread({},initialParams)};if(specialist){data['params']['specialist']=specialist;}else{delete data['params']['specialist'];}getOfferingGroupList(data);},300);return function(){clearTimeout(timeout);timeout=null;};},[specialist,getOfferingGroupList]);useEffect(function(){var timeout=null;timeout=setTimeout(function(){var data={clear:true,params:_objectSpread({},initialParams)};if(specialist){data['params']['responsible']=specialist;}else{delete data['params']['responsible'];}if(group){data['params']['group']=group;}offeringForceLoading();getOrgOfferingsList(data);},300);return function(){clearTimeout(timeout);timeout=null;};},[getOrgOfferingsList,specialist,group]);return{loadMoreOfferings:loadMoreOfferings};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/offerings/use-offering-list.js"],"names":["useUrlParams","URL_KEYS","useParams","useCallback","useEffect","$offeringsModel","offeringForceLoading","orgOfferGroupListMount","orgOfferingsListMount","useStore","initialParams","limit","offset","useOfferingList","urlData","organization","group","OFFERING_GROUP_ID","specialist","SPECIALIST_ID","result","$offeringsList","getOfferingGroupList","params","data","getOrgOfferingsList","loadMoreOfferings","nextOffset","timeout","setTimeout","clear","clearTimeout"],"mappings":"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","sourcesContent":["import {useUrlParams} from '../app'\r\nimport {URL_KEYS} from '../../Constants'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useCallback, useEffect} from 'react'\r\nimport {\r\n    $offeringsModel,\r\n    offeringForceLoading,\r\n    orgOfferGroupListMount,\r\n    orgOfferingsListMount\r\n} from '../../Models/offerings-model'\r\nimport {useStore} from 'effector-react'\r\n\r\nconst initialParams = {\r\n    limit: 20,\r\n    offset: 0\r\n}\r\n\r\nexport function useOfferingList() {\r\n    const {urlData} = useUrlParams()\r\n    const {organization} = useParams()\r\n    const group = urlData[URL_KEYS.OFFERING_GROUP_ID]\r\n    const specialist = urlData[URL_KEYS.SPECIALIST_ID]\r\n    const {$offeringsList: {result}} = useStore($offeringsModel)\r\n    \r\n    const getOfferingGroupList = useCallback((params) => {\r\n        if (organization) {\r\n            const data = {\r\n                organization,\r\n                ...params\r\n            }\r\n            orgOfferGroupListMount(data)\r\n        }\r\n        \r\n    }, [organization])\r\n    \r\n    const getOrgOfferingsList = useCallback((params) => {\r\n        if (organization) {\r\n            const data = {\r\n                organization,\r\n                ...params\r\n            }\r\n            orgOfferingsListMount(data)\r\n        }\r\n    }, [organization])\r\n    \r\n    const loadMoreOfferings = useCallback(() => {\r\n        if (result.nextOffset) {\r\n            const data = {\r\n                params: {\r\n                    ...initialParams,\r\n                    offset: result.nextOffset\r\n                }\r\n            }\r\n            if (specialist) {\r\n                data['params']['responsible'] = specialist\r\n            } else {\r\n                delete data['params']['responsible']\r\n            }\r\n            \r\n            if (group) {\r\n                data['params']['group'] = group\r\n            }\r\n            \r\n            getOrgOfferingsList(data)\r\n        }\r\n    }, [getOrgOfferingsList, specialist, group, result])\r\n    \r\n    useEffect(() => {\r\n        let timeout = null\r\n        \r\n        timeout = setTimeout(() => {\r\n            const data = {\r\n                clear: true,\r\n                params: {\r\n                    ...initialParams\r\n                }\r\n            }\r\n            \r\n            if (specialist) {\r\n                data['params']['specialist'] = specialist\r\n            } else {\r\n                delete data['params']['specialist']\r\n            }\r\n            \r\n            getOfferingGroupList(data)\r\n        }, 300)\r\n        \r\n        return () => {\r\n            clearTimeout(timeout)\r\n            timeout = null\r\n        }\r\n    }, [specialist, getOfferingGroupList])\r\n    \r\n    useEffect(() => {\r\n        let timeout = null\r\n        \r\n        timeout = setTimeout(() => {\r\n            const data = {\r\n                clear: true,\r\n                params: {\r\n                    ...initialParams\r\n                }\r\n            }\r\n            \r\n            if (specialist) {\r\n                data['params']['responsible'] = specialist\r\n            } else {\r\n                delete data['params']['responsible']\r\n            }\r\n            \r\n            if (group) {\r\n                data['params']['group'] = group\r\n            }\r\n            offeringForceLoading()\r\n            getOrgOfferingsList(data)\r\n        }, 300)\r\n        \r\n        return () => {\r\n            clearTimeout(timeout)\r\n            timeout = null\r\n        }\r\n    }, [getOrgOfferingsList, specialist, group])\r\n    \r\n    return {\r\n        loadMoreOfferings\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}