{"ast":null,"code":"import React from'react';import{generateSkeleton}from'../../../utils/skeleton-utils';import{useParams}from'react-router-dom';import{useStore}from'effector-react';import{$appModel}from'../../../Models/app';import{useUrlGenerate}from'../../../Hooks/org';import{$orderModel}from'../../../Models/order-model';import{INFO_MAT}from'../../../Constants/app';import{AccountScrollWrapper,SpecialistNavLink}from'../atoms';import{URL_KEYS}from'../../../Constants';import{ShortCard,ShortCardSkeleton}from'../../../Components/Cards';import{Avatar}from'../../../UIComponents/Avatar';import{Col,Row}from'antd';import{SkeletonUI}from'../../../UIComponents/GlobalStyles';var skeleton=generateSkeleton(1);export var ChooseSpecialist=function ChooseSpecialist(){var _useParams=useParams(),organization=_useParams.organization;var _useStore=useStore($appModel),$device=_useStore.$device;var _useUrlGenerate=useUrlGenerate(),generateUrl=_useUrlGenerate.generateUrl,getActive=_useUrlGenerate.getActive;var _useStore2=useStore($orderModel),_useStore2$$orderCart=_useStore2.$orderCartList,data=_useStore2$$orderCart.data,forceLoading=_useStore2$$orderCart.forceLoading;var currentOrg=data.find(function(item){return item.seller.slug_name===organization;});var specList=currentOrg?currentOrg.seller.specialists:[];return/*#__PURE__*/React.createElement(React.Fragment,null,forceLoading===2?/*#__PURE__*/React.createElement(React.Fragment,null,$device&&$device===INFO_MAT?/*#__PURE__*/React.createElement(AccountScrollWrapper,{style:{display:'flex'}},specList.map(function(item,idx){return/*#__PURE__*/React.createElement(SpecialistNavLink,{key:\"\".concat(idx+1),to:generateUrl(URL_KEYS.SPECIALIST_ID,item.id),isActive:function isActive(){return getActive(URL_KEYS.SPECIALIST_ID,item.id);}},/*#__PURE__*/React.createElement(ShortCard,{imgSize:80,direction:\"vertical\",imgUrl:item.user.avatar,name:item.user.full_name,text:item.job.name}));})):/*#__PURE__*/React.createElement(AccountScrollWrapper,{style:{display:'flex'}},specList.map(function(item,idx){return/*#__PURE__*/React.createElement(SpecialistNavLink,{key:\"\".concat(idx+1),to:generateUrl(URL_KEYS.SPECIALIST_ID,item.id),isActive:function isActive(){return getActive(URL_KEYS.SPECIALIST_ID,item.id);}},/*#__PURE__*/React.createElement(Avatar,{size:40,imgUrl:item.user.avatar}));}))):/*#__PURE__*/React.createElement(Row,{gutter:[12,0],style:{padding:3}},$device&&$device===INFO_MAT?/*#__PURE__*/React.createElement(React.Fragment,null,skeleton.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(ShortCardSkeleton,{direction:\"vertical\",textWidth:60}));})):/*#__PURE__*/React.createElement(React.Fragment,null,skeleton.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(SkeletonUI,{width:40,height:40,variant:\"circle\"}));}))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/organisms/choose-specialist.jsx"],"names":["React","generateSkeleton","useParams","useStore","$appModel","useUrlGenerate","$orderModel","INFO_MAT","AccountScrollWrapper","SpecialistNavLink","URL_KEYS","ShortCard","ShortCardSkeleton","Avatar","Col","Row","SkeletonUI","skeleton","ChooseSpecialist","organization","$device","generateUrl","getActive","$orderCartList","data","forceLoading","currentOrg","find","item","seller","slug_name","specList","specialists","display","map","idx","SPECIALIST_ID","id","user","avatar","full_name","job","name","padding"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {useParams} from 'react-router-dom'\nimport {useStore} from 'effector-react'\nimport {$appModel} from '../../../Models/app'\nimport {useUrlGenerate} from '../../../Hooks/org'\nimport {$orderModel} from '../../../Models/order-model'\nimport {INFO_MAT} from '../../../Constants/app'\nimport {AccountScrollWrapper, SpecialistNavLink} from '../atoms'\nimport {URL_KEYS} from '../../../Constants'\nimport {ShortCard, ShortCardSkeleton} from '../../../Components/Cards'\nimport {Avatar} from '../../../UIComponents/Avatar'\nimport {Col, Row} from 'antd'\nimport {SkeletonUI} from '../../../UIComponents/GlobalStyles'\n\nconst skeleton = generateSkeleton(1)\nexport const ChooseSpecialist = () => {\n    const {organization} = useParams()\n    const {$device} = useStore($appModel)\n    const {generateUrl, getActive} = useUrlGenerate()\n    const {$orderCartList: {data, forceLoading}} = useStore($orderModel)\n    const currentOrg = data.find(item => item.seller.slug_name === organization)\n    const specList = currentOrg ? currentOrg.seller.specialists : []\n    \n    return (\n        <>\n            {\n                forceLoading === 2\n                    ? (\n                        <>\n                            {\n                                $device && $device === INFO_MAT\n                                    ? (\n                                        <AccountScrollWrapper style={{display: 'flex'}}>\n                                            {\n                                                specList.map((item, idx) => (\n                                                    <SpecialistNavLink\n                                                        key={`${idx + 1}`}\n                                                        to={generateUrl(URL_KEYS.SPECIALIST_ID, item.id)}\n                                                        isActive={() => getActive(URL_KEYS.SPECIALIST_ID, item.id)}\n                                                    >\n                                                        <ShortCard\n                                                            imgSize={80}\n                                                            direction='vertical'\n                                                            imgUrl={item.user.avatar}\n                                                            name={item.user.full_name}\n                                                            text={item.job.name}\n                                                        />\n                                                    </SpecialistNavLink>\n                                                ))\n                                            }\n                                        </AccountScrollWrapper>\n                                    )\n                                    : (\n                                        <AccountScrollWrapper style={{display: 'flex'}}>\n                                            {\n                                                specList.map((item, idx) => (\n                                                    <SpecialistNavLink\n                                                        key={`${idx + 1}`}\n                                                        to={generateUrl(URL_KEYS.SPECIALIST_ID, item.id)}\n                                                        isActive={() => getActive(URL_KEYS.SPECIALIST_ID, item.id)}\n                                                    >\n                                                        <Avatar\n                                                            size={40}\n                                                            imgUrl={item.user.avatar}\n                                                        />\n                                                    </SpecialistNavLink>\n                                                ))\n                                            }\n                                        </AccountScrollWrapper>\n                                    )\n                            }\n                        </>\n                    )\n                    : <Row gutter={[12, 0]} style={{padding: 3}}>\n                        {\n                            $device && $device === INFO_MAT\n                                ? <>\n                                    {\n                                        skeleton.map((item, idx) => (\n                                            <Col key={`${idx + 1}`}>\n                                                <ShortCardSkeleton\n                                                    direction='vertical'\n                                                    textWidth={60}\n                                                />\n                                            </Col>\n                                        ))\n                                    }\n                                </>\n                                : <>\n                                    {\n                                        skeleton.map((item, idx) => (\n                                            <Col key={`${idx + 1}`}>\n                                                <SkeletonUI\n                                                    width={40}\n                                                    height={40}\n                                                    variant='circle'\n                                                />\n                                            </Col>\n                                        ))\n                                    }\n                                </>\n                        }\n                    </Row>\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}