{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useCallback,useEffect}from'react';import{$orderModel,orderListMount,resetOrderListMount}from'../../Models/order-model';import{useStore}from'effector-react';var initialParams={limit:20,offset:0};export function useOrderList(status){var getList=useCallback(function(params){orderListMount(params);},[]);var _useStore=useStore($orderModel),result=_useStore.$orderList.result;var loadMore=useCallback(function(page){if(result.nextOffset){var data={params:_objectSpread(_objectSpread({},initialParams),{},{offset:result.nextOffset})};getList(data);}},[getList,result]);useEffect(function(){var data={clear:true,params:{limit:10,offset:0}};if(status){data['params']['status']=status;}else{delete data['params']['status'];}getList(data);return function(){resetOrderListMount();};},[status,getList]);return{loadMore:loadMore};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/order/use-order-list.js"],"names":["useCallback","useEffect","$orderModel","orderListMount","resetOrderListMount","useStore","initialParams","limit","offset","useOrderList","status","getList","params","result","$orderList","loadMore","page","nextOffset","data","clear"],"mappings":"oKAAA,OAAQA,WAAR,CAAqBC,SAArB,KAAqC,OAArC,CACA,OAAQC,WAAR,CAAqBC,cAArB,CAAqCC,mBAArC,KAA+D,0BAA/D,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,KAAK,CAAE,EADW,CAElBC,MAAM,CAAE,CAFU,CAAtB,CAKA,MAAO,SAASC,CAAAA,YAAT,CAAsBC,MAAtB,CAA8B,CACjC,GAAMC,CAAAA,OAAO,CAAGX,WAAW,CAAC,SAACY,MAAD,CAAY,CACpCT,cAAc,CAACS,MAAD,CAAd,CACH,CAF0B,CAExB,EAFwB,CAA3B,CAGA,cAA+BP,QAAQ,CAACH,WAAD,CAAvC,CAAoBW,MAApB,WAAOC,UAAP,CAAoBD,MAApB,CAEA,GAAME,CAAAA,QAAQ,CAAGf,WAAW,CAAC,SAACgB,IAAD,CAAU,CACnC,GAAIH,MAAM,CAACI,UAAX,CAAuB,CACnB,GAAMC,CAAAA,IAAI,CAAG,CACTN,MAAM,gCACCN,aADD,MAEFE,MAAM,CAAEK,MAAM,CAACI,UAFb,EADG,CAAb,CAMAN,OAAO,CAACO,IAAD,CAAP,CACH,CAEJ,CAX2B,CAWzB,CAACP,OAAD,CAAUE,MAAV,CAXyB,CAA5B,CAaAZ,SAAS,CAAC,UAAM,CACZ,GAAMiB,CAAAA,IAAI,CAAG,CACTC,KAAK,CAAE,IADE,CAETP,MAAM,CAAE,CACJL,KAAK,CAAE,EADH,CAEJC,MAAM,CAAE,CAFJ,CAFC,CAAb,CAOA,GAAIE,MAAJ,CAAY,CACRQ,IAAI,CAAC,QAAD,CAAJ,CAAe,QAAf,EAA2BR,MAA3B,CACH,CAFD,IAEO,CACH,MAAOQ,CAAAA,IAAI,CAAC,QAAD,CAAJ,CAAe,QAAf,CAAP,CACH,CAEDP,OAAO,CAACO,IAAD,CAAP,CAEA,MAAO,WAAM,CACTd,mBAAmB,GACtB,CAFD,CAGH,CAnBQ,CAmBN,CAACM,MAAD,CAASC,OAAT,CAnBM,CAAT,CAqBA,MAAO,CAACI,QAAQ,CAARA,QAAD,CAAP,CACH","sourcesContent":["import {useCallback, useEffect} from 'react'\nimport {$orderModel, orderListMount, resetOrderListMount} from '../../Models/order-model'\nimport {useStore} from 'effector-react'\n\nconst initialParams = {\n    limit: 20,\n    offset: 0\n}\n\nexport function useOrderList(status) {\n    const getList = useCallback((params) => {\n        orderListMount(params)\n    }, [])\n    const {$orderList: {result}} = useStore($orderModel)\n    \n    const loadMore = useCallback((page) => {\n        if (result.nextOffset) {\n            const data = {\n                params: {\n                    ...initialParams,\n                    offset: result.nextOffset\n                }\n            }\n            getList(data)\n        }\n        \n    }, [getList, result])\n    \n    useEffect(() => {\n        const data = {\n            clear: true,\n            params: {\n                limit: 10,\n                offset: 0\n            }\n        }\n        if (status) {\n            data['params']['status'] = status\n        } else {\n            delete data['params']['status']\n        }\n        \n        getList(data)\n        \n        return () => {\n            resetOrderListMount()\n        }\n    }, [status, getList])\n    \n    return {loadMore}\n}"]},"metadata":{},"sourceType":"module"}