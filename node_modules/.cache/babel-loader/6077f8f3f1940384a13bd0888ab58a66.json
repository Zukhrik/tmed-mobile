{"ast":null,"code":"function e(e) {\n  i.store(e) || h('expect useStore argument to be a store');\n  let t = e.getState(),\n      n = f.useReducer(e => e + 1, 0)[1],\n      r = f.useRef({\n    store: e,\n    value: t,\n    pending: 0\n  });\n  return k(() => {\n    let t = e.updates.watch(e => {\n      let t = r.current;\n      t.pending || (t.value = e, t.pending = 1, n(), t.pending = 0);\n    }),\n        o = e.getState(),\n        u = r.current;\n    return u.store === e && u.value !== o && (u.value = o, u.pending = 1, n(), u.pending = 0), u.store = e, t;\n  }, [e]), t;\n}\n\nfunction t(t, n) {\n  let r, o, u, s;\n  n ? (r = n, u = t, s = []) : (r = t.fn, u = t.store, s = t.keys, o = t.updateFilter), i.store(u) || h('useStoreMap expects a store'), Array.isArray(s) || h('useStoreMap expects an array as keys'), 'function' != typeof r && h('useStoreMap expects a function');\n  let a = f.useMemo(() => p(r(u.getState(), s), {\n    updateFilter: o\n  }).on(u, (e, t) => r(t, s)), s),\n      l = e(a);\n  return k(() => () => {\n    a.off(u), m(a, {\n      deep: 1\n    });\n  }, s), l;\n}\n\nfunction n(e, t) {\n  return t.displayName = e, t;\n}\n\nfunction r(t, r) {\n  function o(t) {\n    let n = f.useRef(t),\n        o = e(u);\n    k(() => (a({\n      props: n.current,\n      state: u.getState()\n    }), () => {\n      l({\n        props: n.current,\n        state: u.getState()\n      });\n    }), []);\n    let s = r(t, o);\n    return n.current = t, s;\n  }\n\n  let u;\n  i.store(t) ? u = t : 'object' == typeof t && null !== t ? u = y(t) : h('shape should be a store or object with stores');\n  let s = 'Unknown';\n  u && u.shortName && (s = u.shortName);\n  let a = d(),\n      l = d();\n  return o.mounted = a, o.unmounted = l, n(`${s}.View`, o);\n}\n\nfunction o(e) {\n  return r(e, ({\n    children: e\n  }, t) => e(t));\n}\n\nfunction u(r, o) {\n  let u,\n      s,\n      a = [];\n  'object' == typeof o && null !== o ? (o.keys && (a = o.keys), u = o.fn, o.getKey && (s = o.getKey)) : u = o, i.store(r) || h('expect useList first argument to be a store'), 'function' != typeof u && h(\"expect useList's renderItem to be a function\"), Array.isArray(a) || h(\"expect useList's keys to be an array\");\n  let l = f.useMemo(() => {\n    let e = n(`${r.shortName || 'Unknown'}.Item`, e => {\n      let {\n        index: n,\n        keys: o,\n        keyVal: u,\n        value: s\n      } = e;\n      if (c.current[1]) return c.current[0](s, u);\n      let a = t({\n        store: r,\n        keys: [n, ...o],\n        fn: (e, t) => e[t[0]]\n      });\n      return c.current[0](a, n);\n    });\n    return f.memo(e);\n  }, [r, !!s]),\n      c = f.useRef([u, s]);\n  c.current = [u, s];\n  let p = f.useMemo(() => a, a);\n  if (s) return e(r).map(e => {\n    let t = c.current[1](e);\n    return f.createElement(l, {\n      keyVal: t,\n      key: t,\n      keys: p,\n      value: e\n    });\n  });\n  {\n    let e = t({\n      store: r,\n      keys: [r],\n      fn: e => e.length\n    });\n    return Array.from({\n      length: e\n    }, (e, t) => f.createElement(l, {\n      index: t,\n      key: t,\n      keys: p\n    }));\n  }\n}\n\nfunction s(t, r) {\n  return n(`Connect(${r.displayName || r.name || 'Unknown'})`, n => f.createElement(r, Object.assign({}, n, e(t))));\n}\n\nfunction a(e, t = {}) {\n  let n = f.useRef(null);\n  k(() => (e.open(n.current), () => e.close(n.current)), [e]), ((e, t) => {\n    if (e === t) return 1;\n\n    if ('object' == typeof e && null !== e && 'object' == typeof t && null !== t) {\n      let n = Object.keys(e),\n          r = Object.keys(t);\n      if (n.length !== r.length) return 0;\n\n      for (let r = 0; r < n.length; r++) {\n        let o = n[r];\n        if (e[o] !== t[o]) return 0;\n      }\n\n      return 1;\n    }\n\n    return 0;\n  })(n.current, t) || (n.current = t, e.set(t));\n}\n\nfunction l(e = \"gate\", t = {}) {\n  let r;\n  return 'object' == typeof e && null !== e && ('defaultState' in e && (t = e.defaultState), e.domain && (r = e.domain), e = e.name), (({\n    name: e = \"gate\",\n    domain: t,\n    defaultState: r,\n    hook: o\n  }) => {\n    function u(e) {\n      return o(u, e), null;\n    }\n\n    let s = `${t ? `${t.compositeName.fullName}/` : ''}${e}`,\n        a = d(`${s}.set`),\n        l = d(`${s}.open`),\n        c = d(`${s}.close`),\n        f = p(Boolean(0), {\n      name: `${s}.status`\n    }).on(l, () => Boolean(1)).on(c, () => Boolean(0)),\n        i = p(r, {\n      name: `${s}.state`\n    }).on(a, (e, t) => t).reset(c);\n\n    if (t) {\n      let {\n        hooks: e\n      } = t;\n      g({\n        target: [e.store, e.store, e.event, e.event, e.event],\n        params: [f, i, l, c, a]\n      });\n    }\n\n    return u.open = l, u.close = c, u.status = f, u.state = i, u.set = a, n(`Gate:${s}`, u);\n  })({\n    name: e,\n    domain: r,\n    defaultState: t,\n    hook: a\n  });\n}\n\nfunction c(e) {\n  return e;\n}\n\nimport f from 'react';\nimport { is as i, createStore as p, clearNode as m, combine as y, createEvent as d, launch as g } from 'effector/effector.mjs';\n\nlet k = 'undefined' != typeof window ? f.useLayoutEffect : f.useEffect,\n    h = e => {\n  throw Error(e);\n},\n    b = (t, r, o) => n(`${t.shortName || 'Unknown'}.ContextComponent`, n => {\n  let u = f.useContext(r),\n      s = e(t);\n  return o(n, s, u);\n}),\n    S = e => t => {\n  let n = e;\n  return 'function' != typeof e && (n = t, t = e), s(t, n);\n};\n\nexport { S as connect, r as createComponent, b as createContextComponent, l as createGate, s as createReactState, o as createStoreConsumer, c as useEvent, a as useGate, u as useList, e as useStore, t as useStoreMap };","map":{"version":3,"sources":["effector-react/useStore.ts","effector-react/withDisplayName.ts","effector-react/createComponent.ts","effector-react/createStoreConsumer.ts","effector-react/useList.ts","effector-react/createReactState.ts","effector-react/createGate.ts","effector-react/nossr.ts","effector-react/useIsomorphicLayoutEffect.ts","effector-react/throw.ts","effector-react/createContextComponent.ts","effector-react/connect.ts"],"names":["useStore","store","is","throwError","currentValue","getState","inc","React","useReducer","n","currentStore","useRef","value","pending","useIsomorphicLayoutEffect","stop","updates","watch","upd","ref","current","newValue","useStoreMap","configOrStore","separateFn","fn","updateFilter","keys","Array","isArray","result","useMemo","createStore","on","_","state","off","clearNode","deep","withDisplayName","name","Component","displayName","createComponent","shape","renderProp","combine","storeName","shortName","mounted","createEvent","unmounted","RenderComponent","props","propsRef","createStoreConsumer","children","useList","list","renderItem","getKey","Item","index","keyVal","fnRef","item","memo","keysSelfMemo","map","key","createElement","length","from","i","createReactState","Object","assign","useGate","GateComponent","open","close","shallowCompare","set","a","b","aKeys","bKeys","domain","defaultState","hook","useGateHook","fullName","compositeName","status","Boolean","reset","hooks","launch","target","event","params","createGate","useEvent","window","useLayoutEffect","useEffect","message","Error","createContextComponent","context","ctx","useContext","connect","View"],"mappings":"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","sourcesContent":["import {Store, is, clearNode, createStore} from 'effector'\nimport React from 'react'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {throwError} from './throw'\n\nexport function useStore<State>(store: Store<State>): State {\n  if (!is.store(store)) throwError('expect useStore argument to be a store')\n\n  const currentValue = store.getState()\n  const inc = React.useReducer((n: any, action: void) => n + 1, 0)[1]\n  const currentStore = React.useRef({\n    store,\n    value: currentValue,\n    pending: false,\n  })\n  useIsomorphicLayoutEffect(() => {\n    const stop = store.updates.watch(upd => {\n      const ref = currentStore.current\n      if (!ref.pending) {\n        ref.value = upd\n        ref.pending = true\n        inc()\n        ref.pending = false\n      }\n    })\n    const newValue = store.getState()\n    const ref = currentStore.current\n    if (ref.store === store && ref.value !== newValue) {\n      ref.value = newValue\n      ref.pending = true\n      inc()\n      ref.pending = false\n    }\n    ref.store = store\n    return stop\n  }, [store])\n  return currentValue\n}\n\nexport function useStoreMap<State, Result, Keys extends ReadonlyArray<any>>(\n  configOrStore:\n    | {\n        store: Store<State>\n        keys: Keys\n        fn(state: State, keys: Keys): Result\n        updateFilter?: (update: Result, current: Result) => boolean\n      }\n    | Store<State>,\n  separateFn?: (state: State, keys: Keys) => Result,\n): Result {\n  let fn: (state: State, keys: Keys) => Result\n  let updateFilter: (update: Result, current: Result) => boolean\n  let store: Store<State>\n  let keys: Keys\n  if (separateFn) {\n    fn = separateFn\n    store = configOrStore as Store<State>\n    keys = ([] as unknown) as Keys\n  } else {\n    fn = (configOrStore as any).fn\n    store = (configOrStore as any).store\n    keys = (configOrStore as any).keys\n    updateFilter = (configOrStore as any).updateFilter\n  }\n  if (!is.store(store)) throwError('useStoreMap expects a store')\n  if (!Array.isArray(keys)) throwError('useStoreMap expects an array as keys')\n  if (typeof fn !== 'function') throwError('useStoreMap expects a function')\n  const result: Store<Result> = React.useMemo(\n    () =>\n      createStore(fn(store.getState(), keys), {updateFilter}).on(\n        store,\n        (_, state) => fn(state, keys),\n      ),\n    keys,\n  )\n  const state = useStore(result)\n  useIsomorphicLayoutEffect(\n    () => () => {\n      result.off(store)\n      clearNode(result, {deep: true})\n    },\n    keys,\n  )\n  return state\n}\n","export function withDisplayName(name: string, Component: any) {\n  Component.displayName = name\n  return Component\n}\n","import React from 'react'\nimport {Store, is, combine, createEvent} from 'effector'\nimport {useStore} from './useStore'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {StoreView} from './index.h'\nimport {withDisplayName} from './withDisplayName'\nimport {throwError} from './throw'\n\nexport function createComponent<Props, State>(\n  shape: Store<State> | {[key: string]: Store<any> | any},\n  renderProp: (props: Props, state: State) => React.ReactNode,\n): StoreView<State, Props> {\n  let store: Store<any>\n  if (is.store(shape)) {\n    store = shape\n  } else {\n    if (typeof shape === 'object' && shape !== null) {\n      store = combine(shape)\n    } else throwError('shape should be a store or object with stores')\n  }\n  let storeName = 'Unknown'\n  //@ts-ignore\n  if (store && store.shortName) {\n    storeName = store.shortName\n  }\n  const mounted = createEvent<any>()\n  const unmounted = createEvent<any>()\n\n  function RenderComponent(props: Props) {\n    const propsRef = React.useRef(props)\n    const state = useStore(store)\n    useIsomorphicLayoutEffect(() => {\n      mounted({props: propsRef.current, state: store.getState()})\n      return () => {\n        unmounted({props: propsRef.current, state: store.getState()})\n      }\n    }, [])\n    const result = renderProp(props, state)\n    propsRef.current = props\n    return result\n  }\n  RenderComponent.mounted = mounted\n  RenderComponent.unmounted = unmounted\n  return withDisplayName(`${storeName}.View`, RenderComponent)\n}\n","import {Store} from 'effector'\n\nimport {StoreConsumer} from './index.h'\nimport {createComponent} from './createComponent'\n\nexport function createStoreConsumer<State>(\n  store: Store<State>,\n): StoreConsumer<State> {\n  return createComponent(store, ({children}, state) => children(state))\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react'\nimport {Store, is} from 'effector'\nimport {useStore, useStoreMap} from './useStore'\nimport {withDisplayName} from './withDisplayName'\nimport {throwError} from './throw'\n\nexport function useList<T>(\n  list: Store<T[]>,\n  renderItem:\n    | {\n        keys?: any[]\n        fn(item: T, index: number): React.ReactNode\n        getKey?: (item: T) => string\n      }\n    | ((item: T, index: number) => React.ReactNode),\n): React.ReactNode {\n  let keys = [] as any[]\n  let fn\n  let getKey: (item: T) => string\n  if (typeof renderItem === 'object' && renderItem !== null) {\n    if (renderItem.keys) keys = renderItem.keys\n    fn = renderItem.fn\n    if (renderItem.getKey) getKey = renderItem.getKey\n  } else {\n    fn = renderItem\n  }\n  if (!is.store(list)) throwError('expect useList first argument to be a store')\n  if (typeof fn !== 'function')\n    throwError(\"expect useList's renderItem to be a function\")\n  if (!Array.isArray(keys)) throwError(\"expect useList's keys to be an array\")\n  const Item = React.useMemo(() => {\n    const Item = withDisplayName(\n      `${list.shortName || 'Unknown'}.Item`,\n      (\n        props:\n          | {index: number; keys: any[]; keyVal: never; value: never}\n          | {index: never; keys: any[]; keyVal: string; value: T},\n      ) => {\n        const {index, keys, keyVal, value} = props\n        const isKeyed = !!fnRef.current[1]\n        if (isKeyed) {\n          return fnRef.current[0](value, keyVal as any)\n        }\n        const item = useStoreMap({\n          store: list,\n          keys: [index, ...keys],\n          fn: (list, keys) => list[keys[0]],\n        })\n        return fnRef.current[0](item, index)\n      },\n    )\n    return React.memo(Item)\n  }, [list, !!getKey!])\n  const fnRef = React.useRef([fn, getKey!] as const)\n  fnRef.current = [fn, getKey!]\n  const keysSelfMemo = React.useMemo(() => keys, keys)\n  if (getKey!) {\n    return useStore(list).map(value => {\n      const key = fnRef.current[1](value)\n      return React.createElement(Item, {\n        keyVal: key,\n        key,\n        keys: keysSelfMemo,\n        value,\n      })\n    })\n  } else {\n    const length = useStoreMap({\n      store: list,\n      keys: [list],\n      fn: list => list.length,\n    })\n    return Array.from({length}, (_, i) =>\n      React.createElement(Item, {\n        index: i,\n        key: i,\n        keys: keysSelfMemo,\n      }),\n    )\n  }\n}\n","import React from 'react'\nimport {Store} from 'effector'\n\nimport {useStore} from './useStore'\nimport {withDisplayName} from './withDisplayName'\n\nexport function createReactState<State>(\n  store: Store<State>,\n  Component: React.ComponentType<any>,\n) {\n  const wrappedComponentName =\n    Component.displayName || Component.name || 'Unknown'\n  return withDisplayName(`Connect(${wrappedComponentName})`, (props: any) =>\n    React.createElement(Component, Object.assign({}, props, useStore(store))),\n  )\n}\n","import React from 'react'\nimport {createStore, launch, Store, Domain, createEvent} from 'effector'\nimport {Gate} from './index.h'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {withDisplayName} from './withDisplayName'\n\nexport function useGate<Props>(\n  GateComponent: Gate<Props>,\n  props: Props = {} as any,\n) {\n  const propsRef = React.useRef<any>(null)\n  useIsomorphicLayoutEffect(() => {\n    GateComponent.open(propsRef.current)\n    return () => GateComponent.close(propsRef.current) as any\n  }, [GateComponent])\n  if (!shallowCompare(propsRef.current, props)) {\n    propsRef.current = props\n    GateComponent.set(props)\n  }\n}\n\nfunction shallowCompare(a: any, b: any) {\n  if (a === b) return true\n  if (\n    typeof a === 'object' &&\n    a !== null &&\n    typeof b === 'object' &&\n    b !== null\n  ) {\n    const aKeys = Object.keys(a)\n    const bKeys = Object.keys(b)\n    if (aKeys.length !== bKeys.length) return false\n    for (let i = 0; i < aKeys.length; i++) {\n      const key = aKeys[i]\n      if (a[key] !== b[key]) return false\n    }\n    return true\n  }\n  return false\n}\nexport function createGateImplementation<State>({\n  name = 'gate',\n  domain,\n  defaultState,\n  hook: useGateHook,\n}: {\n  name?: string\n  domain?: Domain\n  defaultState: State | {}\n  hook: typeof useGate\n}): Gate<State> {\n  const fullName = `${domain ? `${domain.compositeName.fullName}/` : ''}${name}`\n  const set = createEvent<State>(`${fullName}.set`)\n  const open = createEvent<State>(`${fullName}.open`)\n  const close = createEvent<State>(`${fullName}.close`)\n  const status = createStore(Boolean(false), {\n    name: `${fullName}.status`,\n  })\n    .on(open, () => Boolean(true))\n    .on(close, () => Boolean(false))\n  const state = createStore(defaultState as State, {\n    name: `${fullName}.state`,\n  })\n    .on(set, (_, state) => state)\n    .reset(close)\n  if (domain) {\n    const {hooks} = domain as any\n    launch({\n      target: [\n        hooks.store,\n        hooks.store,\n        hooks.event,\n        hooks.event,\n        hooks.event,\n      ] as any,\n      params: [status, state, open, close, set],\n    })\n  }\n  function GateComponent(props: State) {\n    useGateHook(GateComponent as any, props)\n    return null\n  }\n  GateComponent.open = open\n  GateComponent.close = close\n  GateComponent.status = status\n  GateComponent.state = state\n  GateComponent.set = set\n  return withDisplayName(`Gate:${fullName}`, GateComponent)\n}\nexport function createGate<Props>(\n  name: string = 'gate',\n  defaultState: Props = {} as any,\n): Gate<Props> {\n  let domain\n  if (typeof name === 'object' && name !== null) {\n    if ('defaultState' in name) {\n      //@ts-ignore\n      defaultState = name.defaultState\n    }\n    //@ts-ignore\n    if (name.domain) domain = name.domain\n    //@ts-ignore\n    name = name.name\n  }\n  return createGateImplementation({\n    name,\n    domain,\n    defaultState,\n    hook: useGate,\n  })\n}\n","import {Event} from 'effector'\n\n/**\nbind event to scope\n\nworks like React.useCallback, but for scopes\n*/\nexport function useEvent<T>(event: Event<T>): (payload: T) => T {\n  return event\n}\n","import React from 'react'\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n","export const throwError = (message: string) => {\n  throw Error(message)\n}\n","import React from 'react'\nimport {Store} from 'effector'\nimport {useStore} from './useStore'\nimport {withDisplayName} from './withDisplayName'\n\nexport const createContextComponent = <Props, State, Context>(\n  store: Store<State>,\n  context: React.Context<Context>,\n  renderProp: (props: Props, state: State, context: Context) => React.ReactNode,\n): React.ComponentType<Props> =>\n  withDisplayName(\n    `${store.shortName || 'Unknown'}.ContextComponent`,\n    (props: any) => {\n      const ctx = React.useContext(context)\n      const state = useStore(store)\n      return renderProp(props, state, ctx)\n    },\n  )\n","import React from 'react'\n\nimport {Store, is} from 'effector'\nimport {createReactState} from './createReactState'\n\nexport const connect = <State>(Component: React.ComponentType<any>) => (\n  store: Store<State>,\n) => {\n  let View: any = Component\n  if (typeof Component !== 'function') {\n    View = store\n    store = Component as any\n  }\n  return createReactState(store, View)\n}\n"]},"metadata":{},"sourceType":"module"}