{"ast":null,"code":"import * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useStore } from 'effector-react';\nimport { useEffect, useState } from 'react';\nimport { $accountModel } from '../../Models/account-model';\nconst defaultValue = {\n  name: '',\n  gender: '',\n  region: '',\n  surname: '',\n  lastname: '',\n  birthday: '',\n  category: ''\n};\nexport function useVerificationPersonalData() {\n  const [initialValues, setInitialsValues] = useState(defaultValue);\n  const [mounted, setMounted] = useState(false);\n  const validationSchema = Yup.object().shape({});\n  const {\n    $accountInfo\n  } = useStore($accountModel);\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    enableReinitialize: true\n  });\n\n  const getData = value => {\n    return value || '';\n  };\n\n  useEffect(() => {\n    const accountData = $accountInfo.data;\n\n    if (!!accountData && !mounted) {\n      setInitialsValues({ ...defaultValue,\n        name: getData(accountData.name),\n        gender: getData(accountData.gender),\n        surname: getData(accountData.surname),\n        lastname: getData(accountData.lastname),\n        birthday: getData(accountData.birthday),\n        region: getData(accountData.region) ? getData(accountData.region) : undefined,\n        category: getData(accountData.main_cat) ? getData(accountData.main_cat) : undefined\n      });\n      setMounted(true);\n    }\n  }, [$accountInfo.data, mounted]);\n  return {\n    formik\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/account/use-verification-personal-data.js"],"names":["Yup","useFormik","useStore","useEffect","useState","$accountModel","defaultValue","name","gender","region","surname","lastname","birthday","category","useVerificationPersonalData","initialValues","setInitialsValues","mounted","setMounted","validationSchema","object","shape","$accountInfo","formik","enableReinitialize","getData","value","accountData","data","undefined","main_cat"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,MAAM,EAAE,EAHW;AAInBC,EAAAA,OAAO,EAAE,EAJU;AAKnBC,EAAAA,QAAQ,EAAE,EALS;AAMnBC,EAAAA,QAAQ,EAAE,EANS;AAOnBC,EAAAA,QAAQ,EAAE;AAPS,CAArB;AAUA,OAAO,SAASC,2BAAT,GAAuC;AAC5C,QAAM,CAACC,aAAD,EAAgBC,iBAAhB,IAAqCZ,QAAQ,CAACE,YAAD,CAAnD;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMe,gBAAgB,GAAGnB,GAAG,CAACoB,MAAJ,GAAaC,KAAb,CAAmB,EAAnB,CAAzB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAmBpB,QAAQ,CAACG,aAAD,CAAjC;AAEA,QAAMkB,MAAM,GAAGtB,SAAS,CAAC;AACvBc,IAAAA,aADuB;AAEvBI,IAAAA,gBAFuB;AAGvBK,IAAAA,kBAAkB,EAAE;AAHG,GAAD,CAAxB;;AAMA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,WAAOA,KAAK,IAAI,EAAhB;AACD,GAFD;;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,WAAW,GAAGL,YAAY,CAACM,IAAjC;;AAEA,QAAI,CAAC,CAACD,WAAF,IAAiB,CAACV,OAAtB,EAA+B;AAE7BD,MAAAA,iBAAiB,CAAC,EAChB,GAAGV,YADa;AAEhBC,QAAAA,IAAI,EAAEkB,OAAO,CAACE,WAAW,CAACpB,IAAb,CAFG;AAGhBC,QAAAA,MAAM,EAAEiB,OAAO,CAACE,WAAW,CAACnB,MAAb,CAHC;AAIhBE,QAAAA,OAAO,EAAEe,OAAO,CAACE,WAAW,CAACjB,OAAb,CAJA;AAKhBC,QAAAA,QAAQ,EAAEc,OAAO,CAACE,WAAW,CAAChB,QAAb,CALD;AAMhBC,QAAAA,QAAQ,EAAEa,OAAO,CAACE,WAAW,CAACf,QAAb,CAND;AAOhBH,QAAAA,MAAM,EAAEgB,OAAO,CAACE,WAAW,CAAClB,MAAb,CAAP,GAA8BgB,OAAO,CAACE,WAAW,CAAClB,MAAb,CAArC,GAA4DoB,SAPpD;AAQhBhB,QAAAA,QAAQ,EAAEY,OAAO,CAACE,WAAW,CAACG,QAAb,CAAP,GAAgCL,OAAO,CAACE,WAAW,CAACG,QAAb,CAAvC,GAAgED;AAR1D,OAAD,CAAjB;AAUAX,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAjBQ,EAiBN,CAACI,YAAY,CAACM,IAAd,EAAoBX,OAApB,CAjBM,CAAT;AAmBA,SAAO;AACLM,IAAAA;AADK,GAAP;AAGD","sourcesContent":["import * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { useStore } from 'effector-react';\r\nimport { useEffect, useState } from 'react';\r\nimport { $accountModel } from '../../Models/account-model';\r\n\r\nconst defaultValue = {\r\n  name: '',\r\n  gender: '',\r\n  region: '',\r\n  surname: '',\r\n  lastname: '',\r\n  birthday: '',\r\n  category: '',\r\n}\r\n\r\nexport function useVerificationPersonalData() {\r\n  const [initialValues, setInitialsValues] = useState(defaultValue)\r\n  const [mounted, setMounted] = useState(false)\r\n  const validationSchema = Yup.object().shape({})\r\n  const { $accountInfo } = useStore($accountModel)\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    enableReinitialize: true,\r\n  })\r\n\r\n  const getData = (value) => {\r\n    return value || ''\r\n  }\r\n\r\n  useEffect(() => {\r\n    const accountData = $accountInfo.data\r\n\r\n    if (!!accountData && !mounted) {\r\n\r\n      setInitialsValues({\r\n        ...defaultValue,\r\n        name: getData(accountData.name),\r\n        gender: getData(accountData.gender),\r\n        surname: getData(accountData.surname),\r\n        lastname: getData(accountData.lastname),\r\n        birthday: getData(accountData.birthday),\r\n        region: getData(accountData.region) ? getData(accountData.region) : undefined,\r\n        category: getData(accountData.main_cat) ? getData(accountData.main_cat) : undefined,\r\n      })\r\n      setMounted(true)\r\n    }\r\n  }, [$accountInfo.data, mounted])\r\n\r\n  return {\r\n    formik\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}