{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Post/PostHeader/index.jsx\";\nimport React from 'react';\nimport moment from 'moment';\nimport { Col, Row } from 'antd';\nimport { PostMore } from '../PostMore';\nimport { Link } from 'react-router-dom';\nimport { useStore } from 'effector-react';\nimport { PostInfoWrapper, PostOwnerNameWrapper, PostTime } from '../style';\nimport { $appModel } from '../../../Models/app';\nimport { usePostMore } from '../../../Hooks/post';\nimport { MoreVerticalSvg } from '../../../Icons/More';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { IconBox } from '../../../UIComponents/GlobalStyles';\nimport { Title } from '../../../UIComponents/Typography/Title';\nimport { Avatar } from '../../../UIComponents/Avatar';\nexport const PostHeader = ({\n  name,\n  data,\n  date,\n  anons,\n  imgUrl,\n  newDuty,\n  postOwner,\n  newAvatar,\n  isOfficial,\n  handlePush\n}) => {\n  var _data$author;\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    $app: {\n      token\n    }\n  } = useStore($appModel);\n  const {\n    show,\n    setShow,\n    postRef\n  } = usePostMore();\n  return /*#__PURE__*/React.createElement(PostInfoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"top\",\n    wrap: false,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    onClick: handlePush,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    imgUrl: imgUrl,\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    flex: 1,\n    onClick: handlePush,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, (data === null || data === void 0 ? void 0 : (_data$author = data.author) === null || _data$author === void 0 ? void 0 : _data$author.type) && /*#__PURE__*/React.createElement(PostOwnerNameWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, name), /*#__PURE__*/React.createElement(PostTime, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, date)), postOwner || anons || newDuty || newAvatar ? /*#__PURE__*/React.createElement(React.Fragment, null, postOwner && /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 37\n    }\n  }, t('reposted_post'), /*#__PURE__*/React.createElement(Link, {\n    to: `/@${postOwner.author.slug_name}/tape`,\n    style: {\n      color: '#262626'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 45\n    }\n  }, postOwner.author.name))), anons && /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Trans, {\n    i18nKey: \"anons_start\",\n    values: {\n      d: moment(anons).format('DD.MM.YYYY'),\n      t: moment(anons).format('HH:mm')\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 49\n    }\n  }))), newDuty && /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }, `${newDuty.job.name} `, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 65\n    }\n  }, newDuty.org.name)), newAvatar && /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 37\n    }\n  }, t('updated_profile_photo'))) : /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, data.author.sub_text)), !!token && /*#__PURE__*/React.createElement(Col, {\n    ref: postRef,\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IconBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MoreVerticalSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }), show && /*#__PURE__*/React.createElement(PostMore, {\n    data: data,\n    postRef: postRef,\n    setShow: setShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 40\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Post/PostHeader/index.jsx"],"names":["React","moment","Col","Row","PostMore","Link","useStore","PostInfoWrapper","PostOwnerNameWrapper","PostTime","$appModel","usePostMore","MoreVerticalSvg","Trans","useTranslation","Text","IconBox","Title","Avatar","PostHeader","name","data","date","anons","imgUrl","newDuty","postOwner","newAvatar","isOfficial","handlePush","t","$app","token","show","setShow","postRef","author","type","slug_name","color","d","format","job","org","sub_text"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport moment from 'moment'\r\nimport {Col, Row} from 'antd'\r\nimport {PostMore} from '../PostMore'\r\nimport {Link} from 'react-router-dom'\r\nimport {useStore} from 'effector-react'\r\nimport {PostInfoWrapper, PostOwnerNameWrapper, PostTime} from '../style'\r\nimport {$appModel} from '../../../Models/app'\r\nimport {usePostMore} from '../../../Hooks/post'\r\nimport {MoreVerticalSvg} from '../../../Icons/More'\r\nimport {Trans, useTranslation} from 'react-i18next'\r\nimport {Text} from '../../../UIComponents/Typography/Text'\r\nimport {IconBox} from '../../../UIComponents/GlobalStyles'\r\nimport {Title} from '../../../UIComponents/Typography/Title'\r\nimport {Avatar} from '../../../UIComponents/Avatar'\r\n\r\nexport const PostHeader = (\r\n    {\r\n        name,\r\n        data,\r\n        date,\r\n        anons,\r\n        imgUrl,\r\n        newDuty,\r\n        postOwner,\r\n        newAvatar,\r\n        isOfficial,\r\n        handlePush\r\n    }\r\n) => {\r\n    const {t} = useTranslation()\r\n    const {$app: {token}} = useStore($appModel)\r\n    const {show, setShow, postRef} = usePostMore()\r\n    \r\n    \r\n    return (\r\n        <PostInfoWrapper>\r\n            <Row\r\n                align='top'\r\n                wrap={false}\r\n                justify='space-between'\r\n            >\r\n                <Col onClick={handlePush}>\r\n                    <Avatar\r\n                        imgUrl={imgUrl}\r\n                        size={40}\r\n                    />\r\n                </Col>\r\n                <Col\r\n                    flex={1}\r\n                    onClick={handlePush}\r\n                >\r\n                    {\r\n                        data?.author?.type &&\r\n                        <PostOwnerNameWrapper>\r\n                            <Title>{name}</Title>\r\n                            <PostTime>\r\n                                {date}\r\n                            </PostTime>\r\n                        </PostOwnerNameWrapper>\r\n                    }\r\n                    {\r\n                        (postOwner || anons || newDuty || newAvatar) ? (\r\n                            <>\r\n                                {\r\n                                    postOwner &&\r\n                                    <Text>\r\n                                        {t('reposted_post')}\r\n                                        <Link\r\n                                            to={`/@${postOwner.author.slug_name}/tape`}\r\n                                            style={{color: '#262626'}}\r\n                                        >\r\n                                            <span>{postOwner.author.name}</span>\r\n                                        </Link>\r\n                                    </Text>\r\n                                }\r\n                                {\r\n                                    anons && (\r\n                                        <Text>\r\n                                            <Trans\r\n                                                i18nKey='anons_start'\r\n                                                values={{\r\n                                                    d: moment(anons).format('DD.MM.YYYY'),\r\n                                                    t: moment(anons).format('HH:mm')\r\n                                                }}\r\n                                            >\r\n                                                <span/>\r\n                                            </Trans>\r\n                                        </Text>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    newDuty &&\r\n                                    <Text>\r\n                                        {`${newDuty.job.name} `}<span>{newDuty.org.name}</span>\r\n                                    </Text>\r\n                                }\r\n                                {\r\n                                    newAvatar &&\r\n                                    <Text>\r\n                                        {t('updated_profile_photo')}\r\n                                    </Text>\r\n                                }\r\n                            </>\r\n                        ) : (\r\n                            <Text>\r\n                                {data.author.sub_text}\r\n                            </Text>\r\n                        )\r\n                    }\r\n                </Col>\r\n                {\r\n                    !!token && (\r\n                        <Col\r\n                            ref={postRef}\r\n                            onClick={() => setShow(!show)}\r\n                        >\r\n                            <IconBox>\r\n                                <MoreVerticalSvg/>\r\n                                {\r\n                                    show\r\n                                    && <PostMore\r\n                                        data={data}\r\n                                        postRef={postRef}\r\n                                        setShow={setShow}\r\n                                    />\r\n                                }\r\n                            </IconBox>\r\n                        </Col>\r\n                    )\r\n                }\r\n            </Row>\r\n        </PostInfoWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}