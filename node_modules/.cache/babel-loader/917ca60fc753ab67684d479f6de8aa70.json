{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/OfferingPage/organisms/offering-characteristics.jsx\";\nimport React, { useState } from 'react';\nimport { ActionArrowWrapper, BetweenWrapper, CharacsTitleWrapper, CharacteristicsList, OfferInfoItemWrapper } from '../atoms';\nimport { Col, Row } from 'antd';\nimport SlideDown from 'react-slidedown';\nimport { useStore } from 'effector-react';\nimport { useTranslation } from 'react-i18next';\nimport { $appModel } from '../../../Models/app';\nimport { INFO_MAT } from '../../../Constants/app';\nimport { ArrowIosTopSvg } from '../../../Icons/Arrow';\nimport { PARAMS_CHARACTER_TYPE } from '../../../Constants';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { Title } from '../../../UIComponents/Typography/Title';\nimport { $offeringsModel } from '../../../Models/offerings-model';\nimport moment from 'moment';\nimport { Container } from '../../../UIComponents/GlobalStyles';\nexport const OfferingCharacteristics = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    $device\n  } = useStore($appModel);\n  const [show, setShow] = useState(false);\n  const {\n    $offeringsCharacs: {\n      data\n    }\n  } = useStore($offeringsModel);\n  const params = data.filter(item => item.character.character_type !== PARAMS_CHARACTER_TYPE.COLOUR_FIELD);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, params.length > 0 && /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CharacsTitleWrapper, {\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, t('product_characteristics')), $device && $device === INFO_MAT ? '' : /*#__PURE__*/React.createElement(ActionArrowWrapper, {\n    status: !show,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(ArrowIosTopSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CharacteristicsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, $device && $device === INFO_MAT ? /*#__PURE__*/React.createElement(React.Fragment, null, params.map((item, idx) => /*#__PURE__*/React.createElement(OfferInfoItemWrapper, {\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 57\n    }\n  }, item.character.name), /*#__PURE__*/React.createElement(BetweenWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    style: {\n      fontWeight: 400\n    },\n    level: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 57\n    }\n  }, item.value)))) : /*#__PURE__*/React.createElement(SlideDown, {\n    transitionOnAppear: false,\n    closed: !show,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 43\n    }\n  }, params.map((item, idx) => /*#__PURE__*/React.createElement(OfferInfoItemWrapper, {\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    alignType: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 57\n    }\n  }, item.character.name), /*#__PURE__*/React.createElement(BetweenWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    level: 5,\n    alignType: \"right\",\n    style: {\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 57\n    }\n  }, item.character.character_type === 10 ? moment(item.value).format('DD-MM-YYYY') : item.value))))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/OfferingPage/organisms/offering-characteristics.jsx"],"names":["React","useState","ActionArrowWrapper","BetweenWrapper","CharacsTitleWrapper","CharacteristicsList","OfferInfoItemWrapper","Col","Row","SlideDown","useStore","useTranslation","$appModel","INFO_MAT","ArrowIosTopSvg","PARAMS_CHARACTER_TYPE","Text","Title","$offeringsModel","moment","Container","OfferingCharacteristics","t","$device","show","setShow","$offeringsCharacs","data","params","filter","item","character","character_type","COLOUR_FIELD","length","map","idx","name","fontWeight","value","format"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {\n    ActionArrowWrapper,\n    BetweenWrapper,\n    CharacsTitleWrapper,\n    CharacteristicsList,\n    OfferInfoItemWrapper\n} from '../atoms'\nimport {Col, Row} from 'antd'\nimport SlideDown from 'react-slidedown'\nimport {useStore} from 'effector-react'\nimport {useTranslation} from 'react-i18next'\nimport {$appModel} from '../../../Models/app'\nimport {INFO_MAT} from '../../../Constants/app'\nimport {ArrowIosTopSvg} from '../../../Icons/Arrow'\nimport {PARAMS_CHARACTER_TYPE} from '../../../Constants'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {Title} from '../../../UIComponents/Typography/Title'\nimport {$offeringsModel} from '../../../Models/offerings-model'\nimport moment from 'moment'\nimport {Container} from '../../../UIComponents/GlobalStyles'\n\n\nexport const OfferingCharacteristics = () => {\n    const {t} = useTranslation()\n    const {$device} = useStore($appModel)\n    const [show, setShow] = useState(false)\n    const {$offeringsCharacs: {data}} = useStore($offeringsModel)\n    const params = data.filter(item => item.character.character_type !== PARAMS_CHARACTER_TYPE.COLOUR_FIELD)\n    \n    return (\n        <Container>\n            {\n                params.length > 0 && (\n                    <Row gutter={[0, 12]}>\n                        <Col span={24}>\n                            <CharacsTitleWrapper onClick={() => setShow(!show)}>\n                                <Text>{t('product_characteristics')}</Text>\n                                {\n                                    $device && $device === INFO_MAT\n                                        ? ''\n                                        : <ActionArrowWrapper status={!show}>\n                                            <ArrowIosTopSvg/>\n                                        </ActionArrowWrapper>\n                                }\n                            </CharacsTitleWrapper>\n                        </Col>\n                        <Col span={24}>\n                            <CharacteristicsList>\n                                {\n                                    $device && $device === INFO_MAT\n                                        ? <>\n                                            {\n                                                params.map((item, idx) => (\n                                                    <OfferInfoItemWrapper key={`${idx + 1}`}>\n                                                        <Text>{item.character.name}</Text>\n                                                        <BetweenWrapper/>\n                                                        <Title style={{fontWeight: 400}} level={5}>{item.value}</Title>\n                                                    </OfferInfoItemWrapper>\n                                                ))\n                                            }\n                                        </>\n                                        : <SlideDown transitionOnAppear={false} closed={!show}>\n                                            {\n                                                params.map((item, idx) => (\n                                                    <OfferInfoItemWrapper key={`${idx + 1}`}>\n                                                        <Text alignType='left'>{item.character.name}</Text>\n                                                        <BetweenWrapper/>\n                                                        <Title\n                                                            level={5}\n                                                            alignType='right'\n                                                            style={{fontWeight: 400}}\n                                                        >\n                                                            {item.character.character_type === 10\n                                                                ? moment(item.value).format('DD-MM-YYYY')\n                                                                : item.value\n                                                            }\n                                                        </Title>\n                                                    </OfferInfoItemWrapper>\n                                                ))\n                                            }\n                                        </SlideDown>\n                                }\n                            </CharacteristicsList>\n                        </Col>\n                    </Row>\n                )\n            }\n        </Container>\n    )\n}"]},"metadata":{},"sourceType":"module"}