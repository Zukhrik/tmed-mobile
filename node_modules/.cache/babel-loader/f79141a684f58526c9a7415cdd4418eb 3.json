{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/organisms/my-records.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { $orderModel } from '../../../Models/order-model';\nimport { RecordCard } from '../molecules';\nimport moment from 'moment';\nimport { useOrderList } from '../../../Hooks/org';\nimport { useHistory } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nexport const MyRecords = () => {\n  const {\n    push\n  } = useHistory();\n  const {\n    loadMore\n  } = useOrderList(5);\n  const {\n    $orderList: {\n      data,\n      loading,\n      result\n    }\n  } = useStore($orderModel);\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    next: loadMore,\n    hasMore: !loading && !!result.next,\n    dataLength: result.nextOffset || 10,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    style: {\n      paddingBottom: 65\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(RecordCard, {\n    meet: moment(item.meet_date).format('LT'),\n    status: item.status,\n    date: moment(item.meet_date).format('DD/MM/YY'),\n    name: item.responsible.user.full_name,\n    category: item.responsible.user.main_cat.name,\n    src: item.responsible.org.logo,\n    containerPush: () => push(`/records/detail/${item.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/organisms/my-records.jsx"],"names":["React","Col","Row","useStore","$orderModel","RecordCard","moment","useOrderList","useHistory","InfiniteScroll","MyRecords","push","loadMore","$orderList","data","loading","result","next","nextOffset","paddingBottom","map","item","idx","meet_date","format","status","responsible","user","full_name","main_cat","name","org","logo","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,WAAR,QAA0B,6BAA1B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAASH,UAAU,EAAzB;AACA,QAAM;AAACI,IAAAA;AAAD,MAAaL,YAAY,CAAC,CAAD,CAA/B;AACA,QAAM;AAACM,IAAAA,UAAU,EAAE;AAACC,MAAAA,IAAD;AAAOC,MAAAA,OAAP;AAAgBC,MAAAA;AAAhB;AAAb,MAAwCb,QAAQ,CAACC,WAAD,CAAtD;AAEA,sBACI,oBAAC,cAAD;AACI,IAAA,IAAI,EAAEQ,QADV;AAEI,IAAA,OAAO,EAAE,CAACG,OAAD,IAAY,CAAC,CAACC,MAAM,CAACC,IAFlC;AAGI,IAAA,UAAU,EAAED,MAAM,CAACE,UAAP,IAAqB,EAHrC;AAII,IAAA,MAAM,eAAE,uDAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAsB,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAE;AAAhB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQL,IAAI,CAACM,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACL,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAEhB,MAAM,CAACe,IAAI,CAACE,SAAN,CAAN,CAAuBC,MAAvB,CAA8B,IAA9B,CADV;AAEI,IAAA,MAAM,EAAEH,IAAI,CAACI,MAFjB;AAGI,IAAA,IAAI,EAAEnB,MAAM,CAACe,IAAI,CAACE,SAAN,CAAN,CAAuBC,MAAvB,CAA8B,UAA9B,CAHV;AAII,IAAA,IAAI,EAAEH,IAAI,CAACK,WAAL,CAAiBC,IAAjB,CAAsBC,SAJhC;AAKI,IAAA,QAAQ,EAAEP,IAAI,CAACK,WAAL,CAAiBC,IAAjB,CAAsBE,QAAtB,CAA+BC,IAL7C;AAMI,IAAA,GAAG,EAAET,IAAI,CAACK,WAAL,CAAiBK,GAAjB,CAAqBC,IAN9B;AAOI,IAAA,aAAa,EAAE,MAAMrB,IAAI,CAAE,mBAAkBU,IAAI,CAACY,EAAG,EAA5B,CAP7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFR,CANJ,CADJ;AA2BH,CAhCM","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {$orderModel} from '../../../Models/order-model'\nimport {RecordCard} from '../molecules'\nimport moment from 'moment'\nimport {useOrderList} from '../../../Hooks/org'\nimport {useHistory} from 'react-router-dom'\nimport InfiniteScroll from 'react-infinite-scroll-component'\n\nexport const MyRecords = () => {\n    const {push} = useHistory()\n    const {loadMore} = useOrderList(5)\n    const {$orderList: {data, loading, result}} = useStore($orderModel)\n    \n    return (\n        <InfiniteScroll\n            next={loadMore}\n            hasMore={!loading && !!result.next}\n            dataLength={result.nextOffset || 10}\n            loader={<>...loading</>}\n        >\n            <Row gutter={[0, 12]} style={{paddingBottom: 65}}>\n                {\n                    data.map((item, idx) => (\n                        <Col span={24} key={`${idx + 1}`}>\n                            <RecordCard\n                                meet={moment(item.meet_date).format('LT')}\n                                status={item.status}\n                                date={moment(item.meet_date).format('DD/MM/YY')}\n                                name={item.responsible.user.full_name}\n                                category={item.responsible.user.main_cat.name}\n                                src={item.responsible.org.logo}\n                                containerPush={() => push(`/records/detail/${item.id}`)}\n                            />\n                        </Col>\n                    ))\n                }\n            \n            </Row>\n        </InfiniteScroll>\n    )\n}"]},"metadata":{},"sourceType":"module"}