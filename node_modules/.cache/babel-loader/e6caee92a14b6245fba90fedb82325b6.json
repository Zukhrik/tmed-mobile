{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/Records/organisms/account-specialists.jsx\";\nimport React, { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { useUrlParams } from '../../../Hooks/app';\nimport { useStore } from 'effector-react';\nimport { $appModel } from '../../../Models/app';\nimport { URL_KEYS } from '../../../Constants';\nimport { $orderModel } from '../../../Models/order-model';\nimport { AccountSpecialistsWrapper, ServeSpecWrapper } from '../atoms';\nimport { Col, Row } from 'antd';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { INFO_MAT } from '../../../Constants/app';\nimport { ShortCard, ShortCardSkeleton } from '../../../Components/Cards';\nimport { ChooseSpecialist } from './choose-specialist';\nexport const AccountSpecialists = () => {\n  const {\n    push\n  } = useHistory();\n  const {\n    t\n  } = useTranslation();\n  const {\n    urlData\n  } = useUrlParams();\n  const {\n    organization\n  } = useParams();\n  const {\n    $device\n  } = useStore($appModel);\n  const specId = urlData[URL_KEYS.SPECIALIST_ID];\n  const {\n    $orderCartList: {\n      data\n    }\n  } = useStore($orderModel);\n  const {\n    $orderCartList: {\n      forceLoading\n    }\n  } = useStore($orderModel);\n  const currentOrg = data.find(item => item.seller.slug_name === organization);\n  const specList = currentOrg ? currentOrg.seller.specialists : [];\n  const currentSpecInfo = specList.find(item => item.id.toString() === urlData.specialist_id);\n  useEffect(() => {\n    if (!specId && specList.length > 0) {\n      push({\n        pathname: `/records/unregistered/${organization}`,\n        search: `${URL_KEYS.SPECIALIST_ID}=${specList[0].id}`\n      });\n    }\n  }, [specList, specId, push, organization]);\n  return /*#__PURE__*/React.createElement(AccountSpecialistsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, t('choose_specialist'))), specList && /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ChooseSpecialist, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  })), $device && $device === INFO_MAT ? '' : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }, t('will_serve_you'))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, forceLoading === 2 ? /*#__PURE__*/React.createElement(ServeSpecWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 47\n    }\n  }, currentSpecInfo && /*#__PURE__*/React.createElement(ShortCard, {\n    imgSize: 40,\n    imgUrl: currentSpecInfo.user.avatar,\n    name: currentSpecInfo.user.full_name,\n    text: currentSpecInfo.job.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 53\n    }\n  })) : /*#__PURE__*/React.createElement(ShortCardSkeleton, {\n    size: 40,\n    height: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 47\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/Records/organisms/account-specialists.jsx"],"names":["React","useEffect","useHistory","useParams","useTranslation","useUrlParams","useStore","$appModel","URL_KEYS","$orderModel","AccountSpecialistsWrapper","ServeSpecWrapper","Col","Row","Text","INFO_MAT","ShortCard","ShortCardSkeleton","ChooseSpecialist","AccountSpecialists","push","t","urlData","organization","$device","specId","SPECIALIST_ID","$orderCartList","data","forceLoading","currentOrg","find","item","seller","slug_name","specList","specialists","currentSpecInfo","id","toString","specialist_id","length","pathname","search","user","avatar","full_name","job","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,kBAApC;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,WAAR,QAA0B,6BAA1B;AACA,SAAQC,yBAAR,EAAmCC,gBAAnC,QAA0D,UAA1D;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,IAAR,QAAmB,uCAAnB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAAQC,SAAR,EAAmBC,iBAAnB,QAA2C,2BAA3C;AACA,SAAQC,gBAAR,QAA+B,qBAA/B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACpC,QAAM;AAACC,IAAAA;AAAD,MAASlB,UAAU,EAAzB;AACA,QAAM;AAACmB,IAAAA;AAAD,MAAMjB,cAAc,EAA1B;AACA,QAAM;AAACkB,IAAAA;AAAD,MAAYjB,YAAY,EAA9B;AACA,QAAM;AAACkB,IAAAA;AAAD,MAAiBpB,SAAS,EAAhC;AACA,QAAM;AAACqB,IAAAA;AAAD,MAAYlB,QAAQ,CAACC,SAAD,CAA1B;AACA,QAAMkB,MAAM,GAAGH,OAAO,CAACd,QAAQ,CAACkB,aAAV,CAAtB;AACA,QAAM;AAACC,IAAAA,cAAc,EAAE;AAACC,MAAAA;AAAD;AAAjB,MAA2BtB,QAAQ,CAACG,WAAD,CAAzC;AACA,QAAM;AAACkB,IAAAA,cAAc,EAAE;AAACE,MAAAA;AAAD;AAAjB,MAAmCvB,QAAQ,CAACG,WAAD,CAAjD;AACA,QAAMqB,UAAU,GAAGF,IAAI,CAACG,IAAL,CAAUC,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAYC,SAAZ,KAA0BX,YAA5C,CAAnB;AACA,QAAMY,QAAQ,GAAGL,UAAU,GAAGA,UAAU,CAACG,MAAX,CAAkBG,WAArB,GAAmC,EAA9D;AACA,QAAMC,eAAe,GAAGF,QAAQ,CAACJ,IAAT,CAAcC,IAAI,IAAIA,IAAI,CAACM,EAAL,CAAQC,QAAR,OAAuBjB,OAAO,CAACkB,aAArD,CAAxB;AAEAvC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACwB,MAAD,IAAWU,QAAQ,CAACM,MAAT,GAAkB,CAAjC,EAAoC;AAChCrB,MAAAA,IAAI,CAAC;AACDsB,QAAAA,QAAQ,EAAG,yBAAwBnB,YAAa,EAD/C;AAEDoB,QAAAA,MAAM,EAAG,GAAEnC,QAAQ,CAACkB,aAAc,IAAGS,QAAQ,CAAC,CAAD,CAAR,CAAYG,EAAG;AAFnD,OAAD,CAAJ;AAIH;AACJ,GAPQ,EAON,CAACH,QAAD,EAAWV,MAAX,EAAmBL,IAAnB,EAAyBG,YAAzB,CAPM,CAAT;AASA,sBACI,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,CAAC,CAAC,mBAAD,CAAR,CADJ,CADJ,EAKQc,QAAQ,iBACR,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANR,EAWQX,OAAO,IAAIA,OAAO,KAAKT,QAAvB,GACM,EADN,gBAGQ,uDACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOM,CAAC,CAAC,gBAAD,CAAR,CADJ,CADJ,eAII,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQQ,YAAY,KAAK,CAAjB,gBACM,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMQ,eAAe,iBACf,oBAAC,SAAD;AACI,IAAA,OAAO,EAAE,EADb;AAEI,IAAA,MAAM,EAAEA,eAAe,CAACO,IAAhB,CAAqBC,MAFjC;AAGI,IAAA,IAAI,EAAER,eAAe,CAACO,IAAhB,CAAqBE,SAH/B;AAII,IAAA,IAAI,EAAET,eAAe,CAACU,GAAhB,CAAoBC,IAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,CADN,gBAYM,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,MAAM,EAAE,EAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdd,CAJJ,CAdhB,CADJ,CADJ;AA8CH,CApEM","sourcesContent":["import React, {useEffect} from 'react'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {useTranslation} from 'react-i18next'\nimport {useUrlParams} from '../../../Hooks/app'\nimport {useStore} from 'effector-react'\nimport {$appModel} from '../../../Models/app'\nimport {URL_KEYS} from '../../../Constants'\nimport {$orderModel} from '../../../Models/order-model'\nimport {AccountSpecialistsWrapper, ServeSpecWrapper} from '../atoms'\nimport {Col, Row} from 'antd'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {INFO_MAT} from '../../../Constants/app'\nimport {ShortCard, ShortCardSkeleton} from '../../../Components/Cards'\nimport {ChooseSpecialist} from './choose-specialist'\n\nexport const AccountSpecialists = () => {\n    const {push} = useHistory()\n    const {t} = useTranslation()\n    const {urlData} = useUrlParams()\n    const {organization} = useParams()\n    const {$device} = useStore($appModel)\n    const specId = urlData[URL_KEYS.SPECIALIST_ID]\n    const {$orderCartList: {data}} = useStore($orderModel)\n    const {$orderCartList: {forceLoading}} = useStore($orderModel)\n    const currentOrg = data.find(item => item.seller.slug_name === organization)\n    const specList = currentOrg ? currentOrg.seller.specialists : []\n    const currentSpecInfo = specList.find(item => item.id.toString() === urlData.specialist_id)\n    \n    useEffect(() => {\n        if (!specId && specList.length > 0) {\n            push({\n                pathname: `/records/unregistered/${organization}`,\n                search: `${URL_KEYS.SPECIALIST_ID}=${specList[0].id}`\n            })\n        }\n    }, [specList, specId, push, organization])\n    \n    return (\n        <AccountSpecialistsWrapper>\n            <Row gutter={[0, 12]}>\n                <Col span={24}>\n                    <Text>{t('choose_specialist')}</Text>\n                </Col>\n                {\n                    specList &&\n                    <Col span={24}>\n                        <ChooseSpecialist/>\n                    </Col>\n                }\n                {\n                    $device && $device === INFO_MAT\n                        ? ''\n                        : (\n                            <>\n                                <Col span={24}>\n                                    <Text>{t('will_serve_you')}</Text>\n                                </Col>\n                                <Col span={24}>\n                                    {\n                                        forceLoading === 2\n                                            ? <ServeSpecWrapper>\n                                                {\n                                                    currentSpecInfo &&\n                                                    <ShortCard\n                                                        imgSize={40}\n                                                        imgUrl={currentSpecInfo.user.avatar}\n                                                        name={currentSpecInfo.user.full_name}\n                                                        text={currentSpecInfo.job.name}\n                                                    />\n                                                }\n                                            </ServeSpecWrapper>\n                                            : <ShortCardSkeleton\n                                                size={40}\n                                                height={40}\n                                            />\n                                    }\n                                </Col>\n                            </>\n                        )\n                }\n            </Row>\n        </AccountSpecialistsWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}