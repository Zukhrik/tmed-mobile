{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useUrlParams}from'../app';import{URL_KEYS,URL_VALUES}from'../../Constants';import{useCallback,useEffect,useState}from'react';import{useHistory}from'react-router-dom';import{debounce}from'../../utils/debounce-utils';import{$chatModel,chatAllGroupMount,chatAllUserMount}from'../../Models/chat-model';import{useStore}from'effector-react';var initialParams={limit:20,offset:0};export function useChatContactSearch(){var _useUrlParams=useUrlParams(),urlData=_useUrlParams.urlData;var search=urlData[URL_KEYS.SEARCH];var tab=urlData[URL_KEYS.TAB];var _useHistory=useHistory(),push=_useHistory.push,pathname=_useHistory.location.pathname;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),searchText=_useState2[0],setSearchText=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),mounted=_useState4[0],setMounted=_useState4[1];var _useStore=useStore($chatModel),result=_useStore.$searchContact.result;var getList=useCallback(function(params){var validate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(tab){if(validate){if(tab===URL_VALUES.PEOPLE){chatAllUserMount(params);}// if(tab === URL_VALUES.ORGANIZATION) {\n//     chatAllOrgMount(params)\n// }\nif(tab===URL_VALUES.GROUP){chatAllGroupMount(params);}}else{chatAllUserMount(params);chatAllGroupMount(params);}}},[tab]);var getNextOffset=useCallback(function(){var nextOffset;if(tab===URL_VALUES.PEOPLE){nextOffset=result[URL_VALUES.PEOPLE]&&result[URL_VALUES.PEOPLE].nextOffset;}// if(tab === URL_VALUES.ORGANIZATION) {\n//     chatAllOrgMount(params)\n// }\nif(tab===URL_VALUES.GROUP){nextOffset=result[URL_VALUES.GROUP]&&result[URL_VALUES.GROUP].nextOffset;}return nextOffset;},[result,tab]);var onChange=useCallback(function(value){if(value.length>2){var query=[];var data={clear:true,params:_objectSpread(_objectSpread({},initialParams),{},{search:value})};if(tab){query.push(\"\".concat(URL_KEYS.TAB,\"=\").concat(tab));}else{query.push(\"\".concat(URL_KEYS.TAB,\"=\").concat(URL_VALUES.PEOPLE));}query.push(\"\".concat(URL_KEYS.SEARCH,\"=\").concat(value));push({pathname:pathname,search:query.join('&')});debounce(getList(data),300);}else{push(pathname);}setSearchText(value);},[push,pathname,tab,getList]);var loadMore=useCallback(function(){var nextOffset=getNextOffset();if(nextOffset){var data={params:_objectSpread(_objectSpread({},initialParams),{},{search:search,offset:nextOffset})};getList(data,true);}},[getNextOffset,search,getList]);useEffect(function(){var timeout=null;if(!mounted&&search&&search.length>2){timeout=setTimeout(function(){var data={clear:true,params:_objectSpread(_objectSpread({},initialParams),{},{search:search})};getList(data);setMounted(true);},300);}return function(){clearTimeout(timeout);timeout=null;};},[search,mounted,getList]);useEffect(function(){if(!searchText){if(search){setSearchText(search);}else{setSearchText(null);}}},[search,searchText]);return{searchText:searchText,onChange:onChange,loadMore:loadMore};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/chat/use-chat-contact-search.js"],"names":["useUrlParams","URL_KEYS","URL_VALUES","useCallback","useEffect","useState","useHistory","debounce","$chatModel","chatAllGroupMount","chatAllUserMount","useStore","initialParams","limit","offset","useChatContactSearch","urlData","search","SEARCH","tab","TAB","push","pathname","location","searchText","setSearchText","mounted","setMounted","result","$searchContact","getList","params","validate","PEOPLE","GROUP","getNextOffset","nextOffset","onChange","value","length","query","data","clear","join","loadMore","timeout","setTimeout","clearTimeout"],"mappings":"yUAAA,OAAQA,YAAR,KAA2B,QAA3B,CACA,OAAQC,QAAR,CAAkBC,UAAlB,KAAmC,iBAAnC,CACA,OAAQC,WAAR,CAAqBC,SAArB,CAAgCC,QAAhC,KAA+C,OAA/C,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CACA,OAAQC,QAAR,KAAuB,4BAAvB,CACA,OAAQC,UAAR,CAAoBC,iBAApB,CAAuCC,gBAAvC,KAA8D,yBAA9D,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,KAAK,CAAE,EADW,CAElBC,MAAM,CAAE,CAFU,CAAtB,CAKA,MAAO,SAASC,CAAAA,oBAAT,EAAgC,CACnC,kBAAkBf,YAAY,EAA9B,CAAOgB,OAAP,eAAOA,OAAP,CACA,GAAMC,CAAAA,MAAM,CAAGD,OAAO,CAACf,QAAQ,CAACiB,MAAV,CAAtB,CACA,GAAMC,CAAAA,GAAG,CAAGH,OAAO,CAACf,QAAQ,CAACmB,GAAV,CAAnB,CACA,gBAAqCd,UAAU,EAA/C,CAAOe,IAAP,aAAOA,IAAP,CAAwBC,QAAxB,aAAaC,QAAb,CAAwBD,QAAxB,CACA,cAAoCjB,QAAQ,CAAC,IAAD,CAA5C,wCAAOmB,UAAP,eAAmBC,aAAnB,eACA,eAA8BpB,QAAQ,CAAC,KAAD,CAAtC,yCAAOqB,OAAP,eAAgBC,UAAhB,eACA,cAAmChB,QAAQ,CAACH,UAAD,CAA3C,CAAwBoB,MAAxB,WAAOC,cAAP,CAAwBD,MAAxB,CAEA,GAAME,CAAAA,OAAO,CAAG3B,WAAW,CAAC,SAAC4B,MAAD,CAA8B,IAArBC,CAAAA,QAAqB,2DAAV,KAAU,CACtD,GAAIb,GAAJ,CAAS,CACL,GAAGa,QAAH,CAAa,CACT,GAAIb,GAAG,GAAKjB,UAAU,CAAC+B,MAAvB,CAA+B,CAC3BvB,gBAAgB,CAACqB,MAAD,CAAhB,CACH,CAED;AACA;AACA;AAEA,GAAIZ,GAAG,GAAKjB,UAAU,CAACgC,KAAvB,CAA8B,CAC1BzB,iBAAiB,CAACsB,MAAD,CAAjB,CACH,CACJ,CAZD,IAYM,CACFrB,gBAAgB,CAACqB,MAAD,CAAhB,CACAtB,iBAAiB,CAACsB,MAAD,CAAjB,CACH,CACJ,CACJ,CAnB0B,CAmBxB,CAACZ,GAAD,CAnBwB,CAA3B,CAqBA,GAAMgB,CAAAA,aAAa,CAAGhC,WAAW,CAAC,UAAM,CACpC,GAAIiC,CAAAA,UAAJ,CACA,GAAIjB,GAAG,GAAKjB,UAAU,CAAC+B,MAAvB,CAA+B,CAC3BG,UAAU,CAAGR,MAAM,CAAC1B,UAAU,CAAC+B,MAAZ,CAAN,EAA6BL,MAAM,CAAC1B,UAAU,CAAC+B,MAAZ,CAAN,CAA0BG,UAApE,CACH,CAED;AACA;AACA;AAEA,GAAIjB,GAAG,GAAKjB,UAAU,CAACgC,KAAvB,CAA8B,CAC1BE,UAAU,CAAGR,MAAM,CAAC1B,UAAU,CAACgC,KAAZ,CAAN,EAA4BN,MAAM,CAAC1B,UAAU,CAACgC,KAAZ,CAAN,CAAyBE,UAAlE,CACH,CAED,MAAOA,CAAAA,UAAP,CACH,CAfgC,CAe9B,CAACR,MAAD,CAAST,GAAT,CAf8B,CAAjC,CAiBA,GAAMkB,CAAAA,QAAQ,CAAGlC,WAAW,CAAC,SAACmC,KAAD,CAAW,CACpC,GAAIA,KAAK,CAACC,MAAN,CAAe,CAAnB,CAAsB,CAClB,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACA,GAAMC,CAAAA,IAAI,CAAG,CACTC,KAAK,CAAE,IADE,CAETX,MAAM,gCACCnB,aADD,MAEFK,MAAM,CAAEqB,KAFN,EAFG,CAAb,CAQA,GAAInB,GAAJ,CAAS,CACLqB,KAAK,CAACnB,IAAN,WAAcpB,QAAQ,CAACmB,GAAvB,aAA8BD,GAA9B,GACH,CAFD,IAEO,CACHqB,KAAK,CAACnB,IAAN,WAAcpB,QAAQ,CAACmB,GAAvB,aAA8BlB,UAAU,CAAC+B,MAAzC,GACH,CAEDO,KAAK,CAACnB,IAAN,WAAcpB,QAAQ,CAACiB,MAAvB,aAAiCoB,KAAjC,GAEAjB,IAAI,CAAC,CACDC,QAAQ,CAARA,QADC,CAEDL,MAAM,CAAEuB,KAAK,CAACG,IAAN,CAAW,GAAX,CAFP,CAAD,CAAJ,CAIApC,QAAQ,CAACuB,OAAO,CAACW,IAAD,CAAR,CAAgB,GAAhB,CAAR,CACH,CAvBD,IAuBO,CACHpB,IAAI,CAACC,QAAD,CAAJ,CACH,CACDG,aAAa,CAACa,KAAD,CAAb,CACH,CA5B2B,CA4BzB,CAACjB,IAAD,CAAOC,QAAP,CAAiBH,GAAjB,CAAsBW,OAAtB,CA5ByB,CAA5B,CA8BA,GAAMc,CAAAA,QAAQ,CAAGzC,WAAW,CAAC,UAAM,CAC/B,GAAMiC,CAAAA,UAAU,CAAGD,aAAa,EAAhC,CAEA,GAAGC,UAAH,CAAe,CACX,GAAMK,CAAAA,IAAI,CAAG,CACTV,MAAM,gCACCnB,aADD,MAEFK,MAAM,CAANA,MAFE,CAGFH,MAAM,CAAEsB,UAHN,EADG,CAAb,CAQAN,OAAO,CAACW,IAAD,CAAO,IAAP,CAAP,CACH,CACJ,CAd2B,CAczB,CAACN,aAAD,CAAgBlB,MAAhB,CAAwBa,OAAxB,CAdyB,CAA5B,CAgBA1B,SAAS,CAAC,UAAM,CACZ,GAAIyC,CAAAA,OAAO,CAAG,IAAd,CAEA,GAAI,CAACnB,OAAD,EAAYT,MAAZ,EAAsBA,MAAM,CAACsB,MAAP,CAAgB,CAA1C,CAA6C,CACzCM,OAAO,CAAGC,UAAU,CAAC,UAAM,CACvB,GAAML,CAAAA,IAAI,CAAG,CACTC,KAAK,CAAE,IADE,CAETX,MAAM,gCACCnB,aADD,MAEFK,MAAM,CAANA,MAFE,EAFG,CAAb,CAQAa,OAAO,CAACW,IAAD,CAAP,CACAd,UAAU,CAAC,IAAD,CAAV,CACH,CAXmB,CAWjB,GAXiB,CAApB,CAYH,CAED,MAAO,WAAM,CACToB,YAAY,CAACF,OAAD,CAAZ,CACAA,OAAO,CAAG,IAAV,CACH,CAHD,CAIH,CAtBQ,CAsBN,CAAC5B,MAAD,CAASS,OAAT,CAAkBI,OAAlB,CAtBM,CAAT,CAyBA1B,SAAS,CAAC,UAAM,CACZ,GAAI,CAACoB,UAAL,CAAiB,CACb,GAAIP,MAAJ,CAAY,CACRQ,aAAa,CAACR,MAAD,CAAb,CACH,CAFD,IAEO,CACHQ,aAAa,CAAC,IAAD,CAAb,CACH,CACJ,CACJ,CARQ,CAQN,CAACR,MAAD,CAASO,UAAT,CARM,CAAT,CAUA,MAAO,CAACA,UAAU,CAAVA,UAAD,CAAaa,QAAQ,CAARA,QAAb,CAAuBO,QAAQ,CAARA,QAAvB,CAAP,CACH","sourcesContent":["import {useUrlParams} from '../app'\r\nimport {URL_KEYS, URL_VALUES} from '../../Constants'\r\nimport {useCallback, useEffect, useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {debounce} from '../../utils/debounce-utils'\r\nimport {$chatModel, chatAllGroupMount, chatAllUserMount} from '../../Models/chat-model'\r\nimport {useStore} from 'effector-react'\r\n\r\nconst initialParams = {\r\n    limit: 20,\r\n    offset: 0\r\n}\r\n\r\nexport function useChatContactSearch() {\r\n    const {urlData} = useUrlParams()\r\n    const search = urlData[URL_KEYS.SEARCH]\r\n    const tab = urlData[URL_KEYS.TAB]\r\n    const {push, location: {pathname}} = useHistory()\r\n    const [searchText, setSearchText] = useState(null)\r\n    const [mounted, setMounted] = useState(false)\r\n    const {$searchContact: {result}} = useStore($chatModel)\r\n\r\n    const getList = useCallback((params, validate = false) => {\r\n        if (tab) {\r\n            if(validate) {\r\n                if (tab === URL_VALUES.PEOPLE) {\r\n                    chatAllUserMount(params)\r\n                }\r\n\r\n                // if(tab === URL_VALUES.ORGANIZATION) {\r\n                //     chatAllOrgMount(params)\r\n                // }\r\n\r\n                if (tab === URL_VALUES.GROUP) {\r\n                    chatAllGroupMount(params)\r\n                }\r\n            }else {\r\n                chatAllUserMount(params)\r\n                chatAllGroupMount(params)\r\n            }\r\n        }\r\n    }, [tab])\r\n\r\n    const getNextOffset = useCallback(() => {\r\n        let nextOffset\r\n        if (tab === URL_VALUES.PEOPLE) {\r\n            nextOffset = result[URL_VALUES.PEOPLE] && result[URL_VALUES.PEOPLE].nextOffset\r\n        }\r\n\r\n        // if(tab === URL_VALUES.ORGANIZATION) {\r\n        //     chatAllOrgMount(params)\r\n        // }\r\n\r\n        if (tab === URL_VALUES.GROUP) {\r\n            nextOffset = result[URL_VALUES.GROUP] && result[URL_VALUES.GROUP].nextOffset\r\n        }\r\n\r\n        return nextOffset\r\n    }, [result, tab])\r\n\r\n    const onChange = useCallback((value) => {\r\n        if (value.length > 2) {\r\n            const query = []\r\n            const data = {\r\n                clear: true,\r\n                params: {\r\n                    ...initialParams,\r\n                    search: value\r\n                }\r\n            }\r\n\r\n            if (tab) {\r\n                query.push(`${URL_KEYS.TAB}=${tab}`)\r\n            } else {\r\n                query.push(`${URL_KEYS.TAB}=${URL_VALUES.PEOPLE}`)\r\n            }\r\n\r\n            query.push(`${URL_KEYS.SEARCH}=${value}`)\r\n\r\n            push({\r\n                pathname,\r\n                search: query.join('&')\r\n            })\r\n            debounce(getList(data), 300)\r\n        } else {\r\n            push(pathname)\r\n        }\r\n        setSearchText(value)\r\n    }, [push, pathname, tab, getList])\r\n\r\n    const loadMore = useCallback(() => {\r\n        const nextOffset = getNextOffset()\r\n\r\n        if(nextOffset) {\r\n            const data = {\r\n                params: {\r\n                    ...initialParams,\r\n                    search,\r\n                    offset: nextOffset\r\n                }\r\n            }\r\n\r\n            getList(data, true)\r\n        }\r\n    }, [getNextOffset, search, getList])\r\n\r\n    useEffect(() => {\r\n        let timeout = null\r\n\r\n        if (!mounted && search && search.length > 2) {\r\n            timeout = setTimeout(() => {\r\n                const data = {\r\n                    clear: true,\r\n                    params: {\r\n                        ...initialParams,\r\n                        search\r\n                    }\r\n                }\r\n\r\n                getList(data)\r\n                setMounted(true)\r\n            }, 300)\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(timeout)\r\n            timeout = null\r\n        }\r\n    }, [search, mounted, getList])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!searchText) {\r\n            if (search) {\r\n                setSearchText(search)\r\n            } else {\r\n                setSearchText(null)\r\n            }\r\n        }\r\n    }, [search, searchText])\r\n\r\n    return {searchText, onChange, loadMore}\r\n}"]},"metadata":{},"sourceType":"module"}