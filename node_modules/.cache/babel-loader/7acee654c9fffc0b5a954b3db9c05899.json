{"ast":null,"code":"import _defineProperty from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useEffect,useState}from'react';import{useStore}from'effector-react';import{$appModel}from'../../Models/app';import useWebSocket from'react-use-websocket';import{onlineUserMount}from'../../Models/user-model';export function useCommonWs(){var _useStore=useStore($appModel),token=_useStore.$app.token;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),generalWSUrl=_useState2[0],setGeneralWSUrl=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),time=_useState4[0],setTime=_useState4[1];// const [closed, setClosed] = useState({})\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),tabVisibility=_useState6[0],setTabVisibility=_useState6[1];var _useWebSocket=useWebSocket(generalWSUrl,{onMessage:function onMessage(e){var data=JSON.parse(e.data);// console.log(data)\n// console.log(data)\nif(data.type==='online_status'){var msg=_defineProperty({},data.object.username,{time:new Date().getTime()});onlineUserMount(msg);}},onOpen:function onOpen(e){// console.log(e)\n// setClosed({})\n},onClose:function onClose(e){// console.log(e)\n// setClosed({general: true})\n},onError:function onError(e){console.log(e);}}),sendMessage=_useWebSocket.sendMessage;useEffect(function(){if(token){setGeneralWSUrl(\"wss://py.dwed.biz/ws/v1.0/user/general/?token=\".concat(token));}else{setGeneralWSUrl(null);}},[token]);var getTabVisibility=useCallback(function(){if(document.visibilityState==='visible'){setTabVisibility(document.visibilityState);}if(document.visibilityState==='hidden'){setTabVisibility(null);setTime(null);}},[]);useEffect(function(){getTabVisibility();window.addEventListener('visibilitychange',getTabVisibility);return function(){return window.removeEventListener('visibilityChange',getTabVisibility);};},[getTabVisibility]);useEffect(function(){var timeout=null;if(token){var data={im_online:'1'};if(!time){setTime(new Date().getTime());sendMessage(JSON.stringify(data));}else{if(tabVisibility&&tabVisibility==='visible'){timeout=setInterval(function(){var now=new Date();if(time&&now.getTime()-time>10000){setTime(now.getTime());// console.log(now)\nsendMessage(JSON.stringify(data));}},10000);}}}return function(){clearInterval(timeout);timeout=null;};},[token,time,sendMessage,tabVisibility]);}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/app/use-common-ws.js"],"names":["useCallback","useEffect","useState","useStore","$appModel","useWebSocket","onlineUserMount","useCommonWs","token","$app","generalWSUrl","setGeneralWSUrl","time","setTime","tabVisibility","setTabVisibility","onMessage","e","data","JSON","parse","type","msg","object","username","Date","getTime","onOpen","onClose","onError","console","log","sendMessage","getTabVisibility","document","visibilityState","window","addEventListener","removeEventListener","timeout","im_online","stringify","setInterval","now","clearInterval"],"mappings":"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","sourcesContent":["import {useCallback, useEffect, useState} from 'react'\nimport {useStore} from 'effector-react'\nimport {$appModel} from '../../Models/app'\nimport useWebSocket from 'react-use-websocket'\nimport {onlineUserMount} from '../../Models/user-model'\n\nexport function useCommonWs() {\n    const {$app: {token}} = useStore($appModel)\n    const [generalWSUrl, setGeneralWSUrl] = useState(null)\n    const [time, setTime] = useState(null)\n    // const [closed, setClosed] = useState({})\n    const [tabVisibility, setTabVisibility] = useState(null)\n\n    const {sendMessage} = useWebSocket(generalWSUrl, {\n        onMessage: (e) => {\n            const data = JSON.parse(e.data)\n            // console.log(data)\n            if (data.type === 'online_status') {\n                const msg = {\n                    [data.object.username]: {time: new Date().getTime()}\n                }\n                onlineUserMount(msg)\n            }\n        },\n        onOpen: (e) => {\n            // console.log(e)\n            // setClosed({})\n        },\n        onClose: (e) => {\n            // console.log(e)\n            // setClosed({general: true})\n        },\n        onError: (e) => {\n            console.log(e)\n        },\n    })\n\n    useEffect(() => {\n        if (token) {\n            setGeneralWSUrl(`wss://py.dwed.biz/ws/v1.0/user/general/?token=${token}`)\n        } else {\n            setGeneralWSUrl(null)\n        }\n    }, [token])\n\n    const getTabVisibility = useCallback(() => {\n        if (document.visibilityState === 'visible') {\n            setTabVisibility(document.visibilityState)\n        }\n        if (document.visibilityState === 'hidden') {\n            setTabVisibility(null)\n            setTime(null)\n        }\n    }, [])\n\n    useEffect(() => {\n        getTabVisibility()\n        window.addEventListener('visibilitychange', getTabVisibility)\n\n        return () => window.removeEventListener('visibilityChange', getTabVisibility)\n    }, [getTabVisibility])\n\n    useEffect(() => {\n        let timeout = null\n        if (token) {\n            const data = {\n                im_online: '1'\n            }\n            if (!time) {\n                setTime(new Date().getTime())\n                sendMessage(JSON.stringify(data))\n            } else {\n                if (tabVisibility && tabVisibility === 'visible') {\n                    timeout = setInterval(() => {\n                        const now = new Date()\n                        if (time && now.getTime() - time > 10000) {\n                            setTime(now.getTime())\n                            // console.log(now)\n                            sendMessage(JSON.stringify(data))\n                        }\n                    }, 10000)\n                }\n            }\n        }\n\n        return () => {\n            clearInterval(timeout)\n            timeout = null\n        }\n    }, [token, time, sendMessage, tabVisibility])\n}"]},"metadata":{},"sourceType":"module"}