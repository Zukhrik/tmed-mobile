{"ast":null,"code":"import useWebSocket from 'react-use-websocket';\nimport { streamChannelWSChatMount } from '../../Models/stream-model';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useStore } from 'effector-react';\nimport { $appModel } from '../../Models/app';\nexport function useStreamChatWs() {\n  const {\n    slug_name\n  } = useParams();\n  const {\n    $app: {\n      token\n    }\n  } = useStore($appModel);\n  const [streamMessageURL, setStreamMessageURL] = useState(null);\n  const streamChatAction = useWebSocket(streamMessageURL, {\n    onMessage: e => {\n      const data = JSON.parse(e.data);\n\n      if (data.action === 'add' && data.object) {\n        streamChannelWSChatMount(data.object);\n      }\n    }\n  });\n  useEffect(() => {\n    if (streamChatAction) {\n      if (token) {\n        setStreamMessageURL(`wss://py.dwed.biz/ws/v1.0/stream/${slug_name}/chat/?token=${token}`);\n      } else {\n        setStreamMessageURL(`wss://py.dwed.biz/ws/v1.0/stream/${slug_name}/chat/`);\n      }\n    }\n  }, [token, slug_name, streamChatAction]);\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/stream/use-stream-chat-ws.js"],"names":["useWebSocket","streamChannelWSChatMount","useEffect","useState","useParams","useStore","$appModel","useStreamChatWs","slug_name","$app","token","streamMessageURL","setStreamMessageURL","streamChatAction","onMessage","e","data","JSON","parse","action","object"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,SAAQC,wBAAR,QAAuC,2BAAvC;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAO,SAASC,eAAT,GAA2B;AAC9B,QAAM;AAACC,IAAAA;AAAD,MAAcJ,SAAS,EAA7B;AACA,QAAM;AAACK,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAAkBL,QAAQ,CAACC,SAAD,CAAhC;AACA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,IAAD,CAAxD;AAEA,QAAMU,gBAAgB,GAAGb,YAAY,CAACW,gBAAD,EAAmB;AACpDG,IAAAA,SAAS,EAAGC,CAAD,IAAO;AACd,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACC,IAAb,CAAb;;AACA,UAAIA,IAAI,CAACG,MAAL,KAAgB,KAAhB,IAAyBH,IAAI,CAACI,MAAlC,EAA0C;AACtCnB,QAAAA,wBAAwB,CAACe,IAAI,CAACI,MAAN,CAAxB;AACH;AACJ;AANmD,GAAnB,CAArC;AAUAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,gBAAJ,EAAsB;AAClB,UAAIH,KAAJ,EAAW;AACPE,QAAAA,mBAAmB,CAAE,oCAAmCJ,SAAU,gBAAeE,KAAM,EAApE,CAAnB;AACH,OAFD,MAEO;AACHE,QAAAA,mBAAmB,CAAE,oCAAmCJ,SAAU,QAA/C,CAAnB;AACH;AACJ;AACJ,GARQ,EAQN,CAACE,KAAD,EAAQF,SAAR,EAAmBK,gBAAnB,CARM,CAAT;AASH","sourcesContent":["import useWebSocket from 'react-use-websocket'\nimport {streamChannelWSChatMount} from '../../Models/stream-model'\nimport {useEffect, useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport {useStore} from 'effector-react'\nimport {$appModel} from '../../Models/app'\n\nexport function useStreamChatWs() {\n    const {slug_name} = useParams()\n    const {$app: {token}} = useStore($appModel)\n    const [streamMessageURL, setStreamMessageURL] = useState(null)\n    \n    const streamChatAction = useWebSocket(streamMessageURL, {\n        onMessage: (e) => {\n            const data = JSON.parse(e.data)\n            if (data.action === 'add' && data.object) {\n                streamChannelWSChatMount(data.object)\n            }\n        }\n    })\n    \n    \n    useEffect(() => {\n        if (streamChatAction) {\n            if (token) {\n                setStreamMessageURL(`wss://py.dwed.biz/ws/v1.0/stream/${slug_name}/chat/?token=${token}`)\n            } else {\n                setStreamMessageURL(`wss://py.dwed.biz/ws/v1.0/stream/${slug_name}/chat/`)\n            }\n        }\n    }, [token, slug_name, streamChatAction])\n}"]},"metadata":{},"sourceType":"module"}