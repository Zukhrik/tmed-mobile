{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/App.jsx\";\nimport React, { useEffect } from 'react';\nimport { Root } from './Root';\nimport { PrivateRoute } from './Routes';\nimport { useStore } from 'effector-react';\nimport { Settings } from './Views/Settings';\nimport { Records } from './Views/Records';\nimport { useTranslation } from 'react-i18next';\nimport { ScheduleIdPage, StreamPage } from './Views/StreamPage';\nimport { SignInPage, SignUpPage } from './Views/Auth';\nimport { BottomNavBar } from './Components/BottomNavBar';\nimport { accountInfoMount } from './Models/account-model';\nimport { $appModel, detectLocationMount } from './Models/app';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport { useAppDb, useChatWs, useCommonWs, useIsMobile } from './Hooks/app';\nexport const App = () => {\n  const {\n    pathname\n  } = useLocation();\n  const generateBottomNavbar = pathname.indexOf('sign-in') === -1 && pathname.indexOf('sign-up') === -1 && pathname.indexOf('records') === -1 && pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'chat' && pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'offerings' && pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'records' && pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'repost' && pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'tape' && pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'unregistered' && pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'checkout' && pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'stream';\n  useAppDb();\n  useChatWs();\n  useCommonWs();\n  useIsMobile();\n  const {\n    i18n\n  } = useTranslation();\n  const {\n    $app: {\n      token\n    },\n    $appLang: lang\n  } = useStore($appModel);\n  useEffect(() => {\n    if (token) {\n      accountInfoMount();\n    } else {\n      detectLocationMount();\n    }\n  }, [token]);\n  useEffect(() => {\n    if (lang) {\n      i18n.changeLanguage(lang);\n    }\n  }, [i18n, lang]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/sign-in\",\n    component: SignInPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/sign-up\",\n    component: SignUpPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/settings\",\n    component: Settings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/records\",\n    component: Records,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/stream/:slug_name/:schedule_id\",\n    component: ScheduleIdPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/stream/:slug_name\",\n    component: StreamPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    component: Root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), generateBottomNavbar && /*#__PURE__*/React.createElement(BottomNavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 38\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/App.jsx"],"names":["React","useEffect","Root","PrivateRoute","useStore","Settings","Records","useTranslation","ScheduleIdPage","StreamPage","SignInPage","SignUpPage","BottomNavBar","accountInfoMount","$appModel","detectLocationMount","Route","Switch","useLocation","useAppDb","useChatWs","useCommonWs","useIsMobile","App","pathname","generateBottomNavbar","indexOf","match","i18n","$app","token","$appLang","lang","changeLanguage"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {Root} from './Root'\nimport {PrivateRoute} from './Routes'\nimport {useStore} from 'effector-react'\nimport {Settings} from './Views/Settings'\nimport {Records} from './Views/Records'\nimport {useTranslation} from 'react-i18next'\nimport {ScheduleIdPage, StreamPage} from './Views/StreamPage'\nimport {SignInPage, SignUpPage} from './Views/Auth'\nimport {BottomNavBar} from './Components/BottomNavBar'\nimport {accountInfoMount} from './Models/account-model'\nimport {$appModel, detectLocationMount} from './Models/app'\nimport {Route, Switch, useLocation} from 'react-router-dom'\nimport {useAppDb, useChatWs, useCommonWs, useIsMobile} from './Hooks/app'\n\n\nexport const App = () => {\n    const {pathname} = useLocation()\n    \n    const generateBottomNavbar = (\n        pathname.indexOf('sign-in') === -1 &&\n        pathname.indexOf('sign-up') === -1 &&\n        pathname.indexOf('records') === -1 &&\n        pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'chat' &&\n        pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'offerings' &&\n        pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'records' &&\n        pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'repost' &&\n        pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'tape' &&\n        pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'unregistered' &&\n        pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'checkout' &&\n        pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'stream'\n    )\n    \n    useAppDb()\n    useChatWs()\n    useCommonWs()\n    useIsMobile()\n    \n    const {i18n} = useTranslation()\n    const {$app: {token}, $appLang: lang} = useStore($appModel)\n    \n    \n    useEffect(() => {\n        if (token) {\n            accountInfoMount()\n        } else {\n            detectLocationMount()\n        }\n    }, [token])\n    \n    \n    useEffect(() => {\n        if (lang) {\n            i18n.changeLanguage(lang)\n        }\n    }, [i18n, lang])\n    \n    \n    return (\n        <>\n            <Switch>\n                <Route exact path='/sign-in' component={SignInPage}/>\n                <Route exact path='/sign-up' component={SignUpPage}/>\n                <PrivateRoute path='/settings' component={Settings}/>\n                <Route path='/records' component={Records}/>\n                <Route path='/stream/:slug_name/:schedule_id' component={ScheduleIdPage}/>\n                <Route path='/stream/:slug_name' component={StreamPage}/>\n                <Route path='/' component={Root}/>\n            </Switch>\n            {generateBottomNavbar && <BottomNavBar/>}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}