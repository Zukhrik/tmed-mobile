{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { URL_KEYS } from '../../Constants';\nimport { useUrlParams } from './use-url-params';\nexport function useListQuery() {\n  const {\n    urlData\n  } = useUrlParams();\n  const spec = urlData[URL_KEYS.SPECIALIST_ID];\n  const search = urlData[URL_KEYS.SEARCH];\n  const group = urlData[URL_KEYS.OFFERING_GROUP_ID];\n  const [query, setQuery] = useState(null);\n  useEffect(() => {\n    let timeout = null;\n    timeout = setTimeout(() => {\n      const tmp = {};\n\n      if (group) {\n        tmp['group'] = group;\n      }\n\n      if (spec) {\n        tmp['responsible'] = spec;\n      }\n\n      if (search) {\n        tmp['search'] = search;\n      }\n\n      setQuery(tmp);\n    }, 300);\n    return () => {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n  }, [group, spec, search]);\n  return {\n    query,\n    setQuery\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Hooks/app/use-list-query.js"],"names":["useEffect","useState","URL_KEYS","useUrlParams","useListQuery","urlData","spec","SPECIALIST_ID","search","SEARCH","group","OFFERING_GROUP_ID","query","setQuery","timeout","setTimeout","tmp","clearTimeout"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAAYF,YAAY,EAA9B;AACA,QAAMG,IAAI,GAAGD,OAAO,CAACH,QAAQ,CAACK,aAAV,CAApB;AACA,QAAMC,MAAM,GAAGH,OAAO,CAACH,QAAQ,CAACO,MAAV,CAAtB;AACA,QAAMC,KAAK,GAAGL,OAAO,CAACH,QAAQ,CAACS,iBAAV,CAArB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,OAAO,GAAG,IAAd;AACAA,IAAAA,OAAO,GAAGC,UAAU,CAAC,MAAM;AACvB,YAAMC,GAAG,GAAG,EAAZ;;AACA,UAAIN,KAAJ,EAAW;AACPM,QAAAA,GAAG,CAAC,OAAD,CAAH,GAAeN,KAAf;AACH;;AACD,UAAIJ,IAAJ,EAAU;AACNU,QAAAA,GAAG,CAAC,aAAD,CAAH,GAAqBV,IAArB;AACH;;AACD,UAAIE,MAAJ,EAAY;AACRQ,QAAAA,GAAG,CAAC,QAAD,CAAH,GAAgBR,MAAhB;AACH;;AACDK,MAAAA,QAAQ,CAACG,GAAD,CAAR;AACH,KAZmB,EAYjB,GAZiB,CAApB;AAcA,WAAO,MAAM;AACTC,MAAAA,YAAY,CAACH,OAAD,CAAZ;AACAA,MAAAA,OAAO,GAAG,IAAV;AACH,KAHD;AAIH,GApBQ,EAoBN,CAACJ,KAAD,EAAQJ,IAAR,EAAcE,MAAd,CApBM,CAAT;AAsBA,SAAO;AAACI,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAP;AACH","sourcesContent":["import {useEffect, useState} from 'react'\nimport {URL_KEYS} from '../../Constants'\nimport {useUrlParams} from './use-url-params'\n\nexport function useListQuery() {\n    const {urlData} = useUrlParams()\n    const spec = urlData[URL_KEYS.SPECIALIST_ID]\n    const search = urlData[URL_KEYS.SEARCH]\n    const group = urlData[URL_KEYS.OFFERING_GROUP_ID]\n    const [query, setQuery] = useState(null)\n    \n    \n    useEffect(() => {\n        let timeout = null\n        timeout = setTimeout(() => {\n            const tmp = {}\n            if (group) {\n                tmp['group'] = group\n            }\n            if (spec) {\n                tmp['responsible'] = spec\n            }\n            if (search) {\n                tmp['search'] = search\n            }\n            setQuery(tmp)\n        }, 300)\n        \n        return () => {\n            clearTimeout(timeout)\n            timeout = null\n        }\n    }, [group, spec, search])\n    \n    return {query, setQuery}\n}"]},"metadata":{},"sourceType":"module"}