{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Chat/MessageSendFile/index.jsx\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { MessageUploadedFileWrapper } from '../style';\nimport { Col, Row } from 'antd';\nimport { v4 as uuidV4 } from 'uuid';\nimport moment from 'moment';\nimport { useStore } from 'effector-react';\nimport { useTranslation } from 'react-i18next';\nimport { $accountModel } from '../../../Models/account-model';\nimport { fileToBase64, resizeFile } from '../../../utils/crop-utils';\nimport { userMessageUploadProgress, userSentMessageMount } from '../../../Models/chat-model';\nimport { Button } from '../../../UIComponents/Button';\nimport { InputUI } from '../../../UIComponents/mu-inputs';\nexport const MessageSendFile = ({\n  formik,\n  onClose,\n  id\n}) => {\n  const [base64Url, setBase64Url] = useState(null);\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  const {\n    t\n  } = useTranslation();\n  const getBase64Url = useCallback(async () => {\n    const stringUrl = await fileToBase64(formik.values.file);\n    setBase64Url(stringUrl);\n  }, [formik.values.file]);\n  const file = formik.values.file;\n  useEffect(() => {\n    getBase64Url();\n  }, [getBase64Url]);\n\n  const handleClick = async () => {\n    if (formik.values.file) {\n      const file = await resizeFile(formik.values.file, false, 'file', 640, 640);\n      onClose();\n      const formData = new FormData();\n\n      if (formik.values.caption) {\n        formData.append('text', formik.values.caption);\n      }\n\n      formData.append('file', file);\n      const temporaryId = uuidV4();\n      const date = moment().format('YYYY-MM-DD HH:mm');\n      const payload = {\n        text: formik.values.caption,\n        id: temporaryId,\n        date,\n        sender: {\n          username: currentProfile.slug_name\n        },\n        file: base64Url\n      };\n      userSentMessageMount({\n        partner: id,\n        data: formData,\n        uuid: temporaryId,\n        payload,\n        onUploadProgress: evt => {\n          console.log(evt);\n          let percentCompleted = Math.round(evt.loaded * 100 / evt.total);\n          userMessageUploadProgress({\n            partner: id,\n            payload,\n            status: percentCompleted\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, file && /*#__PURE__*/React.createElement(MessageUploadedFileWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 16],\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, formik.values.file.type.indexOf('image') !== -1 && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: base64Url,\n    alt: file.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    name: \"caption\",\n    rows: 2,\n    label: 'caption',\n    inputType: \"textarea\",\n    value: formik.values.caption,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      paddingBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"l\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, t('send'))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Chat/MessageSendFile/index.jsx"],"names":["React","useCallback","useEffect","useState","MessageUploadedFileWrapper","Col","Row","v4","uuidV4","moment","useStore","useTranslation","$accountModel","fileToBase64","resizeFile","userMessageUploadProgress","userSentMessageMount","Button","InputUI","MessageSendFile","formik","onClose","id","base64Url","setBase64Url","$profiles","currentProfile","t","getBase64Url","stringUrl","values","file","handleClick","formData","FormData","caption","append","temporaryId","date","format","payload","text","sender","username","slug_name","partner","data","uuid","onUploadProgress","evt","console","log","percentCompleted","Math","round","loaded","total","status","marginBottom","type","indexOf","textAlign","name","handleChange","display","justifyContent","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react'\nimport {MessageUploadedFileWrapper} from '../style'\nimport {Col, Row} from 'antd'\nimport {v4 as uuidV4} from 'uuid'\nimport moment from 'moment'\nimport {useStore} from 'effector-react'\nimport {useTranslation} from 'react-i18next'\nimport {$accountModel} from '../../../Models/account-model'\nimport {fileToBase64, resizeFile} from '../../../utils/crop-utils'\nimport {userMessageUploadProgress, userSentMessageMount} from '../../../Models/chat-model'\nimport {Button} from '../../../UIComponents/Button'\nimport {InputUI} from '../../../UIComponents/mu-inputs'\n\n\nexport const MessageSendFile = ({formik, onClose, id}) => {\n    const [base64Url, setBase64Url] = useState(null)\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    const {t} = useTranslation()\n\n    const getBase64Url = useCallback(async () => {\n        const stringUrl = await fileToBase64(formik.values.file)\n        setBase64Url(stringUrl)\n    }, [formik.values.file])\n    const file = formik.values.file\n\n    useEffect(() => {\n        getBase64Url()\n    }, [getBase64Url])\n\n    const handleClick = async () => {\n        if (formik.values.file) {\n            const file = await resizeFile(formik.values.file, false, 'file', 640, 640)\n            onClose()\n            const formData = new FormData()\n            if (formik.values.caption) {\n                formData.append('text', formik.values.caption)\n            }\n            formData.append('file', file)\n            const temporaryId = uuidV4()\n            const date = moment().format('YYYY-MM-DD HH:mm')\n            const payload = {\n                text: formik.values.caption,\n                id: temporaryId,\n                date,\n                sender: {username: currentProfile.slug_name},\n                file: base64Url\n            }\n            userSentMessageMount({\n                partner: id,\n                data: formData,\n                uuid: temporaryId,\n                payload,\n                onUploadProgress: (evt) => {\n                    console.log(evt)\n                    let percentCompleted = Math.round((evt.loaded * 100) / evt.total)\n                    userMessageUploadProgress({partner: id, payload, status:percentCompleted})\n                }\n            })\n        }\n    }\n\n    return (\n        <>\n            {\n                file && (\n                    <MessageUploadedFileWrapper>\n                        <Row gutter={[0, 16]} style={{marginBottom: 0}}>\n                            <Col span={24}>\n                                {\n                                    formik.values.file.type.indexOf('image') !== -1 && (\n                                        <div style={{textAlign: 'center'}}>\n                                            <img src={base64Url} alt={file.name}/>\n                                        </div>\n                                    )\n                                }\n                            </Col>\n                            <Col span={24}>\n                                <InputUI\n                                    name='caption'\n                                    rows={2}\n                                    label={'caption'}\n                                    inputType='textarea'\n                                    value={formik.values.caption}\n                                    onChange={formik.handleChange}\n                                />\n                            </Col>\n                            <Col span={24} style={{display: 'flex', justifyContent: 'center', paddingBottom: 0}}>\n                                <Button variant='primary' size='l' onClick={handleClick}>\n                                    {t('send')}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </MessageUploadedFileWrapper>\n                )\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}