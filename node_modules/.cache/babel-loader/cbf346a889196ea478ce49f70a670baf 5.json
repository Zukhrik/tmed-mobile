{"ast":null,"code":"import React from'react';import{Col,Row}from'antd';import{useStore}from'effector-react';import{$orderModel}from'../../../Models/order-model';import{RecordCard,RecordCardSkeleton}from'../molecules';import moment from'moment';import{useOrderList}from'../../../Hooks/order';import{useHistory}from'react-router-dom';import{saveURLMount}from'../../../Models/app';import InfiniteScroll from'react-infinite-scroll-component';import{generateSkeleton}from'../../../utils/skeleton-utils';import{$accountModel}from'../../../Models/account-model';var skeleton=generateSkeleton(5);export var MyOrders=function MyOrders(){var _useOrderList=useOrderList(),loadMore=_useOrderList.loadMore;var _useStore=useStore($accountModel),currentProfile=_useStore.$profiles.currentProfile;var _useHistory=useHistory(),push=_useHistory.push,pathname=_useHistory.location.pathname;var _useStore2=useStore($orderModel),_useStore2$$orderList=_useStore2.$orderList,data=_useStore2$$orderList.data,loading=_useStore2$$orderList.loading,result=_useStore2$$orderList.result,forceLoading=_useStore2$$orderList.forceLoading;var handlePush=function handlePush(item){push(\"/records/detail/\".concat(item.id));saveURLMount(pathname);};var handleRecordsPush=function handleRecordsPush(item){push(\"/@\".concat(currentProfile&&currentProfile.slug_name,\"/records/\").concat(item.id));saveURLMount(pathname);};return/*#__PURE__*/React.createElement(React.Fragment,null,forceLoading===2&&data?/*#__PURE__*/React.createElement(InfiniteScroll,{next:loadMore,hasMore:!loading&&!!result.next,style:{overflow:'hidden'},dataLength:result.nextOffset||10,loader:/*#__PURE__*/React.createElement(React.Fragment,null,\"...loading\")},/*#__PURE__*/React.createElement(Row,{gutter:[0,12],style:{paddingBottom:65,paddingTop:12},className:\"container\"},data.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{span:24,key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(RecordCard,{meet:moment(item.meet_date).format('LT'),status:item.status,date:moment(item.meet_date).format('DD/MM/YY'),name:item.responsible.user.full_name,category:item.responsible.org.name,src:item.responsible.user.avatar,link:function link(){return handlePush(item);},recordsLink:function recordsLink(){return handleRecordsPush(item);}}));}))):/*#__PURE__*/React.createElement(Row,{gutter:[0,12],style:{paddingBottom:65,paddingTop:12},className:\"container\"},skeleton.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{span:24,key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(RecordCardSkeleton,null));})));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/organisms/my-orders.jsx"],"names":["React","Col","Row","useStore","$orderModel","RecordCard","RecordCardSkeleton","moment","useOrderList","useHistory","saveURLMount","InfiniteScroll","generateSkeleton","$accountModel","skeleton","MyOrders","loadMore","currentProfile","$profiles","push","pathname","location","$orderList","data","loading","result","forceLoading","handlePush","item","id","handleRecordsPush","slug_name","next","overflow","nextOffset","paddingBottom","paddingTop","map","idx","meet_date","format","status","responsible","user","full_name","org","name","avatar"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {$orderModel} from '../../../Models/order-model'\nimport {RecordCard, RecordCardSkeleton} from '../molecules'\nimport moment from 'moment'\nimport {useOrderList} from '../../../Hooks/order'\nimport {useHistory} from 'react-router-dom'\nimport {saveURLMount} from '../../../Models/app'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {$accountModel} from '../../../Models/account-model'\n\n\nconst skeleton = generateSkeleton(5)\nexport const MyOrders = () => {\n    const {loadMore} = useOrderList()\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    const {push, location: {pathname}} = useHistory()\n    const {$orderList: {data, loading, result, forceLoading}} = useStore($orderModel)\n    \n    const handlePush = (item) => {\n        push(`/records/detail/${item.id}`)\n        saveURLMount(pathname)\n    }\n    \n    const handleRecordsPush = (item) => {\n        push(`/@${currentProfile && currentProfile.slug_name}/records/${item.id}`)\n        saveURLMount(pathname)\n    }\n    \n    return (\n        <>\n            {\n                forceLoading === 2 && data\n                    ? (\n                        <InfiniteScroll\n                            next={loadMore}\n                            hasMore={!loading && !!result.next}\n                            style={{overflow: 'hidden'}}\n                            dataLength={result.nextOffset || 10}\n                            loader={<>...loading</>}\n                        >\n                            <Row gutter={[0, 12]} style={{paddingBottom: 65, paddingTop: 12}} className='container'>\n                                {\n                                    data.map((item, idx) => (\n                                        <Col span={24} key={`${idx + 1}`}>\n                                            <RecordCard\n                                                meet={moment(item.meet_date).format('LT')}\n                                                status={item.status}\n                                                date={moment(item.meet_date).format('DD/MM/YY')}\n                                                name={item.responsible.user.full_name}\n                                                category={item.responsible.org.name}\n                                                src={item.responsible.user.avatar}\n                                                link={() => handlePush(item)}\n                                                recordsLink={() => handleRecordsPush(item)}\n                                            />\n                                        </Col>\n                                    ))\n                                }\n                            \n                            </Row>\n                        </InfiniteScroll>\n                    ) : (\n                        <Row gutter={[0, 12]} style={{paddingBottom: 65, paddingTop: 12}} className='container'>\n                            {\n                                skeleton.map((item, idx) => (\n                                    <Col span={24} key={`${idx + 1}`}>\n                                        <RecordCardSkeleton/>\n                                    </Col>\n                                ))\n                            }\n                        </Row>\n                    )\n            }\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}