{"ast":null,"code":"import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{v4 as uuidV4}from'uuid';import{useState}from'react';import{useStore}from'effector-react';import{useParams}from'react-router-dom';import{$accountModel}from'../../Models/account-model';import{$appModel,onReplyCommentDataMount}from'../../Models/app';import{createCommentMount,replyCommentMount}from'../../Models/post-model';export function useCreatePostComment(){var _useParams=useParams(),post_id=_useParams.post_id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),comment=_useState2[0],setComment=_useState2[1];var _useStore=useStore($appModel),onReplyCommentData=_useStore.$app.onReplyCommentData;var _useStore2=useStore($accountModel),currentProfile=_useStore2.$profiles.currentProfile;var handleSubmit=function handleSubmit(e){e.preventDefault();var uuid=uuidV4();if(comment.trim().length>0&&currentProfile){var temp_data={id:uuid,text:comment,date:new Date(),likes_count:0,is_liked:false,sent:true,reply_count:onReplyCommentData?onReplyCommentData.reply_count+1:0,reply_to:onReplyCommentData?onReplyCommentData.id:null,author:{slug_name:currentProfile.slug_name,avatar:currentProfile.avatar,name:currentProfile.name}};var params={post_id:post_id,data:{text:comment},temp_data:temp_data};var reply_params={temp_data:temp_data,post_id:post_id,comment_id:onReplyCommentData.id,data:{text:comment,reply_to:onReplyCommentData.id}};if(onReplyCommentData){replyCommentMount(reply_params);onReplyCommentDataMount('');}else{createCommentMount(params);}}setComment('');};var handleCloseReply=function handleCloseReply(){onReplyCommentDataMount('');};return{handleSubmit:handleSubmit,comment:comment,setComment:setComment,handleCloseReply:handleCloseReply};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/post/use-create-post-comment.js"],"names":["v4","uuidV4","useState","useStore","useParams","$accountModel","$appModel","onReplyCommentDataMount","createCommentMount","replyCommentMount","useCreatePostComment","post_id","comment","setComment","onReplyCommentData","$app","currentProfile","$profiles","handleSubmit","e","preventDefault","uuid","trim","length","temp_data","id","text","date","Date","likes_count","is_liked","sent","reply_count","reply_to","author","slug_name","avatar","name","params","data","reply_params","comment_id","handleCloseReply"],"mappings":"qKAAA,OAAQA,EAAE,GAAIC,CAAAA,MAAd,KAA2B,MAA3B,CACA,OAAQC,QAAR,KAAuB,OAAvB,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CACA,OAAQC,SAAR,KAAwB,kBAAxB,CACA,OAAQC,aAAR,KAA4B,4BAA5B,CACA,OAAQC,SAAR,CAAmBC,uBAAnB,KAAiD,kBAAjD,CACA,OAAQC,kBAAR,CAA4BC,iBAA5B,KAAoD,yBAApD,CAGA,MAAO,SAASC,CAAAA,oBAAT,EAAgC,CACnC,eAAkBN,SAAS,EAA3B,CAAOO,OAAP,YAAOA,OAAP,CACA,cAA8BT,QAAQ,CAAC,EAAD,CAAtC,wCAAOU,OAAP,eAAgBC,UAAhB,eACA,cAAqCV,QAAQ,CAACG,SAAD,CAA7C,CAAcQ,kBAAd,WAAOC,IAAP,CAAcD,kBAAd,CACA,eAAsCX,QAAQ,CAACE,aAAD,CAA9C,CAAmBW,cAAnB,YAAOC,SAAP,CAAmBD,cAAnB,CAEA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxBA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,IAAI,CAAGpB,MAAM,EAAnB,CAEA,GAAIW,OAAO,CAACU,IAAR,GAAeC,MAAf,CAAwB,CAAxB,EAA6BP,cAAjC,CAAiD,CAC7C,GAAMQ,CAAAA,SAAS,CAAG,CACdC,EAAE,CAAEJ,IADU,CAEdK,IAAI,CAAEd,OAFQ,CAGde,IAAI,CAAE,GAAIC,CAAAA,IAAJ,EAHQ,CAIdC,WAAW,CAAE,CAJC,CAKdC,QAAQ,CAAE,KALI,CAMdC,IAAI,CAAE,IANQ,CAOdC,WAAW,CAAElB,kBAAkB,CAAGA,kBAAkB,CAACkB,WAAnB,CAAiC,CAApC,CAAwC,CAPzD,CAQdC,QAAQ,CAAEnB,kBAAkB,CAAGA,kBAAkB,CAACW,EAAtB,CAA2B,IARzC,CASdS,MAAM,CAAE,CACJC,SAAS,CAAEnB,cAAc,CAACmB,SADtB,CAEJC,MAAM,CAAEpB,cAAc,CAACoB,MAFnB,CAGJC,IAAI,CAAErB,cAAc,CAACqB,IAHjB,CATM,CAAlB,CAgBA,GAAMC,CAAAA,MAAM,CAAG,CACX3B,OAAO,CAAEA,OADE,CAEX4B,IAAI,CAAE,CACFb,IAAI,CAAEd,OADJ,CAFK,CAKXY,SAAS,CAATA,SALW,CAAf,CAQA,GAAMgB,CAAAA,YAAY,CAAG,CACjBhB,SAAS,CAATA,SADiB,CAEjBb,OAAO,CAAEA,OAFQ,CAGjB8B,UAAU,CAAE3B,kBAAkB,CAACW,EAHd,CAIjBc,IAAI,CAAE,CACFb,IAAI,CAAEd,OADJ,CAEFqB,QAAQ,CAAEnB,kBAAkB,CAACW,EAF3B,CAJW,CAArB,CAUA,GAAIX,kBAAJ,CAAwB,CACpBL,iBAAiB,CAAC+B,YAAD,CAAjB,CACAjC,uBAAuB,CAAC,EAAD,CAAvB,CACH,CAHD,IAGO,CACHC,kBAAkB,CAAC8B,MAAD,CAAlB,CACH,CACJ,CAEDzB,UAAU,CAAC,EAAD,CAAV,CACH,CAhDD,CAkDA,GAAM6B,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BnC,uBAAuB,CAAC,EAAD,CAAvB,CACH,CAFD,CAIA,MAAO,CAACW,YAAY,CAAZA,YAAD,CAAeN,OAAO,CAAPA,OAAf,CAAwBC,UAAU,CAAVA,UAAxB,CAAoC6B,gBAAgB,CAAhBA,gBAApC,CAAP,CACH","sourcesContent":["import {v4 as uuidV4} from 'uuid'\nimport {useState} from 'react'\nimport {useStore} from 'effector-react'\nimport {useParams} from 'react-router-dom'\nimport {$accountModel} from '../../Models/account-model'\nimport {$appModel, onReplyCommentDataMount} from '../../Models/app'\nimport {createCommentMount, replyCommentMount} from '../../Models/post-model'\n\n\nexport function useCreatePostComment() {\n    const {post_id} = useParams()\n    const [comment, setComment] = useState('')\n    const {$app: {onReplyCommentData}} = useStore($appModel)\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const uuid = uuidV4()\n        \n        if (comment.trim().length > 0 && currentProfile) {\n            const temp_data = {\n                id: uuid,\n                text: comment,\n                date: new Date(),\n                likes_count: 0,\n                is_liked: false,\n                sent: true,\n                reply_count: onReplyCommentData ? onReplyCommentData.reply_count + 1 : 0,\n                reply_to: onReplyCommentData ? onReplyCommentData.id : null,\n                author: {\n                    slug_name: currentProfile.slug_name,\n                    avatar: currentProfile.avatar,\n                    name: currentProfile.name\n                }\n            }\n            \n            const params = {\n                post_id: post_id,\n                data: {\n                    text: comment\n                },\n                temp_data\n            }\n            \n            const reply_params = {\n                temp_data,\n                post_id: post_id,\n                comment_id: onReplyCommentData.id,\n                data: {\n                    text: comment,\n                    reply_to: onReplyCommentData.id\n                }\n            }\n            \n            if (onReplyCommentData) {\n                replyCommentMount(reply_params)\n                onReplyCommentDataMount('')\n            } else {\n                createCommentMount(params)\n            }\n        }\n        \n        setComment('')\n    }\n    \n    const handleCloseReply = () => {\n        onReplyCommentDataMount('')\n    }\n    \n    return {handleSubmit, comment, setComment, handleCloseReply}\n}"]},"metadata":{},"sourceType":"module"}