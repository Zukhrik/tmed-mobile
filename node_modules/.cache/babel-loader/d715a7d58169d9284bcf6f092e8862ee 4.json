{"ast":null,"code":"import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{useParams}from'react-router-dom';import{orgOfferingsListMount}from'../../Models/offerings-model';export function useOrgOfferSearch(){var _useParams=useParams(),organization=_useParams.organization;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchText=_useState2[0],setSearchText=_useState2[1];var handleSubmit=function handleSubmit(e){e.preventDefault();if(searchText.trim().length>0){var params={organization:organization,params:{search:searchText,clear:true}};orgOfferingsListMount(params);}};return{handleSubmit:handleSubmit,setSearchText:setSearchText,searchText:searchText};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/org/use-org-offer-search.js"],"names":["useState","useParams","orgOfferingsListMount","useOrgOfferSearch","organization","searchText","setSearchText","handleSubmit","e","preventDefault","trim","length","params","search","clear"],"mappings":"qKAAA,OAAQA,QAAR,KAAuB,OAAvB,CACA,OAAQC,SAAR,KAAwB,kBAAxB,CACA,OAAQC,qBAAR,KAAoC,8BAApC,CAGA,MAAO,SAASC,CAAAA,iBAAT,EAA6B,CAChC,eAAuBF,SAAS,EAAhC,CAAOG,YAAP,YAAOA,YAAP,CACA,cAAoCJ,QAAQ,CAAC,EAAD,CAA5C,wCAAOK,UAAP,eAAmBC,aAAnB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxBA,CAAC,CAACC,cAAF,GACA,GAAIJ,UAAU,CAACK,IAAX,GAAkBC,MAAlB,CAA2B,CAA/B,CAAkC,CAC9B,GAAIC,CAAAA,MAAM,CAAG,CACTR,YAAY,CAAEA,YADL,CAETQ,MAAM,CAAE,CACJC,MAAM,CAAER,UADJ,CAEJS,KAAK,CAAE,IAFH,CAFC,CAAb,CAOAZ,qBAAqB,CAACU,MAAD,CAArB,CACH,CACJ,CAZD,CAcA,MAAO,CAACL,YAAY,CAAZA,YAAD,CAAeD,aAAa,CAAbA,aAAf,CAA8BD,UAAU,CAAVA,UAA9B,CAAP,CACH","sourcesContent":["import {useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport {orgOfferingsListMount} from '../../Models/offerings-model'\n\n\nexport function useOrgOfferSearch() {\n    const {organization} = useParams()\n    const [searchText, setSearchText] = useState('')\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (searchText.trim().length > 0) {\n            let params = {\n                organization: organization,\n                params: {\n                    search: searchText,\n                    clear: true\n                },\n            }\n            orgOfferingsListMount(params)\n        }\n    }\n    \n    return {handleSubmit, setSearchText, searchText}\n}"]},"metadata":{},"sourceType":"module"}