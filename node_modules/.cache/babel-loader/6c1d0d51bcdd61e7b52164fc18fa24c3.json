{"ast":null,"code":"import { useCallback, useEffect } from 'react';\nimport { $streamModel, streamChannelChatMount } from '../../Models/stream-model';\nimport { useParams } from 'react-router-dom';\nimport { useStore } from 'effector-react';\nconst initialParams = {\n  limit: 10,\n  offset: 0\n};\nexport function useStreamChannelChat() {\n  const {\n    slug_name\n  } = useParams();\n  const {\n    $streamChannelChat: {\n      result\n    }\n  } = useStore($streamModel);\n  const loadMore = useCallback(() => {\n    if (result === null || result === void 0 ? void 0 : result.nextOffset) {\n      console.log(result);\n      const params = {\n        slug_name: slug_name,\n        params: { ...initialParams,\n          offset: result === null || result === void 0 ? void 0 : result.nextOffset\n        }\n      };\n      streamChannelChatMount(params);\n    }\n  }, [slug_name, result]);\n  useEffect(() => {\n    const params = {\n      clear: true,\n      slug_name: slug_name,\n      params: initialParams\n    };\n    streamChannelChatMount(params);\n  }, [slug_name]);\n  return {\n    loadMore\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/stream/use-stream-channel-chat.js"],"names":["useCallback","useEffect","$streamModel","streamChannelChatMount","useParams","useStore","initialParams","limit","offset","useStreamChannelChat","slug_name","$streamChannelChat","result","loadMore","nextOffset","console","log","params","clear"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,QAAqC,OAArC;AACA,SAAQC,YAAR,EAAsBC,sBAAtB,QAAmD,2BAAnD;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,MAAM,EAAE;AAFU,CAAtB;AAKA,OAAO,SAASC,oBAAT,GAAgC;AACnC,QAAM;AAACC,IAAAA;AAAD,MAAcN,SAAS,EAA7B;AACA,QAAM;AAACO,IAAAA,kBAAkB,EAAE;AAACC,MAAAA;AAAD;AAArB,MAAiCP,QAAQ,CAACH,YAAD,CAA/C;AAEA,QAAMW,QAAQ,GAAGb,WAAW,CAAC,MAAM;AAC/B,QAAIY,MAAJ,aAAIA,MAAJ,uBAAIA,MAAM,CAAEE,UAAZ,EAAwB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,YAAMK,MAAM,GAAG;AACXP,QAAAA,SAAS,EAAEA,SADA;AAEXO,QAAAA,MAAM,EAAE,EACJ,GAAGX,aADC;AAEJE,UAAAA,MAAM,EAAEI,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEE;AAFZ;AAFG,OAAf;AAQAX,MAAAA,sBAAsB,CAACc,MAAD,CAAtB;AACH;AACJ,GAb2B,EAazB,CAACP,SAAD,EAAYE,MAAZ,CAbyB,CAA5B;AAeAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,MAAM,GAAG;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXR,MAAAA,SAAS,EAAEA,SAFA;AAGXO,MAAAA,MAAM,EAAEX;AAHG,KAAf;AAMAH,IAAAA,sBAAsB,CAACc,MAAD,CAAtB;AACH,GARQ,EAQN,CAACP,SAAD,CARM,CAAT;AAUA,SAAO;AAACG,IAAAA;AAAD,GAAP;AACH","sourcesContent":["import {useCallback, useEffect} from 'react'\nimport {$streamModel, streamChannelChatMount} from '../../Models/stream-model'\nimport {useParams} from 'react-router-dom'\nimport {useStore} from 'effector-react'\n\nconst initialParams = {\n    limit: 10,\n    offset: 0\n}\n\nexport function useStreamChannelChat() {\n    const {slug_name} = useParams()\n    const {$streamChannelChat: {result}} = useStore($streamModel)\n    \n    const loadMore = useCallback(() => {\n        if (result?.nextOffset) {\n            console.log(result)\n            const params = {\n                slug_name: slug_name,\n                params: {\n                    ...initialParams,\n                    offset: result?.nextOffset\n                }\n            }\n            \n            streamChannelChatMount(params)\n        }\n    }, [slug_name, result])\n    \n    useEffect(() => {\n        const params = {\n            clear: true,\n            slug_name: slug_name,\n            params: initialParams\n        }\n        \n        streamChannelChatMount(params)\n    }, [slug_name])\n    \n    return {loadMore}\n}"]},"metadata":{},"sourceType":"module"}