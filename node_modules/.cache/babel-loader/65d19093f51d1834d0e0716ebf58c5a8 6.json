{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useUrlParams}from'../app';import{useStore}from'effector-react';import{$appModel}from'../../Models/app';import{useCallback,useEffect}from'react';import{URL_KEYS,URL_VALUES}from'../../Constants';import{$orgModel,allOrgMount}from'../../Models/org-model';import{$userModel,allUserMount}from'../../Models/user-model';import{$streamModel,allStreamMountList}from'../../Models/stream-model';import{$offeringsModel,offeringsListMount}from'../../Models/offerings-model';var initialParams={limit:20,offset:0};export function useHomeList(){var _useUrlParams=useUrlParams(),urlData=_useUrlParams.urlData;var searchType=urlData[URL_KEYS.SEARCH_TYPE];var _category=urlData[URL_KEYS.CATEGORY];var _useStore=useStore($appModel),lang=_useStore.$appLang;var _useStore2=useStore($orgModel),allOrgResult=_useStore2.$allOrgList.result;var _useStore3=useStore($userModel),allUserResult=_useStore3.$allUserList.result;var _useStore4=useStore($streamModel),allStreamResult=_useStore4.$allStreamList.result;var _useStore5=useStore($offeringsModel),offeringsResult=_useStore5.$offeringsList.result;var getList=useCallback(function(params){if(!searchType){if(_category){params.params.category=_category;}allOrgMount(params);}if(searchType&&searchType===URL_VALUES.OFFERINGS){if(_category){params.params.offer_cat=_category;}offeringsListMount(params);}if(searchType&&searchType===URL_VALUES.PEOPLE){allUserMount(params);}if(searchType&&searchType===URL_VALUES.STREAM){allStreamMountList(params);}},[searchType,_category]);var loadMore=useCallback(function(){var params=_objectSpread({},initialParams);if(searchType===URL_VALUES.PEOPLE){if(allUserResult.nextOffset){params['offset']=allUserResult.nextOffset;}}if(!searchType){if(allOrgResult.nextOffset){params['offset']=allOrgResult.nextOffset;}}if(searchType===URL_VALUES.STREAM){if(allStreamResult.nextOffset){params['offset']=allStreamResult.nextOffset;}}if(searchType===URL_VALUES.OFFERINGS){if(offeringsResult.nextOffset){params['offset']=offeringsResult.nextOffset;}}getList({params:params});},[getList,allUserResult,searchType,allStreamResult,allOrgResult,offeringsResult]);useEffect(function(){var timeout=null;timeout=setTimeout(function(){var data={clear:true,params:_objectSpread({},initialParams)};if(lang){getList(data);}},300);return function(){clearTimeout(timeout);timeout=null;};},[getList,searchType,lang]);return{loadMore:loadMore};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/home/use-home-list.js"],"names":["useUrlParams","useStore","$appModel","useCallback","useEffect","URL_KEYS","URL_VALUES","$orgModel","allOrgMount","$userModel","allUserMount","$streamModel","allStreamMountList","$offeringsModel","offeringsListMount","initialParams","limit","offset","useHomeList","urlData","searchType","SEARCH_TYPE","_category","CATEGORY","lang","$appLang","allOrgResult","$allOrgList","result","allUserResult","$allUserList","allStreamResult","$allStreamList","offeringsResult","$offeringsList","getList","params","category","OFFERINGS","offer_cat","PEOPLE","STREAM","loadMore","nextOffset","timeout","setTimeout","data","clear","clearTimeout"],"mappings":"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","sourcesContent":["import {useUrlParams} from '../app'\r\nimport {useStore} from 'effector-react'\r\nimport {$appModel} from '../../Models/app'\r\nimport {useCallback, useEffect} from 'react'\r\nimport {URL_KEYS, URL_VALUES} from '../../Constants'\r\nimport {$orgModel, allOrgMount} from '../../Models/org-model'\r\nimport {$userModel, allUserMount} from '../../Models/user-model'\r\nimport {$streamModel, allStreamMountList} from '../../Models/stream-model'\r\nimport {$offeringsModel, offeringsListMount} from '../../Models/offerings-model'\r\n\r\nconst initialParams = {\r\n    limit: 20,\r\n    offset: 0\r\n}\r\n\r\nexport function useHomeList() {\r\n    const {urlData} = useUrlParams()\r\n    const searchType = urlData[URL_KEYS.SEARCH_TYPE]\r\n    const _category = urlData[URL_KEYS.CATEGORY]\r\n    const {$appLang: lang} = useStore($appModel)\r\n    const {$allOrgList: {result: allOrgResult}} = useStore($orgModel)\r\n    const {$allUserList: {result: allUserResult}} = useStore($userModel)\r\n    const {$allStreamList: {result: allStreamResult}} = useStore($streamModel)\r\n    const {$offeringsList: {result: offeringsResult}} = useStore($offeringsModel)\r\n    \r\n    \r\n    const getList = useCallback((params) => {\r\n        if (!searchType) {\r\n            if (_category) {\r\n                params.params.category = _category\r\n            }\r\n            allOrgMount(params)\r\n        }\r\n        \r\n        if (searchType && searchType === URL_VALUES.OFFERINGS) {\r\n            if (_category) {\r\n                params.params.offer_cat = _category\r\n            }\r\n            offeringsListMount(params)\r\n        }\r\n        \r\n        if (searchType && searchType === URL_VALUES.PEOPLE) {\r\n            allUserMount(params)\r\n        }\r\n        \r\n        if (searchType && searchType === URL_VALUES.STREAM) {\r\n            allStreamMountList(params)\r\n        }\r\n    }, [searchType, _category])\r\n    \r\n    const loadMore = useCallback(() => {\r\n        const params = {...initialParams}\r\n        \r\n        if (searchType === URL_VALUES.PEOPLE) {\r\n            if (allUserResult.nextOffset) {\r\n                params['offset'] = allUserResult.nextOffset\r\n            }\r\n        }\r\n        \r\n        if (!searchType) {\r\n            if (allOrgResult.nextOffset) {\r\n                params['offset'] = allOrgResult.nextOffset\r\n            }\r\n        }\r\n        \r\n        if (searchType === URL_VALUES.STREAM) {\r\n            if (allStreamResult.nextOffset) {\r\n                params['offset'] = allStreamResult.nextOffset\r\n            }\r\n        }\r\n        \r\n        if (searchType === URL_VALUES.OFFERINGS) {\r\n            if (offeringsResult.nextOffset) {\r\n                params['offset'] = offeringsResult.nextOffset\r\n            }\r\n        }\r\n        \r\n        getList({params})\r\n    }, [getList, allUserResult, searchType, allStreamResult, allOrgResult, offeringsResult])\r\n    \r\n    \r\n    useEffect(() => {\r\n        let timeout = null\r\n        \r\n        timeout = setTimeout(() => {\r\n            const data = {\r\n                clear: true,\r\n                params: {\r\n                    ...initialParams\r\n                }\r\n            }\r\n            if (lang) {\r\n                getList(data)\r\n            }\r\n            \r\n        }, 300)\r\n        \r\n        return () => {\r\n            clearTimeout(timeout)\r\n            timeout = null\r\n        }\r\n    }, [getList, searchType, lang])\r\n    \r\n    return {\r\n        loadMore\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}