{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as Yup from'yup';import{useFormik}from'formik';import{useStore}from'effector-react';import{useEffect,useState}from'react';import account from'../../Service/account';import{useTranslation}from'react-i18next';import{$accountModel,accountAvatarsMount}from'../../Models/account-model';var defaultValue={name:'',avatar:undefined,lastname:'',surname:'',business_ava:undefined,user_lang:'',category:null,region:null,currency:'',birthday:'',gender:'',phone:'',email:''};export function useProfileInfo(){var _useState=useState(defaultValue),_useState2=_slicedToArray(_useState,2),initialValues=_useState2[0],setInitialValues=_useState2[1];var _useStore=useStore($accountModel),$accountInfo=_useStore.$accountInfo,$accountAvatars=_useStore.$accountAvatars;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),mounted=_useState4[0],setMounted=_useState4[1];var validationSchema=Yup.object().shape({});var _useTranslation=useTranslation(),i18n=_useTranslation.i18n;var formik=useFormik({validationSchema:validationSchema,initialValues:initialValues,enableReinitialize:true,onSubmit:function onSubmit(values,_ref){var setSubmitting=_ref.setSubmitting;setSubmitting(true);var category=values.category,region=values.region,user_lang=values.user_lang,gender=values.gender,avatar=values.avatar;var changeLanguage=function changeLanguage(language){i18n.changeLanguage(language).then();};var data={main_cat_id:category.id,region_id:region.id,lang:user_lang,gender:gender,avatar:avatar};if(values.user_lang==='uz'){changeLanguage('uz');}else if(values.user_lang==='ru'){changeLanguage('ru');}account.updateAccount({data:data}).then(function(res){if(res){// console.log(res.data)\n}}).catch(function(error){var errorData=error.response.data.errors||[];var touched={};var data={};if(errorData){for(var i=0;i<errorData.length;i++){touched[errorData[i].field]=true;data[errorData[i].field]=errorData[i].message.replace(/[[\\]']+/g,'');}}}).finally();}});var getData=function getData(value){return value||'';};useEffect(function(){var accountData=$accountInfo===null||$accountInfo===void 0?void 0:$accountInfo.data;var avatarsData=$accountAvatars===null||$accountAvatars===void 0?void 0:$accountAvatars.data;if(!!accountData&&!!avatarsData&&!mounted){var _accountData$currency;var business_ava=avatarsData.length>0&&avatarsData.find(function(item){return item.business_ava;});setInitialValues(_objectSpread(_objectSpread({},defaultValue),{},{region:getData(accountData.region),category:getData(accountData.main_cat),business_ava:business_ava?{stringUrl:getData(business_ava.image),file:null}:false,currency:getData(accountData===null||accountData===void 0?void 0:(_accountData$currency=accountData.currency)===null||_accountData$currency===void 0?void 0:_accountData$currency.code),user_lang:getData(accountData.user_lang),birthday:getData(accountData.birthday),phone:getData(accountData.phone),gender:getData(accountData.gender),email:getData(accountData.email),name:getData(accountData.name),lastname:getData(accountData.lastname),surname:getData(accountData.surname),avatar:getData(accountData.avatar)}));setMounted(true);}},[$accountInfo.data,$accountAvatars.data,mounted]);useEffect(function(){accountAvatarsMount();},[]);return{formik:formik};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/account/use-profile-info.js"],"names":["Yup","useFormik","useStore","useEffect","useState","account","useTranslation","$accountModel","accountAvatarsMount","defaultValue","name","avatar","undefined","lastname","surname","business_ava","user_lang","category","region","currency","birthday","gender","phone","email","useProfileInfo","initialValues","setInitialValues","$accountInfo","$accountAvatars","mounted","setMounted","validationSchema","object","shape","i18n","formik","enableReinitialize","onSubmit","values","setSubmitting","changeLanguage","language","then","data","main_cat_id","id","region_id","lang","updateAccount","res","catch","error","errorData","response","errors","touched","i","length","field","message","replace","finally","getData","value","accountData","avatarsData","find","item","main_cat","stringUrl","image","file","code"],"mappings":"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","sourcesContent":["import * as Yup from 'yup'\r\nimport {useFormik} from 'formik'\r\nimport {useStore} from 'effector-react'\r\nimport {useEffect, useState} from 'react'\r\nimport account from '../../Service/account'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {$accountModel, accountAvatarsMount} from '../../Models/account-model'\r\n\r\nconst defaultValue = {\r\n    name: '',\r\n    avatar: undefined,\r\n    lastname: '',\r\n    surname: '',\r\n    business_ava: undefined,\r\n    user_lang: '',\r\n    category: null,\r\n    region: null,\r\n    currency: '',\r\n    birthday: '',\r\n    gender: '',\r\n    phone: '',\r\n    email: ''\r\n}\r\n\r\nexport function useProfileInfo() {\r\n    const [initialValues, setInitialValues] = useState(defaultValue)\r\n    const {$accountInfo, $accountAvatars} = useStore($accountModel)\r\n    const [mounted, setMounted] = useState(false)\r\n    const validationSchema = Yup.object().shape({})\r\n    const {i18n} = useTranslation()\r\n    \r\n    const formik = useFormik({\r\n        validationSchema,\r\n        initialValues,\r\n        enableReinitialize: true,\r\n        onSubmit(values, {setSubmitting}) {\r\n            setSubmitting(true)\r\n            const {category, region, user_lang, gender, avatar} = values\r\n            const changeLanguage = (language) => {\r\n                i18n.changeLanguage(language).then()\r\n            }\r\n            \r\n            const data = {\r\n                main_cat_id: category.id,\r\n                region_id: region.id,\r\n                lang: user_lang,\r\n                gender: gender,\r\n                avatar: avatar\r\n            }\r\n            \r\n            if (values.user_lang === 'uz') {\r\n                changeLanguage('uz')\r\n            } else if (values.user_lang === 'ru') {\r\n                changeLanguage('ru')\r\n            }\r\n    \r\n            account.updateAccount({data})\r\n                .then(res => {\r\n                    if (res) {\r\n                        // console.log(res.data)\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    const errorData = error.response.data.errors || []\r\n                    const touched = {}\r\n                    const data = {}\r\n                    if (errorData) {\r\n                        for (let i = 0; i < errorData.length; i++) {\r\n                            touched[errorData[i].field] = true\r\n                            data[errorData[i].field] = errorData[i].message.replace(/[[\\]']+/g, '')\r\n                        }\r\n                    }\r\n                })\r\n                .finally()\r\n        }\r\n    })\r\n    \r\n    const getData = (value) => {\r\n        return value || ''\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const accountData = $accountInfo?.data\r\n        const avatarsData = $accountAvatars?.data\r\n        \r\n        if (!!accountData && !!avatarsData && !mounted) {\r\n            const business_ava = avatarsData.length > 0 && avatarsData.find(item => item.business_ava)\r\n            \r\n            setInitialValues({\r\n                ...defaultValue,\r\n                region: getData(accountData.region),\r\n                category: getData(accountData.main_cat),\r\n                business_ava: business_ava ? {stringUrl: getData(business_ava.image), file: null} : false,\r\n                currency: getData(accountData?.currency?.code),\r\n                user_lang: getData(accountData.user_lang),\r\n                birthday: getData(accountData.birthday),\r\n                phone: getData(accountData.phone),\r\n                gender: getData(accountData.gender),\r\n                email: getData(accountData.email),\r\n                name: getData(accountData.name),\r\n                lastname: getData(accountData.lastname),\r\n                surname: getData(accountData.surname),\r\n                avatar: getData(accountData.avatar)\r\n            })\r\n            \r\n            setMounted(true)\r\n        }\r\n        \r\n    }, [$accountInfo.data, $accountAvatars.data, mounted])\r\n    \r\n    useEffect(() => {\r\n        accountAvatarsMount()\r\n    }, [])\r\n    \r\n    return {\r\n        formik\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}