{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Chat/ChatItem/index.jsx\";\nimport React from 'react';\nimport { ChatIsOnline, ChatItemFile, ChatItemTime, ChatItemUnreadCount, StyledChatItem, StyledChatItemAvatar, StyledChatItemContent } from '../style';\nimport { Title } from '../../../UIComponents/Typography/Title';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport img from '../../../Assets/Images/DefaultVideoScreen.png';\nimport { AttachSvg } from '../../../Icons/Attach';\nimport { truncateString } from '../../../utils/stringUtils';\nimport { VolumeOffFillSvg } from '../../../Icons/Volume';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { ShortCard } from '../../../Components/Cards';\nimport { useUserOnline } from '../../../Hooks/user/use-user-online';\nimport { getDWEDCHatListTime } from '../../../utils/time-utils';\nexport const ChatItem = ({\n  receiver,\n  last_message,\n  isMuted,\n  unread_count,\n  path,\n  typing\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    isOnline\n  } = useUserOnline({\n    username: receiver.username\n  });\n\n  const getFile = fileUrl => {\n    let ext = fileUrl && fileUrl.match(/\\.[^.\\\\/:*?\"<>|\\r\\n]+$/);\n    ext = ext && ext[0].substring(1);\n\n    switch (ext) {\n      case 'png':\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: img,\n          alt: \"filename\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(AttachSvg, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 24\n          }\n        });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledChatItem, {\n    to: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledChatItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ShortCard, {\n    imgUrl: receiver.avatar,\n    imgSize: 40,\n    isOfficial: receiver.is_official,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), isOnline && /*#__PURE__*/React.createElement(ChatIsOnline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(StyledChatItemContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 12,\n    justify: \"space-between\",\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: \"auto\",\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, truncateString(receiver.full_name, 24))), last_message.date && /*#__PURE__*/React.createElement(Col, {\n    span: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ChatItemTime, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, getDWEDCHatListTime(last_message.date)))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 12,\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: \"auto\",\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, typing ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"typing-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 39\n    }\n  }, t('typing')) : /*#__PURE__*/React.createElement(React.Fragment, null, last_message.file && /*#__PURE__*/React.createElement(ChatItemFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 53\n    }\n  }, getFile(last_message.file)), last_message && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: !!unread_count && 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 53\n    }\n  }, truncateString(last_message.text, last_message.file ? 20 : 24))))), isMuted && /*#__PURE__*/React.createElement(Col, {\n    span: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(VolumeOffFillSvg, {\n    style: {\n      marginLeft: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 50\n    }\n  })), !!unread_count && /*#__PURE__*/React.createElement(Col, {\n    span: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ChatItemUnreadCount, {\n    isMuted: isMuted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, unread_count)))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Chat/ChatItem/index.jsx"],"names":["React","ChatIsOnline","ChatItemFile","ChatItemTime","ChatItemUnreadCount","StyledChatItem","StyledChatItemAvatar","StyledChatItemContent","Title","Text","img","AttachSvg","truncateString","VolumeOffFillSvg","useTranslation","Col","Row","ShortCard","useUserOnline","getDWEDCHatListTime","ChatItem","receiver","last_message","isMuted","unread_count","path","typing","t","isOnline","username","getFile","fileUrl","ext","match","substring","avatar","is_official","full_name","date","file","fontWeight","text","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    ChatIsOnline,\n    ChatItemFile,\n    ChatItemTime,\n    ChatItemUnreadCount,\n    StyledChatItem,\n    StyledChatItemAvatar,\n    StyledChatItemContent\n} from '../style'\nimport {Title} from '../../../UIComponents/Typography/Title'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport img from '../../../Assets/Images/DefaultVideoScreen.png'\nimport {AttachSvg} from '../../../Icons/Attach'\nimport {truncateString} from '../../../utils/stringUtils'\nimport {VolumeOffFillSvg} from '../../../Icons/Volume'\nimport {useTranslation} from 'react-i18next'\nimport {Col, Row} from 'antd'\nimport {ShortCard} from '../../../Components/Cards'\nimport {useUserOnline} from '../../../Hooks/user/use-user-online'\nimport {getDWEDCHatListTime} from '../../../utils/time-utils'\n\nexport const ChatItem = ({receiver, last_message, isMuted, unread_count, path, typing}) => {\n    const {t} = useTranslation()\n    const {isOnline} = useUserOnline({username: receiver.username})\n\n    const getFile = (fileUrl) => {\n        let ext = fileUrl && fileUrl.match(/\\.[^.\\\\/:*?\"<>|\\r\\n]+$/)\n        ext = ext && ext[0].substring(1)\n\n        switch (ext) {\n            case 'png':\n                return <img src={img} alt='filename'/>\n            default:\n                return <AttachSvg/>\n        }\n    }\n\n    return (\n        <StyledChatItem to={path}>\n            <StyledChatItemAvatar>\n                <ShortCard\n                    imgUrl={receiver.avatar}\n                    imgSize={40}\n                    isOfficial={receiver.is_official}\n                />\n                {\n                    isOnline && <ChatIsOnline/>\n                }\n            </StyledChatItemAvatar>\n\n            <StyledChatItemContent>\n                <Row gutter={12} justify='space-between' align='middle'>\n                    <Col span='auto' flex={1}>\n                        <Title level={4}>\n                            {truncateString(receiver.full_name, 24)}\n                        </Title>\n                    </Col>\n                    {\n                        last_message.date && (\n                            <Col span='auto'>\n                                <ChatItemTime>{getDWEDCHatListTime(last_message.date)}</ChatItemTime>\n                            </Col>\n                        )\n                    }\n                </Row>\n                <Row gutter={12} align='middle'>\n                    <Col span='auto' flex={1}>\n                        <Text>\n                            {\n                                typing\n                                    ? <span className='typing-text'>{t('typing')}</span>\n                                    : (\n                                        <>\n                                            {\n                                                last_message.file && (\n                                                    <ChatItemFile>{getFile(last_message.file)}</ChatItemFile>\n                                                )\n                                            }\n                                            {\n                                                last_message && (\n                                                    <span style={{fontWeight: !!unread_count && 500}}>\n                                                        {\n                                                            truncateString(\n                                                                last_message.text,\n                                                                last_message.file ? 20 : 24\n                                                            )\n                                                        }\n                                                    </span>\n                                                )\n                                            }\n                                        </>\n                                    )\n                            }\n                        </Text>\n                    </Col>\n                    {isMuted && <Col span='auto'><VolumeOffFillSvg style={{marginLeft: 6}}/></Col>}\n                    {\n                        !!unread_count && (\n                            <Col span='auto'>\n                                <ChatItemUnreadCount isMuted={isMuted}>\n                                    {unread_count}\n                                </ChatItemUnreadCount>\n                            </Col>\n                        )\n                    }\n                </Row>\n            </StyledChatItemContent>\n        </StyledChatItem>\n    )\n}"]},"metadata":{},"sourceType":"module"}