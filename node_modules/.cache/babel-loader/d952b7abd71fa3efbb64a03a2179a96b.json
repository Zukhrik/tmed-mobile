{"ast":null,"code":"import { useState } from 'react';\nimport { useUrlParams } from '../app';\nimport { useStore } from 'effector-react';\nimport order from '../../Service/order';\nimport { URL_KEYS } from '../../Constants';\nimport { saveURLMount } from '../../Models/app';\nimport { $offeringsModel } from '../../Models/offerings-model';\nimport { getOrgOrderCartsMount } from '../../Models/order-model';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nexport function useOfferingOrderInOfferPage() {\n  const {\n    push\n  } = useHistory();\n  const {\n    urlData\n  } = useUrlParams();\n  const {\n    pathname\n  } = useLocation();\n  const {\n    organization\n  } = useParams();\n  const {\n    $offeringInfo: {\n      data\n    }\n  } = useStore($offeringsModel);\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleRequest = () => {\n    var _data$responsible$;\n\n    saveURLMount(pathname);\n    const offeringId = data.id;\n    const specId = urlData[URL_KEYS.SPECIALIST_ID] ? urlData[URL_KEYS.SPECIALIST_ID] : data === null || data === void 0 ? void 0 : (_data$responsible$ = data.responsible[0]) === null || _data$responsible$ === void 0 ? void 0 : _data$responsible$.id;\n    const params = {\n      org_slug_name: organization,\n      data: {\n        offering_id: offeringId,\n        responsible_id: specId\n      }\n    };\n    order.postOrgOrderCart(params).then(response => {\n      getOrgOrderCartsMount();\n\n      if (response) {\n        push(`/records/unregistered/${organization}?${URL_KEYS.SPECIALIST_ID}=${urlData[URL_KEYS.SPECIALIST_ID]}`);\n      }\n    });\n  };\n\n  return {\n    handleRequest,\n    openModal,\n    setOpenModal\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/order/use-offering-order-in-offer-page.js"],"names":["useState","useUrlParams","useStore","order","URL_KEYS","saveURLMount","$offeringsModel","getOrgOrderCartsMount","useHistory","useLocation","useParams","useOfferingOrderInOfferPage","push","urlData","pathname","organization","$offeringInfo","data","openModal","setOpenModal","handleRequest","offeringId","id","specId","SPECIALIST_ID","responsible","params","org_slug_name","offering_id","responsible_id","postOrgOrderCart","then","response"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,YAAR,QAA2B,QAA3B;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,SAAQC,eAAR,QAA8B,8BAA9B;AACA,SAAQC,qBAAR,QAAoC,0BAApC;AACA,SAAQC,UAAR,EAAoBC,WAApB,EAAiCC,SAAjC,QAAiD,kBAAjD;AAEA,OAAO,SAASC,2BAAT,GAAuC;AAC1C,QAAM;AAACC,IAAAA;AAAD,MAASJ,UAAU,EAAzB;AACA,QAAM;AAACK,IAAAA;AAAD,MAAYZ,YAAY,EAA9B;AACA,QAAM;AAACa,IAAAA;AAAD,MAAaL,WAAW,EAA9B;AACA,QAAM;AAACM,IAAAA;AAAD,MAAiBL,SAAS,EAAhC;AACA,QAAM;AAACM,IAAAA,aAAa,EAAE;AAACC,MAAAA;AAAD;AAAhB,MAA0Bf,QAAQ,CAACI,eAAD,CAAxC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;;AAGA,QAAMoB,aAAa,GAAG,MAAM;AAAA;;AACxBf,IAAAA,YAAY,CAACS,QAAD,CAAZ;AACA,UAAMO,UAAU,GAAGJ,IAAI,CAACK,EAAxB;AACA,UAAMC,MAAM,GAAGV,OAAO,CAACT,QAAQ,CAACoB,aAAV,CAAP,GAAkCX,OAAO,CAACT,QAAQ,CAACoB,aAAV,CAAzC,GAAoEP,IAApE,aAAoEA,IAApE,6CAAoEA,IAAI,CAAEQ,WAAN,CAAkB,CAAlB,CAApE,uDAAoE,mBAAsBH,EAAzG;AACA,UAAMI,MAAM,GAAG;AACXC,MAAAA,aAAa,EAAEZ,YADJ;AAEXE,MAAAA,IAAI,EAAE;AACFW,QAAAA,WAAW,EAAEP,UADX;AAEFQ,QAAAA,cAAc,EAAEN;AAFd;AAFK,KAAf;AAOApB,IAAAA,KAAK,CAAC2B,gBAAN,CAAuBJ,MAAvB,EACKK,IADL,CACUC,QAAQ,IAAI;AACdzB,MAAAA,qBAAqB;;AACrB,UAAIyB,QAAJ,EAAc;AACVpB,QAAAA,IAAI,CAAE,yBAAwBG,YAAa,IAAGX,QAAQ,CAACoB,aAAc,IAAGX,OAAO,CAACT,QAAQ,CAACoB,aAAV,CAAyB,EAApG,CAAJ;AACH;AACJ,KANL;AAOH,GAlBD;;AAoBA,SAAO;AAACJ,IAAAA,aAAD;AAAgBF,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,GAAP;AACH","sourcesContent":["import {useState} from 'react'\nimport {useUrlParams} from '../app'\nimport {useStore} from 'effector-react'\nimport order from '../../Service/order'\nimport {URL_KEYS} from '../../Constants'\nimport {saveURLMount} from '../../Models/app'\nimport {$offeringsModel} from '../../Models/offerings-model'\nimport {getOrgOrderCartsMount} from '../../Models/order-model'\nimport {useHistory, useLocation, useParams} from 'react-router-dom'\n\nexport function useOfferingOrderInOfferPage() {\n    const {push} = useHistory()\n    const {urlData} = useUrlParams()\n    const {pathname} = useLocation()\n    const {organization} = useParams()\n    const {$offeringInfo: {data}} = useStore($offeringsModel)\n    const [openModal, setOpenModal] = useState(false)\n    \n    \n    const handleRequest = () => {\n        saveURLMount(pathname)\n        const offeringId = data.id\n        const specId = urlData[URL_KEYS.SPECIALIST_ID] ? urlData[URL_KEYS.SPECIALIST_ID] : data?.responsible[0]?.id\n        const params = {\n            org_slug_name: organization,\n            data: {\n                offering_id: offeringId,\n                responsible_id: specId\n            }\n        }\n        order.postOrgOrderCart(params)\n            .then(response => {\n                getOrgOrderCartsMount()\n                if (response) {\n                    push(`/records/unregistered/${organization}?${URL_KEYS.SPECIALIST_ID}=${urlData[URL_KEYS.SPECIALIST_ID]}`)\n                }\n            })\n    }\n    \n    return {handleRequest, openModal, setOpenModal}\n}"]},"metadata":{},"sourceType":"module"}