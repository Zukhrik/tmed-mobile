{"ast":null,"code":"import React from'react';import{Breadcrumb,Col,Row}from'antd';import{SelectionListHeader}from'../style';import{useTranslation}from'react-i18next';import{SearchSvg}from'../../../Icons/Search';import{Input}from'../../../UIComponents/Inputs';export var ListHeader=function ListHeader(_ref){var breadcrumb=_ref.breadcrumb,handleSubmit=_ref.handleSubmit,searchValue=_ref.searchValue,setSearchValue=_ref.setSearchValue,handleClick=_ref.handleClick;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/React.createElement(SelectionListHeader,null,/*#__PURE__*/React.createElement(Row,{gutter:[0,12]},/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Input,{placeholder:\"\".concat(t('search'),\"...\"),icon:/*#__PURE__*/React.createElement(SearchSvg,null),value:searchValue,onChange:function onChange(e){return setSearchValue(e.target.value);}}))),(breadcrumb.length>0||searchValue.trim().length>0)&&/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Breadcrumb,null,/*#__PURE__*/React.createElement(Breadcrumb.Item,null,/*#__PURE__*/React.createElement(\"a\",{href:\"/\",onClick:function onClick(e){return handleClick(e,0);}},\"Home\")),searchValue.trim().length>0&&breadcrumb.length===0&&/*#__PURE__*/React.createElement(Breadcrumb.Item,null,searchValue),breadcrumb.map(function(item,idx,arr){return/*#__PURE__*/React.createElement(Breadcrumb.Item,{key:\"\".concat(idx+1)},idx+1===arr.length?item.name:/*#__PURE__*/React.createElement(\"a\",{href:\"/\",onClick:function onClick(e){return handleClick(e,item.id);}},item.name));})))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/SelectionList/ListHeader/index.jsx"],"names":["React","Breadcrumb","Col","Row","SelectionListHeader","useTranslation","SearchSvg","Input","ListHeader","breadcrumb","handleSubmit","searchValue","setSearchValue","handleClick","t","e","target","value","length","trim","map","item","idx","arr","name","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,UAAR,CAAoBC,GAApB,CAAyBC,GAAzB,KAAmC,MAAnC,CACA,OAAQC,mBAAR,KAAkC,UAAlC,CACA,OAAQC,cAAR,KAA6B,eAA7B,CACA,OAAQC,SAAR,KAAwB,uBAAxB,CACA,OAAQC,KAAR,KAAoB,8BAApB,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAA0E,IAAxEC,CAAAA,UAAwE,MAAxEA,UAAwE,CAA5DC,YAA4D,MAA5DA,YAA4D,CAA9CC,WAA8C,MAA9CA,WAA8C,CAAjCC,cAAiC,MAAjCA,cAAiC,CAAjBC,WAAiB,MAAjBA,WAAiB,CAChG,oBAAYR,cAAc,EAA1B,CAAOS,CAAP,iBAAOA,CAAP,CAGA,mBACI,oBAAC,mBAAD,mBACI,oBAAC,GAAD,EAAK,MAAM,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAb,eACI,oBAAC,GAAD,EAAK,IAAI,CAAE,EAAX,eACI,4BAAM,QAAQ,CAAEJ,YAAhB,eACI,oBAAC,KAAD,EACI,WAAW,WAAKI,CAAC,CAAC,QAAD,CAAN,OADf,CAEI,IAAI,cAAE,oBAAC,SAAD,MAFV,CAGI,KAAK,CAAEH,WAHX,CAII,QAAQ,CAAE,kBAACI,CAAD,QAAOH,CAAAA,cAAc,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAArB,EAJd,EADJ,CADJ,CADJ,CAYQ,CAACR,UAAU,CAACS,MAAX,CAAoB,CAApB,EAAyBP,WAAW,CAACQ,IAAZ,GAAmBD,MAAnB,CAA4B,CAAtD,gBAEI,oBAAC,GAAD,EAAK,IAAI,CAAE,EAAX,eACI,oBAAC,UAAD,mBACI,oBAAC,UAAD,CAAY,IAAZ,mBACI,yBACI,IAAI,CAAC,GADT,CAEI,OAAO,CAAE,iBAACH,CAAD,QAAOF,CAAAA,WAAW,CAACE,CAAD,CAAI,CAAJ,CAAlB,EAFb,SADJ,CADJ,CAUQJ,WAAW,CAACQ,IAAZ,GAAmBD,MAAnB,CAA4B,CAA5B,EAAiCT,UAAU,CAACS,MAAX,GAAsB,CAAvD,eACI,oBAAC,UAAD,CAAY,IAAZ,MACKP,WADL,CAXZ,CAiBQF,UAAU,CAACW,GAAX,CAAe,SAACC,IAAD,CAAOC,GAAP,CAAYC,GAAZ,qBACX,oBAAC,UAAD,CAAY,IAAZ,EAAiB,GAAG,WAAKD,GAAG,CAAG,CAAX,CAApB,EAEQA,GAAG,CAAG,CAAN,GAAYC,GAAG,CAACL,MAAhB,CACMG,IAAI,CAACG,IADX,cAEM,yBACE,IAAI,CAAC,GADP,CAEE,OAAO,CAAE,iBAACT,CAAD,QAAOF,CAAAA,WAAW,CAACE,CAAD,CAAIM,IAAI,CAACI,EAAT,CAAlB,EAFX,EAIGJ,IAAI,CAACG,IAJR,CAJd,CADW,EAAf,CAjBR,CADJ,CAdZ,CADJ,CADJ,CAwDH,CA5DM","sourcesContent":["import React from 'react'\r\nimport {Breadcrumb, Col, Row} from 'antd'\r\nimport {SelectionListHeader} from '../style'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {SearchSvg} from '../../../Icons/Search'\r\nimport {Input} from '../../../UIComponents/Inputs'\r\n\r\nexport const ListHeader = ({breadcrumb, handleSubmit, searchValue, setSearchValue, handleClick}) => {\r\n    const {t} = useTranslation()\r\n    \r\n    \r\n    return (\r\n        <SelectionListHeader>\r\n            <Row gutter={[0, 12]}>\r\n                <Col span={24}>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Input\r\n                            placeholder={`${t('search')}...`}\r\n                            icon={<SearchSvg/>}\r\n                            value={searchValue}\r\n                            onChange={(e) => setSearchValue(e.target.value)}\r\n                        />\r\n                    </form>\r\n                </Col>\r\n                {\r\n                    (breadcrumb.length > 0 || searchValue.trim().length > 0)\r\n                    && (\r\n                        <Col span={24}>\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item>\r\n                                    <a\r\n                                        href='/'\r\n                                        onClick={(e) => handleClick(e, 0)}\r\n                                    >\r\n                                        Home\r\n                                    </a>\r\n                                </Breadcrumb.Item>\r\n                                {\r\n                                    searchValue.trim().length > 0 && breadcrumb.length === 0 && (\r\n                                        <Breadcrumb.Item>\r\n                                            {searchValue}\r\n                                        </Breadcrumb.Item>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    breadcrumb.map((item, idx, arr) => (\r\n                                        <Breadcrumb.Item key={`${idx + 1}`}>\r\n                                            {\r\n                                                idx + 1 === arr.length\r\n                                                    ? item.name\r\n                                                    : <a\r\n                                                        href='/'\r\n                                                        onClick={(e) => handleClick(e, item.id)}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </a>\r\n                                            }\r\n                                        </Breadcrumb.Item>\r\n                                    ))\r\n                                }\r\n                            </Breadcrumb>\r\n                        </Col>\r\n                    )\r\n                }\r\n            </Row>\r\n        </SelectionListHeader>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}