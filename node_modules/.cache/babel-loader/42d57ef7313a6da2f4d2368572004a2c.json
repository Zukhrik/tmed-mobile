{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/Records/organisms/approved.jsx\";\nimport React from 'react';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { useOrderList } from '../../../Hooks/order';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'effector-react';\nimport { $orderModel } from '../../../Models/order-model';\nimport { saveURLMount } from '../../../Models/app';\nimport { Col, Row } from 'antd';\nimport { QRCodeCartCard } from '../../../Components/Cards/QRCodeCartCard';\nimport { QRCodeCartCardSkeleton } from '../../../Components/Cards';\nimport { EmptyOrderContainer } from './empty-order-container';\nconst skeleton = generateSkeleton(5);\nexport const Approved = () => {\n  useOrderList(1);\n  const {\n    push,\n    location: {\n      pathname\n    }\n  } = useHistory();\n  const {\n    $orderList: {\n      data,\n      forceLoading\n    }\n  } = useStore($orderModel);\n\n  const handlePush = item => {\n    push(`/records/detail/${item.id}`);\n    saveURLMount(pathname);\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    style: {\n      paddingBottom: 65\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, forceLoading === 2 ? /*#__PURE__*/React.createElement(React.Fragment, null, data && data.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(QRCodeCartCard, {\n    src: item.responsible.org.logo,\n    time: item.meet_date,\n    cost: item.total_cost,\n    url: () => handlePush(item),\n    title: item.responsible.org.name,\n    text: item.responsible.org.category.name,\n    specialistImg: item.responsible.user.avatar,\n    specialistName: item.responsible.user.full_name,\n    specialistCat: item.responsible.user.main_cat.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 57\n    }\n  })))) : /*#__PURE__*/React.createElement(EmptyOrderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 41\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(QRCodeCartCardSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 41\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/Records/organisms/approved.jsx"],"names":["React","generateSkeleton","useOrderList","useHistory","useStore","$orderModel","saveURLMount","Col","Row","QRCodeCartCard","QRCodeCartCardSkeleton","EmptyOrderContainer","skeleton","Approved","push","location","pathname","$orderList","data","forceLoading","handlePush","item","id","paddingBottom","length","map","idx","responsible","org","logo","meet_date","total_cost","name","category","user","avatar","full_name","main_cat"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {useOrderList} from '../../../Hooks/order'\nimport {useHistory} from 'react-router-dom'\nimport {useStore} from 'effector-react'\nimport {$orderModel} from '../../../Models/order-model'\nimport {saveURLMount} from '../../../Models/app'\nimport {Col, Row} from 'antd'\nimport {QRCodeCartCard} from '../../../Components/Cards/QRCodeCartCard'\nimport {QRCodeCartCardSkeleton} from '../../../Components/Cards'\nimport {EmptyOrderContainer} from './empty-order-container'\n\n\nconst skeleton = generateSkeleton(5)\nexport const Approved = () => {\n    useOrderList(1)\n    const {push, location: {pathname}} = useHistory()\n    const {$orderList: {data, forceLoading}} = useStore($orderModel)\n    \n    const handlePush = (item) => {\n        push(`/records/detail/${item.id}`)\n        saveURLMount(pathname)\n    }\n    \n    return (\n        <Row gutter={[0, 12]} style={{paddingBottom: 65}}>\n            {\n                forceLoading === 2\n                    ? (\n                        <>\n                            {\n                                data && data.length > 0\n                                    ? (\n                                        <>\n                                            {\n                                                data.map((item, idx) => (\n                                                    <Col\n                                                        span={24}\n                                                        key={`${idx + 1}`}\n                                                    >\n                                                        <QRCodeCartCard\n                                                            src={item.responsible.org.logo}\n                                                            time={item.meet_date}\n                                                            cost={item.total_cost}\n                                                            url={() => handlePush(item)}\n                                                            title={item.responsible.org.name}\n                                                            text={item.responsible.org.category.name}\n                                                            specialistImg={item.responsible.user.avatar}\n                                                            specialistName={item.responsible.user.full_name}\n                                                            specialistCat={item.responsible.user.main_cat.name}\n                                                        />\n                                                    </Col>\n                                                ))\n                                            }\n                                        </>\n                                    ) : (\n                                        <EmptyOrderContainer/>\n                                    )\n                            }\n                        </>\n                    ) : (\n                        <>\n                            {\n                                skeleton.map((item, idx) => (\n                                    <Col span={24} key={`${idx + 1}`}>\n                                        <QRCodeCartCardSkeleton/>\n                                    </Col>\n                                ))\n                            }\n                        </>\n                    )\n            }\n        </Row>\n    )\n}"]},"metadata":{},"sourceType":"module"}