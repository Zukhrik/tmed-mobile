{"ast":null,"code":"import*as Yup from'yup';import Cookies from'js-cookie';import{useFormik}from'formik';import{useCallback}from'react';import auth from'../../Service/auth';import{useHistory}from'react-router-dom';import{tokenMount}from'../../Models/app';import{useTranslation}from'react-i18next';import{getCurrentAccount}from'../../Models/account-model';export function useSignIn(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useHistory=useHistory(),push=_useHistory.push;var validationSchema=Yup.object().shape({username:Yup.string().required(t('required_field')),password:Yup.string().required(t('required_field'))});var formik=useFormik({initialValues:{username:'',password:''},validationSchema:validationSchema,onSubmit:function onSubmit(_ref,_ref2){var username=_ref.username,password=_ref.password;var setSubmitting=_ref2.setSubmitting;setSubmitting(true);var timeout=null;auth.getToken({password:password,username:username}).then(function(res){var users=Cookies.get('users')?JSON.parse(Cookies.get('users')):{};users[username]=res.data;Cookies.set('users',JSON.stringify(users));Cookies.set('token',res.data.access);Cookies.set('refresh-token',res.data.refresh);tokenMount(res.data.access);getCurrentAccount();timeout=setTimeout(function(){push('/');},100);}).finally(function(){return setSubmitting(false);}).catch(function(){setSubmitting(false);});clearTimeout(timeout);timeout=null;}});var disabled=useCallback(function(){return formik.isSubmitting||formik.touched.password&&!!formik.errors.password||formik.touched.name&&!!formik.errors.name;},[formik]);return{formik:formik,disabled:disabled};}","map":null,"metadata":{},"sourceType":"module"}