{"ast":null,"code":"import { useUrlParams } from '../app';\nimport { URL_KEYS } from '../../Constants';\nimport { useParams } from 'react-router-dom';\nimport { useCallback, useEffect } from 'react';\nimport { $orderModel, getOrgOrderCartsMount, resetOrgOrderCart } from '../../Models/order-model';\nimport { useStore } from 'effector-react';\nconst initialParams = {\n  limit: 10,\n  offset: 0\n};\nexport function useOrgOrderCarts() {\n  const {\n    organization\n  } = useParams();\n  const {\n    urlData\n  } = useUrlParams();\n  const specId = urlData[URL_KEYS.SPECIALIST_ID];\n  const {\n    $orgOrderCartList: {\n      result\n    }\n  } = useStore($orderModel);\n  const getList = useCallback(params => {\n    const data = {\n      org_slug_name: organization,\n      ...params\n    };\n    getOrgOrderCartsMount(data);\n  }, [organization]);\n  const loadMore = useCallback(() => {\n    var _result$organization;\n\n    if (result === null || result === void 0 ? void 0 : (_result$organization = result[organization]) === null || _result$organization === void 0 ? void 0 : _result$organization.nextOffset) {\n      const params = { ...initialParams,\n        offset: result[organization].nextOffset\n      };\n      getList({\n        params\n      });\n    }\n  }, [getList, result, organization]);\n  useEffect(() => {\n    const data = {\n      clear: true,\n      params: initialParams\n    };\n    resetOrgOrderCart();\n\n    if (specId) {\n      data.params['responsible'] = specId;\n      getList(data);\n    }\n  }, [getList, specId]);\n  return {\n    loadMore,\n    organization\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/order/use-org-order-carts.js"],"names":["useUrlParams","URL_KEYS","useParams","useCallback","useEffect","$orderModel","getOrgOrderCartsMount","resetOrgOrderCart","useStore","initialParams","limit","offset","useOrgOrderCarts","organization","urlData","specId","SPECIALIST_ID","$orgOrderCartList","result","getList","params","data","org_slug_name","loadMore","nextOffset","clear"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,QAA3B;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,OAArC;AACA,SAAQC,WAAR,EAAqBC,qBAArB,EAA4CC,iBAA5C,QAAoE,0BAApE;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,MAAM,EAAE;AAFU,CAAtB;AAKA,OAAO,SAASC,gBAAT,GAA4B;AAC/B,QAAM;AAACC,IAAAA;AAAD,MAAiBX,SAAS,EAAhC;AACA,QAAM;AAACY,IAAAA;AAAD,MAAYd,YAAY,EAA9B;AACA,QAAMe,MAAM,GAAGD,OAAO,CAACb,QAAQ,CAACe,aAAV,CAAtB;AACA,QAAM;AAACC,IAAAA,iBAAiB,EAAE;AAACC,MAAAA;AAAD;AAApB,MAAgCV,QAAQ,CAACH,WAAD,CAA9C;AAEA,QAAMc,OAAO,GAAGhB,WAAW,CAAEiB,MAAD,IAAY;AACpC,UAAMC,IAAI,GAAG;AACTC,MAAAA,aAAa,EAAET,YADN;AAET,SAAGO;AAFM,KAAb;AAIAd,IAAAA,qBAAqB,CAACe,IAAD,CAArB;AACH,GAN0B,EAMxB,CAACR,YAAD,CANwB,CAA3B;AAQA,QAAMU,QAAQ,GAAGpB,WAAW,CAAC,MAAM;AAAA;;AAC/B,QAAIe,MAAJ,aAAIA,MAAJ,+CAAIA,MAAM,CAAGL,YAAH,CAAV,yDAAI,qBAAwBW,UAA5B,EAAwC;AACpC,YAAMJ,MAAM,GAAG,EACX,GAAGX,aADQ;AAEXE,QAAAA,MAAM,EAAEO,MAAM,CAACL,YAAD,CAAN,CAAqBW;AAFlB,OAAf;AAIAL,MAAAA,OAAO,CAAC;AAACC,QAAAA;AAAD,OAAD,CAAP;AACH;AACJ,GAR2B,EAQzB,CAACD,OAAD,EAAUD,MAAV,EAAkBL,YAAlB,CARyB,CAA5B;AAUAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,IAAI,GAAG;AACTI,MAAAA,KAAK,EAAE,IADE;AAETL,MAAAA,MAAM,EAAEX;AAFC,KAAb;AAKAF,IAAAA,iBAAiB;;AACjB,QAAIQ,MAAJ,EAAY;AACRM,MAAAA,IAAI,CAACD,MAAL,CAAY,aAAZ,IAA6BL,MAA7B;AACAI,MAAAA,OAAO,CAACE,IAAD,CAAP;AACH;AACJ,GAXQ,EAWN,CAACF,OAAD,EAAUJ,MAAV,CAXM,CAAT;AAaA,SAAO;AAACQ,IAAAA,QAAD;AAAWV,IAAAA;AAAX,GAAP;AACH","sourcesContent":["import {useUrlParams} from '../app'\nimport {URL_KEYS} from '../../Constants'\nimport {useParams} from 'react-router-dom'\nimport {useCallback, useEffect} from 'react'\nimport {$orderModel, getOrgOrderCartsMount, resetOrgOrderCart} from '../../Models/order-model'\nimport {useStore} from 'effector-react'\n\nconst initialParams = {\n    limit: 10,\n    offset: 0\n}\n\nexport function useOrgOrderCarts() {\n    const {organization} = useParams()\n    const {urlData} = useUrlParams()\n    const specId = urlData[URL_KEYS.SPECIALIST_ID]\n    const {$orgOrderCartList: {result}} = useStore($orderModel)\n    \n    const getList = useCallback((params) => {\n        const data = {\n            org_slug_name: organization,\n            ...params\n        }\n        getOrgOrderCartsMount(data)\n    }, [organization])\n    \n    const loadMore = useCallback(() => {\n        if (result?.[organization]?.nextOffset) {\n            const params = {\n                ...initialParams,\n                offset: result[organization].nextOffset\n            }\n            getList({params})\n        }\n    }, [getList, result, organization])\n    \n    useEffect(() => {\n        const data = {\n            clear: true,\n            params: initialParams\n        }\n        \n        resetOrgOrderCart()\n        if (specId) {\n            data.params['responsible'] = specId\n            getList(data)\n        }\n    }, [getList, specId])\n    \n    return {loadMore, organization}\n}"]},"metadata":{},"sourceType":"module"}