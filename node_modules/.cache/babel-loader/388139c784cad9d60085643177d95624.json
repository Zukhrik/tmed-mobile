{"ast":null,"code":"import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState}from'react';import{OfferGroupWrapper,OfferingGroupSearchForm,SpecialistNavLink}from'../style';import{SearchSvg}from'../../../../Icons/Search';import{Col,Row}from'antd';import{useTranslation}from'react-i18next';import{useStore}from'effector-react';import{$orgModel,orgSpecialistsMount}from'../../../../Models/org-model';import{OrgSpecialistCard}from'../../../Cards';import{URL_KEYS}from'../../../../Constants';import{useOrgSpecialistLists,useUrlGenerate}from'../../../../Hooks/org';import InfiniteScroll from'react-infinite-scroll-component';import{useParams}from'react-router-dom';export var OverlaySpecialists=function OverlaySpecialists(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useParams=useParams(),organization=_useParams.organization;var _useOrgSpecialistList=useOrgSpecialistLists(),loadMore=_useOrgSpecialistList.loadMore;var _useUrlGenerate=useUrlGenerate(),getActive=_useUrlGenerate.getActive,generateUrl=_useUrlGenerate.generateUrl;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var _useStore=useStore($orgModel),_useStore$$orgSpecial=_useStore.$orgSpecialistsList,data=_useStore$$orgSpecial.data,result=_useStore$$orgSpecial.result,loading=_useStore$$orgSpecial.loading;var handleSubmit=useCallback(function(e){e.preventDefault();if(search.length>2){var params={clear:true,organization:organization,params:{search:search}};orgSpecialistsMount(params);}},[search,organization]);return/*#__PURE__*/React.createElement(OfferGroupWrapper,{id:\"scrollableSpec\"},/*#__PURE__*/React.createElement(OfferingGroupSearchForm,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"input\",{placeholder:\"\".concat(t('search'),\"...\"),value:search,onChange:function onChange(e){return setSearch(e.target.value);}}),/*#__PURE__*/React.createElement(SearchSvg,null)),/*#__PURE__*/React.createElement(InfiniteScroll,{next:loadMore,dataLength:result.nextOffset||20,hasMore:!loading&&!!(result===null||result===void 0?void 0:result.next),loader:/*#__PURE__*/React.createElement(React.Fragment,null,\"...loading\"),style:{overflow:'hidden',padding:'50px 0'},scrollableTarget:\"scrollableSpec\"},/*#__PURE__*/React.createElement(Row,{gutter:[12,12]},data&&data.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{className:\"centered\",key:\"\".concat(idx+1),span:8},/*#__PURE__*/React.createElement(SpecialistNavLink,{key:\"\".concat(idx+1),to:generateUrl(URL_KEYS.SPECIALIST_ID,item.id),isActive:function isActive(){return getActive(URL_KEYS.SPECIALIST_ID,item.id);}},/*#__PURE__*/React.createElement(OrgSpecialistCard,{name:item.user.full_name,src:item.user.avatar,category:item.job.name})));}))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OverlaySpecialists/index.jsx"],"names":["React","useCallback","useState","OfferGroupWrapper","OfferingGroupSearchForm","SpecialistNavLink","SearchSvg","Col","Row","useTranslation","useStore","$orgModel","orgSpecialistsMount","OrgSpecialistCard","URL_KEYS","useOrgSpecialistLists","useUrlGenerate","InfiniteScroll","useParams","OverlaySpecialists","t","organization","loadMore","getActive","generateUrl","search","setSearch","$orgSpecialistsList","data","result","loading","handleSubmit","e","preventDefault","length","params","clear","target","value","nextOffset","next","overflow","padding","map","item","idx","SPECIALIST_ID","id","user","full_name","avatar","job","name"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react'\nimport {OfferGroupWrapper, OfferingGroupSearchForm, SpecialistNavLink} from '../style'\nimport {SearchSvg} from '../../../../Icons/Search'\nimport {Col, Row} from 'antd'\nimport {useTranslation} from 'react-i18next'\nimport {useStore} from 'effector-react'\nimport {$orgModel, orgSpecialistsMount} from '../../../../Models/org-model'\nimport {OrgSpecialistCard} from '../../../Cards'\nimport {URL_KEYS} from '../../../../Constants'\nimport {useOrgSpecialistLists, useUrlGenerate} from '../../../../Hooks/org'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport {useParams} from 'react-router-dom'\n\nexport const OverlaySpecialists = () => {\n    const {t} = useTranslation()\n    const {organization} = useParams()\n    const {loadMore} = useOrgSpecialistLists()\n    const {getActive, generateUrl} = useUrlGenerate()\n    const [search, setSearch] = useState('')\n    const {$orgSpecialistsList: {data, result, loading}} = useStore($orgModel)\n    \n    const handleSubmit = useCallback((e) => {\n        e.preventDefault()\n        if (search.length > 2) {\n            const params = {\n                clear: true,\n                organization,\n                params: {\n                    search\n                }\n            }\n            orgSpecialistsMount(params)\n        }\n    }, [search, organization])\n    \n    return (\n        <OfferGroupWrapper id='scrollableSpec'>\n            <OfferingGroupSearchForm onSubmit={handleSubmit}>\n                <input\n                    placeholder={`${t('search')}...`}\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n                <SearchSvg/>\n            </OfferingGroupSearchForm>\n            <InfiniteScroll\n                next={loadMore}\n                dataLength={result.nextOffset || 20}\n                hasMore={!loading && !!result?.next}\n                loader={<>...loading</>}\n                style={{overflow: 'hidden', padding: '50px 0'}}\n                scrollableTarget='scrollableSpec'\n            >\n                <Row gutter={[12, 12]}>\n                    {\n                        data && data.map((item, idx) => (\n                            <Col\n                                className='centered'\n                                key={`${idx + 1}`} span={8}\n                            >\n                                <SpecialistNavLink\n                                    key={`${idx + 1}`}\n                                    to={generateUrl(URL_KEYS.SPECIALIST_ID, item.id)}\n                                    isActive={() => getActive(URL_KEYS.SPECIALIST_ID, item.id)}\n                                >\n                                    <OrgSpecialistCard\n                                        name={item.user.full_name}\n                                        src={item.user.avatar}\n                                        category={item.job.name}\n                                    />\n                                </SpecialistNavLink>\n                            </Col>\n                        ))\n                    }\n                </Row>\n            </InfiniteScroll>\n        </OfferGroupWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}