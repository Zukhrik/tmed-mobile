{"ast":null,"code":"import { combine, createStore } from 'effector';\nimport Cookies from 'js-cookie';\nimport { fetchCurrencies, fetchDetectLocation } from './effects';\nimport { changeAppLang, changeMenuOpen, changeSearchFocus, changeShowAccounts, changeSpecPanel, commentIdMount, deviceMount, onReplyCommentDataMount, openFastAuthMount, paymentMethodMount, saveURLMount, socketCountersMount, switchOrgGroupPanel, tokenMount } from './events';\nimport { fetchAccountInfo, fetchUpdateAccount } from '../account-model/effects';\nconst defaultAppState = {\n  saveURL: '',\n  commentId: '',\n  menuOpen: false,\n  searchFocus: false,\n  showAccounts: false,\n  openFastAuth: false,\n  showSpecPanel: false,\n  onReplyCommentData: '',\n  changeOrgGroupPanel: false,\n  paymentMethodValue: 'cash',\n  token: Cookies.get('token') || null\n};\nconst $app = createStore(defaultAppState).on(tokenMount, (state, token) => ({ ...state,\n  token\n})).on(saveURLMount, (state, saveURL) => ({ ...state,\n  saveURL\n})).on(commentIdMount, (state, commentId) => ({ ...state,\n  commentId\n})).on(changeMenuOpen, (state, status) => ({ ...state,\n  menuOpen: status\n})).on(changeSearchFocus, (state, status) => ({ ...state,\n  searchFocus: status\n})).on(changeSpecPanel, (state, status) => ({ ...state,\n  showSpecPanel: status\n})).on(openFastAuthMount, (state, status) => ({ ...state,\n  openFastAuth: status\n})).on(changeShowAccounts, (state, status) => ({ ...state,\n  showAccounts: status\n})).on(switchOrgGroupPanel, (state, status) => ({ ...state,\n  changeOrgGroupPanel: status\n})).on(paymentMethodMount, (state, paymentMethodValue) => ({ ...state,\n  paymentMethodValue\n})).on(onReplyCommentDataMount, (state, onReplyCommentData) => ({ ...state,\n  onReplyCommentData\n}));\nconst $currenciesList = createStore({\n  loading: false,\n  data: [],\n  error: false\n}).on(fetchCurrencies.pending, (state, loading) => ({ ...state,\n  loading\n})).on(fetchCurrencies.fail, (state, {\n  error\n}) => ({ ...state,\n  error,\n  data: [],\n  result: {}\n})).on(fetchCurrencies.done, (state, res) => ({ ...state,\n  data: res.result.data.results\n}));\nconst detectionInfo = localStorage.getItem('detectionInfo');\nconst appLang = localStorage.getItem('lang');\nconst $detectLocationInfo = createStore(detectionInfo ? JSON.parse(detectionInfo) : {}).on(fetchDetectLocation.done, (state, res) => res.result.data);\nconst $appLang = createStore(appLang ? JSON.parse(appLang) : null).on(fetchDetectLocation.done, (state, {\n  result\n}) => result.data.lang).on(fetchAccountInfo.done, (state, {\n  result\n}) => {\n  if (result.data.user_lang !== state) {\n    return result.data.user_lang;\n  }\n\n  return state;\n}).on(fetchUpdateAccount.done, (state, {\n  result\n}) => {\n  if (result.data.user_lang !== state) {\n    return result.data.user_lang;\n  }\n\n  return state;\n}).on(changeAppLang, (state, lang) => {\n  if (state !== lang) {\n    return lang;\n  }\n\n  return state;\n});\n$detectLocationInfo.watch(state => {\n  if (Object.values(state).length > 0) {\n    localStorage.setItem('detectionInfo', JSON.stringify(state));\n  } else {\n    localStorage.removeItem(detectionInfo);\n  }\n});\nconst $socketCounters = createStore({\n  chatUnreadCounter: 0\n}).on(socketCountersMount, (state, payload) => ({ ...state,\n  ...payload\n}));\nconst $device = createStore(null).on(deviceMount, (state, payload) => payload);\n$appLang.watch(state => {\n  if (state) {\n    localStorage.setItem('lang', JSON.stringify(state));\n  }\n});\nexport const $appModel = combine({\n  $app,\n  $device,\n  $currenciesList,\n  $socketCounters,\n  $detectLocationInfo,\n  $appLang\n});","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Models/app/store.js"],"names":["combine","createStore","Cookies","fetchCurrencies","fetchDetectLocation","changeAppLang","changeMenuOpen","changeSearchFocus","changeShowAccounts","changeSpecPanel","commentIdMount","deviceMount","onReplyCommentDataMount","openFastAuthMount","paymentMethodMount","saveURLMount","socketCountersMount","switchOrgGroupPanel","tokenMount","fetchAccountInfo","fetchUpdateAccount","defaultAppState","saveURL","commentId","menuOpen","searchFocus","showAccounts","openFastAuth","showSpecPanel","onReplyCommentData","changeOrgGroupPanel","paymentMethodValue","token","get","$app","on","state","status","$currenciesList","loading","data","error","pending","fail","result","done","res","results","detectionInfo","localStorage","getItem","appLang","$detectLocationInfo","JSON","parse","$appLang","lang","user_lang","watch","Object","values","length","setItem","stringify","removeItem","$socketCounters","chatUnreadCounter","payload","$device","$appModel"],"mappings":"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","sourcesContent":["import {combine, createStore} from 'effector'\r\nimport Cookies from 'js-cookie'\r\nimport {fetchCurrencies, fetchDetectLocation} from './effects'\r\nimport {\r\n    changeAppLang,\r\n    changeMenuOpen,\r\n    changeSearchFocus,\r\n    changeShowAccounts,\r\n    changeSpecPanel,\r\n    commentIdMount,\r\n    deviceMount,\r\n    onReplyCommentDataMount,\r\n    openFastAuthMount,\r\n    paymentMethodMount,\r\n    saveURLMount,\r\n    socketCountersMount,\r\n    switchOrgGroupPanel,\r\n    tokenMount\r\n} from './events'\r\nimport {fetchAccountInfo, fetchUpdateAccount} from '../account-model/effects'\r\n\r\n\r\nconst defaultAppState = {\r\n    saveURL: '',\r\n    commentId: '',\r\n    menuOpen: false,\r\n    searchFocus: false,\r\n    showAccounts: false,\r\n    openFastAuth: false,\r\n    showSpecPanel: false,\r\n    onReplyCommentData: '',\r\n    changeOrgGroupPanel: false,\r\n    paymentMethodValue: 'cash',\r\n    token: Cookies.get('token') || null\r\n}\r\n\r\nconst $app = createStore(defaultAppState)\r\n    .on(tokenMount, (state, token) => ({...state, token}))\r\n    .on(saveURLMount, (state, saveURL) => ({...state, saveURL}))\r\n    .on(commentIdMount, (state, commentId) => ({...state, commentId}))\r\n    .on(changeMenuOpen, (state, status) => ({...state, menuOpen: status}))\r\n    .on(changeSearchFocus, (state, status) => ({...state, searchFocus: status}))\r\n    .on(changeSpecPanel, (state, status) => ({...state, showSpecPanel: status}))\r\n    .on(openFastAuthMount, (state, status) => ({...state, openFastAuth: status}))\r\n    .on(changeShowAccounts, (state, status) => ({...state, showAccounts: status}))\r\n    .on(switchOrgGroupPanel, (state, status) => ({...state, changeOrgGroupPanel: status}))\r\n    .on(paymentMethodMount, (state, paymentMethodValue) => ({...state, paymentMethodValue}))\r\n    .on(onReplyCommentDataMount, (state, onReplyCommentData) => ({...state, onReplyCommentData}))\r\n\r\nconst $currenciesList = createStore({loading: false, data: [], error: false})\r\n    .on(fetchCurrencies.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchCurrencies.fail, (state, {error}) => ({\r\n        ...state, error, data: [], result: {}\r\n    }))\r\n    .on(fetchCurrencies.done, (state, res) => ({\r\n        ...state, data: res.result.data.results\r\n    }))\r\n\r\nconst detectionInfo = localStorage.getItem('detectionInfo')\r\nconst appLang = localStorage.getItem('lang')\r\n\r\nconst $detectLocationInfo = createStore(detectionInfo ? JSON.parse(detectionInfo) : {})\r\n    .on(fetchDetectLocation.done, (state, res) => res.result.data)\r\n\r\nconst $appLang = createStore(appLang ? JSON.parse(appLang) : null)\r\n    .on(fetchDetectLocation.done, (state, {result}) => result.data.lang)\r\n    .on(fetchAccountInfo.done, (state, {result}) => {\r\n        if (result.data.user_lang !== state) {\r\n            return result.data.user_lang\r\n        }\r\n        return state\r\n    })\r\n    .on(fetchUpdateAccount.done, (state, {result}) => {\r\n        if (result.data.user_lang !== state) {\r\n            return result.data.user_lang\r\n        }\r\n        return state\r\n    })\r\n    .on(changeAppLang, (state, lang) => {\r\n        if (state !== lang) {\r\n            return lang\r\n        }\r\n        return state\r\n    })\r\n\r\n$detectLocationInfo.watch((state) => {\r\n    if (Object.values(state).length > 0) {\r\n        localStorage.setItem('detectionInfo', JSON.stringify(state))\r\n    } else {\r\n        localStorage.removeItem(detectionInfo)\r\n    }\r\n})\r\n\r\nconst $socketCounters = createStore({chatUnreadCounter: 0})\r\n    .on(socketCountersMount, (state, payload) => ({...state, ...payload}))\r\n\r\nconst $device = createStore(null)\r\n    .on(deviceMount, (state, payload) => (payload))\r\n\r\n\r\n$appLang.watch(state => {\r\n    if (state) {\r\n        localStorage.setItem('lang', JSON.stringify(state))\r\n    }\r\n})\r\n\r\nexport const $appModel = combine({\r\n    $app,\r\n    $device,\r\n    $currenciesList,\r\n    $socketCounters,\r\n    $detectLocationInfo,\r\n    $appLang\r\n})"]},"metadata":{},"sourceType":"module"}