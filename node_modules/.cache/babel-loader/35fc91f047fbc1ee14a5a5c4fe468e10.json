{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/Records/organisms/choose-specialist.jsx\";\nimport React from 'react';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { useParams } from 'react-router-dom';\nimport { useStore } from 'effector-react';\nimport { $appModel } from '../../../Models/app';\nimport { useUrlGenerate } from '../../../Hooks/org';\nimport { $orderModel } from '../../../Models/order-model';\nimport { INFO_MAT } from '../../../Constants/app';\nimport { AccountScrollWrapper, SpecialistNavLink } from '../atoms';\nimport { URL_KEYS } from '../../../Constants';\nimport { ShortCard, ShortCardSkeleton } from '../../../Components/Cards';\nimport { Avatar } from '../../../UIComponents/Avatar';\nimport { Col, Row } from 'antd';\nimport { SkeletonUI } from '../../../UIComponents/GlobalStyles';\nconst skeleton = generateSkeleton(1);\nexport const ChooseSpecialist = () => {\n  const {\n    organization\n  } = useParams();\n  const {\n    $device\n  } = useStore($appModel);\n  const {\n    generateUrl,\n    getActive\n  } = useUrlGenerate();\n  const {\n    $orderCartList: {\n      data,\n      forceLoading\n    }\n  } = useStore($orderModel);\n  const currentOrg = data.find(item => item.seller.slug_name === organization);\n  const specList = currentOrg ? currentOrg.seller.specialists : [];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, forceLoading === 2 ? /*#__PURE__*/React.createElement(React.Fragment, null, $device && $device === INFO_MAT ? /*#__PURE__*/React.createElement(AccountScrollWrapper, {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 41\n    }\n  }, specList.map((item, idx) => /*#__PURE__*/React.createElement(SpecialistNavLink, {\n    key: `${idx + 1}`,\n    to: generateUrl(URL_KEYS.SPECIALIST_ID, item.id),\n    isActive: () => getActive(URL_KEYS.SPECIALIST_ID, item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(ShortCard, {\n    imgSize: 80,\n    direction: \"vertical\",\n    imgUrl: item.user.avatar,\n    name: item.user.full_name,\n    text: item.job.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 57\n    }\n  })))) : /*#__PURE__*/React.createElement(AccountScrollWrapper, {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 41\n    }\n  }, specList.map((item, idx) => /*#__PURE__*/React.createElement(SpecialistNavLink, {\n    key: `${idx + 1}`,\n    to: generateUrl(URL_KEYS.SPECIALIST_ID, item.id),\n    isActive: () => getActive(URL_KEYS.SPECIALIST_ID, item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    size: 40,\n    imgUrl: item.user.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 57\n    }\n  }))))) : /*#__PURE__*/React.createElement(Row, {\n    gutter: [12, 0],\n    style: {\n      padding: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  }, $device && $device === INFO_MAT ? /*#__PURE__*/React.createElement(React.Fragment, null, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(ShortCardSkeleton, {\n    direction: \"vertical\",\n    textWidth: 60,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 49\n    }\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonUI, {\n    width: 40,\n    height: 40,\n    variant: \"circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 49\n    }\n  }))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/Records/organisms/choose-specialist.jsx"],"names":["React","generateSkeleton","useParams","useStore","$appModel","useUrlGenerate","$orderModel","INFO_MAT","AccountScrollWrapper","SpecialistNavLink","URL_KEYS","ShortCard","ShortCardSkeleton","Avatar","Col","Row","SkeletonUI","skeleton","ChooseSpecialist","organization","$device","generateUrl","getActive","$orderCartList","data","forceLoading","currentOrg","find","item","seller","slug_name","specList","specialists","display","map","idx","SPECIALIST_ID","id","user","avatar","full_name","job","name","padding"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {useParams} from 'react-router-dom'\nimport {useStore} from 'effector-react'\nimport {$appModel} from '../../../Models/app'\nimport {useUrlGenerate} from '../../../Hooks/org'\nimport {$orderModel} from '../../../Models/order-model'\nimport {INFO_MAT} from '../../../Constants/app'\nimport {AccountScrollWrapper, SpecialistNavLink} from '../atoms'\nimport {URL_KEYS} from '../../../Constants'\nimport {ShortCard, ShortCardSkeleton} from '../../../Components/Cards'\nimport {Avatar} from '../../../UIComponents/Avatar'\nimport {Col, Row} from 'antd'\nimport {SkeletonUI} from '../../../UIComponents/GlobalStyles'\n\nconst skeleton = generateSkeleton(1)\nexport const ChooseSpecialist = () => {\n    const {organization} = useParams()\n    const {$device} = useStore($appModel)\n    const {generateUrl, getActive} = useUrlGenerate()\n    const {$orderCartList: {data, forceLoading}} = useStore($orderModel)\n    const currentOrg = data.find(item => item.seller.slug_name === organization)\n    const specList = currentOrg ? currentOrg.seller.specialists : []\n    \n    return (\n        <>\n            {\n                forceLoading === 2\n                    ? (\n                        <>\n                            {\n                                $device && $device === INFO_MAT\n                                    ? (\n                                        <AccountScrollWrapper style={{display: 'flex'}}>\n                                            {\n                                                specList.map((item, idx) => (\n                                                    <SpecialistNavLink\n                                                        key={`${idx + 1}`}\n                                                        to={generateUrl(URL_KEYS.SPECIALIST_ID, item.id)}\n                                                        isActive={() => getActive(URL_KEYS.SPECIALIST_ID, item.id)}\n                                                    >\n                                                        <ShortCard\n                                                            imgSize={80}\n                                                            direction='vertical'\n                                                            imgUrl={item.user.avatar}\n                                                            name={item.user.full_name}\n                                                            text={item.job.name}\n                                                        />\n                                                    </SpecialistNavLink>\n                                                ))\n                                            }\n                                        </AccountScrollWrapper>\n                                    )\n                                    : (\n                                        <AccountScrollWrapper style={{display: 'flex'}}>\n                                            {\n                                                specList.map((item, idx) => (\n                                                    <SpecialistNavLink\n                                                        key={`${idx + 1}`}\n                                                        to={generateUrl(URL_KEYS.SPECIALIST_ID, item.id)}\n                                                        isActive={() => getActive(URL_KEYS.SPECIALIST_ID, item.id)}\n                                                    >\n                                                        <Avatar\n                                                            size={40}\n                                                            imgUrl={item.user.avatar}\n                                                        />\n                                                    </SpecialistNavLink>\n                                                ))\n                                            }\n                                        </AccountScrollWrapper>\n                                    )\n                            }\n                        </>\n                    )\n                    : <Row gutter={[12, 0]} style={{padding: 3}}>\n                        {\n                            $device && $device === INFO_MAT\n                                ? <>\n                                    {\n                                        skeleton.map((item, idx) => (\n                                            <Col key={`${idx + 1}`}>\n                                                <ShortCardSkeleton\n                                                    direction='vertical'\n                                                    textWidth={60}\n                                                />\n                                            </Col>\n                                        ))\n                                    }\n                                </>\n                                : <>\n                                    {\n                                        skeleton.map((item, idx) => (\n                                            <Col key={`${idx + 1}`}>\n                                                <SkeletonUI\n                                                    width={40}\n                                                    height={40}\n                                                    variant='circle'\n                                                />\n                                            </Col>\n                                        ))\n                                    }\n                                </>\n                        }\n                    </Row>\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}