{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/OrganizationPage/OfferingsList/index.jsx\";\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useStore } from 'effector-react';\nimport { useParams } from 'react-router-dom';\nimport { $appModel, changeSpecPanel, switchOrgGroupPanel } from '../../../Models/app';\nimport { useOfferingList } from '../../../Hooks/offerings';\nimport { OverlaySettings } from '../../../Components/Overlay';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { OverlayAuth } from '../../../UIComponents/OverlayAuth';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { useOrgOrder, useOrgOrderList } from '../../../Hooks/order';\nimport { OverlayOfferingGroup, OverlaySpecialists } from '../../../Components/Offering/OrgOfferings';\nimport { useBodyOverflowHidden, useUrlParams } from '../../../Hooks/app';\nimport { useInfiniteQuery, useMutation } from 'react-query';\nimport orgApi from '../../../Service-v2/organization';\nimport { numberFormat } from '../../../utils/number-utils';\nimport { ProductCard, ProductCardSkeleton } from '../../../Components/Cards';\nimport { EmptyContainerWrapper } from '../../../UIComponents/GlobalStyles';\nimport { NoOfferingSvg } from '../../../Icons/NoOffering';\nimport { URL_KEYS } from '../../../Constants';\nimport { Col, Row } from 'antd';\nimport order from '../../../Service/order';\nconst skeleton = generateSkeleton(10, 100, 220);\nexport const OfferingsList = () => {\n  useOrgOrderList();\n  const {\n    urlData,\n    specialist_id: specId\n  } = useUrlParams();\n  const {\n    organization\n  } = useParams();\n  const spec = urlData[URL_KEYS.SPECIALIST_ID];\n  const search = urlData[URL_KEYS.SEARCH];\n  const {\n    loadMoreOfferingGroup\n  } = useOfferingList();\n  const [auth, setAuth] = useState(false);\n  const {\n    currency,\n    checkoutOffering\n  } = useOrgOrder();\n  const [query, setQuery] = useState(null);\n  const group = urlData[URL_KEYS.OFFERING_GROUP_ID];\n  const [offeringItem, setOfferingItem] = useState(false);\n  const {\n    $app: {\n      token,\n      changeOrgGroupPanel,\n      showSpecPanel\n    }\n  } = useStore($appModel);\n  useBodyOverflowHidden(changeOrgGroupPanel || showSpecPanel);\n  const create = useMutation(order.postOrgOrderCart, {\n    onMutate: newData => {}\n  });\n  const remove = useMutation(order.deleteOrderCart, {\n    onMutate: newData => {\n      query.cancelQueries(['/org/offerings', organization]);\n      const previousTodo = query.getQueryData(['/org/offerings', organization]);\n      query.setQueryData(['/org/offerings', organization]);\n      return () => query.setQueryData(['/org/offerings', organization], previousTodo);\n    },\n    onError: (err, newData, rollback) => rollback(),\n    onSettled: newData => {\n      query.invalidateQueries(['/org/offerings', organization]);\n    }\n  });\n  useEffect(() => {\n    let timeout = null;\n    timeout = setTimeout(() => {\n      const tmp = {};\n\n      if (group) {\n        tmp['group'] = group;\n      }\n\n      if (spec) {\n        tmp['responsible'] = spec;\n      }\n\n      if (search) {\n        tmp['search'] = search;\n      }\n\n      setQuery(tmp);\n    }, 300);\n    return () => {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n  }, [group, spec, search]);\n  const {\n    isLoading,\n    hasNextPage,\n    fetchNextPage,\n    data\n  } = useInfiniteQuery(['/org/offerings', organization, query], async ({\n    pageParam = 0\n  }) => {\n    let params = {\n      limit: 10,\n      offset: pageParam\n    };\n\n    if (query) {\n      params = { ...params,\n        ...query\n      };\n    }\n\n    const res = await orgApi.getOrgOffering({\n      slug: organization,\n      params\n    });\n    return { ...res.data,\n      nextOffset: pageParam + 10\n    };\n  }, {\n    enabled: !!(organization && query),\n    getNextPageParam: data => {\n      if (data.count > data.nextOffset) {\n        return data === null || data === void 0 ? void 0 : data.nextOffset;\n      } else {\n        return undefined;\n      }\n    }\n  });\n  const onCreatingCartItem = useCallback(event => {\n    const orgSpecList = event.responsible;\n\n    if (event.is_in_cart) {\n      console.log('true');\n    } else {\n      // const params = {\n      //     org_slug_name: event.organization,\n      //     data: {\n      //         offering_id: event.id,\n      //         responsible_id: specId ? specId : orgSpecList[0].id\n      //     }\n      // }\n      // create.mutate(params)\n      console.log('is in cart false');\n    }\n  }, [create, specId]);\n\n  const handleClose = () => {\n    if (auth) {\n      setAuth(false);\n    }\n\n    setOfferingItem(false);\n  };\n\n  const list = useMemo(() => {\n    if ((data === null || data === void 0 ? void 0 : data.pages) && (data === null || data === void 0 ? void 0 : data.pages.length) > 0) {\n      const arr = data === null || data === void 0 ? void 0 : data.pages;\n      let tmp = [];\n\n      for (let g of arr) {\n        if (g === null || g === void 0 ? void 0 : g.result) {\n          tmp = [...tmp, ...g.result];\n        }\n      }\n\n      return tmp;\n    }\n\n    return [];\n  }, [data]);\n  const dataLength = useMemo(() => {\n    var _data$pages;\n\n    return (data === null || data === void 0 ? void 0 : data.pages) ? ((_data$pages = data.pages[data.pages.length - 1]) === null || _data$pages === void 0 ? void 0 : _data$pages.nextOffset) || 10 : 10;\n  }, [data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OverlaySettings, {\n    openSettings: changeOrgGroupPanel,\n    content: /*#__PURE__*/React.createElement(OverlayOfferingGroup, {\n      loadMore: loadMoreOfferingGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 26\n      }\n    }),\n    onClose: () => switchOrgGroupPanel(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(OverlaySettings, {\n    openSettings: showSpecPanel,\n    onClose: () => changeSpecPanel(false),\n    content: /*#__PURE__*/React.createElement(OverlaySpecialists, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(OverlaySettings, {\n    openSettings: offeringItem,\n    onClose: handleClose,\n    content: /*#__PURE__*/React.createElement(OverlayAuth, {\n      action: () => checkoutOffering(offeringItem),\n      auth: auth,\n      setAuth: setAuth,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    next: () => fetchNextPage(),\n    dataLength: dataLength,\n    hasMore: !isLoading && !!hasNextPage,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [12, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, !isLoading ? (list === null || list === void 0 ? void 0 : list.length) > 0 && list.map((item, idx) => {\n    const offeringData = {\n      id: item.id,\n      qty: item.qty,\n      name: item.name,\n      image: item.image,\n      currency: currency,\n      loading: item.loading,\n      inCart: item.is_in_cart,\n      organization: organization,\n      cost: numberFormat(item.cost),\n      responsible: item.responsible,\n      path: `/${organization}/offerings/${item.id}`\n    };\n    return /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      key: idx + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ProductCard, {\n      showBag: true,\n      item: offeringData,\n      handleClick: item => {\n        !!token ? onCreatingCartItem(item) : setOfferingItem(item);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 45\n      }\n    }));\n  }) : skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    key: idx + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ProductCardSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 41\n    }\n  }))))), list && (list === null || list === void 0 ? void 0 : list.length) === 0 && /*#__PURE__*/React.createElement(EmptyContainerWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(NoOfferingSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/OrganizationPage/OfferingsList/index.jsx"],"names":["React","useCallback","useEffect","useMemo","useState","useStore","useParams","$appModel","changeSpecPanel","switchOrgGroupPanel","useOfferingList","OverlaySettings","InfiniteScroll","OverlayAuth","generateSkeleton","useOrgOrder","useOrgOrderList","OverlayOfferingGroup","OverlaySpecialists","useBodyOverflowHidden","useUrlParams","useInfiniteQuery","useMutation","orgApi","numberFormat","ProductCard","ProductCardSkeleton","EmptyContainerWrapper","NoOfferingSvg","URL_KEYS","Col","Row","order","skeleton","OfferingsList","urlData","specialist_id","specId","organization","spec","SPECIALIST_ID","search","SEARCH","loadMoreOfferingGroup","auth","setAuth","currency","checkoutOffering","query","setQuery","group","OFFERING_GROUP_ID","offeringItem","setOfferingItem","$app","token","changeOrgGroupPanel","showSpecPanel","create","postOrgOrderCart","onMutate","newData","remove","deleteOrderCart","cancelQueries","previousTodo","getQueryData","setQueryData","onError","err","rollback","onSettled","invalidateQueries","timeout","setTimeout","tmp","clearTimeout","isLoading","hasNextPage","fetchNextPage","data","pageParam","params","limit","offset","res","getOrgOffering","slug","nextOffset","enabled","getNextPageParam","count","undefined","onCreatingCartItem","event","orgSpecList","responsible","is_in_cart","console","log","handleClose","list","pages","length","arr","g","result","dataLength","map","item","idx","offeringData","id","qty","name","image","loading","inCart","cost","path"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useMemo, useState} from 'react'\r\nimport {useStore} from 'effector-react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {$appModel, changeSpecPanel, switchOrgGroupPanel} from '../../../Models/app'\r\nimport {useOfferingList} from '../../../Hooks/offerings'\r\nimport {OverlaySettings} from '../../../Components/Overlay'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport {OverlayAuth} from '../../../UIComponents/OverlayAuth'\r\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\r\nimport {useOrgOrder, useOrgOrderList} from '../../../Hooks/order'\r\nimport {OverlayOfferingGroup, OverlaySpecialists} from '../../../Components/Offering/OrgOfferings'\r\nimport {useBodyOverflowHidden, useUrlParams} from '../../../Hooks/app'\r\nimport {useInfiniteQuery, useMutation} from 'react-query'\r\nimport orgApi from '../../../Service-v2/organization'\r\nimport {numberFormat} from '../../../utils/number-utils'\r\nimport {ProductCard, ProductCardSkeleton} from '../../../Components/Cards'\r\nimport {EmptyContainerWrapper} from '../../../UIComponents/GlobalStyles'\r\nimport {NoOfferingSvg} from '../../../Icons/NoOffering'\r\nimport {URL_KEYS} from '../../../Constants'\r\nimport {Col, Row} from 'antd'\r\nimport order from '../../../Service/order'\r\n\r\nconst skeleton = generateSkeleton(10, 100, 220)\r\nexport const OfferingsList = () => {\r\n    useOrgOrderList()\r\n    const {urlData, specialist_id: specId} = useUrlParams()\r\n    const {organization} = useParams()\r\n    const spec = urlData[URL_KEYS.SPECIALIST_ID]\r\n    const search = urlData[URL_KEYS.SEARCH]\r\n    const {loadMoreOfferingGroup} = useOfferingList()\r\n    const [auth, setAuth] = useState(false)\r\n    const {currency, checkoutOffering} = useOrgOrder()\r\n    const [query, setQuery] = useState(null)\r\n    const group = urlData[URL_KEYS.OFFERING_GROUP_ID]\r\n    const [offeringItem, setOfferingItem] = useState(false)\r\n    const {$app: {token, changeOrgGroupPanel, showSpecPanel}} = useStore($appModel)\r\n    useBodyOverflowHidden(changeOrgGroupPanel || showSpecPanel)\r\n    \r\n    const create = useMutation(order.postOrgOrderCart, {\r\n        onMutate: newData => {\r\n        \r\n        }\r\n    })\r\n    \r\n    const remove = useMutation(order.deleteOrderCart, {\r\n        onMutate: newData => {\r\n            query.cancelQueries(['/org/offerings', organization])\r\n            \r\n            const previousTodo = query.getQueryData(['/org/offerings', organization])\r\n            \r\n            query.setQueryData(['/org/offerings', organization])\r\n            \r\n            return () => query.setQueryData(['/org/offerings', organization], previousTodo)\r\n        },\r\n        onError: (err, newData, rollback) => rollback(),\r\n        onSettled: newData => {\r\n            query.invalidateQueries(['/org/offerings', organization])\r\n        }\r\n    })\r\n    \r\n    useEffect(() => {\r\n        let timeout = null\r\n        timeout = setTimeout(() => {\r\n            const tmp = {}\r\n            if (group) {\r\n                tmp['group'] = group\r\n            }\r\n            if (spec) {\r\n                tmp['responsible'] = spec\r\n            }\r\n            if (search) {\r\n                tmp['search'] = search\r\n            }\r\n            setQuery(tmp)\r\n        }, 300)\r\n        \r\n        return () => {\r\n            clearTimeout(timeout)\r\n            timeout = null\r\n        }\r\n    }, [group, spec, search])\r\n    \r\n    const {isLoading, hasNextPage, fetchNextPage, data} = useInfiniteQuery(\r\n        ['/org/offerings', organization, query],\r\n        async ({pageParam = 0}) => {\r\n            \r\n            let params = {\r\n                limit: 10,\r\n                offset: pageParam\r\n            }\r\n            \r\n            if (query) {\r\n                params = {...params, ...query}\r\n            }\r\n            const res = await orgApi.getOrgOffering({slug: organization, params})\r\n            return {...res.data, nextOffset: pageParam + 10}\r\n        },\r\n        {\r\n            enabled: !!(organization && query),\r\n            getNextPageParam: (data) => {\r\n                if (data.count > data.nextOffset) {\r\n                    return data?.nextOffset\r\n                } else {\r\n                    return undefined\r\n                }\r\n            }\r\n        }\r\n    )\r\n    \r\n    const onCreatingCartItem = useCallback((event) => {\r\n        const orgSpecList = event.responsible\r\n        \r\n        if (event.is_in_cart) {\r\n            console.log('true')\r\n        } else {\r\n            // const params = {\r\n            //     org_slug_name: event.organization,\r\n            //     data: {\r\n            //         offering_id: event.id,\r\n            //         responsible_id: specId ? specId : orgSpecList[0].id\r\n            //     }\r\n            // }\r\n            // create.mutate(params)\r\n            \r\n            console.log('is in cart false')\r\n        }\r\n    }, [create, specId])\r\n    \r\n    const handleClose = () => {\r\n        if (auth) {\r\n            setAuth(false)\r\n        }\r\n        setOfferingItem(false)\r\n    }\r\n    \r\n    const list = useMemo(() => {\r\n        if (data?.pages && data?.pages.length > 0) {\r\n            const arr = data?.pages\r\n            let tmp = []\r\n            for (let g of arr) {\r\n                if (g?.result) {\r\n                    tmp = [...tmp, ...g.result]\r\n                }\r\n            }\r\n            return tmp\r\n        }\r\n        return []\r\n    }, [data])\r\n    \r\n    const dataLength = useMemo(() => {\r\n        return data?.pages ? data.pages[data.pages.length - 1]?.nextOffset || 10 : 10\r\n    }, [data])\r\n    \r\n    return (\r\n        <>\r\n            <OverlaySettings\r\n                openSettings={changeOrgGroupPanel}\r\n                content={<OverlayOfferingGroup loadMore={loadMoreOfferingGroup}/>}\r\n                onClose={() => switchOrgGroupPanel(false)}\r\n            />\r\n            <OverlaySettings\r\n                openSettings={showSpecPanel}\r\n                onClose={() => changeSpecPanel(false)}\r\n                content={<OverlaySpecialists/>}\r\n            />\r\n            <OverlaySettings\r\n                openSettings={offeringItem}\r\n                onClose={handleClose}\r\n                content={<OverlayAuth\r\n                    action={() => checkoutOffering(offeringItem)}\r\n                    auth={auth}\r\n                    setAuth={setAuth}\r\n                    onClose={handleClose}\r\n                />}\r\n            />\r\n            <InfiniteScroll\r\n                next={() => fetchNextPage()}\r\n                dataLength={dataLength}\r\n                hasMore={!isLoading && !!hasNextPage}\r\n                loader={<>...loading</>}\r\n            >\r\n                <Row gutter={[12, 12]}>\r\n                    {\r\n                        !isLoading\r\n                            ? (\r\n                                list?.length > 0 && list.map((item, idx) => {\r\n                                    const offeringData = {\r\n                                        id: item.id,\r\n                                        qty: item.qty,\r\n                                        name: item.name,\r\n                                        image: item.image,\r\n                                        currency: currency,\r\n                                        loading: item.loading,\r\n                                        inCart: item.is_in_cart,\r\n                                        organization: organization,\r\n                                        cost: numberFormat(item.cost),\r\n                                        responsible: item.responsible,\r\n                                        path: `/${organization}/offerings/${item.id}`\r\n                                    }\r\n                                    return (\r\n                                        <Col span={12} key={idx + 1}>\r\n                                            <ProductCard\r\n                                                showBag\r\n                                                item={offeringData}\r\n                                                handleClick={(item) => {\r\n                                                    !!token\r\n                                                        ? onCreatingCartItem(item)\r\n                                                        : setOfferingItem(item)\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            ) : (\r\n                                skeleton.map((item, idx) => (\r\n                                    <Col span={12} key={idx + 1}>\r\n                                        <ProductCardSkeleton/>\r\n                                    </Col>\r\n                                ))\r\n                            )\r\n                    }\r\n                </Row>\r\n            </InfiniteScroll>\r\n            {\r\n                list && list?.length === 0 && (\r\n                    <EmptyContainerWrapper>\r\n                        <NoOfferingSvg/>\r\n                    </EmptyContainerWrapper>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}