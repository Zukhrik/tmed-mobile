{"ast":null,"code":"import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { $chatModel, temporaryMessageMount, userSentMessageMount, userUpdateMessageMount } from '../../Models/chat-model';\nimport { v4 as uuidV4 } from 'uuid';\nimport moment from 'moment';\nimport { useStore } from 'effector-react';\nimport { $accountModel } from '../../Models/account-model';\nimport { useOutsideClicker } from '../app/use-outside-clicker';\nimport { useTranslation } from 'react-i18next';\nexport function useChatInput({\n  partner_slug\n}) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    $temporaryMessage: tmpMsg\n  } = useStore($chatModel);\n  const uploadRef = useRef(null);\n  const inputRef = useRef(null);\n  const inputWrapperRef = useRef(null);\n  const [modalIsOpen, setModalIsOpen] = useState();\n  const [iosHeight, setIosHeight] = useState(0);\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  const {\n    clicked\n  } = useOutsideClicker(inputWrapperRef);\n  const formik = useFormik({\n    initialValues: {\n      text: '',\n      caption: '',\n      file: ''\n    },\n\n    onSubmit({\n      text\n    }, {\n      resetForm\n    }) {\n      const formData = new FormData();\n      formData.append('text', text);\n      const date = moment().format('YYYY-MM-DD HH:mm');\n      const temporaryId = uuidV4();\n\n      if (!tmpMsg) {\n        const payload = {\n          text,\n          date,\n          file: null,\n          sender: {\n            username: currentProfile.slug_name\n          }\n        };\n        userSentMessageMount({\n          partner: partner_slug,\n          data: formData,\n          uuid: temporaryId,\n          payload,\n          file: null,\n          onUploadProgress: evt => {\n            console.log(evt);\n          }\n        });\n      }\n\n      if (tmpMsg) {\n        if (tmpMsg.type === 'edit') {\n          const payload = { ...tmpMsg,\n            updated: date,\n            text\n          };\n          userUpdateMessageMount({\n            id: tmpMsg.id,\n            data: {\n              text\n            },\n            partner: partner_slug,\n            payload\n          });\n        }\n\n        if (tmpMsg.type === 'reply') {\n          const payload = {\n            text,\n            id: temporaryId,\n            date: moment().format('YYYY-MM-DD HH:mm'),\n            sender: tmpMsg.sender,\n            reply_to: {\n              sender: tmpMsg.sender,\n              text: tmpMsg.text\n            }\n          };\n          formData.append('reply_to_id', tmpMsg.id);\n          userSentMessageMount({\n            partner: partner_slug,\n            data: formData,\n            uuid: temporaryId,\n            payload\n          });\n        }\n      }\n\n      resetForm();\n      inputRef.current.focus();\n      temporaryMessageMount(null);\n    }\n\n  });\n  const disableScroll = useCallback(() => {\n    if (!modalIsOpen) {\n      window.scroll(0, 0);\n    }\n  }, [modalIsOpen]);\n  useEffect(() => {\n    window.addEventListener('scroll', disableScroll);\n    return () => {\n      window.removeEventListener('scroll', disableScroll);\n    };\n  }, [disableScroll]);\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n  }, []);\n\n  const handleFocus = () => {\n    if (/iPad|iPhone|iPod/.test(navigator.userAgent) && /Mobile/.test(navigator.userAgent)) {\n      setIosHeight(252);\n    } else {\n      setIosHeight(0);\n    }\n  };\n\n  const handleCancelModal = () => {\n    formik.resetForm();\n    setModalIsOpen(false);\n  };\n\n  const getTitle = useCallback(() => {\n    let title = '';\n    const file = formik.values.file;\n\n    if (file) {\n      if (file.type.indexOf('image') !== -1) {\n        title = t('send_photo');\n      }\n    }\n\n    return title;\n  }, [formik, t]);\n\n  const handleGetFile = file => {\n    formik.setFieldValue('file', file);\n    setModalIsOpen(true);\n  };\n\n  useEffect(() => {\n    if (clicked) {\n      inputRef.current.blur();\n      setIosHeight(0);\n    }\n  }, [clicked]);\n  return {\n    handleFocus,\n    uploadRef,\n    inputRef,\n    formik,\n    inputWrapperRef,\n    iosHeight,\n    setModalIsOpen,\n    modalIsOpen,\n    handleCancelModal,\n    getTitle,\n    handleGetFile\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/chat/use-chat-input.js"],"names":["useCallback","useEffect","useRef","useState","useFormik","$chatModel","temporaryMessageMount","userSentMessageMount","userUpdateMessageMount","v4","uuidV4","moment","useStore","$accountModel","useOutsideClicker","useTranslation","useChatInput","partner_slug","t","$temporaryMessage","tmpMsg","uploadRef","inputRef","inputWrapperRef","modalIsOpen","setModalIsOpen","iosHeight","setIosHeight","$profiles","currentProfile","clicked","formik","initialValues","text","caption","file","onSubmit","resetForm","formData","FormData","append","date","format","temporaryId","payload","sender","username","slug_name","partner","data","uuid","onUploadProgress","evt","console","log","type","updated","id","reply_to","current","focus","disableScroll","window","scroll","addEventListener","removeEventListener","document","body","style","overflow","handleFocus","test","navigator","userAgent","handleCancelModal","getTitle","title","values","indexOf","handleGetFile","setFieldValue","blur"],"mappings":"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","sourcesContent":["import {useCallback, useEffect, useRef, useState} from 'react'\nimport {useFormik} from 'formik'\nimport {$chatModel, temporaryMessageMount, userSentMessageMount, userUpdateMessageMount} from '../../Models/chat-model'\nimport {v4 as uuidV4} from 'uuid'\nimport moment from 'moment'\nimport {useStore} from 'effector-react'\nimport {$accountModel} from '../../Models/account-model'\nimport {useOutsideClicker} from '../app/use-outside-clicker'\nimport {useTranslation} from 'react-i18next'\n\nexport function useChatInput({partner_slug}) {\n    const {t} = useTranslation()\n    const {$temporaryMessage: tmpMsg} = useStore($chatModel)\n    const uploadRef = useRef(null)\n    const inputRef = useRef(null)\n    const inputWrapperRef = useRef(null)\n    const [modalIsOpen, setModalIsOpen] = useState()\n    const [iosHeight, setIosHeight] = useState(0)\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n\n    const {clicked} = useOutsideClicker(inputWrapperRef)\n\n    const formik = useFormik({\n        initialValues: {\n            text: '',\n            caption: '',\n            file: ''\n        },\n        onSubmit({text}, {resetForm}) {\n            const formData = new FormData()\n            formData.append('text', text)\n            const date = moment().format('YYYY-MM-DD HH:mm')\n            const temporaryId = uuidV4()\n            if (!tmpMsg) {\n                const payload = {\n                    text,\n                    date,\n                    file: null,\n                    sender: {username: currentProfile.slug_name}\n                }\n                userSentMessageMount({\n                    partner: partner_slug,\n                    data: formData,\n                    uuid: temporaryId,\n                    payload,\n                    file: null,\n                    onUploadProgress: (evt) => {\n                        console.log(evt)\n                    }\n                })\n            }\n\n            if (tmpMsg) {\n                if (tmpMsg.type === 'edit') {\n                    const payload = {\n                        ...tmpMsg,\n                        updated: date,\n                        text\n                    }\n                    userUpdateMessageMount({id: tmpMsg.id, data: {text}, partner: partner_slug, payload})\n                }\n\n                if (tmpMsg.type === 'reply') {\n                    const payload = {\n                        text,\n                        id: temporaryId,\n                        date: moment().format('YYYY-MM-DD HH:mm'),\n                        sender: tmpMsg.sender,\n                        reply_to: {\n                            sender: tmpMsg.sender,\n                            text: tmpMsg.text\n                        }\n                    }\n                    formData.append('reply_to_id', tmpMsg.id)\n                    userSentMessageMount({partner: partner_slug, data: formData, uuid: temporaryId, payload})\n                }\n            }\n\n\n            resetForm()\n            inputRef.current.focus()\n            temporaryMessageMount(null)\n        }\n    })\n\n\n    const disableScroll = useCallback(() => {\n        if (!modalIsOpen) {\n            window.scroll(0, 0)\n        }\n    }, [modalIsOpen])\n\n    useEffect(() => {\n        window.addEventListener('scroll', disableScroll)\n\n        return () => {\n            window.removeEventListener('scroll', disableScroll)\n        }\n    }, [disableScroll])\n\n    useEffect(() => {\n        document.body.style.overflow = 'hidden'\n    }, [])\n\n    const handleFocus = () => {\n        if (/iPad|iPhone|iPod/.test(navigator.userAgent) && /Mobile/.test(navigator.userAgent)) {\n            setIosHeight(252)\n        } else {\n            setIosHeight(0)\n        }\n    }\n\n    const handleCancelModal = () => {\n        formik.resetForm()\n        setModalIsOpen(false)\n    }\n\n    const getTitle = useCallback(() => {\n        let title = ''\n        const file = formik.values.file\n\n        if (file) {\n            if (file.type.indexOf('image') !== -1) {\n                title = t('send_photo')\n            }\n        }\n\n        return title\n    }, [formik, t])\n\n    const handleGetFile = (file) => {\n        formik.setFieldValue('file', file)\n        setModalIsOpen(true)\n    }\n\n    useEffect(() => {\n        if (clicked) {\n            inputRef.current.blur()\n            setIosHeight(0)\n        }\n    }, [clicked])\n\n    return {\n        handleFocus,\n        uploadRef,\n        inputRef,\n        formik,\n        inputWrapperRef,\n        iosHeight,\n        setModalIsOpen,\n        modalIsOpen,\n        handleCancelModal,\n        getTitle,\n        handleGetFile\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}