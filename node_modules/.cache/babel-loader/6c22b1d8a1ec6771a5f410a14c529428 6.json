{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useParams}from'react-router-dom';import{useCallback,useEffect}from'react';import{getOrderIdOffersMount}from'../../Models/order-model';var initialParams={limit:0,offset:10};export function useOrderIdOffers(){var _useParams=useParams(),order_id=_useParams.order_id;var getList=useCallback(function(){if(order_id){getOrderIdOffersMount({order_id:order_id});}},[order_id]);var loadMore=useCallback(function(page){var params=_objectSpread(_objectSpread({},initialParams),{},{offset:page*10});getList(params);},[getList]);useEffect(function(){getList(initialParams);},[getList]);return{loadMore:loadMore};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/order/use-order-id-offers.js"],"names":["useParams","useCallback","useEffect","getOrderIdOffersMount","initialParams","limit","offset","useOrderIdOffers","order_id","getList","loadMore","page","params"],"mappings":"oKAAA,OAAQA,SAAR,KAAwB,kBAAxB,CACA,OAAQC,WAAR,CAAqBC,SAArB,KAAqC,OAArC,CACA,OAAQC,qBAAR,KAAoC,0BAApC,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,KAAK,CAAE,CADW,CAElBC,MAAM,CAAE,EAFU,CAAtB,CAKA,MAAO,SAASC,CAAAA,gBAAT,EAA4B,CAC/B,eAAmBP,SAAS,EAA5B,CAAOQ,QAAP,YAAOA,QAAP,CAEA,GAAMC,CAAAA,OAAO,CAAGR,WAAW,CAAC,UAAM,CAC9B,GAAIO,QAAJ,CAAc,CACVL,qBAAqB,CAAC,CAACK,QAAQ,CAARA,QAAD,CAAD,CAArB,CACH,CACJ,CAJ0B,CAIxB,CAACA,QAAD,CAJwB,CAA3B,CAMA,GAAME,CAAAA,QAAQ,CAAGT,WAAW,CAAC,SAACU,IAAD,CAAU,CACnC,GAAMC,CAAAA,MAAM,gCACLR,aADK,MAERE,MAAM,CAAEK,IAAI,CAAG,EAFP,EAAZ,CAKAF,OAAO,CAACG,MAAD,CAAP,CACH,CAP2B,CAOzB,CAACH,OAAD,CAPyB,CAA5B,CASAP,SAAS,CAAC,UAAM,CACZO,OAAO,CAACL,aAAD,CAAP,CACH,CAFQ,CAEN,CAACK,OAAD,CAFM,CAAT,CAIA,MAAO,CAACC,QAAQ,CAARA,QAAD,CAAP,CACH","sourcesContent":["import {useParams} from 'react-router-dom'\nimport {useCallback, useEffect} from 'react'\nimport {getOrderIdOffersMount} from '../../Models/order-model'\n\nconst initialParams = {\n    limit: 0,\n    offset: 10\n}\n\nexport function useOrderIdOffers() {\n    const {order_id} = useParams()\n    \n    const getList = useCallback(() => {\n        if (order_id) {\n            getOrderIdOffersMount({order_id})\n        }\n    }, [order_id])\n    \n    const loadMore = useCallback((page) => {\n        const params = {\n            ...initialParams,\n            offset: page * 10\n        }\n        \n        getList(params)\n    }, [getList])\n    \n    useEffect(() => {\n        getList(initialParams)\n    }, [getList])\n    \n    return {loadMore}\n}"]},"metadata":{},"sourceType":"module"}