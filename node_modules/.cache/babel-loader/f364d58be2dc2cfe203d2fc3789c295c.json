{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/UIComponents/mu-inputs/maleculas/autocomplete-select.js\";\nimport React, { useState } from 'react';\nimport { Avatar } from '../../Avatar';\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { ArrowIosBottomSvg } from '../../../Icons/Arrow';\nimport { debounce } from '../../../utils/debounce-utils';\nimport { StyledFormControl, StyledHelperText, StyledInputError } from '../atoms';\nexport const AutocompleteSelect = ({\n  label,\n  error,\n  onBlur,\n  search,\n  options,\n  loading,\n  onSearch,\n  onChange,\n  onLoadMore,\n  helperText,\n  staticError,\n  defaultValue,\n  hideErrorText,\n  ...props\n}) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const renderOption = option => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, option.image && /*#__PURE__*/React.createElement(Avatar, {\n      imgUrl: option.image,\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 34\n      }\n    }), option.label);\n  };\n\n  const handleChange = (e, newValue) => {\n    onChange(newValue);\n  };\n\n  const handleBlur = () => {\n    if (inputValue.length > 0) {\n      debounce(onSearch(''), 300);\n      setInputValue('');\n    }\n\n    onBlur();\n  };\n\n  return /*#__PURE__*/React.createElement(StyledFormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, Object.assign({}, props, {\n    limitTags: 2,\n    options: options,\n    onBlur: handleBlur,\n    autoComplete: true,\n    loading: loading,\n    includeInputInList: true,\n    popupIcon: /*#__PURE__*/React.createElement(ArrowIosBottomSvg, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 28\n      }\n    }),\n    renderOption: renderOption,\n    filterOptions: v => v,\n    classes: {\n      paper: 'select-dropdown'\n    },\n    getOptionLabel: option => option.label,\n    ListboxProps: {\n      onScroll: onLoadMore,\n      style: {\n        maxHeight: 30 * 8 + 8\n      }\n    },\n    onChange: (e, value) => handleChange(e, value),\n    getOptionSelected: (option, values) => props.multiple ? option.value === values.value : !!option.value && !!values.value,\n    renderInput: params => {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        onChange: e => {\n          setInputValue(e.target.value);\n          debounce(onSearch(e.target.value), 300);\n        },\n        label: label,\n        variant: \"filled\",\n        error: !!error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), helperText && /*#__PURE__*/React.createElement(StyledHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 28\n    }\n  }, helperText), !hideErrorText && error && /*#__PURE__*/React.createElement(StyledInputError, {\n    staticError: staticError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 41\n    }\n  }, error));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/UIComponents/mu-inputs/maleculas/autocomplete-select.js"],"names":["React","useState","Avatar","TextField","Autocomplete","ArrowIosBottomSvg","debounce","StyledFormControl","StyledHelperText","StyledInputError","AutocompleteSelect","label","error","onBlur","search","options","loading","onSearch","onChange","onLoadMore","helperText","staticError","defaultValue","hideErrorText","props","inputValue","setInputValue","renderOption","option","image","handleChange","e","newValue","handleBlur","length","v","paper","onScroll","style","maxHeight","value","values","multiple","params","target"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;AACA,SAAQC,QAAR,QAAuB,+BAAvB;AACA,SAAQC,iBAAR,EAA2BC,gBAA3B,EAA6CC,gBAA7C,QAAoE,UAApE;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAC9B;AACIC,EAAAA,KADJ;AAEIC,EAAAA,KAFJ;AAGIC,EAAAA,MAHJ;AAIIC,EAAAA,MAJJ;AAKIC,EAAAA,OALJ;AAMIC,EAAAA,OANJ;AAOIC,EAAAA,QAPJ;AAQIC,EAAAA,QARJ;AASIC,EAAAA,UATJ;AAUIC,EAAAA,UAVJ;AAWIC,EAAAA,WAXJ;AAYIC,EAAAA,YAZJ;AAaIC,EAAAA,aAbJ;AAcI,KAAGC;AAdP,CAD8B,KAiB7B;AACD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAM0B,YAAY,GAAIC,MAAD,IAAY;AAC7B,wBACI,0CACKA,MAAM,CAACC,KAAP,iBAAgB,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAED,MAAM,CAACC,KAAvB;AAA8B,MAAA,IAAI,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADrB,EAEKD,MAAM,CAACjB,KAFZ,CADJ;AAMH,GAPD;;AASA,QAAMmB,YAAY,GAAG,CAACC,CAAD,EAAIC,QAAJ,KAAiB;AAClCd,IAAAA,QAAQ,CAACc,QAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAIR,UAAU,CAACS,MAAX,GAAoB,CAAxB,EAA2B;AACvB5B,MAAAA,QAAQ,CAACW,QAAQ,CAAC,EAAD,CAAT,EAAe,GAAf,CAAR;AACAS,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH;;AACDb,IAAAA,MAAM;AACT,GAND;;AAQA,sBACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD,oBACQW,KADR;AAEI,IAAA,SAAS,EAAE,CAFf;AAGI,IAAA,OAAO,EAAET,OAHb;AAII,IAAA,MAAM,EAAEkB,UAJZ;AAKI,IAAA,YAAY,MALhB;AAMI,IAAA,OAAO,EAAEjB,OANb;AAOI,IAAA,kBAAkB,MAPtB;AAQI,IAAA,SAAS,eAAE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARf;AASI,IAAA,YAAY,EAAEW,YATlB;AAUI,IAAA,aAAa,EAAGQ,CAAD,IAAOA,CAV1B;AAWI,IAAA,OAAO,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAXb;AAYI,IAAA,cAAc,EAAER,MAAM,IAAIA,MAAM,CAACjB,KAZrC;AAaI,IAAA,YAAY,EAAE;AAAC0B,MAAAA,QAAQ,EAAElB,UAAX;AAAuBmB,MAAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE,KAAK,CAAL,GAAS;AAArB;AAA9B,KAblB;AAcI,IAAA,QAAQ,EAAE,CAACR,CAAD,EAAIS,KAAJ,KAAcV,YAAY,CAACC,CAAD,EAAIS,KAAJ,CAdxC;AAeI,IAAA,iBAAiB,EAAE,CAACZ,MAAD,EAASa,MAAT,KAAoBjB,KAAK,CAACkB,QAAN,GAAiBd,MAAM,CAACY,KAAP,KAAiBC,MAAM,CAACD,KAAzC,GAAiD,CAAC,CAACZ,MAAM,CAACY,KAAT,IAAkB,CAAC,CAACC,MAAM,CAACD,KAfvH;AAgBI,IAAA,WAAW,EAAGG,MAAD,IAAY;AACrB,0BACI,oBAAC,SAAD,oBACQA,MADR;AAEI,QAAA,QAAQ,EAAGZ,CAAD,IAAO;AACbL,UAAAA,aAAa,CAACK,CAAC,CAACa,MAAF,CAASJ,KAAV,CAAb;AACAlC,UAAAA,QAAQ,CAACW,QAAQ,CAACc,CAAC,CAACa,MAAF,CAASJ,KAAV,CAAT,EAA2B,GAA3B,CAAR;AACH,SALL;AAMI,QAAA,KAAK,EAAE7B,KANX;AAOI,QAAA,OAAO,EAAC,QAPZ;AAQI,QAAA,KAAK,EAAE,CAAC,CAACC,KARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAYH,KA7BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAgCKQ,UAAU,iBAAI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,UAAnB,CAhCnB,EAiCK,CAACG,aAAD,IAAkBX,KAAlB,iBAA2B,oBAAC,gBAAD;AAAkB,IAAA,WAAW,EAAES,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CT,KAA7C,CAjChC,CADJ;AAqCH,CA7EM","sourcesContent":["import React, {useState} from 'react'\r\nimport {Avatar} from '../../Avatar'\r\nimport {TextField} from '@material-ui/core'\r\nimport {Autocomplete} from '@material-ui/lab'\r\nimport {ArrowIosBottomSvg} from '../../../Icons/Arrow'\r\nimport {debounce} from '../../../utils/debounce-utils'\r\nimport {StyledFormControl, StyledHelperText, StyledInputError} from '../atoms'\r\n\r\nexport const AutocompleteSelect = (\r\n    {\r\n        label,\r\n        error,\r\n        onBlur,\r\n        search,\r\n        options,\r\n        loading,\r\n        onSearch,\r\n        onChange,\r\n        onLoadMore,\r\n        helperText,\r\n        staticError,\r\n        defaultValue,\r\n        hideErrorText,\r\n        ...props\r\n    }\r\n) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const renderOption = (option) => {\r\n        return (\r\n            <>\r\n                {option.image && <Avatar imgUrl={option.image} size={24}/>}\r\n                {option.label}\r\n            </>\r\n        )\r\n    }\r\n    \r\n    const handleChange = (e, newValue) => {\r\n        onChange(newValue)\r\n    }\r\n    \r\n    const handleBlur = () => {\r\n        if (inputValue.length > 0) {\r\n            debounce(onSearch(''), 300)\r\n            setInputValue('')\r\n        }\r\n        onBlur()\r\n    }\r\n    \r\n    return (\r\n        <StyledFormControl>\r\n            <Autocomplete\r\n                {...props}\r\n                limitTags={2}\r\n                options={options}\r\n                onBlur={handleBlur}\r\n                autoComplete\r\n                loading={loading}\r\n                includeInputInList\r\n                popupIcon={<ArrowIosBottomSvg/>}\r\n                renderOption={renderOption}\r\n                filterOptions={(v) => v}\r\n                classes={{paper: 'select-dropdown'}}\r\n                getOptionLabel={option => option.label}\r\n                ListboxProps={{onScroll: onLoadMore, style: {maxHeight: 30 * 8 + 8}}}\r\n                onChange={(e, value) => handleChange(e, value)}\r\n                getOptionSelected={(option, values) => props.multiple ? option.value === values.value : !!option.value && !!values.value}\r\n                renderInput={(params) => {\r\n                    return (\r\n                        <TextField\r\n                            {...params}\r\n                            onChange={(e) => {\r\n                                setInputValue(e.target.value)\r\n                                debounce(onSearch(e.target.value), 300)\r\n                            }}\r\n                            label={label}\r\n                            variant='filled'\r\n                            error={!!error}\r\n                        />\r\n                    )\r\n                }}\r\n            />\r\n            {helperText && <StyledHelperText>{helperText}</StyledHelperText>}\r\n            {!hideErrorText && error && <StyledInputError staticError={staticError}>{error}</StyledInputError>}\r\n        </StyledFormControl>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}