{"ast":null,"code":"import { useEffect } from 'react';\nimport { useUrlParams } from '../app';\nimport { URL_KEYS } from '../../Constants';\nimport { useStore } from 'effector-react';\nimport { $orderModel } from '../../Models/order-model';\nimport { useHistory, useParams } from 'react-router-dom';\nexport function useAddSpecialistUrl() {\n  const {\n    push\n  } = useHistory();\n  const {\n    urlData\n  } = useUrlParams();\n  const {\n    organization\n  } = useParams();\n  const specId = urlData[URL_KEYS.SPECIALIST_ID];\n  const {\n    $orderCartList: {\n      data,\n      forceLoading\n    }\n  } = useStore($orderModel);\n  const currentOrg = data.find(item => item.seller.slug_name === organization);\n  const otherOrgs = data.filter(item => item.seller.slug_name !== organization);\n  const specList = currentOrg ? currentOrg.seller.specialists : [];\n  const currentSpecInfo = specList.find(item => item.id.toString() === urlData.specialist_id);\n  useEffect(() => {\n    if ((data === null || data === void 0 ? void 0 : data.length) > 0) {\n      var _currentOrg$seller;\n\n      if (!specId && specList.length > 0) {\n        push({\n          pathname: `/records/unregistered/${organization}`,\n          search: `${URL_KEYS.SPECIALIST_ID}=${specList[0].id}`\n        });\n      } else if (organization !== (currentOrg === null || currentOrg === void 0 ? void 0 : (_currentOrg$seller = currentOrg.seller) === null || _currentOrg$seller === void 0 ? void 0 : _currentOrg$seller.slug_name)) {\n        push(`/${organization}/offerings`);\n      } // else if(!specId) push(`/${organization}/offerings`)\n\n    }\n  }, [specList, specId, organization, currentOrg, push, data]);\n  return {\n    currentOrg,\n    organization,\n    specId,\n    specList,\n    otherOrgs,\n    currentSpecInfo,\n    push,\n    forceLoading\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Hooks/order/use-add-specialist-url.js"],"names":["useEffect","useUrlParams","URL_KEYS","useStore","$orderModel","useHistory","useParams","useAddSpecialistUrl","push","urlData","organization","specId","SPECIALIST_ID","$orderCartList","data","forceLoading","currentOrg","find","item","seller","slug_name","otherOrgs","filter","specList","specialists","currentSpecInfo","id","toString","specialist_id","length","pathname","search"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,YAAR,QAA2B,QAA3B;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,kBAApC;AAEA,OAAO,SAASC,mBAAT,GAA+B;AAClC,QAAM;AAACC,IAAAA;AAAD,MAASH,UAAU,EAAzB;AACA,QAAM;AAACI,IAAAA;AAAD,MAAYR,YAAY,EAA9B;AACA,QAAM;AAACS,IAAAA;AAAD,MAAiBJ,SAAS,EAAhC;AACA,QAAMK,MAAM,GAAGF,OAAO,CAACP,QAAQ,CAACU,aAAV,CAAtB;AACA,QAAM;AAACC,IAAAA,cAAc,EAAE;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP;AAAjB,MAAyCZ,QAAQ,CAACC,WAAD,CAAvD;AACA,QAAMY,UAAU,GAAGF,IAAI,CAACG,IAAL,CAAUC,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAYC,SAAZ,KAA0BV,YAA5C,CAAnB;AACA,QAAMW,SAAS,GAAGP,IAAI,CAACQ,MAAL,CAAYJ,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAYC,SAAZ,KAA0BV,YAA9C,CAAlB;AACA,QAAMa,QAAQ,GAAGP,UAAU,GAAGA,UAAU,CAACG,MAAX,CAAkBK,WAArB,GAAmC,EAA9D;AACA,QAAMC,eAAe,GAAGF,QAAQ,CAACN,IAAT,CAAcC,IAAI,IAAIA,IAAI,CAACQ,EAAL,CAAQC,QAAR,OAAuBlB,OAAO,CAACmB,aAArD,CAAxB;AAEA5B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAAAc,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEe,MAAN,IAAe,CAAnB,EAAqB;AAAA;;AACjB,UAAI,CAAClB,MAAD,IAAWY,QAAQ,CAACM,MAAT,GAAkB,CAAjC,EAAoC;AAChCrB,QAAAA,IAAI,CAAC;AACDsB,UAAAA,QAAQ,EAAG,yBAAwBpB,YAAa,EAD/C;AAEDqB,UAAAA,MAAM,EAAG,GAAE7B,QAAQ,CAACU,aAAc,IAAGW,QAAQ,CAAC,CAAD,CAAR,CAAYG,EAAG;AAFnD,SAAD,CAAJ;AAIH,OALD,MAKO,IAAIhB,YAAY,MAAKM,UAAL,aAAKA,UAAL,6CAAKA,UAAU,CAAEG,MAAjB,uDAAK,mBAAoBC,SAAzB,CAAhB,EAAoD;AACvDZ,QAAAA,IAAI,CAAE,IAAGE,YAAa,YAAlB,CAAJ;AACH,OARgB,CAUjB;;AACH;AACJ,GAbQ,EAaN,CAACa,QAAD,EAAWZ,MAAX,EAAmBD,YAAnB,EAAiCM,UAAjC,EAA6CR,IAA7C,EAAmDM,IAAnD,CAbM,CAAT;AAeA,SAAO;AAACE,IAAAA,UAAD;AAAaN,IAAAA,YAAb;AAA2BC,IAAAA,MAA3B;AAAmCY,IAAAA,QAAnC;AAA6CF,IAAAA,SAA7C;AAAwDI,IAAAA,eAAxD;AAAyEjB,IAAAA,IAAzE;AAA+EO,IAAAA;AAA/E,GAAP;AACH","sourcesContent":["import {useEffect} from 'react'\nimport {useUrlParams} from '../app'\nimport {URL_KEYS} from '../../Constants'\nimport {useStore} from 'effector-react'\nimport {$orderModel} from '../../Models/order-model'\nimport {useHistory, useParams} from 'react-router-dom'\n\nexport function useAddSpecialistUrl() {\n    const {push} = useHistory()\n    const {urlData} = useUrlParams()\n    const {organization} = useParams()\n    const specId = urlData[URL_KEYS.SPECIALIST_ID]\n    const {$orderCartList: {data, forceLoading}} = useStore($orderModel)\n    const currentOrg = data.find(item => item.seller.slug_name === organization)\n    const otherOrgs = data.filter(item => item.seller.slug_name !== organization)\n    const specList = currentOrg ? currentOrg.seller.specialists : []\n    const currentSpecInfo = specList.find(item => item.id.toString() === urlData.specialist_id)\n    \n    useEffect(() => {\n        if (data?.length > 0){\n            if (!specId && specList.length > 0) {\n                push({\n                    pathname: `/records/unregistered/${organization}`,\n                    search: `${URL_KEYS.SPECIALIST_ID}=${specList[0].id}`\n                })\n            } else if (organization !== currentOrg?.seller?.slug_name ){\n                push(`/${organization}/offerings`)\n            }\n            \n            // else if(!specId) push(`/${organization}/offerings`)\n        }\n    }, [specList, specId, organization, currentOrg, push, data])\n    \n    return {currentOrg, organization, specId, specList, otherOrgs, currentSpecInfo, push, forceLoading}\n}"]},"metadata":{},"sourceType":"module"}