{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useParams}from'react-router-dom';import{useCallback,useEffect}from'react';import{$orderModel,orderOffersConclusionsMount}from'../../Models/order-model';import{useStore}from'effector-react';var initialParams={limit:10,offset:0};export function useOrderOfferIdConclusions(){var _useParams=useParams(),offer_id=_useParams.offer_id;var _useStore=useStore($orderModel),result=_useStore.$orderOffersConclusions.result;var loadMore=useCallback(function(){if(result.nextOffset){if(offer_id){var params={order_offer_id:offer_id,params:_objectSpread(_objectSpread({},initialParams),{},{offset:result.nextOffset})};orderOffersConclusionsMount(params);}}},[result,offer_id]);useEffect(function(){if(offer_id){var params={clear:true,order_offer_id:offer_id};orderOffersConclusionsMount(params);}},[offer_id]);return{loadMore:loadMore};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/order/use-order-offer-id-conclusions.js"],"names":["useParams","useCallback","useEffect","$orderModel","orderOffersConclusionsMount","useStore","initialParams","limit","offset","useOrderOfferIdConclusions","offer_id","result","$orderOffersConclusions","loadMore","nextOffset","params","order_offer_id","clear"],"mappings":"oKAAA,OAAQA,SAAR,KAAwB,kBAAxB,CACA,OAAQC,WAAR,CAAqBC,SAArB,KAAqC,OAArC,CACA,OAAQC,WAAR,CAAqBC,2BAArB,KAAuD,0BAAvD,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,KAAK,CAAE,EADW,CAElBC,MAAM,CAAE,CAFU,CAAtB,CAKA,MAAO,SAASC,CAAAA,0BAAT,EAAsC,CACzC,eAAmBT,SAAS,EAA5B,CAAOU,QAAP,YAAOA,QAAP,CACA,cAA4CL,QAAQ,CAACF,WAAD,CAApD,CAAiCQ,MAAjC,WAAOC,uBAAP,CAAiCD,MAAjC,CAEA,GAAME,CAAAA,QAAQ,CAAGZ,WAAW,CAAC,UAAM,CAC/B,GAAIU,MAAM,CAACG,UAAX,CAAuB,CACnB,GAAIJ,QAAJ,CAAc,CACV,GAAMK,CAAAA,MAAM,CAAG,CACXC,cAAc,CAAEN,QADL,CAEXK,MAAM,gCACCT,aADD,MAEFE,MAAM,CAAEG,MAAM,CAACG,UAFb,EAFK,CAAf,CAOAV,2BAA2B,CAACW,MAAD,CAA3B,CACH,CACJ,CACJ,CAb2B,CAazB,CAACJ,MAAD,CAASD,QAAT,CAbyB,CAA5B,CAeAR,SAAS,CAAC,UAAM,CACZ,GAAIQ,QAAJ,CAAc,CACV,GAAMK,CAAAA,MAAM,CAAG,CACXE,KAAK,CAAE,IADI,CAEXD,cAAc,CAAEN,QAFL,CAAf,CAIAN,2BAA2B,CAACW,MAAD,CAA3B,CACH,CACJ,CARQ,CAQN,CAACL,QAAD,CARM,CAAT,CAUA,MAAO,CAACG,QAAQ,CAARA,QAAD,CAAP,CACH","sourcesContent":["import {useParams} from 'react-router-dom'\nimport {useCallback, useEffect} from 'react'\nimport {$orderModel, orderOffersConclusionsMount} from '../../Models/order-model'\nimport {useStore} from 'effector-react'\n\nconst initialParams = {\n    limit: 10,\n    offset: 0\n}\n\nexport function useOrderOfferIdConclusions() {\n    const {offer_id} = useParams()\n    const {$orderOffersConclusions: {result}} = useStore($orderModel)\n    \n    const loadMore = useCallback(() => {\n        if (result.nextOffset) {\n            if (offer_id) {\n                const params = {\n                    order_offer_id: offer_id,\n                    params: {\n                        ...initialParams,\n                        offset: result.nextOffset\n                    }\n                }\n                orderOffersConclusionsMount(params)\n            }\n        }\n    }, [result, offer_id])\n    \n    useEffect(() => {\n        if (offer_id) {\n            const params = {\n                clear: true,\n                order_offer_id: offer_id\n            }\n            orderOffersConclusionsMount(params)\n        }\n    }, [offer_id])\n    \n    return {loadMore}\n}"]},"metadata":{},"sourceType":"module"}