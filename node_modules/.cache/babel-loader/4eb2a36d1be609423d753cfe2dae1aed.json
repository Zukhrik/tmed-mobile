{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useUrlParams}from'../app';import{URL_KEYS}from'../../Constants';import{useParams}from'react-router-dom';import{useCallback,useEffect}from'react';import{$orgModel,orgSpecialistCatMount,orgSpecialistsMount}from'../../Models/org-model';import{useStore}from'effector-react';var initialParams={limit:20,offset:0};export function useOrgSpecialistLists(){var _useUrlParams=useUrlParams(),urlData=_useUrlParams.urlData;var _useParams=useParams(),organization=_useParams.organization;var _useStore=useStore($orgModel),result=_useStore.$orgSpecialistsList.result;var spec_cat_id=urlData[URL_KEYS.SPECIALIST_CATEGORY_ID];var getOrgSpecialists=useCallback(function(params){if(organization){var data=_objectSpread({organization:organization},params);orgSpecialistsMount(data);}},[organization]);var getOrgSpecCatList=useCallback(function(params){if(organization){var data=_objectSpread({organization:organization},params);orgSpecialistCatMount(data);}},[organization]);var loadMore=useCallback(function(){if(result===null||result===void 0?void 0:result.nextOffset){var data={organization:organization,params:_objectSpread(_objectSpread({},initialParams),{},{offset:result.nextOffset})};orgSpecialistsMount(data);}},[result,organization]);useEffect(function(){var data={clear:true,params:_objectSpread({},initialParams)};getOrgSpecCatList(data);},[getOrgSpecCatList]);useEffect(function(){var timeout=null;timeout=setTimeout(function(){var data={clear:true,params:_objectSpread({},initialParams)};if(spec_cat_id){data['params']['spec_cat']=spec_cat_id;}else{delete data['params']['spec_cat'];}getOrgSpecialists(data);},300);return function(){clearTimeout(timeout);timeout=null;};},[getOrgSpecialists,spec_cat_id]);return{loadMore:loadMore};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/org/use-org-specialists.js"],"names":["useUrlParams","URL_KEYS","useParams","useCallback","useEffect","$orgModel","orgSpecialistCatMount","orgSpecialistsMount","useStore","initialParams","limit","offset","useOrgSpecialistLists","urlData","organization","result","$orgSpecialistsList","spec_cat_id","SPECIALIST_CATEGORY_ID","getOrgSpecialists","params","data","getOrgSpecCatList","loadMore","nextOffset","clear","timeout","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import {useUrlParams} from '../app'\r\nimport {URL_KEYS} from '../../Constants'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useCallback, useEffect} from 'react'\r\nimport {$orgModel, orgSpecialistCatMount, orgSpecialistsMount} from '../../Models/org-model'\r\nimport {useStore} from 'effector-react'\r\n\r\nconst initialParams = {\r\n    limit: 20,\r\n    offset: 0\r\n}\r\n\r\nexport function useOrgSpecialistLists() {\r\n    const {urlData} = useUrlParams()\r\n    const {organization} = useParams()\r\n    const {$orgSpecialistsList: {result}} = useStore($orgModel)\r\n    const spec_cat_id = urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]\r\n    \r\n    const getOrgSpecialists = useCallback((params) => {\r\n        if (organization) {\r\n            const data = {\r\n                organization,\r\n                ...params\r\n            }\r\n            orgSpecialistsMount(data)\r\n        }\r\n    }, [organization])\r\n    \r\n    const getOrgSpecCatList = useCallback((params) => {\r\n        if (organization) {\r\n            const data = {\r\n                organization,\r\n                ...params\r\n            }\r\n            orgSpecialistCatMount(data)\r\n        }\r\n    }, [organization])\r\n    \r\n    const loadMore = useCallback(() => {\r\n        if (result?.nextOffset) {\r\n            const data = {\r\n                organization: organization,\r\n                params: {\r\n                    ...initialParams,\r\n                    offset: result.nextOffset\r\n                }\r\n            }\r\n            orgSpecialistsMount(data)\r\n        }\r\n    }, [result, organization])\r\n    \r\n    useEffect(() => {\r\n        const data = {\r\n            clear: true,\r\n            params: {...initialParams}\r\n        }\r\n        getOrgSpecCatList(data)\r\n    }, [getOrgSpecCatList])\r\n    \r\n    useEffect(() => {\r\n        let timeout = null\r\n        \r\n        timeout = setTimeout(() => {\r\n            const data = {\r\n                clear: true,\r\n                params: {\r\n                    ...initialParams\r\n                }\r\n            }\r\n            \r\n            if (spec_cat_id) {\r\n                data['params']['spec_cat'] = spec_cat_id\r\n            } else {\r\n                delete data['params']['spec_cat']\r\n            }\r\n            \r\n            getOrgSpecialists(data)\r\n        }, 300)\r\n        \r\n        return () => {\r\n            clearTimeout(timeout)\r\n            timeout = null\r\n        }\r\n        \r\n    }, [getOrgSpecialists, spec_cat_id])\r\n    \r\n    return {loadMore}\r\n}"]},"metadata":{},"sourceType":"module"}