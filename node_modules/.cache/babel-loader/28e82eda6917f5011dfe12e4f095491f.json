{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/RepostPage/index.jsx\";\nimport React, { useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { RepostForm } from './RepostForm';\nimport { useParams } from 'react-router-dom';\nimport Carousel from 'react-multi-carousel';\nimport { useGoBack } from '../../Hooks/app';\nimport { useTranslation } from 'react-i18next';\nimport { CloseSvg } from '../../Icons/Close';\nimport { $appModel } from '../../Models/app';\nimport { useGetPost } from '../../Hooks/post';\nimport { ShortCard } from '../../Components/Cards';\nimport { $postModel } from '../../Models/post-model';\nimport { truncateString } from '../../utils/stringUtils';\nimport { Text } from '../../UIComponents/Typography/Text';\nimport { MediasWrapper, PostDescriptionWrapper } from './style';\nimport { ImageLazyLoad } from '../../UIComponents/ImageLazyLoad';\nimport { Container, IconBox, RootContent } from '../../UIComponents/GlobalStyles';\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 1\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 1\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1\n  }\n};\nexport const RepostPage = () => {\n  useGetPost();\n  const {\n    t\n  } = useTranslation();\n  const {\n    post_id\n  } = useParams();\n  const {\n    $app: {\n      saveURL\n    }\n  } = useStore($appModel);\n  const {\n    $getPost: {\n      data\n    }\n  } = useStore($postModel);\n  const [show, setShow] = useState(false);\n  const {\n    goBack\n  } = useGoBack({\n    pathname: saveURL ? saveURL : '/'\n  });\n  return /*#__PURE__*/React.createElement(RootContent, {\n    paddingBottom: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, data && data[post_id] && /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, data[post_id].author && /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    justify: \"space-between\",\n    style: {\n      marginTop: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ShortCard, {\n    imgSize: 24,\n    truncateLength: 30,\n    name: data[post_id].author.name,\n    imgUrl: data[post_id].author.avatar,\n    imgPath: `/${data[post_id].author.slug_name}`,\n    path: data[post_id].author.type === 'user' ? `/@${data[post_id].author.slug_name}/tape` : `/${data[post_id].author.slug_name}/offerings`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IconBox, {\n    onClick: goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CloseSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 45\n    }\n  }))))), data && post_id && data[post_id] && /*#__PURE__*/React.createElement(MediasWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    arrows: false,\n    responsive: responsive,\n    renderButtonGroupOutside: true,\n    itemClass: \"offering-gallery-item\",\n    showDots: data[post_id].medias.length > 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, data[post_id].medias.map((item, idx) => /*#__PURE__*/React.createElement(ImageLazyLoad, {\n    key: `${idx + 1}`,\n    src: item.thumbnail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  })))), data[post_id] && /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(PostDescriptionWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, !show ? /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 41\n    }\n  }, truncateString(data[post_id].text, 250), data[post_id].text && data[post_id].text.length > 250 && /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 45\n    }\n  }, t('more'))) : /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 41\n    }\n  }, data[post_id].text, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 45\n    }\n  }, t('hide')))))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(RepostForm, {\n    post_id: post_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/RepostPage/index.jsx"],"names":["React","useState","Col","Row","useStore","RepostForm","useParams","Carousel","useGoBack","useTranslation","CloseSvg","$appModel","useGetPost","ShortCard","$postModel","truncateString","Text","MediasWrapper","PostDescriptionWrapper","ImageLazyLoad","Container","IconBox","RootContent","responsive","desktop","breakpoint","max","min","items","tablet","mobile","RepostPage","t","post_id","$app","saveURL","$getPost","data","show","setShow","goBack","pathname","author","marginTop","name","avatar","slug_name","type","medias","length","map","item","idx","thumbnail","text"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {RepostForm} from './RepostForm'\nimport {useParams} from 'react-router-dom'\nimport Carousel from 'react-multi-carousel'\nimport {useGoBack} from '../../Hooks/app'\nimport {useTranslation} from 'react-i18next'\nimport {CloseSvg} from '../../Icons/Close'\nimport {$appModel} from '../../Models/app'\nimport {useGetPost} from '../../Hooks/post'\nimport {ShortCard} from '../../Components/Cards'\nimport {$postModel} from '../../Models/post-model'\nimport {truncateString} from '../../utils/stringUtils'\nimport {Text} from '../../UIComponents/Typography/Text'\nimport {MediasWrapper, PostDescriptionWrapper} from './style'\nimport {ImageLazyLoad} from '../../UIComponents/ImageLazyLoad'\nimport {Container, IconBox, RootContent} from '../../UIComponents/GlobalStyles'\n\n\nconst responsive = {\n    desktop: {\n        breakpoint: {max: 3000, min: 1024},\n        items: 1\n    },\n    tablet: {\n        breakpoint: {max: 1024, min: 464},\n        items: 1\n    },\n    mobile: {\n        breakpoint: {max: 464, min: 0},\n        items: 1\n    }\n}\n\nexport const RepostPage = () => {\n    useGetPost()\n    const {t} = useTranslation()\n    const {post_id} = useParams()\n    const {$app: {saveURL}} = useStore($appModel)\n    const {$getPost: {data}} = useStore($postModel)\n    const [show, setShow] = useState(false)\n    const {goBack} = useGoBack({pathname: saveURL ? saveURL : '/'})\n    \n    return (\n        <RootContent\n            paddingBottom='50px'\n        >\n            {\n                data && data[post_id] && (\n                    <Container>\n                        {\n                            data[post_id].author && (\n                                <Row align='middle' justify='space-between' style={{marginTop: 12}}>\n                                    <Col flex={1}>\n                                        <ShortCard\n                                            imgSize={24}\n                                            truncateLength={30}\n                                            name={data[post_id].author.name}\n                                            imgUrl={data[post_id].author.avatar}\n                                            imgPath={`/${data[post_id].author.slug_name}`}\n                                            path={data[post_id].author.type === 'user'\n                                                ? `/@${data[post_id].author.slug_name}/tape`\n                                                : `/${data[post_id].author.slug_name}/offerings`\n                                            }\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <IconBox onClick={goBack}>\n                                            <CloseSvg/>\n                                        </IconBox>\n                                    </Col>\n                                </Row>\n                            )\n                        }\n                    </Container>\n                )\n            }\n            {\n                data && post_id && data[post_id] &&\n                <MediasWrapper>\n                    <Carousel\n                        arrows={false}\n                        responsive={responsive}\n                        renderButtonGroupOutside\n                        itemClass='offering-gallery-item'\n                        showDots={data[post_id].medias.length > 1}\n                    >\n                        {\n                            data[post_id].medias.map((item, idx) => (\n                                <ImageLazyLoad\n                                    key={`${idx + 1}`}\n                                    src={item.thumbnail}\n                                />\n                            ))\n                        }\n                    </Carousel>\n                </MediasWrapper>\n            }\n            {\n                data[post_id] &&\n                <Row gutter={[0, 12]} justify='center'>\n                    <Col span={24}>\n                        <Container>\n                            <PostDescriptionWrapper>\n                                {\n                                    !show ? (\n                                        <Text>\n                                            {truncateString(data[post_id].text, 250)}\n                                            {data[post_id].text && data[post_id].text.length > 250 &&\n                                            <span onClick={() => setShow(!show)}>{t('more')}</span>}\n                                        </Text>\n                                    ) : (\n                                        <Text>\n                                            {data[post_id].text}\n                                            <span onClick={() => setShow(!show)}>{t('hide')}</span>\n                                        </Text>\n                                    )\n                                }\n                            </PostDescriptionWrapper>\n                        </Container>\n                    </Col>\n                    <Col span={24}>\n                        <RepostForm post_id={post_id}/>\n                    </Col>\n                </Row>\n            }\n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}