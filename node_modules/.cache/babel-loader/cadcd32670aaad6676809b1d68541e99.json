{"ast":null,"code":"import styled, { css } from 'styled-components';\nconst defaultTitle = css`\n  letter-spacing: 0;\n  font-family: var(--medium-text);\n  color: var(--dark-dwed);\n`;\nconst defaultText = css`\n  font-family: var(--regular-text);\n  letter-spacing: 0;\n  color: var(--dark-dwed);\n  font-style: normal;\n`;\n\nconst getLevel = ({\n  level\n}) => {\n  switch (level) {\n    case 1:\n      return 32;\n\n    case 2:\n      return 24;\n\n    case 3:\n      return 20;\n\n    case 4:\n      return 16;\n\n    case 5:\n      return 14;\n\n    case 6:\n      return 10;\n\n    default:\n      return 12;\n  }\n};\n\nconst getTextFontFamily = ({\n  weight\n}) => {\n  switch (weight) {\n    case 400:\n      return 'var(--regular-text)';\n\n    case 500:\n      return 'var(--medium-text)';\n\n    case 600:\n      return 'var(--demi-text)';\n\n    case 700:\n      return 'var(--bold-text)';\n\n    case 900:\n      return 'var(--black-text)';\n\n    default:\n      return 'var(--regular-text)';\n  }\n};\n\nconst getTitleFontFamily = ({\n  weight\n}) => {\n  switch (weight) {\n    case 400:\n      return 'var(--regular-text)';\n\n    case 500:\n      return 'var(--medium-text)';\n\n    case 600:\n      return 'var(--demi-text)';\n\n    case 700:\n      return 'var(--bold-text)';\n\n    case 900:\n      return 'var(--black-text)';\n\n    default:\n      return 'var(--medium-text)';\n  }\n};\n\nexport const StyledText = styled.div`\n  ${defaultText};\n  color: ${({\n  color\n}) => color ? color : 'var(--dark-dwed)'};\n  font-size: ${getLevel}px;\n  font-family: ${getTextFontFamily};\n  text-align: ${({\n  alignType\n}) => alignType ? alignType : 'unset'};\n`;\nexport const StyledTitle = styled.div`\n  ${defaultTitle};\n  font-size: ${getLevel}px;\n  color: ${({\n  color\n}) => color ? color : 'var(--dark-dwed)'};\n  text-align: ${({\n  alignType\n}) => alignType ? alignType : 'unset'};\n  font-family: ${getTitleFontFamily};\n`;","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/UIComponents/Typography/style.js"],"names":["styled","css","defaultTitle","defaultText","getLevel","level","getTextFontFamily","weight","getTitleFontFamily","StyledText","div","color","alignType","StyledTitle"],"mappings":"AAAA,OAAOA,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AAEA,MAAMC,YAAY,GAAGD,GAAI;AACzB;AACA;AACA;AACA,CAJA;AAMA,MAAME,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA,CALA;;AAQA,MAAMG,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC1B,UAAQA,KAAR;AACI,SAAK,CAAL;AACI,aAAO,EAAP;;AACJ,SAAK,CAAL;AACI,aAAO,EAAP;;AACJ,SAAK,CAAL;AACI,aAAO,EAAP;;AACJ,SAAK,CAAL;AACI,aAAO,EAAP;;AACJ,SAAK,CAAL;AACI,aAAO,EAAP;;AACJ,SAAK,CAAL;AACI,aAAO,EAAP;;AACJ;AACI,aAAO,EAAP;AAdR;AAgBH,CAjBD;;AAmBA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AACpC,UAAQA,MAAR;AACI,SAAK,GAAL;AACI,aAAO,qBAAP;;AACJ,SAAK,GAAL;AACI,aAAO,oBAAP;;AACJ,SAAK,GAAL;AACI,aAAO,kBAAP;;AACJ,SAAK,GAAL;AACI,aAAO,kBAAP;;AACJ,SAAK,GAAL;AACI,aAAO,mBAAP;;AACJ;AACI,aAAO,qBAAP;AAZR;AAcH,CAfD;;AAiBA,MAAMC,kBAAkB,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAc;AACrC,UAAQA,MAAR;AACI,SAAK,GAAL;AACI,aAAO,qBAAP;;AACJ,SAAK,GAAL;AACI,aAAO,oBAAP;;AACJ,SAAK,GAAL;AACI,aAAO,kBAAP;;AACJ,SAAK,GAAL;AACI,aAAO,kBAAP;;AACJ,SAAK,GAAL;AACI,aAAO,mBAAP;;AACJ;AACI,aAAO,oBAAP;AAZR;AAcH,CAfD;;AAiBA,OAAO,MAAME,UAAU,GAAGT,MAAM,CAACU,GAAI;AACrC,IAAIP,WAAY;AAChB,WAAW,CAAC;AAACQ,EAAAA;AAAD,CAAD,KAAaA,KAAK,GAAGA,KAAH,GAAW,kBAAmB;AAC3D,eAAeP,QAAS;AACxB,iBAAiBE,iBAAkB;AACnC,gBAAgB,CAAC;AAACM,EAAAA;AAAD,CAAD,KAAiBA,SAAS,GAAGA,SAAH,GAAe,OAAQ;AACjE,CANO;AAQP,OAAO,MAAMC,WAAW,GAAGb,MAAM,CAACU,GAAI;AACtC,IAAIR,YAAa;AACjB,eAAeE,QAAS;AACxB,WAAW,CAAC;AAACO,EAAAA;AAAD,CAAD,KAAaA,KAAK,GAAGA,KAAH,GAAW,kBAAmB;AAC3D,gBAAgB,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiBA,SAAS,GAAGA,SAAH,GAAe,OAAQ;AACjE,iBAAiBJ,kBAAmB;AACpC,CANO","sourcesContent":["import styled, {css} from 'styled-components'\n\nconst defaultTitle = css`\n  letter-spacing: 0;\n  font-family: var(--medium-text);\n  color: var(--dark-dwed);\n`\n\nconst defaultText = css`\n  font-family: var(--regular-text);\n  letter-spacing: 0;\n  color: var(--dark-dwed);\n  font-style: normal;\n`\n\n\nconst getLevel = ({level}) => {\n    switch (level) {\n        case 1 :\n            return 32\n        case 2 :\n            return 24\n        case 3 :\n            return 20\n        case 4 :\n            return 16\n        case 5 :\n            return 14\n        case 6 :\n            return 10\n        default :\n            return 12\n    }\n}\n\nconst getTextFontFamily = ({weight}) => {\n    switch (weight) {\n        case 400:\n            return 'var(--regular-text)'\n        case 500:\n            return 'var(--medium-text)'\n        case 600:\n            return 'var(--demi-text)'\n        case 700:\n            return 'var(--bold-text)'\n        case 900:\n            return 'var(--black-text)'\n        default:\n            return 'var(--regular-text)'\n    }\n}\n\nconst getTitleFontFamily = ({weight}) => {\n    switch (weight) {\n        case 400:\n            return 'var(--regular-text)'\n        case 500:\n            return 'var(--medium-text)'\n        case 600:\n            return 'var(--demi-text)'\n        case 700:\n            return 'var(--bold-text)'\n        case 900:\n            return 'var(--black-text)'\n        default:\n            return 'var(--medium-text)'\n    }\n}\n\nexport const StyledText = styled.div`\n  ${defaultText};\n  color: ${({color}) => color ? color : 'var(--dark-dwed)'};\n  font-size: ${getLevel}px;\n  font-family: ${getTextFontFamily};\n  text-align: ${({alignType}) => alignType ? alignType : 'unset'};\n`\n\nexport const StyledTitle = styled.div`\n  ${defaultTitle};\n  font-size: ${getLevel}px;\n  color: ${({color}) => color ? color : 'var(--dark-dwed)'};\n  text-align: ${({alignType}) => alignType ? alignType : 'unset'};\n  font-family: ${getTitleFontFamily};\n`"]},"metadata":{},"sourceType":"module"}