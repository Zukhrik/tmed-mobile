{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/organisms/account-records-detail.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { RecordsCard } from '../molecules';\nimport { useOrder } from '../../../Hooks/org';\nimport { useOrderIdOffers } from '../../../Hooks/order';\nimport { $orderModel } from '../../../Models/order-model';\nimport { RootContent } from '../../../UIComponents/GlobalStyles';\nexport const AccountRecordsDetail = () => {\n  useOrder();\n  useOrderIdOffers();\n  const {\n    $orderIdOffers: {\n      data\n    },\n    $orderDetail: {\n      data: detail\n    }\n  } = useStore($orderModel);\n  console.log(detail);\n  return /*#__PURE__*/React.createElement(RootContent, {\n    paddingTop: 62,\n    paddingBottom: 65,\n    height: \"100vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, data && data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(RecordsCard, {\n    offeringName: item.offering.name,\n    offeringUrl: item.offering.image,\n    orgName: item.offering.org.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/organisms/account-records-detail.jsx"],"names":["React","Col","Row","useStore","RecordsCard","useOrder","useOrderIdOffers","$orderModel","RootContent","AccountRecordsDetail","$orderIdOffers","data","$orderDetail","detail","console","log","map","item","idx","offering","name","image","org"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,WAAR,QAA0B,cAA1B;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,WAAR,QAA0B,6BAA1B;AACA,SAAQC,WAAR,QAA0B,oCAA1B;AAGA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACtCJ,EAAAA,QAAQ;AACRC,EAAAA,gBAAgB;AAChB,QAAM;AAACI,IAAAA,cAAc,EAAE;AAACC,MAAAA;AAAD,KAAjB;AAAyBC,IAAAA,YAAY,EAAE;AAACD,MAAAA,IAAI,EAAEE;AAAP;AAAvC,MAAyDV,QAAQ,CAACI,WAAD,CAAvE;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,sBACI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAE,EADhB;AAEI,IAAA,aAAa,EAAE,EAFnB;AAGI,IAAA,MAAM,EAAC,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,IAAI,IAAIA,IAAI,CAACK,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACb,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,YAAY,EAAED,IAAI,CAACE,QAAL,CAAcC,IADhC;AAEI,IAAA,WAAW,EAAEH,IAAI,CAACE,QAAL,CAAcE,KAF/B;AAGI,IAAA,OAAO,EAAEJ,IAAI,CAACE,QAAL,CAAcG,GAAd,CAAkBF,IAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADI,CAFhB,CALJ,CADJ;AAqBH,CA3BM","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {RecordsCard} from '../molecules'\nimport {useOrder} from '../../../Hooks/org'\nimport {useOrderIdOffers} from '../../../Hooks/order'\nimport {$orderModel} from '../../../Models/order-model'\nimport {RootContent} from '../../../UIComponents/GlobalStyles'\n\n\nexport const AccountRecordsDetail = () => {\n    useOrder()\n    useOrderIdOffers()\n    const {$orderIdOffers: {data}, $orderDetail: {data: detail}} = useStore($orderModel)\n    console.log(detail)\n    \n    return (\n        <RootContent\n            paddingTop={62}\n            paddingBottom={65}\n            height='100vh'\n        >\n            <Row className='container'>\n                {\n                    data && data.map((item, idx) => (\n                        <Col span={24} key={`${idx + 1}`}>\n                            <RecordsCard\n                                offeringName={item.offering.name}\n                                offeringUrl={item.offering.image}\n                                orgName={item.offering.org.name}\n                            />\n                        </Col>\n                    ))\n                }\n            </Row>\n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}