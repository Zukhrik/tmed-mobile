{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Home/SearchPage/organisms/offerings-list.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { SearchCard } from '../molecules';\nimport { useTranslation } from 'react-i18next';\nimport { EmptyContainerWrapper, RootContent } from '../../../../UIComponents/GlobalStyles';\nimport { $offeringsModel } from '../../../../Models/offerings-model';\nimport { NoSearchResultSvg } from '../../../../Icons/NoSearchResult';\nimport { Title } from '../../../../UIComponents/Typography/Title';\nexport const OfferingsList = ({\n  searchText\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    $offeringsList: {\n      data\n    }\n  } = useStore($offeringsModel);\n  return /*#__PURE__*/React.createElement(RootContent, {\n    paddingTop: \"102px\",\n    paddingBottom: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    style: {\n      padding: '0 12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, searchText.trim().length > 2 && data ? data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SearchCard, {\n    size: 40,\n    src: item.image,\n    title: item.name,\n    text: t('offering'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(EmptyContainerWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(NoSearchResultSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, t('no_search_result')))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Home/SearchPage/organisms/offerings-list.jsx"],"names":["React","Col","Row","useStore","SearchCard","useTranslation","EmptyContainerWrapper","RootContent","$offeringsModel","NoSearchResultSvg","Title","OfferingsList","searchText","t","$offeringsList","data","padding","trim","length","map","item","idx","image","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,qBAAR,EAA+BC,WAA/B,QAAiD,uCAAjD;AACA,SAAQC,eAAR,QAA8B,oCAA9B;AACA,SAAQC,iBAAR,QAAgC,kCAAhC;AACA,SAAQC,KAAR,QAAoB,2CAApB;AAGA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAC3C,QAAM;AAACC,IAAAA;AAAD,MAAMR,cAAc,EAA1B;AACA,QAAM;AAACS,IAAAA,cAAc,EAAE;AAACC,MAAAA;AAAD;AAAjB,MAA2BZ,QAAQ,CAACK,eAAD,CAAzC;AAEA,sBACI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAC,OADf;AAEI,IAAA,aAAa,EAAC,MAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAsB,IAAA,KAAK,EAAE;AAACQ,MAAAA,OAAO,EAAE;AAAV,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQJ,UAAU,CAACK,IAAX,GAAkBC,MAAlB,GAA2B,CAA3B,IAAgCH,IAAhC,GACMA,IAAI,CAACI,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACP,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE,EADV;AAEI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,UAAD;AACI,IAAA,IAAI,EAAE,EADV;AAEI,IAAA,GAAG,EAAED,IAAI,CAACE,KAFd;AAGI,IAAA,KAAK,EAAEF,IAAI,CAACG,IAHhB;AAII,IAAA,IAAI,EAAEV,CAAC,CAAC,UAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF,CADN,gBAcM,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,CAAC,CAAC,kBAAD,CAAT,CAFF,CAhBd,CAJJ,CADJ;AA6BH,CAjCM","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {SearchCard} from '../molecules'\nimport {useTranslation} from 'react-i18next'\nimport {EmptyContainerWrapper, RootContent} from '../../../../UIComponents/GlobalStyles'\nimport {$offeringsModel} from '../../../../Models/offerings-model'\nimport {NoSearchResultSvg} from '../../../../Icons/NoSearchResult'\nimport {Title} from '../../../../UIComponents/Typography/Title'\n\n\nexport const OfferingsList = ({searchText}) => {\n    const {t} = useTranslation()\n    const {$offeringsList: {data}} = useStore($offeringsModel)\n    \n    return (\n        <RootContent\n            paddingTop='102px'\n            paddingBottom='10px'\n        >\n            <Row gutter={[0, 12]} style={{padding: '0 12px'}}>\n                {\n                    searchText.trim().length > 2 && data\n                        ? data.map((item, idx) => (\n                            <Col\n                                span={24}\n                                key={`${idx + 1}`}\n                            >\n                                <SearchCard\n                                    size={40}\n                                    src={item.image}\n                                    title={item.name}\n                                    text={t('offering')}\n                                />\n                            </Col>\n                        ))\n                        : <EmptyContainerWrapper>\n                            <NoSearchResultSvg/>\n                            <Title>{t('no_search_result')}</Title>\n                        </EmptyContainerWrapper>\n                }\n            </Row>\n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}