{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/Records/organisms/choose-specialist.jsx\";\nimport React from 'react';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { useParams } from 'react-router-dom';\nimport { useStore } from 'effector-react';\nimport { useUrlGenerate } from '../../../Hooks/org';\nimport { $orderModel } from '../../../Models/order-model';\nimport { AccountScrollWrapper, SpecialistNavLink } from '../atoms';\nimport { URL_KEYS } from '../../../Constants';\nimport { ShortCard } from '../../../Components/Cards';\nimport { Col, Row } from 'antd';\nimport { SkeletonUI } from '../../../UIComponents/GlobalStyles';\nconst skeleton = generateSkeleton(1);\nexport const ChooseSpecialist = () => {\n  const {\n    organization\n  } = useParams();\n  const {\n    generateUrl,\n    getActive\n  } = useUrlGenerate();\n  const {\n    $orderCartList: {\n      data,\n      forceLoading\n    }\n  } = useStore($orderModel);\n  const currentOrg = data.find(item => item.seller.slug_name === organization);\n  const specList = currentOrg ? currentOrg.seller.specialists : [];\n  console.log(specList);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, forceLoading === 2 ? /*#__PURE__*/React.createElement(AccountScrollWrapper, {\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, specList.map((item, idx) => /*#__PURE__*/React.createElement(SpecialistNavLink, {\n    key: `${idx + 1}`,\n    to: generateUrl(URL_KEYS.SPECIALIST_ID, item.id),\n    isActive: () => getActive(URL_KEYS.SPECIALIST_ID, item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ShortCard, {\n    direction: \"vertical\",\n    imgUrl: item.user.avatar,\n    name: item.user.full_name,\n    text: item.job.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 41\n    }\n  })))) : /*#__PURE__*/React.createElement(Row, {\n    gutter: [12, 0],\n    style: {\n      padding: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonUI, {\n    width: 40,\n    height: 40,\n    variant: \"circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 41\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/Records/organisms/choose-specialist.jsx"],"names":["React","generateSkeleton","useParams","useStore","useUrlGenerate","$orderModel","AccountScrollWrapper","SpecialistNavLink","URL_KEYS","ShortCard","Col","Row","SkeletonUI","skeleton","ChooseSpecialist","organization","generateUrl","getActive","$orderCartList","data","forceLoading","currentOrg","find","item","seller","slug_name","specList","specialists","console","log","map","idx","SPECIALIST_ID","id","user","avatar","full_name","job","name","padding"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,cAAR,QAA6B,oBAA7B;AACA,SAAQC,WAAR,QAA0B,6BAA1B;AACA,SAAQC,oBAAR,EAA8BC,iBAA9B,QAAsD,UAAtD;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,SAAR,QAAwB,2BAAxB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,UAAR,QAAyB,oCAAzB;AAEA,MAAMC,QAAQ,GAAGZ,gBAAgB,CAAC,CAAD,CAAjC;AACA,OAAO,MAAMa,gBAAgB,GAAG,MAAM;AAClC,QAAM;AAACC,IAAAA;AAAD,MAAiBb,SAAS,EAAhC;AACA,QAAM;AAACc,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA2Bb,cAAc,EAA/C;AACA,QAAM;AAACc,IAAAA,cAAc,EAAE;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP;AAAjB,MAAyCjB,QAAQ,CAACE,WAAD,CAAvD;AACA,QAAMgB,UAAU,GAAGF,IAAI,CAACG,IAAL,CAAUC,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAYC,SAAZ,KAA0BV,YAA5C,CAAnB;AACA,QAAMW,QAAQ,GAAGL,UAAU,GAAGA,UAAU,CAACG,MAAX,CAAkBG,WAArB,GAAmC,EAA9D;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,sBACI,0CAEQN,YAAY,KAAK,CAAjB,gBAEQ,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQM,QAAQ,CAACI,GAAT,CAAa,CAACP,IAAD,EAAOQ,GAAP,kBACT,oBAAC,iBAAD;AACI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EADpB;AAEI,IAAA,EAAE,EAAEf,WAAW,CAACR,QAAQ,CAACwB,aAAV,EAAyBT,IAAI,CAACU,EAA9B,CAFnB;AAGI,IAAA,QAAQ,EAAE,MAAMhB,SAAS,CAACT,QAAQ,CAACwB,aAAV,EAAyBT,IAAI,CAACU,EAA9B,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAC,UADd;AAEI,IAAA,MAAM,EAAEV,IAAI,CAACW,IAAL,CAAUC,MAFtB;AAGI,IAAA,IAAI,EAAEZ,IAAI,CAACW,IAAL,CAAUE,SAHpB;AAII,IAAA,IAAI,EAAEb,IAAI,CAACc,GAAL,CAASC,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CAFR,CAFR,gBAqBQ,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,CAAL,CAAb;AAAsB,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ1B,QAAQ,CAACiB,GAAT,CAAa,CAACP,IAAD,EAAOQ,GAAP,kBACT,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAE,EADX;AAEI,IAAA,MAAM,EAAE,EAFZ;AAGI,IAAA,OAAO,EAAC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFR,CAvBhB,CADJ;AAyCH,CAlDM","sourcesContent":["import React from 'react'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {useParams} from 'react-router-dom'\nimport {useStore} from 'effector-react'\nimport {useUrlGenerate} from '../../../Hooks/org'\nimport {$orderModel} from '../../../Models/order-model'\nimport {AccountScrollWrapper, SpecialistNavLink} from '../atoms'\nimport {URL_KEYS} from '../../../Constants'\nimport {ShortCard} from '../../../Components/Cards'\nimport {Col, Row} from 'antd'\nimport {SkeletonUI} from '../../../UIComponents/GlobalStyles'\n\nconst skeleton = generateSkeleton(1)\nexport const ChooseSpecialist = () => {\n    const {organization} = useParams()\n    const {generateUrl, getActive} = useUrlGenerate()\n    const {$orderCartList: {data, forceLoading}} = useStore($orderModel)\n    const currentOrg = data.find(item => item.seller.slug_name === organization)\n    const specList = currentOrg ? currentOrg.seller.specialists : []\n    \n    console.log(specList)\n    \n    return (\n        <>\n            {\n                forceLoading === 2\n                    ? (\n                        <AccountScrollWrapper display='flex'>\n                            {\n                                specList.map((item, idx) => (\n                                    <SpecialistNavLink\n                                        key={`${idx + 1}`}\n                                        to={generateUrl(URL_KEYS.SPECIALIST_ID, item.id)}\n                                        isActive={() => getActive(URL_KEYS.SPECIALIST_ID, item.id)}\n                                    >\n                                        <ShortCard\n                                            direction='vertical'\n                                            imgUrl={item.user.avatar}\n                                            name={item.user.full_name}\n                                            text={item.job.name}\n                                        />\n                                    </SpecialistNavLink>\n                                ))\n                            }\n                        </AccountScrollWrapper>\n                    ) : (\n                        <Row gutter={[12, 0]} style={{padding: 3}}>\n                            {\n                                skeleton.map((item, idx) => (\n                                    <Col key={`${idx + 1}`}>\n                                        <SkeletonUI\n                                            width={40}\n                                            height={40}\n                                            variant='circle'\n                                        />\n                                    </Col>\n                                ))\n                            }\n                        </Row>\n                    )\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}