{"ast":null,"code":"import React from'react';import{AuthContainer,AuthForm,ConfirmButtonsWrapper,CountdownWrapper,ImageWrapper,LinkToWrapper,StyledCountdown}from'../../style';import{Col,Row}from'antd';import{Trans,useTranslation}from'react-i18next';import{Link,useLocation}from'react-router-dom';import{usePhoneVerify}from'../../../../Hooks/auth';import{Button}from'../../../../UIComponents/Button';import{URL_KEYS,URL_VALUES}from'../../../../Constants';import{InputUI}from'../../../../UIComponents/mu-inputs';import{PhoneVerifySvg}from'../../../../Icons/PhoneVerify';import{Title}from'../../../../UIComponents/Typography/Title';import{Container}from'../../../../UIComponents/GlobalStyles';export var PhoneVerifyForm=function PhoneVerifyForm(){var _usePhoneVerify=usePhoneVerify(),formik=_usePhoneVerify.formik,phone=_usePhoneVerify.phone,deadline=_usePhoneVerify.deadline,onFinish=_usePhoneVerify.onFinish,resend=_usePhoneVerify.resend,showResend=_usePhoneVerify.showResend;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useLocation=useLocation(),state=_useLocation.state;return/*#__PURE__*/React.createElement(AuthContainer,null,/*#__PURE__*/React.createElement(ImageWrapper,null,/*#__PURE__*/React.createElement(Title,{level:3},t('SMS_confirmation')),/*#__PURE__*/React.createElement(PhoneVerifySvg,null)),/*#__PURE__*/React.createElement(AuthForm,{onSubmit:formik.handleSubmit},/*#__PURE__*/React.createElement(Row,{gutter:[16,24]},/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Title,{alignType:'center',level:5},/*#__PURE__*/React.createElement(Trans,{i18nKey:\"verification_code_sentence\"},{phone:phone},/*#__PURE__*/React.createElement(\"br\",null))))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(InputUI,{mask:\"9 9 9 9 9 9\",variant:\"outlined\",inputType:\"masked\",name:\"activation_code\",onBlur:formik.handleBlur,onChange:formik.handleChange,label:t('verification_code'),values:formik.values.activation_code,error:formik.touched.activation_code&&formik.errors.activation_code,staticError:true})),!showResend&&/*#__PURE__*/React.createElement(CountdownWrapper,null,/*#__PURE__*/React.createElement(Trans,{i18nKey:\"get_code_sentence\"},/*#__PURE__*/React.createElement(StyledCountdown,{value:deadline,format:\"s\",onFinish:onFinish})))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(ConfirmButtonsWrapper,null,/*#__PURE__*/React.createElement(Button,{size:\"l\",variant:\"primary\",htmlType:\"submit\",disabled:formik.touched.activation_code&&!!formik.errors.activation_code||!formik.values.activation_code.match(/^(\\d\\s*){6}$/)||showResend},t('confirm')),showResend&&/*#__PURE__*/React.createElement(Button,{onClick:resend,size:\"l\",style:{boxShadow:'unset',color:'var(--dark-dwed)'}},t('send_again')))))),/*#__PURE__*/React.createElement(LinkToWrapper,{style:{marginTop:30}},/*#__PURE__*/React.createElement(Link,{to:{pathname:'/sign-up',search:\"\".concat(URL_KEYS.STEP,\"=\").concat(URL_VALUES.CHANGE_PHONE),state:state}},t('change_phone_number'))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Auth/SignUp/PhoneVerify/index.jsx"],"names":["React","AuthContainer","AuthForm","ConfirmButtonsWrapper","CountdownWrapper","ImageWrapper","LinkToWrapper","StyledCountdown","Col","Row","Trans","useTranslation","Link","useLocation","usePhoneVerify","Button","URL_KEYS","URL_VALUES","InputUI","PhoneVerifySvg","Title","Container","PhoneVerifyForm","formik","phone","deadline","onFinish","resend","showResend","t","state","handleSubmit","handleBlur","handleChange","values","activation_code","touched","errors","match","boxShadow","color","marginTop","pathname","search","STEP","CHANGE_PHONE"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {\r\n    AuthContainer,\r\n    AuthForm,\r\n    ConfirmButtonsWrapper,\r\n    CountdownWrapper,\r\n    ImageWrapper,\r\n    LinkToWrapper,\r\n    StyledCountdown\r\n} from '../../style'\r\nimport {Col, Row} from 'antd'\r\nimport {Trans, useTranslation} from 'react-i18next'\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport {usePhoneVerify} from '../../../../Hooks/auth'\r\nimport {Button} from '../../../../UIComponents/Button'\r\nimport {URL_KEYS, URL_VALUES} from '../../../../Constants'\r\nimport {InputUI} from '../../../../UIComponents/mu-inputs'\r\nimport {PhoneVerifySvg} from '../../../../Icons/PhoneVerify'\r\nimport {Title} from '../../../../UIComponents/Typography/Title'\r\nimport {Container} from '../../../../UIComponents/GlobalStyles'\r\n\r\nexport const PhoneVerifyForm = () => {\r\n    const {formik, phone, deadline, onFinish, resend, showResend} = usePhoneVerify()\r\n    const {t} = useTranslation()\r\n    const {state} = useLocation()\r\n\r\n    return (\r\n        <AuthContainer>\r\n            <ImageWrapper>\r\n                <Title level={3}>{t('SMS_confirmation')}</Title>\r\n                <PhoneVerifySvg/>\r\n            </ImageWrapper>\r\n            <AuthForm onSubmit={formik.handleSubmit}>\r\n                <Row gutter={[16, 24]}>\r\n                    <Col span={24}>\r\n                       <Container>\r\n                           <Title alignType={'center'} level={5}>\r\n                               <Trans i18nKey='verification_code_sentence'>\r\n                                   {{phone}}\r\n                                   <br/>\r\n                               </Trans>\r\n                           </Title>\r\n                       </Container>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Container>\r\n                            <InputUI\r\n                                mask='9 9 9 9 9 9'\r\n                                variant='outlined'\r\n                                inputType='masked'\r\n                                name='activation_code'\r\n                                onBlur={formik.handleBlur}\r\n                                onChange={formik.handleChange}\r\n                                label={t('verification_code')}\r\n                                values={formik.values.activation_code}\r\n                                error={formik.touched.activation_code && formik.errors.activation_code}\r\n                                staticError\r\n                            />\r\n                        </Container>\r\n                        {\r\n                            !showResend\r\n                            && (\r\n                                <CountdownWrapper>\r\n                                    <Trans i18nKey='get_code_sentence'>\r\n                                        <StyledCountdown value={deadline} format='s' onFinish={onFinish}/>\r\n                                    </Trans>\r\n                                </CountdownWrapper>\r\n                            )\r\n                        }\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <ConfirmButtonsWrapper>\r\n                            <Button\r\n                                size='l'\r\n                                variant='primary'\r\n                                htmlType='submit'\r\n                                disabled={\r\n                                    (formik.touched.activation_code && !!formik.errors.activation_code)\r\n                                    || !formik.values.activation_code.match(/^(\\d\\s*){6}$/)\r\n                                    || showResend\r\n                                }\r\n                            >\r\n                                {t('confirm')}\r\n                            </Button>\r\n                            {\r\n                                showResend\r\n                                && (\r\n                                    <Button\r\n                                        onClick={resend}\r\n                                        size='l'\r\n                                        style={{boxShadow: 'unset', color: 'var(--dark-dwed)'}}\r\n                                    >\r\n                                        {t('send_again')}\r\n                                    </Button>\r\n                                )\r\n                            }\r\n                        </ConfirmButtonsWrapper>\r\n                    </Col>\r\n                </Row>\r\n            </AuthForm>\r\n            <LinkToWrapper style={{marginTop: 30}}>\r\n                <Link\r\n                    to={{\r\n                        pathname: '/sign-up',\r\n                        search: `${URL_KEYS.STEP}=${URL_VALUES.CHANGE_PHONE}`,\r\n                        state\r\n                    }}\r\n                >\r\n                    {t('change_phone_number')}\r\n                </Link>\r\n            </LinkToWrapper>\r\n        </AuthContainer>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}