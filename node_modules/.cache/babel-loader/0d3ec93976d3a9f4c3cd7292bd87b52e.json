{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Settings/pages/personal-information.jsx\";\nimport React, { useCallback, useState } from 'react';\nimport { LISTS } from '../../../Constants';\nimport { InformationForm } from '../organisms';\nimport { useTranslation } from 'react-i18next';\nimport { Modal } from '../../../UIComponents/Modal';\nimport { useProfileInfo } from '../../../Hooks/account';\nimport { useCurrencies, useGoBack } from '../../../Hooks/app';\nimport { FixedHeader } from '../../../Components/FixedHeader';\nimport { SelectionList } from '../../../Components/SelectionList';\nimport { RootContent } from '../../../UIComponents/GlobalStyles';\nexport const PersonalInformation = () => {\n  useCurrencies();\n  const {\n    t\n  } = useTranslation();\n  const {\n    formik\n  } = useProfileInfo();\n  const {\n    goBack\n  } = useGoBack('/settings/account');\n  const [listType, setListType] = useState(LISTS.USER_CATEGORY);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const getTitle = useCallback(() => {\n    let tmp = '';\n\n    if (listType === LISTS.USER_CATEGORY) {\n      tmp = 'category';\n    }\n\n    if (listType === LISTS.REGION) {\n      tmp = 'region';\n    }\n\n    return tmp;\n  }, [listType]);\n\n  const handleClick = listType => {\n    setListType(listType);\n    setModalIsOpen(true);\n  };\n\n  return /*#__PURE__*/React.createElement(RootContent, {\n    paddingTop: \"50px\",\n    height: \"100vh\",\n    paddingBottom: \"60px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    centered: true,\n    modalIsOpen: modalIsOpen,\n    title: t(`${getTitle()}`),\n    setModalIsOpen: setModalIsOpen,\n    component: /*#__PURE__*/React.createElement(SelectionList, {\n      listType: listType,\n      onClose: () => setModalIsOpen(false),\n      onChange: value => formik.setFieldValue(getTitle(), value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FixedHeader, {\n    title: t('personal_information'),\n    goBack: goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InformationForm, {\n    formik: formik,\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Settings/pages/personal-information.jsx"],"names":["React","useCallback","useState","LISTS","InformationForm","useTranslation","Modal","useProfileInfo","useCurrencies","useGoBack","FixedHeader","SelectionList","RootContent","PersonalInformation","t","formik","goBack","listType","setListType","USER_CATEGORY","modalIsOpen","setModalIsOpen","getTitle","tmp","REGION","handleClick","value","setFieldValue"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAAQC,KAAR,QAAoB,oBAApB;AACA,SAAQC,eAAR,QAA8B,cAA9B;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,KAAR,QAAoB,6BAApB;AACA,SAAQC,cAAR,QAA6B,wBAA7B;AACA,SAAQC,aAAR,EAAuBC,SAAvB,QAAuC,oBAAvC;AACA,SAAQC,WAAR,QAA0B,iCAA1B;AACA,SAAQC,aAAR,QAA4B,mCAA5B;AACA,SAAQC,WAAR,QAA0B,oCAA1B;AAGA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACrCL,EAAAA,aAAa;AACb,QAAM;AAACM,IAAAA;AAAD,MAAMT,cAAc,EAA1B;AACA,QAAM;AAACU,IAAAA;AAAD,MAAWR,cAAc,EAA/B;AACA,QAAM;AAACS,IAAAA;AAAD,MAAWP,SAAS,CAAC,mBAAD,CAA1B;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACC,KAAK,CAACgB,aAAP,CAAxC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMoB,QAAQ,GAAGrB,WAAW,CAAC,MAAM;AAC/B,QAAIsB,GAAG,GAAG,EAAV;;AACA,QAAIN,QAAQ,KAAKd,KAAK,CAACgB,aAAvB,EAAsC;AAClCI,MAAAA,GAAG,GAAG,UAAN;AACH;;AAED,QAAIN,QAAQ,KAAKd,KAAK,CAACqB,MAAvB,EAA+B;AAC3BD,MAAAA,GAAG,GAAG,QAAN;AACH;;AAED,WAAOA,GAAP;AACH,GAX2B,EAWzB,CAACN,QAAD,CAXyB,CAA5B;;AAaA,QAAMQ,WAAW,GAAIR,QAAD,IAAc;AAC9BC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAI,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAHD;;AAMA,sBACI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAC,MADf;AAEI,IAAA,MAAM,EAAC,OAFX;AAGI,IAAA,aAAa,EAAC,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,KAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,WAAW,EAAED,WAFjB;AAGI,IAAA,KAAK,EAAEN,CAAC,CAAE,GAAEQ,QAAQ,EAAG,EAAf,CAHZ;AAII,IAAA,cAAc,EAAED,cAJpB;AAKI,IAAA,SAAS,eACL,oBAAC,aAAD;AACI,MAAA,QAAQ,EAAEJ,QADd;AAEI,MAAA,OAAO,EAAE,MAAMI,cAAc,CAAC,KAAD,CAFjC;AAGI,MAAA,QAAQ,EAAGK,KAAD,IAAWX,MAAM,CAACY,aAAP,CAAqBL,QAAQ,EAA7B,EAAiCI,KAAjC,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAkBI,oBAAC,WAAD;AACI,IAAA,KAAK,EAAEZ,CAAC,CAAC,sBAAD,CADZ;AAEI,IAAA,MAAM,EAAEE,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eAsBI,oBAAC,eAAD;AACI,IAAA,MAAM,EAAED,MADZ;AAEI,IAAA,WAAW,EAAEU,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CADJ;AA6BH,CAxDM","sourcesContent":["import React, {useCallback, useState} from 'react'\nimport {LISTS} from '../../../Constants'\nimport {InformationForm} from '../organisms'\nimport {useTranslation} from 'react-i18next'\nimport {Modal} from '../../../UIComponents/Modal'\nimport {useProfileInfo} from '../../../Hooks/account'\nimport {useCurrencies, useGoBack} from '../../../Hooks/app'\nimport {FixedHeader} from '../../../Components/FixedHeader'\nimport {SelectionList} from '../../../Components/SelectionList'\nimport {RootContent} from '../../../UIComponents/GlobalStyles'\n\n\nexport const PersonalInformation = () => {\n    useCurrencies()\n    const {t} = useTranslation()\n    const {formik} = useProfileInfo()\n    const {goBack} = useGoBack('/settings/account')\n    const [listType, setListType] = useState(LISTS.USER_CATEGORY)\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    \n    const getTitle = useCallback(() => {\n        let tmp = ''\n        if (listType === LISTS.USER_CATEGORY) {\n            tmp = 'category'\n        }\n        \n        if (listType === LISTS.REGION) {\n            tmp = 'region'\n        }\n        \n        return tmp\n    }, [listType])\n    \n    const handleClick = (listType) => {\n        setListType(listType)\n        setModalIsOpen(true)\n    }\n    \n    \n    return (\n        <RootContent\n            paddingTop='50px'\n            height='100vh'\n            paddingBottom='60px'\n        >\n            <Modal\n                centered\n                modalIsOpen={modalIsOpen}\n                title={t(`${getTitle()}`)}\n                setModalIsOpen={setModalIsOpen}\n                component={\n                    <SelectionList\n                        listType={listType}\n                        onClose={() => setModalIsOpen(false)}\n                        onChange={(value) => formik.setFieldValue(getTitle(), value)}\n                    />\n                }\n            />\n            <FixedHeader\n                title={t('personal_information')}\n                goBack={goBack}\n            />\n            <InformationForm\n                formik={formik}\n                handleClick={handleClick}\n            />\n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}