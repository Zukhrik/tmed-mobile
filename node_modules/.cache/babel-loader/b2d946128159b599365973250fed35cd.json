{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/RecommendUsers/organisms/reccomend-users-card.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { useTranslation } from 'react-i18next';\nimport { $appModel } from '../../../Models/app';\nimport { ShortCard } from '../../../Components/Cards';\nimport { PeopleCardWrapper } from '../atoms';\nimport { $accountModel } from '../../../Models/account-model';\nimport { Button } from '../../../UIComponents/Button';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { degreesData } from '../../../data';\nimport { IconBox } from '../../../UIComponents/GlobalStyles';\nexport const RecommendUserCard = ({\n  text,\n  path,\n  item,\n  name,\n  imgUrl,\n  username,\n  subscribed,\n  handleSubscribe\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    $app: {\n      token\n    }\n  } = useStore($appModel);\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  return /*#__PURE__*/React.createElement(PeopleCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    wrap: false,\n    align: \"middle\",\n    justify: \"space-between\",\n    gutter: [8, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ShortCard, {\n    imgUrl: imgUrl,\n    imgPath: path,\n    imgSize: 55,\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, name)), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"category-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, text)), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"rating-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, degreesData.map(item => {\n    const Icon = item.icon;\n    return /*#__PURE__*/React.createElement(IconBox, {\n      key: item.icon,\n      color: item.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 45\n      }\n    }), \"0\");\n  })))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, currentProfile && currentProfile.slug_name !== username && /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleSubscribe(item),\n    variant: !subscribed ? 'primary' : '',\n    disabled: subscribed || !token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, !subscribed ? t('subscribe') : t('subscribed')))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/RecommendUsers/organisms/reccomend-users-card.jsx"],"names":["React","Col","Row","useStore","useTranslation","$appModel","ShortCard","PeopleCardWrapper","$accountModel","Button","Text","degreesData","IconBox","RecommendUserCard","text","path","item","name","imgUrl","username","subscribed","handleSubscribe","t","$app","token","$profiles","currentProfile","map","Icon","icon","color","slug_name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {useTranslation} from 'react-i18next'\nimport {$appModel} from '../../../Models/app'\nimport {ShortCard} from '../../../Components/Cards'\nimport {PeopleCardWrapper} from '../atoms'\nimport {$accountModel} from '../../../Models/account-model'\nimport {Button} from '../../../UIComponents/Button'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {degreesData} from '../../../data'\nimport {IconBox} from '../../../UIComponents/GlobalStyles'\n\nexport const RecommendUserCard = ({text, path, item, name, imgUrl, username, subscribed, handleSubscribe}) => {\n    const {t} = useTranslation()\n    const {$app: {token}} = useStore($appModel)\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    \n    \n    return (\n        <PeopleCardWrapper>\n            <Row\n                wrap={false}\n                align='middle'\n                justify='space-between'\n                gutter={[8, 0]}\n            >\n                <Col>\n                    <ShortCard\n                        imgUrl={imgUrl}\n                        imgPath={path}\n                        imgSize={55}\n                        path={path}\n                    />\n                </Col>\n                <Col flex={1}>\n                    <Row>\n                        <Col span={24}>\n                            <Text>{name}</Text>\n                        </Col>\n                        <Col span={24} className='category-text'>\n                            <Text>{text}</Text>\n                        </Col>\n                        <Col span={24} className='rating-wrapper'>\n                            {\n                                degreesData.map(item => {\n                                    const Icon = item.icon\n                                    return (\n                                        <IconBox\n                                            key={item.icon}\n                                            color={item.color}\n                                        >\n                                            <Icon/>\n                                            0\n                                        </IconBox>\n                                    )\n                                })\n                            }\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    {\n                        currentProfile && currentProfile.slug_name !== username &&\n                        <Button\n                            onClick={() => handleSubscribe(item)}\n                            variant={!subscribed ? 'primary' : ''}\n                            disabled={subscribed || !token}\n                        >\n                            {!subscribed ? t('subscribe') : t('subscribed')}\n                        </Button>\n                    }\n                </Col>\n            </Row>\n        </PeopleCardWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}