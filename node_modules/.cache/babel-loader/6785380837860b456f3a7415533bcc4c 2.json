{"ast":null,"code":"import { createEvent } from 'effector';\nimport { fetchAllOrg, fetchOrgInfo, fetchOrgPaymentMethods, fetchOrgSpecialistCat, fetchOrgSpecialists, fetchSearchOrg, fetchSubscribeToOrg, fetchUnsubscribeFromOrg } from './effects';\nexport const allOrgMount = createEvent();\nexport const searchOrgMount = createEvent();\nexport const orgInfoMount = createEvent();\nexport const orgSpecialistsMount = createEvent();\nexport const orgListForceLoading = createEvent();\nexport const subscribeToOrgMount = createEvent();\nexport const orgSpecialistCatMount = createEvent();\nexport const unsubscribeFromOrgMount = createEvent();\nexport const orgPaymentMethodsMount = createEvent();\nallOrgMount.watch(fetchAllOrg);\nsearchOrgMount.watch(fetchSearchOrg);\norgInfoMount.watch(fetchOrgInfo);\norgSpecialistsMount.watch(fetchOrgSpecialists);\nsubscribeToOrgMount.watch(fetchSubscribeToOrg);\norgSpecialistCatMount.watch(fetchOrgSpecialistCat);\nunsubscribeFromOrgMount.watch(fetchUnsubscribeFromOrg);\norgPaymentMethodsMount.watch(fetchOrgPaymentMethods);","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Models/org-model/events.js"],"names":["createEvent","fetchAllOrg","fetchOrgInfo","fetchOrgPaymentMethods","fetchOrgSpecialistCat","fetchOrgSpecialists","fetchSearchOrg","fetchSubscribeToOrg","fetchUnsubscribeFromOrg","allOrgMount","searchOrgMount","orgInfoMount","orgSpecialistsMount","orgListForceLoading","subscribeToOrgMount","orgSpecialistCatMount","unsubscribeFromOrgMount","orgPaymentMethodsMount","watch"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,UAA1B;AACA,SACIC,WADJ,EAEIC,YAFJ,EAGIC,sBAHJ,EAIIC,qBAJJ,EAKIC,mBALJ,EAKyBC,cALzB,EAMIC,mBANJ,EAOIC,uBAPJ,QAQO,WARP;AAUA,OAAO,MAAMC,WAAW,GAAGT,WAAW,EAA/B;AACP,OAAO,MAAMU,cAAc,GAAGV,WAAW,EAAlC;AACP,OAAO,MAAMW,YAAY,GAAGX,WAAW,EAAhC;AACP,OAAO,MAAMY,mBAAmB,GAAGZ,WAAW,EAAvC;AACP,OAAO,MAAMa,mBAAmB,GAAGb,WAAW,EAAvC;AACP,OAAO,MAAMc,mBAAmB,GAAGd,WAAW,EAAvC;AACP,OAAO,MAAMe,qBAAqB,GAAGf,WAAW,EAAzC;AACP,OAAO,MAAMgB,uBAAuB,GAAGhB,WAAW,EAA3C;AACP,OAAO,MAAMiB,sBAAsB,GAAGjB,WAAW,EAA1C;AAEPS,WAAW,CAACS,KAAZ,CAAkBjB,WAAlB;AACAS,cAAc,CAACQ,KAAf,CAAqBZ,cAArB;AACAK,YAAY,CAACO,KAAb,CAAmBhB,YAAnB;AACAU,mBAAmB,CAACM,KAApB,CAA0Bb,mBAA1B;AACAS,mBAAmB,CAACI,KAApB,CAA0BX,mBAA1B;AACAQ,qBAAqB,CAACG,KAAtB,CAA4Bd,qBAA5B;AACAY,uBAAuB,CAACE,KAAxB,CAA8BV,uBAA9B;AACAS,sBAAsB,CAACC,KAAvB,CAA6Bf,sBAA7B","sourcesContent":["import {createEvent} from 'effector'\r\nimport {\r\n    fetchAllOrg,\r\n    fetchOrgInfo,\r\n    fetchOrgPaymentMethods,\r\n    fetchOrgSpecialistCat,\r\n    fetchOrgSpecialists, fetchSearchOrg,\r\n    fetchSubscribeToOrg,\r\n    fetchUnsubscribeFromOrg\r\n} from './effects'\r\n\r\nexport const allOrgMount = createEvent()\r\nexport const searchOrgMount = createEvent()\r\nexport const orgInfoMount = createEvent()\r\nexport const orgSpecialistsMount = createEvent()\r\nexport const orgListForceLoading = createEvent()\r\nexport const subscribeToOrgMount = createEvent()\r\nexport const orgSpecialistCatMount = createEvent()\r\nexport const unsubscribeFromOrgMount = createEvent()\r\nexport const orgPaymentMethodsMount = createEvent()\r\n\r\nallOrgMount.watch(fetchAllOrg)\r\nsearchOrgMount.watch(fetchSearchOrg)\r\norgInfoMount.watch(fetchOrgInfo)\r\norgSpecialistsMount.watch(fetchOrgSpecialists)\r\nsubscribeToOrgMount.watch(fetchSubscribeToOrg)\r\norgSpecialistCatMount.watch(fetchOrgSpecialistCat)\r\nunsubscribeFromOrgMount.watch(fetchUnsubscribeFromOrg)\r\norgPaymentMethodsMount.watch(fetchOrgPaymentMethods)\r\n"]},"metadata":{},"sourceType":"module"}