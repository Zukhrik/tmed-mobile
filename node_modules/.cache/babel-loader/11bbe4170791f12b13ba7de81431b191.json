{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/StreamPage/pages/stream-page.jsx\";\nimport React, { useState } from 'react';\nimport { useChannelSchedule, useCurrentAnons, useStream, useStreamChatWs, useStreamViewerCountWs } from '../../../Hooks/stream';\nimport { useStore } from 'effector-react';\nimport { useParams } from 'react-router-dom';\nimport FastAuth from '../../Auth/FastAuth';\nimport { useGoBack } from '../../../Hooks/app';\nimport { StreamPageSkeleton } from '../templates';\nimport { URL_KEYS, URL_VALUES } from '../../../Constants';\nimport { ChatComponent, ScheduleList } from '../organisms';\nimport { $streamModel } from '../../../Models/stream-model';\nimport { AuthModal } from '../../../UIComponents/AuthModal';\nimport { StreamPageComponent } from './stream-page-component';\nimport { useStreamChannelChat } from '../../../Hooks/stream/use-stream-channel-chat';\nexport const StreamPage = () => {\n  var _data$user, _data$user2;\n\n  useStream();\n  useStreamChatWs();\n  useStreamViewerCountWs();\n  const {\n    slug_name\n  } = useParams();\n  const {\n    loadMore\n  } = useChannelSchedule();\n  const {\n    currentStream\n  } = useCurrentAnons();\n  const {\n    loadMore: chatLoadMore\n  } = useStreamChannelChat();\n  const [openChat, setOpenChat] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const {\n    goBack\n  } = useGoBack({\n    pathname: '/search',\n    search: `${URL_KEYS.SEARCH_TYPE}=${URL_VALUES.STREAM}`\n  });\n  const {\n    $stream: {\n      data,\n      forceLoading: streamForceLoading\n    },\n    $channelStreamScheduleList: {\n      forceLoading\n    }\n  } = useStore($streamModel);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AuthModal, {\n    title: false,\n    modalIsOpen: modalIsOpen,\n    onCancel: () => setModalIsOpen(false),\n    content: /*#__PURE__*/React.createElement(FastAuth, {\n      onClose: () => setModalIsOpen(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), forceLoading && streamForceLoading === 2 ? /*#__PURE__*/React.createElement(React.Fragment, null, data && currentStream && /*#__PURE__*/React.createElement(StreamPageComponent, {\n    setOpenChat: setOpenChat,\n    openChat: openChat,\n    logoPushUrl: '/tape',\n    goBack: goBack,\n    text: data === null || data === void 0 ? void 0 : (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.full_name,\n    live: data.live_at,\n    title: currentStream.title ? currentStream.title : data.channel_name,\n    thumbnail: currentStream.image || data.logo,\n    description: data.channel_description,\n    videoUlr: `https://py.dwed.biz/v1.0/api/streaming/${slug_name}/live.m3u8`,\n    logo: data.logo,\n    viewers: data.live_watchers,\n    name: data.channel_name,\n    chatComponent: /*#__PURE__*/React.createElement(ChatComponent, {\n      loadMore: chatLoadMore,\n      setModalIsOpen: setModalIsOpen,\n      setOpenChat: setOpenChat,\n      owner: (_data$user2 = data.user) === null || _data$user2 === void 0 ? void 0 : _data$user2.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 56\n      }\n    }),\n    scheduleCard: /*#__PURE__*/React.createElement(ScheduleList, {\n      loadMore: loadMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 55\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 37\n    }\n  })) : /*#__PURE__*/React.createElement(StreamPageSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/StreamPage/pages/stream-page.jsx"],"names":["React","useState","useChannelSchedule","useCurrentAnons","useStream","useStreamChatWs","useStreamViewerCountWs","useStore","useParams","FastAuth","useGoBack","StreamPageSkeleton","URL_KEYS","URL_VALUES","ChatComponent","ScheduleList","$streamModel","AuthModal","StreamPageComponent","useStreamChannelChat","StreamPage","slug_name","loadMore","currentStream","chatLoadMore","openChat","setOpenChat","modalIsOpen","setModalIsOpen","goBack","pathname","search","SEARCH_TYPE","STREAM","$stream","data","forceLoading","streamForceLoading","$channelStreamScheduleList","user","full_name","live_at","title","channel_name","image","logo","channel_description","live_watchers","username"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {\n    useChannelSchedule,\n    useCurrentAnons,\n    useStream,\n    useStreamChatWs,\n    useStreamViewerCountWs\n} from '../../../Hooks/stream'\nimport {useStore} from 'effector-react'\nimport {useParams} from 'react-router-dom'\nimport FastAuth from '../../Auth/FastAuth'\nimport {useGoBack} from '../../../Hooks/app'\nimport {StreamPageSkeleton} from '../templates'\nimport {URL_KEYS, URL_VALUES} from '../../../Constants'\nimport {ChatComponent, ScheduleList} from '../organisms'\nimport {$streamModel} from '../../../Models/stream-model'\nimport {AuthModal} from '../../../UIComponents/AuthModal'\nimport {StreamPageComponent} from './stream-page-component'\nimport {useStreamChannelChat} from '../../../Hooks/stream/use-stream-channel-chat'\n\n\nexport const StreamPage = () => {\n    useStream()\n    useStreamChatWs()\n    useStreamViewerCountWs()\n    const {slug_name} = useParams()\n    const {loadMore} = useChannelSchedule()\n    const {currentStream} = useCurrentAnons()\n    const {loadMore: chatLoadMore} = useStreamChannelChat()\n    const [openChat, setOpenChat] = useState(false)\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    const {goBack} = useGoBack({pathname: '/search', search: `${URL_KEYS.SEARCH_TYPE}=${URL_VALUES.STREAM}`})\n    const {\n        $stream: {data, forceLoading: streamForceLoading},\n        $channelStreamScheduleList: {forceLoading}\n    } = useStore($streamModel)\n    \n    \n    return (\n        <>\n            <AuthModal\n                title={false}\n                modalIsOpen={modalIsOpen}\n                onCancel={() => setModalIsOpen(false)}\n                content={<FastAuth onClose={() => setModalIsOpen(false)}/>}\n            />\n            {\n                forceLoading && streamForceLoading === 2\n                    ? (\n                        <>\n                            {\n                                data && currentStream && (\n                                    <StreamPageComponent\n                                        setOpenChat={setOpenChat}\n                                        openChat={openChat}\n                                        logoPushUrl={'/tape'}\n                                        goBack={goBack}\n                                        text={data?.user?.full_name}\n                                        live={data.live_at}\n                                        title={currentStream.title ? currentStream.title : data.channel_name}\n                                        thumbnail={currentStream.image || data.logo}\n                                        description={data.channel_description}\n                                        videoUlr={`https://py.dwed.biz/v1.0/api/streaming/${slug_name}/live.m3u8`}\n                                        logo={data.logo}\n                                        viewers={data.live_watchers}\n                                        name={data.channel_name}\n                                        chatComponent={<ChatComponent\n                                            loadMore={chatLoadMore}\n                                            setModalIsOpen={setModalIsOpen}\n                                            setOpenChat={setOpenChat}\n                                            owner={data.user?.username}\n                                        />}\n                                        scheduleCard={<ScheduleList loadMore={loadMore}/>}\n                                    />\n                                )\n                            }\n                        </>\n                    ) : <StreamPageSkeleton/>\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}