{"ast":null,"code":"import React from'react';import{Col,Row}from'antd';import{HeartSvg}from'../../../Icons/Heart';import{Avatar}from'../../../UIComponents/Avatar';import{MessageCircleSvg}from'../../../Icons/Message';import{Text}from'../../../UIComponents/Typography/Text';import{IconBox}from'../../../UIComponents/GlobalStyles';import{CommentActionsWrapper,CommentCardWrapper,CommentDataWrapper,CommentOwnerNameWrapper,CommentTimeAndMoreWrapper,ViewReplyWrapper}from'./style';import{DeleteSvg}from'../../../Icons/Trash';import{useTranslation}from'react-i18next';import{useStore}from'effector-react';import{$accountModel}from'../../../Models/account-model';import{LineSvg}from'../../../Icons/Line';export var CommentCard=function CommentCard(_ref){var id=_ref.id,size=_ref.size,name=_ref.name,item=_ref.item,text=_ref.text,date=_ref.date,likes=_ref.likes,imgUrl=_ref.imgUrl,isLiked=_ref.isLiked,category=_ref.category,slug_name=_ref.slug_name,handleLike=_ref.handleLike,handleReply=_ref.handleReply,handleDelete=_ref.handleDelete,repliesCount=_ref.repliesCount,handleReplyList=_ref.handleReplyList,commentReplyLis=_ref.commentReplyLis;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useStore=useStore($accountModel),currentProfile=_useStore.$profiles.currentProfile;return/*#__PURE__*/React.createElement(CommentCardWrapper,null,/*#__PURE__*/React.createElement(Row,{wrap:false},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Avatar,{shape:\"circle\",size:40,imgUrl:imgUrl})),/*#__PURE__*/React.createElement(Col,{flex:1,className:\"comment-data\"},/*#__PURE__*/React.createElement(CommentDataWrapper,null,/*#__PURE__*/React.createElement(CommentOwnerNameWrapper,null,/*#__PURE__*/React.createElement(Text,null,name),/*#__PURE__*/React.createElement(CommentTimeAndMoreWrapper,null,/*#__PURE__*/React.createElement(Text,{className:\"account-category\"},date))),/*#__PURE__*/React.createElement(Text,{className:\"account-category\"},category),/*#__PURE__*/React.createElement(Text,null,text)),/*#__PURE__*/React.createElement(CommentActionsWrapper,null,/*#__PURE__*/React.createElement(IconBox,{onClick:function onClick(){return handleLike(item);},color:isLiked?'var(--danger-dwed)':'var(--grey-dwed)'},/*#__PURE__*/React.createElement(HeartSvg,null),/*#__PURE__*/React.createElement(Text,null,t('like'))),/*#__PURE__*/React.createElement(IconBox,{color:\"var(--grey-dwed)\",onClick:function onClick(){return handleReply(item);}},/*#__PURE__*/React.createElement(MessageCircleSvg,null),/*#__PURE__*/React.createElement(Text,null,t('reply'))),(currentProfile===null||currentProfile===void 0?void 0:currentProfile.slug_name)===slug_name&&/*#__PURE__*/React.createElement(IconBox,{color:\"var(--grey-dwed)\",onClick:function onClick(){return handleDelete(item);}},/*#__PURE__*/React.createElement(DeleteSvg,null),/*#__PURE__*/React.createElement(Text,null,t('delete'))),/*#__PURE__*/React.createElement(IconBox,{className:\"likes-count\"},/*#__PURE__*/React.createElement(Text,null,\"\".concat(likes,\" \").concat(t('likes'))))),commentReplyLis.map(function(item,idx){return item.reply_to===id&&/*#__PURE__*/React.createElement(Row,{wrap:false,key:\"\".concat(idx+1),className:\"reply-comment-wrapper\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Avatar,{shape:\"circle\",size:32,imgUrl:item.author.avatar})),/*#__PURE__*/React.createElement(Col,{flex:1},/*#__PURE__*/React.createElement(CommentDataWrapper,null,/*#__PURE__*/React.createElement(CommentOwnerNameWrapper,null,/*#__PURE__*/React.createElement(Text,null,item.author.name),/*#__PURE__*/React.createElement(CommentTimeAndMoreWrapper,null,/*#__PURE__*/React.createElement(Text,{className:\"account-category\"},date))),/*#__PURE__*/React.createElement(Text,{className:\"account-category\"},category||'user category'),/*#__PURE__*/React.createElement(Text,null,item.text)),/*#__PURE__*/React.createElement(CommentActionsWrapper,null,/*#__PURE__*/React.createElement(IconBox,{color:item.is_liked?'var(--danger-dwed)':'var(--grey-dwed)'},/*#__PURE__*/React.createElement(HeartSvg,null),/*#__PURE__*/React.createElement(Text,null,t('like'))),/*#__PURE__*/React.createElement(IconBox,{className:\"likes-count\"},/*#__PURE__*/React.createElement(Text,null,\"\".concat(item.likes_count,\" \").concat(t('likes')))))));}),repliesCount>0&&commentReplyLis.length===0&&/*#__PURE__*/React.createElement(ViewReplyWrapper,{onClick:function onClick(){return handleReplyList(item);}},/*#__PURE__*/React.createElement(LineSvg,null),t('view_reply',{count:repliesCount})))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Cards/CommentCard/index.jsx"],"names":["React","Col","Row","HeartSvg","Avatar","MessageCircleSvg","Text","IconBox","CommentActionsWrapper","CommentCardWrapper","CommentDataWrapper","CommentOwnerNameWrapper","CommentTimeAndMoreWrapper","ViewReplyWrapper","DeleteSvg","useTranslation","useStore","$accountModel","LineSvg","CommentCard","id","size","name","item","text","date","likes","imgUrl","isLiked","category","slug_name","handleLike","handleReply","handleDelete","repliesCount","handleReplyList","commentReplyLis","t","currentProfile","$profiles","map","idx","reply_to","author","avatar","is_liked","likes_count","length","count"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {HeartSvg} from '../../../Icons/Heart'\nimport {Avatar} from '../../../UIComponents/Avatar'\nimport {MessageCircleSvg} from '../../../Icons/Message'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {IconBox} from '../../../UIComponents/GlobalStyles'\nimport {\n    CommentActionsWrapper,\n    CommentCardWrapper,\n    CommentDataWrapper,\n    CommentOwnerNameWrapper,\n    CommentTimeAndMoreWrapper,\n    ViewReplyWrapper\n} from './style'\nimport {DeleteSvg} from '../../../Icons/Trash'\nimport {useTranslation} from 'react-i18next'\nimport {useStore} from 'effector-react'\nimport {$accountModel} from '../../../Models/account-model'\nimport {LineSvg} from '../../../Icons/Line'\n\nexport const CommentCard = (\n    {\n        id,\n        size,\n        name,\n        item,\n        text,\n        date,\n        likes,\n        imgUrl,\n        isLiked,\n        category,\n        slug_name,\n        handleLike,\n        handleReply,\n        handleDelete,\n        repliesCount,\n        handleReplyList,\n        commentReplyLis\n    }\n) => {\n    const {t} = useTranslation()\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    \n    \n    return (\n        <CommentCardWrapper>\n            <Row wrap={false}>\n                <Col>\n                    <Avatar\n                        shape='circle'\n                        size={40}\n                        imgUrl={imgUrl}\n                    />\n                </Col>\n                <Col flex={1} className='comment-data'>\n                    <CommentDataWrapper>\n                        <CommentOwnerNameWrapper>\n                            <Text>{name}</Text>\n                            <CommentTimeAndMoreWrapper>\n                                <Text className='account-category'>{date}</Text>\n                            </CommentTimeAndMoreWrapper>\n                        </CommentOwnerNameWrapper>\n                        <Text className='account-category'>\n                            {category}\n                        </Text>\n                        <Text>{text}</Text>\n                    </CommentDataWrapper>\n                    <CommentActionsWrapper>\n                        <IconBox\n                            onClick={() => handleLike(item)}\n                            color={\n                                isLiked\n                                    ? 'var(--danger-dwed)'\n                                    : 'var(--grey-dwed)'\n                            }\n                        >\n                            <HeartSvg/>\n                            <Text>{t('like')}</Text>\n                        </IconBox>\n                        <IconBox\n                            color='var(--grey-dwed)'\n                            onClick={() => handleReply(item)}\n                        >\n                            <MessageCircleSvg/>\n                            <Text>{t('reply')}</Text>\n                        </IconBox>\n                        {\n                            currentProfile?.slug_name === slug_name && (\n                                <IconBox\n                                    color='var(--grey-dwed)'\n                                    onClick={() => handleDelete(item)}\n                                >\n                                    <DeleteSvg/>\n                                    <Text>{t('delete')}</Text>\n                                </IconBox>\n                            )\n                        }\n                        <IconBox className='likes-count'>\n                            <Text>{`${likes} ${t('likes')}`}</Text>\n                        </IconBox>\n                    </CommentActionsWrapper>\n                    {\n                        commentReplyLis.map((item, idx) => item.reply_to === id && (\n                            <Row\n                                wrap={false}\n                                key={`${idx + 1}`}\n                                className='reply-comment-wrapper'\n                            >\n                                <Col>\n                                    <Avatar\n                                        shape='circle'\n                                        size={32}\n                                        imgUrl={item.author.avatar}\n                                    />\n                                </Col>\n                                <Col flex={1}>\n                                    <CommentDataWrapper>\n                                        <CommentOwnerNameWrapper>\n                                            <Text>{item.author.name}</Text>\n                                            <CommentTimeAndMoreWrapper>\n                                                <Text className='account-category'>{date}</Text>\n                                            </CommentTimeAndMoreWrapper>\n                                        </CommentOwnerNameWrapper>\n                                        <Text className='account-category'>\n                                            {category || 'user category'}\n                                        </Text>\n                                        <Text>{item.text}</Text>\n                                    </CommentDataWrapper>\n                                    <CommentActionsWrapper>\n                                        <IconBox\n                                            color={\n                                                item.is_liked\n                                                    ? 'var(--danger-dwed)'\n                                                    : 'var(--grey-dwed)'\n                                            }\n                                        >\n                                            <HeartSvg/>\n                                            <Text>{t('like')}</Text>\n                                        </IconBox>\n                                        <IconBox className='likes-count'>\n                                            <Text>{`${item.likes_count} ${t('likes')}`}</Text>\n                                        </IconBox>\n                                    </CommentActionsWrapper>\n                                </Col>\n                            </Row>\n                        ))\n                    }\n                    {\n                        repliesCount > 0 && commentReplyLis.length === 0 && (\n                            <ViewReplyWrapper onClick={() => handleReplyList(item)}>\n                                <LineSvg/>\n                                {t('view_reply', {count: repliesCount})}\n                            </ViewReplyWrapper>\n                        )\n                    }\n                </Col>\n            </Row>\n        </CommentCardWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}