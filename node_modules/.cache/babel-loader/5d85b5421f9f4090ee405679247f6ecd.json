{"ast":null,"code":"import { creatingPostMediaMount, creatingPostMount, deleteUnCreatedPostMediaMount, postMediaPercentCompletedMount, resetAllTapeWithTokenMount, resetPostMedia, tapeLikeMount, tapeRemoveLikesMount } from './events';\nimport { combine, createStore } from 'effector';\nimport { commonStoreList } from '../../utils/store-utils';\nimport { fetchAllTape, fetchAuthorTape, fetchCreatingPost, fetchCreatingPostMedia, fetchDeletePost } from './effects';\nimport { subscribeToUserMount } from '../user-model';\nimport { fetchSubscribeToUser } from '../user-model/effects';\nconst $authorTape = createStore({\n  loading: false,\n  data: [],\n  result: {},\n  forceLoading: 0,\n  error: false\n}).on(fetchAuthorTape.pending, (state, loading) => ({ ...state,\n  loading\n})).on(fetchAuthorTape.fail, (state, {\n  error\n}) => ({ ...state,\n  error,\n  data: [],\n  result: {},\n  forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\n})).on(fetchAuthorTape.done, (state, {\n  result,\n  params\n}) => {\n  const processed = commonStoreList({\n    response: result.data,\n    state,\n    clear: params.clear,\n    ...params.params\n  });\n  return { ...state,\n    ...processed,\n    forceLoading: 2\n  };\n}).on(tapeLikeMount, (state, params) => {\n  const post_id = params.post_id;\n  const author = params.author;\n  const data = { ...state.data\n  };\n\n  if (data[author]) {\n    const idx = data[author].findIndex(item => !Array.isArray(item.block_data) && item.block_data.id === post_id);\n    const oldData = data[author][idx];\n    data[author] = [...data[author].slice(0, idx), { ...oldData,\n      block_data: { ...oldData.block_data,\n        is_liked: true,\n        likes_count: oldData.block_data.likes_count + 1\n      }\n    }, ...data[author].slice(idx + 1)];\n  }\n\n  return { ...state,\n    data\n  };\n}).on(tapeRemoveLikesMount, (state, params) => {\n  const post_id = params.post_id;\n  const author = params.author;\n  const data = { ...state.data\n  };\n\n  if (data[author]) {\n    const idx = data[author].findIndex(item => !Array.isArray(item.block_data) && item.block_data.id === post_id);\n    const oldData = data[author][idx];\n\n    if (idx !== -1) {\n      data[author] = [...data[author].slice(0, idx), { ...oldData,\n        block_data: { ...oldData.block_data,\n          is_liked: false,\n          likes_count: oldData.block_data.likes_count - 1\n        }\n      }, ...data[author].slice(idx + 1)];\n    }\n  }\n\n  return { ...state,\n    data\n  };\n}).on(fetchDeletePost.done, (state, {\n  params\n}) => {\n  const post_id = params.post_id;\n  const author = params.author;\n  const data = { ...state.data\n  };\n\n  if (data[author]) {\n    const idx = data[author].findIndex(item => !Array.isArray(item.block_data) && item.block_data.id === post_id);\n\n    if (idx !== -1) {\n      data[author] = [...data[author].slice(0, idx), ...data[author].slice(idx + 1)];\n    }\n  }\n\n  return { ...state,\n    data\n  };\n}).on(creatingPostMount, (state, {\n  temp_data\n}) => {\n  const {\n    item_data,\n    author\n  } = temp_data;\n  const data = { ...state.data\n  };\n  const result = { ...state.result\n  };\n\n  if (data[author]) {\n    data[author] = [item_data, ...data[author]];\n    result[author] = { ...result[author],\n      count: result[author].count + 1\n    }; // if (action) {\n    //     action()\n    // }\n  }\n\n  return { ...state,\n    data,\n    result\n  };\n}).on(fetchCreatingPost.done, (state, {\n  result: response,\n  params: {\n    temp_data\n  }\n}) => {\n  const {\n    author,\n    uuid,\n    action\n  } = temp_data;\n  const data = { ...state.data\n  };\n\n  if (data[author]) {\n    const idx = data[author].findIndex(item => item.id === uuid);\n    const newItem = { ...data[author][idx],\n      ...response.data\n    };\n    data[author] = [...data[author].slice(0, idx), newItem, ...data[author].slice(idx + 1)];\n\n    if (action) {\n      action(response.data.id);\n    }\n  }\n\n  return { ...state,\n    data\n  };\n});\nconst $allTape = createStore({\n  data: [],\n  result: {},\n  error: false,\n  loading: false,\n  forceLoading: 0\n}).on(fetchAllTape.pending, (state, loading) => ({ ...state,\n  loading\n})).on(fetchAllTape.fail, (state, {\n  error\n}) => ({ ...state,\n  error,\n  data: {},\n  result: {},\n  forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\n})).on(fetchAllTape.done, (state, {\n  result,\n  params\n}) => {\n  const processed = commonStoreList({\n    response: result.data,\n    state,\n    clear: params.clear,\n    ...params.params\n  });\n  return { ...state,\n    ...processed,\n    forceLoading: 2\n  };\n}).on(subscribeToUserMount, (state, params) => {\n  const username = params.username;\n  let data = [...state.data];\n  const usersBlockIdx = data.findIndex(item => item.block_type && item.block_type === 'users');\n\n  if (usersBlockIdx !== -1) {\n    const idx = data[usersBlockIdx].block_data.findIndex(item => item.username === username);\n\n    if (idx !== -1) {\n      const item = { ...data[usersBlockIdx].block_data[idx],\n        subs: {\n          subscribed: true,\n          me: data[usersBlockIdx].block_data[idx].subs.me + 1\n        }\n      };\n      const innerData = [...data[usersBlockIdx].block_data.slice(0, idx), item, ...data[usersBlockIdx].block_data.slice(idx + 1)];\n      data = [...state.data.slice(0, usersBlockIdx), { ...data[usersBlockIdx],\n        block_data: innerData\n      }, ...state.data.slice(usersBlockIdx + 1)];\n    }\n  }\n\n  return { ...state,\n    data\n  };\n}).on(tapeLikeMount, (state, params) => {\n  const post_id = params.post_id;\n  const idx = state.data.findIndex(item => !Array.isArray(item.block_data) && item.block_data.id === post_id);\n  let newData = state.data;\n\n  if (idx !== -1) {\n    const oldData = state.data[idx];\n    newData = [...state.data.slice(0, idx), { ...oldData,\n      block_data: { ...oldData.block_data,\n        is_liked: true,\n        likes_count: oldData.block_data.likes_count + 1\n      }\n    }, ...state.data.slice(idx + 1)];\n  }\n\n  return { ...state,\n    data: newData\n  };\n}).on(tapeRemoveLikesMount, (state, params) => {\n  const post_id = params.post_id;\n  const idx = state.data.findIndex(item => !Array.isArray(item.block_data) && item.block_data.id === post_id);\n  let newData = state.data;\n\n  if (idx !== -1) {\n    const oldData = state.data[idx];\n    newData = [...state.data.slice(0, idx), { ...oldData,\n      block_data: { ...oldData.block_data,\n        is_liked: false,\n        likes_count: oldData.block_data.likes_count - 1\n      }\n    }, ...state.data.slice(idx + 1)];\n  }\n\n  return { ...state,\n    data: newData\n  };\n}).on(fetchDeletePost.done, (state, {\n  params\n}) => {\n  const post_id = params.post_id;\n  const idx = state.data.findIndex(item => !Array.isArray(item.block_data) && item.block_data.id === post_id);\n  let newData = state.data;\n\n  if (idx !== -1) {\n    newData = [...state.data.slice(0, idx), ...state.data.slice(idx + 1)];\n  }\n\n  return { ...state,\n    data: newData\n  };\n}).on(creatingPostMount, (state, {\n  temp_data\n}) => {\n  const {\n    item_data\n  } = temp_data; // if (action) {\n  //     action()\n  // }\n\n  const result = { ...state.result,\n    count: state.result.count + 1\n  };\n  const data = [item_data, ...state.data];\n  return { ...state,\n    data,\n    result\n  };\n}).on(fetchCreatingPost.done, (state, {\n  result: response,\n  params: {\n    temp_data\n  }\n}) => {\n  const {\n    uuid,\n    action\n  } = temp_data;\n  let data = state.data;\n  const idx = data.findIndex(item => item.block_data.id === uuid);\n\n  if (idx !== -1) {\n    const newItem = { ...data[idx],\n      ...response.data\n    };\n    data = [...data.slice(0, idx), newItem, ...data.slice(idx + 1)];\n\n    if (!!action) {\n      action(response.data.id);\n    }\n  }\n\n  return { ...state,\n    data\n  };\n}).on(fetchSubscribeToUser.done, (state, {\n  params: {\n    username,\n    action\n  }\n}) => {\n  const idx = state.data.findIndex(item => !Array.isArray(item.block_type) && item.block_type === 'users');\n  const usersData = state.data[idx];\n  const accountIdx = usersData.block_data.findIndex(item => item.username === username);\n\n  if (idx && accountIdx !== -1) {\n    console.log(state.data[idx].block_data[accountIdx]); // newData = [...state.data.slice(0, idx),\n    //     [...state.data[idx].block_data.slice(0, accountIdx),\n    //         {...state.data[idx].block_data[accountIdx].subs, subscribed: true},\n    //         ...state.data[idx].block_data.slice(accountIdx + 1)],\n    //     ...state.data.slice(idx + 1)]\n  }\n\n  return { ...state\n  };\n}).reset(resetAllTapeWithTokenMount);\nconst $postMedia = createStore({\n  data: [],\n  error: false\n}).on(creatingPostMediaMount, (state, payload) => {\n  return { ...state,\n    data: [...state.data, payload.obj]\n  };\n}).on(fetchCreatingPostMedia.done, (state, {\n  result,\n  params\n}) => {\n  let data = [...state.data];\n  const {\n    obj\n  } = params;\n  const idx = data.findIndex(item => item.id === obj.id);\n\n  if (idx !== -1) {\n    const item = { ...data[idx],\n      id: result.data.id,\n      percentCompleted: 100\n    };\n    data = [...data.slice(0, idx), item, ...data.slice(idx + 1)];\n  }\n\n  return { ...state,\n    data\n  };\n}).on(postMediaPercentCompletedMount, (state, payload) => {\n  let data = [...state.data];\n  const {\n    id,\n    percentCompleted\n  } = payload;\n  const idx = data.findIndex(item => item.id === id);\n\n  if (idx !== -1) {\n    const item = { ...data[idx],\n      percentCompleted: percentCompleted === 100 ? 99 : percentCompleted\n    };\n    data = [...data.slice(0, idx), item, ...data.slice(idx + 1)];\n  }\n\n  return { ...state,\n    data\n  };\n}).on(deleteUnCreatedPostMediaMount, (state, params) => {\n  const id = params.media_id;\n  let data = state.data;\n  const idx = data.findIndex(item => item.id === id);\n\n  if (idx !== -1) {\n    data = [...data.slice(0, idx), ...data.slice(idx + 1)];\n  }\n\n  return { ...state,\n    data: data\n  };\n}).reset(resetPostMedia);\nexport const $tapeModel = combine({\n  $authorTape,\n  $allTape,\n  $postMedia\n});","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Models/tape-model/stores.js"],"names":["creatingPostMediaMount","creatingPostMount","deleteUnCreatedPostMediaMount","postMediaPercentCompletedMount","resetAllTapeWithTokenMount","resetPostMedia","tapeLikeMount","tapeRemoveLikesMount","combine","createStore","commonStoreList","fetchAllTape","fetchAuthorTape","fetchCreatingPost","fetchCreatingPostMedia","fetchDeletePost","subscribeToUserMount","fetchSubscribeToUser","$authorTape","loading","data","result","forceLoading","error","on","pending","state","fail","done","params","processed","response","clear","post_id","author","idx","findIndex","item","Array","isArray","block_data","id","oldData","slice","is_liked","likes_count","temp_data","item_data","count","uuid","action","newItem","$allTape","username","usersBlockIdx","block_type","subs","subscribed","me","innerData","newData","usersData","accountIdx","console","log","reset","$postMedia","payload","obj","percentCompleted","media_id","$tapeModel"],"mappings":"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","sourcesContent":["import {\r\n    creatingPostMediaMount,\r\n    creatingPostMount,\r\n    deleteUnCreatedPostMediaMount,\r\n    postMediaPercentCompletedMount,\r\n    resetAllTapeWithTokenMount,\r\n    resetPostMedia,\r\n    tapeLikeMount,\r\n    tapeRemoveLikesMount\r\n} from './events'\r\nimport {combine, createStore} from 'effector'\r\nimport {commonStoreList} from '../../utils/store-utils'\r\nimport {fetchAllTape, fetchAuthorTape, fetchCreatingPost, fetchCreatingPostMedia, fetchDeletePost} from './effects'\r\nimport {subscribeToUserMount} from '../user-model'\r\nimport {fetchSubscribeToUser} from '../user-model/effects'\r\n\r\nconst $authorTape = createStore({loading: false, data: [], result: {}, forceLoading: 0, error: false})\r\n    .on(fetchAuthorTape.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchAuthorTape.fail, (state, {error}) => ({\r\n        ...state, error, data: [], result: {}, forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\r\n    }))\r\n    .on(fetchAuthorTape.done, (state, {result, params}) => {\r\n        const processed = commonStoreList({\r\n            response: result.data, state, clear: params.clear, ...params.params\r\n        })\r\n        return {...state, ...processed, forceLoading: 2}\r\n    })\r\n    .on(tapeLikeMount, (state, params) => {\r\n        const post_id = params.post_id\r\n        const author = params.author\r\n        const data = {...state.data}\r\n        \r\n        if (data[author]) {\r\n            const idx = data[author].findIndex((item) => !Array.isArray(item.block_data) && item.block_data.id === post_id)\r\n            const oldData = data[author][idx]\r\n            data[author] = [...data[author].slice(0, idx), {\r\n                ...oldData,\r\n                block_data: {...oldData.block_data, is_liked: true, likes_count: oldData.block_data.likes_count + 1}\r\n            }, ...data[author].slice(idx + 1)]\r\n        }\r\n        \r\n        return {\r\n            ...state, data\r\n        }\r\n    })\r\n    .on(tapeRemoveLikesMount, (state, params) => {\r\n        const post_id = params.post_id\r\n        const author = params.author\r\n        const data = {...state.data}\r\n        if (data[author]) {\r\n            const idx = data[author].findIndex((item) => !Array.isArray(item.block_data) && item.block_data.id === post_id)\r\n            const oldData = data[author][idx]\r\n            if (idx !== -1) {\r\n                data[author] = [...data[author].slice(0, idx), {\r\n                    ...oldData,\r\n                    block_data: {\r\n                        ...oldData.block_data,\r\n                        is_liked: false,\r\n                        likes_count: oldData.block_data.likes_count - 1\r\n                    }\r\n                }, ...data[author].slice(idx + 1)]\r\n            }\r\n        }\r\n        return {\r\n            ...state, data\r\n        }\r\n    })\r\n    .on(fetchDeletePost.done, (state, {params}) => {\r\n        const post_id = params.post_id\r\n        const author = params.author\r\n        const data = {...state.data}\r\n        if (data[author]) {\r\n            const idx = data[author].findIndex((item) => !Array.isArray(item.block_data) && item.block_data.id === post_id)\r\n            if (idx !== -1) {\r\n                data[author] = [...data[author].slice(0, idx), ...data[author].slice(idx + 1)]\r\n            }\r\n        }\r\n        return {\r\n            ...state, data\r\n        }\r\n    })\r\n    .on(creatingPostMount, (state, {temp_data}) => {\r\n        const {item_data, author} = temp_data\r\n        const data = {...state.data}\r\n        const result = {...state.result}\r\n        \r\n        if (data[author]) {\r\n            data[author] = [item_data, ...data[author]]\r\n            result[author] = {...result[author], count: result[author].count + 1}\r\n            \r\n            // if (action) {\r\n            //     action()\r\n            // }\r\n        }\r\n        \r\n        return {...state, data, result}\r\n    })\r\n    .on(fetchCreatingPost.done, (state, {result: response, params: {temp_data}}) => {\r\n        const {author, uuid, action} = temp_data\r\n        const data = {...state.data}\r\n        \r\n        if (data[author]) {\r\n            const idx = data[author].findIndex(item => item.id === uuid)\r\n            const newItem = {...data[author][idx], ...response.data}\r\n            data[author] = [...data[author].slice(0, idx), newItem, ...data[author].slice(idx + 1)]\r\n            \r\n            if (action) {\r\n                action(response.data.id)\r\n            }\r\n        }\r\n        return {...state, data}\r\n    })\r\n\r\nconst $allTape = createStore({data: [], result: {}, error: false, loading: false, forceLoading: 0})\r\n    .on(fetchAllTape.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchAllTape.fail, (state, {error}) => ({\r\n        ...state, error, data: {}, result: {}, forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\r\n    }))\r\n    .on(fetchAllTape.done, (state, {result, params}) => {\r\n        const processed = commonStoreList({\r\n            response: result.data, state, clear: params.clear, ...params.params\r\n        })\r\n        return {...state, ...processed, forceLoading: 2}\r\n    })\r\n    .on(subscribeToUserMount, (state, params) => {\r\n        const username = params.username\r\n        let data = [...state.data]\r\n        const usersBlockIdx = data.findIndex(item => item.block_type && item.block_type === 'users')\r\n        \r\n        if (usersBlockIdx !== -1) {\r\n            const idx = data[usersBlockIdx].block_data.findIndex(item => item.username === username)\r\n            if (idx !== -1) {\r\n                const item = {\r\n                    ...data[usersBlockIdx].block_data[idx], subs: {\r\n                        subscribed: true,\r\n                        me: data[usersBlockIdx].block_data[idx].subs.me + 1\r\n                    }\r\n                }\r\n                const innerData = [\r\n                    ...data[usersBlockIdx].block_data.slice(0, idx),\r\n                    item,\r\n                    ...data[usersBlockIdx].block_data.slice(idx + 1)\r\n                ]\r\n                data = [\r\n                    ...state.data.slice(0, usersBlockIdx),\r\n                    {...data[usersBlockIdx], block_data: innerData},\r\n                    ...state.data.slice(usersBlockIdx + 1)\r\n                ]\r\n            }\r\n        }\r\n        \r\n        return {...state, data}\r\n    })\r\n    .on(tapeLikeMount, (state, params) => {\r\n        const post_id = params.post_id\r\n        const idx = state.data.findIndex((item) => !Array.isArray(item.block_data) && item.block_data.id === post_id)\r\n        let newData = state.data\r\n        if (idx !== -1) {\r\n            const oldData = state.data[idx]\r\n            newData = [...state.data.slice(0, idx), {\r\n                ...oldData,\r\n                block_data: {...oldData.block_data, is_liked: true, likes_count: oldData.block_data.likes_count + 1}\r\n            }, ...state.data.slice(idx + 1)]\r\n        }\r\n        return {...state, data: newData}\r\n    })\r\n    .on(tapeRemoveLikesMount, (state, params) => {\r\n        const post_id = params.post_id\r\n        const idx = state.data.findIndex((item) => !Array.isArray(item.block_data) && item.block_data.id === post_id)\r\n        let newData = state.data\r\n        if (idx !== -1) {\r\n            const oldData = state.data[idx]\r\n            newData = [...state.data.slice(0, idx), {\r\n                ...oldData,\r\n                block_data: {...oldData.block_data, is_liked: false, likes_count: oldData.block_data.likes_count - 1}\r\n            }, ...state.data.slice(idx + 1)]\r\n        }\r\n        return {...state, data: newData}\r\n    })\r\n    .on(fetchDeletePost.done, (state, {params}) => {\r\n        const post_id = params.post_id\r\n        const idx = state.data.findIndex((item) => !Array.isArray(item.block_data) && item.block_data.id === post_id)\r\n        let newData = state.data\r\n        if (idx !== -1) {\r\n            newData = [...state.data.slice(0, idx), ...state.data.slice(idx + 1)]\r\n        }\r\n        return {...state, data: newData}\r\n    })\r\n    .on(creatingPostMount, (state, {temp_data}) => {\r\n        const {item_data} = temp_data\r\n        // if (action) {\r\n        //     action()\r\n        // }\r\n        const result = {...state.result, count: state.result.count + 1}\r\n        const data = [item_data, ...state.data]\r\n        return {...state, data, result}\r\n    })\r\n    .on(fetchCreatingPost.done, (state, {result: response, params: {temp_data}}) => {\r\n        const {uuid, action} = temp_data\r\n        let data = state.data\r\n        \r\n        const idx = data.findIndex(item => item.block_data.id === uuid)\r\n        \r\n        if (idx !== -1) {\r\n            const newItem = {...data[idx], ...response.data}\r\n            data = [...data.slice(0, idx), newItem, ...data.slice(idx + 1)]\r\n            \r\n            if (!!action) {\r\n                action(response.data.id)\r\n            }\r\n        }\r\n        \r\n        return {...state, data}\r\n    })\r\n    .on(fetchSubscribeToUser.done, (state, {params: {username, action}}) => {\r\n        const idx = state.data.findIndex((item) => !Array.isArray(item.block_type) && item.block_type === 'users')\r\n        const usersData = state.data[idx]\r\n        const accountIdx = usersData.block_data.findIndex(item => item.username === username)\r\n        \r\n        if (idx && accountIdx !== -1) {\r\n            console.log(state.data[idx].block_data[accountIdx])\r\n            // newData = [...state.data.slice(0, idx),\r\n            //     [...state.data[idx].block_data.slice(0, accountIdx),\r\n            //         {...state.data[idx].block_data[accountIdx].subs, subscribed: true},\r\n            //         ...state.data[idx].block_data.slice(accountIdx + 1)],\r\n            //     ...state.data.slice(idx + 1)]\r\n        }\r\n        \r\n        return {...state}\r\n    })\r\n    .reset(resetAllTapeWithTokenMount)\r\n\r\n\r\nconst $postMedia = createStore({data: [], error: false})\r\n    .on(creatingPostMediaMount, (state, payload) => {\r\n        return {\r\n            ...state,\r\n            data: [...state.data, payload.obj]\r\n        }\r\n    })\r\n    .on(fetchCreatingPostMedia.done, (state, {result, params}) => {\r\n        let data = [...state.data]\r\n        const {obj} = params\r\n        const idx = data.findIndex((item => item.id === obj.id))\r\n        if (idx !== -1) {\r\n            const item = {...data[idx], id: result.data.id, percentCompleted: 100}\r\n            data = [...data.slice(0, idx), item, ...data.slice(idx + 1)]\r\n        }\r\n        return {...state, data}\r\n    })\r\n    .on(postMediaPercentCompletedMount, (state, payload) => {\r\n        let data = [...state.data]\r\n        const {id, percentCompleted} = payload\r\n        const idx = data.findIndex((item => item.id === id))\r\n        if (idx !== -1) {\r\n            const item = {...data[idx], percentCompleted: percentCompleted === 100 ? 99 : percentCompleted}\r\n            data = [...data.slice(0, idx), item, ...data.slice(idx + 1)]\r\n        }\r\n        return {...state, data}\r\n    })\r\n    .on(deleteUnCreatedPostMediaMount, (state, params) => {\r\n        const id = params.media_id\r\n        let data = state.data\r\n        const idx = data.findIndex(item => item.id === id)\r\n        \r\n        if (idx !== -1) {\r\n            data = [...data.slice(0, idx), ...data.slice(idx + 1)]\r\n        }\r\n        return {...state, data: data}\r\n    })\r\n    .reset(resetPostMedia)\r\n\r\n\r\nexport const $tapeModel = combine({\r\n    $authorTape,\r\n    $allTape,\r\n    $postMedia\r\n})"]},"metadata":{},"sourceType":"module"}