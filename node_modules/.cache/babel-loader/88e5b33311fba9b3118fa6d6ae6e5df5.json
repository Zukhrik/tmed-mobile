{"ast":null,"code":"import moment from 'moment';\nimport { useUrlParams } from '../app';\nimport { useOrgPayments } from '../org';\nimport { useStore } from 'effector-react';\nimport order from '../../Service/order';\nimport { URL_KEYS } from '../../Constants';\nimport { useHistory } from 'react-router-dom';\nimport { formatter } from './use-specialist-date';\nimport { $orgModel } from '../../Models/org-model';\nimport { useCallback, useEffect, useState } from 'react';\nimport { resetOrderCartList, resetOrgOrderCart } from '../../Models/order-model';\nexport function useCheckout() {\n  useOrgPayments();\n  const {\n    $orgPaymentMethods: {\n      data\n    }\n  } = useStore($orgModel);\n  const [comment, setComment] = useState('');\n  const [activeDay, setActiveDay] = useState(moment(new Date()).format('YYYY-MM-DD'));\n  const [meetDate, setMeetDate] = useState(null);\n  const [payment, setPayment] = useState({\n    id: (data === null || data === void 0 ? void 0 : data.status) ? data === null || data === void 0 ? void 0 : data['1'].id : null,\n    title: (data === null || data === void 0 ? void 0 : data.status) ? data === null || data === void 0 ? void 0 : data['1'].method : null,\n    extraId: null\n  });\n  const {\n    urlData\n  } = useUrlParams();\n  const spec_id = urlData[URL_KEYS.SPECIALIST_ID];\n  const _activeDate = urlData[URL_KEYS.DATE];\n  const time = urlData[URL_KEYS.TIME];\n  const text = urlData[URL_KEYS.TEXT];\n  const {\n    push\n  } = useHistory();\n  const handleSubmit = useCallback(() => {\n    if (spec_id && meetDate) {\n      const data = {\n        meet_date: moment(new Date(meetDate)).format(formatter),\n        client_comment: comment && comment.trim().length > 0 ? comment : null,\n        responsible_id: spec_id,\n        payment: payment.extraId,\n        coupon_id: couponId,\n        card_id: Number(payment.extraId) === 3 ? payment.id : null\n      };\n      order.createOrder(data).then(res => {\n        if (res) {\n          push(`/records/detail/${res.data.id}`);\n          resetOrgOrderCart();\n          resetOrderCartList();\n        }\n      });\n    }\n  }, [spec_id, comment, meetDate, payment, push]);\n  useEffect(() => {\n    let timeout = null;\n    timeout = setTimeout(() => {\n      if (!!activeDay && !!time) {\n        setMeetDate(new Date(moment(`${activeDay} ${time}`).toDate()).getTime());\n      } else {\n        setMeetDate(null);\n      }\n    }, 100);\n    return () => {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n  }, [time, activeDay]);\n  useEffect(() => {\n    let timeout = null;\n    timeout = setTimeout(() => {\n      if (_activeDate) {\n        setActiveDay(_activeDate);\n      } else {\n        setActiveDay(moment(new Date()).format('YYYY-MM-DD'));\n      }\n    }, 100);\n    return () => {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n  }, [_activeDate]);\n  useEffect(() => {\n    if (!text) {\n      setComment(text);\n    }\n  }, [text]);\n  useEffect(() => {\n    let timeout = null;\n    timeout = setTimeout(() => {\n      if (!spec_id) {\n        push('/records/unregistered');\n      }\n    }, 600);\n    return () => {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n  }, [spec_id, push]);\n  return {\n    comment,\n    handleSubmit,\n    activeDay,\n    meetDate,\n    setComment,\n    payment,\n    setPayment\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/checkout/use-checkout.js"],"names":["moment","useUrlParams","useOrgPayments","useStore","order","URL_KEYS","useHistory","formatter","$orgModel","useCallback","useEffect","useState","resetOrderCartList","resetOrgOrderCart","useCheckout","$orgPaymentMethods","data","comment","setComment","activeDay","setActiveDay","Date","format","meetDate","setMeetDate","payment","setPayment","id","status","title","method","extraId","urlData","spec_id","SPECIALIST_ID","_activeDate","DATE","time","TIME","text","TEXT","push","handleSubmit","meet_date","client_comment","trim","length","responsible_id","coupon_id","couponId","card_id","Number","createOrder","then","res","timeout","setTimeout","toDate","getTime","clearTimeout"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport {useUrlParams} from '../app'\nimport {useOrgPayments} from '../org'\nimport {useStore} from 'effector-react'\nimport order from '../../Service/order'\nimport {URL_KEYS} from '../../Constants'\nimport {useHistory} from 'react-router-dom'\nimport {formatter} from './use-specialist-date'\nimport {$orgModel} from '../../Models/org-model'\nimport {useCallback, useEffect, useState} from 'react'\nimport {resetOrderCartList, resetOrgOrderCart} from '../../Models/order-model'\n\nexport function useCheckout() {\n    useOrgPayments()\n    const {$orgPaymentMethods: {data}} = useStore($orgModel)\n    const [comment, setComment] = useState('')\n    const [activeDay, setActiveDay] = useState(moment(new Date()).format('YYYY-MM-DD'))\n    const [meetDate, setMeetDate] = useState(null)\n    const [payment, setPayment] = useState({\n        id: data?.status ? data?.['1'].id : null,\n        title: data?.status ? data?.['1'].method : null,\n        extraId: null\n    })\n    const {urlData} = useUrlParams()\n    const spec_id = urlData[URL_KEYS.SPECIALIST_ID]\n    const _activeDate = urlData[URL_KEYS.DATE]\n    const time = urlData[URL_KEYS.TIME]\n    const text = urlData[URL_KEYS.TEXT]\n    const {push} = useHistory()\n    \n    const handleSubmit = useCallback(() => {\n        if (spec_id && meetDate) {\n            const data = {\n                meet_date: moment(new Date(meetDate)).format(formatter),\n                client_comment: comment && comment.trim().length > 0 ? comment : null,\n                responsible_id: spec_id,\n                payment: payment.extraId,\n                coupon_id: couponId,\n                card_id: Number(payment.extraId) === 3 ? payment.id : null\n            }\n            order.createOrder(data)\n                .then((res) => {\n                    if (res) {\n                        push(`/records/detail/${res.data.id}`)\n                        resetOrgOrderCart()\n                        resetOrderCartList()\n                    }\n                })\n        }\n        \n    }, [spec_id, comment, meetDate, payment, push])\n    \n    \n    useEffect(() => {\n        let timeout = null\n        \n        timeout = setTimeout(() => {\n            if (!!activeDay && !!time) {\n                setMeetDate(new Date(moment(`${activeDay} ${time}`).toDate()).getTime())\n            } else {\n                setMeetDate(null)\n            }\n        }, 100)\n        \n        return () => {\n            clearTimeout(timeout)\n            timeout = null\n        }\n    }, [time, activeDay])\n    \n    useEffect(() => {\n        let timeout = null\n        timeout = setTimeout(() => {\n            if (_activeDate) {\n                \n                setActiveDay(_activeDate)\n            } else {\n                setActiveDay(moment(new Date()).format('YYYY-MM-DD'))\n            }\n        }, 100)\n        \n        return () => {\n            clearTimeout(timeout)\n            timeout = null\n        }\n    }, [_activeDate])\n    \n    useEffect(() => {\n        if (!text) {\n            setComment(text)\n        }\n    }, [text])\n    \n    useEffect(() => {\n        let timeout = null\n        \n        timeout = setTimeout(() => {\n            if (!spec_id) {\n                push('/records/unregistered')\n            }\n        }, 600)\n        \n        return () => {\n            clearTimeout(timeout)\n            timeout = null\n        }\n    }, [spec_id, push])\n    \n    \n    return {comment, handleSubmit, activeDay, meetDate, setComment, payment, setPayment}\n}"]},"metadata":{},"sourceType":"module"}