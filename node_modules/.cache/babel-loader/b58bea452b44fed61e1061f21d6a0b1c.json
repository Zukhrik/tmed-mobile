{"ast":null,"code":"export const storeListWithKey = ({\n  response,\n  state,\n  key,\n  clear,\n  limit,\n  search\n}) => {\n  const {\n    results: list,\n    ...configs\n  } = response;\n  const data = { ...state.data\n  };\n  const result = { ...state.result\n  };\n  result[key] = result[key] ? { ...result[key],\n    ...configs,\n    nextOffset: result[key].nextOffset + limit,\n    search\n  } : { ...configs,\n    nextOffset: limit,\n    search\n  };\n  data[key] = clear ? list : data[key] ? [...data[key], ...list] : list;\n  return {\n    result,\n    data\n  };\n};\nexport const commonStoreList = ({\n  response,\n  state,\n  clear,\n  limit\n}) => {\n  const {\n    results: list,\n    ...configs\n  } = response;\n  const result = { ...configs,\n    nextOffset: clear ? limit : state.result.nextOffset ? state.result.nextOffset + limit : limit\n  };\n  const data = clear ? list : [...state.data, ...list];\n  return {\n    result,\n    data\n  };\n};\nexport const storeWithKey = ({\n  response,\n  state,\n  key\n}) => {\n  const data = { ...state.data\n  };\n  data[key] = response;\n  return {\n    data\n  };\n};\nexport const changeSingleItemInArray = ({\n  arr,\n  key,\n  value,\n  getOldData\n}) => {\n  const idx = arr.findIndex(item => item[key] === value);\n\n  if (idx === -1) {\n    return arr;\n  }\n\n  const oldData = arr[idx];\n  return [...arr.slice(0, idx), { ...oldData,\n    ...getOldData(oldData)\n  }, ...arr.slice(idx + 1)];\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/utils/store-utils.js"],"names":["storeListWithKey","response","state","key","clear","limit","search","results","list","configs","data","result","nextOffset","commonStoreList","storeWithKey","changeSingleItemInArray","arr","value","getOldData","idx","findIndex","item","oldData","slice"],"mappings":"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","sourcesContent":["export const storeListWithKey = ({response, state, key, clear, limit, search}) => {\r\n    const {results: list, ...configs} = response\r\n    const data = {...state.data}\r\n    const result = {...state.result}\r\n    result[key] = result[key]\r\n        ? {...result[key], ...configs, nextOffset: result[key].nextOffset + limit, search}\r\n        : {...configs, nextOffset: limit, search}\r\n    data[key] = clear\r\n        ? list\r\n        : data[key]\r\n            ? [...data[key], ...list]\r\n            : list\r\n    \r\n    return {\r\n        result,\r\n        data\r\n    }\r\n}\r\n\r\nexport const commonStoreList = ({response, state, clear, limit}) => {\r\n    const {results: list, ...configs} = response\r\n    const result = {\r\n        ...configs,\r\n        nextOffset: clear ? limit : state.result.nextOffset ? state.result.nextOffset + limit : limit\r\n    }\r\n    const data = clear ? list : [...state.data, ...list]\r\n    return {result, data}\r\n}\r\n\r\nexport const storeWithKey = ({response, state, key}) => {\r\n    const data = {...state.data}\r\n    data[key] = response\r\n    return {\r\n        data\r\n    }\r\n}\r\n\r\nexport const changeSingleItemInArray = ({arr, key, value, getOldData}) => {\r\n    const idx = arr.findIndex(item => item[key] === value)\r\n    if (idx === -1) {\r\n        return arr\r\n    }\r\n    \r\n    const oldData = arr[idx]\r\n    return [\r\n        ...arr.slice(0, idx),\r\n        {...oldData, ...getOldData(oldData)},\r\n        ...arr.slice(idx + 1)\r\n    ]\r\n}"]},"metadata":{},"sourceType":"module"}