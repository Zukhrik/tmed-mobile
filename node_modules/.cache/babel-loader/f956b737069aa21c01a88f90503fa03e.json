{"ast":null,"code":"import { useCallback, useState } from 'react';\nimport { allOrgMount } from '../../Models/org-model';\nimport { URL_KEYS, URL_VALUES } from '../../Constants';\nimport { allUserMount } from '../../Models/user-model';\nimport { useUrlParams } from '../app';\nimport { useLocation } from 'react-router-dom';\nimport { offeringsListMount } from '../../Models/offerings-model';\nexport function useHomeSearch() {\n  const {\n    urlData\n  } = useUrlParams();\n  const {\n    pathname,\n    search\n  } = useLocation();\n  const searchType = urlData[URL_KEYS.SEARCH_TYPE];\n  const [searchValue, setSearchValue] = useState('');\n\n  const getActive = id => {\n    if (id === 'organization' && search === '') {\n      return pathname === '/search';\n    } else {\n      return searchType && searchType === id;\n    }\n  };\n\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (searchValue.trim().length > 0) {\n      const data = {\n        clear: true,\n        params: {\n          search: searchValue\n        }\n      };\n\n      if (!searchType) {\n        allOrgMount(data);\n      }\n\n      if (searchType && searchType === URL_VALUES.PEOPLE) {\n        allUserMount(data);\n      }\n\n      if (searchType && searchType === URL_VALUES.OFFERINGS) {\n        offeringsListMount(data);\n      }\n\n      setSearchValue('');\n    }\n  }, [searchType, searchValue]);\n  return {\n    handleSubmit,\n    searchValue,\n    setSearchValue,\n    getActive\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/home/use-home-search.js"],"names":["useCallback","useState","allOrgMount","URL_KEYS","URL_VALUES","allUserMount","useUrlParams","useLocation","offeringsListMount","useHomeSearch","urlData","pathname","search","searchType","SEARCH_TYPE","searchValue","setSearchValue","getActive","id","handleSubmit","e","preventDefault","trim","length","data","clear","params","PEOPLE","OFFERINGS"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,QAArB,QAAoC,OAApC;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,iBAAnC;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,YAAR,QAA2B,QAA3B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,kBAAR,QAAiC,8BAAjC;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAYJ,YAAY,EAA9B;AACA,QAAM;AAACK,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAqBL,WAAW,EAAtC;AACA,QAAMM,UAAU,GAAGH,OAAO,CAACP,QAAQ,CAACW,WAAV,CAA1B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMgB,SAAS,GAAIC,EAAD,IAAQ;AACtB,QAAIA,EAAE,KAAK,cAAP,IAAyBN,MAAM,KAAK,EAAxC,EAA4C;AACxC,aAAOD,QAAQ,KAAK,SAApB;AACH,KAFD,MAEO;AACH,aAAOE,UAAU,IAAIA,UAAU,KAAKK,EAApC;AACH;AACJ,GAND;;AAQA,QAAMC,YAAY,GAAGnB,WAAW,CAAEoB,CAAD,IAAO;AACpCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIN,WAAW,CAACO,IAAZ,GAAmBC,MAAnB,GAA4B,CAAhC,EAAmC;AAC/B,YAAMC,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAE,IADE;AAETC,QAAAA,MAAM,EAAE;AACJd,UAAAA,MAAM,EAAEG;AADJ;AAFC,OAAb;;AAOA,UAAI,CAACF,UAAL,EAAiB;AACbX,QAAAA,WAAW,CAACsB,IAAD,CAAX;AACH;;AAED,UAAIX,UAAU,IAAIA,UAAU,KAAKT,UAAU,CAACuB,MAA5C,EAAoD;AAChDtB,QAAAA,YAAY,CAACmB,IAAD,CAAZ;AACH;;AAED,UAAIX,UAAU,IAAIA,UAAU,KAAKT,UAAU,CAACwB,SAA5C,EAAuD;AACnDpB,QAAAA,kBAAkB,CAACgB,IAAD,CAAlB;AACH;;AAEDR,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAxB+B,EAwB7B,CAACH,UAAD,EAAaE,WAAb,CAxB6B,CAAhC;AA0BA,SAAO;AAACI,IAAAA,YAAD;AAAeJ,IAAAA,WAAf;AAA4BC,IAAAA,cAA5B;AAA4CC,IAAAA;AAA5C,GAAP;AACH","sourcesContent":["import {useCallback, useState} from 'react'\nimport {allOrgMount} from '../../Models/org-model'\nimport {URL_KEYS, URL_VALUES} from '../../Constants'\nimport {allUserMount} from '../../Models/user-model'\nimport {useUrlParams} from '../app'\nimport {useLocation} from 'react-router-dom'\nimport {offeringsListMount} from '../../Models/offerings-model'\n\nexport function useHomeSearch() {\n    const {urlData} = useUrlParams()\n    const {pathname, search} = useLocation()\n    const searchType = urlData[URL_KEYS.SEARCH_TYPE]\n    const [searchValue, setSearchValue] = useState('')\n    \n    const getActive = (id) => {\n        if (id === 'organization' && search === '') {\n            return pathname === '/search'\n        } else {\n            return searchType && searchType === id\n        }\n    }\n    \n    const handleSubmit = useCallback((e) => {\n        e.preventDefault()\n        if (searchValue.trim().length > 0) {\n            const data = {\n                clear: true,\n                params: {\n                    search: searchValue\n                }\n            }\n            \n            if (!searchType) {\n                allOrgMount(data)\n            }\n            \n            if (searchType && searchType === URL_VALUES.PEOPLE) {\n                allUserMount(data)\n            }\n            \n            if (searchType && searchType === URL_VALUES.OFFERINGS) {\n                offeringsListMount(data)\n            }\n            \n            setSearchValue('')\n        }\n    }, [searchType, searchValue])\n    \n    return {handleSubmit, searchValue, setSearchValue, getActive}\n}"]},"metadata":{},"sourceType":"module"}