{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Cards/ProductCard/index.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { OfferingSvg } from '../../../Icons/Offering';\nimport { getRandom } from '../../../utils/skeleton-utils';\nimport { IconBox } from '../../../UIComponents/GlobalStyles';\nimport { Title } from '../../../UIComponents/Typography/Title';\nimport { ImageLazyLoad } from '../../../UIComponents/ImageLazyLoad';\nimport { ActionLinksWrapper, InfoTextWrapper, OffersInfoWrapper, ProductCostActionWrapper } from './style';\nimport { Spin } from 'antd';\nexport default (({\n  item,\n  handleClick,\n  showBag\n}) => {\n  return /*#__PURE__*/React.createElement(OffersInfoWrapper, {\n    bgColor: item.inCart ? 'var(--active-bg)' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: item.path && item.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ImageLazyLoad, {\n    height: getRandom(100, 200),\n    src: `${item.image}`,\n    alt: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ActionLinksWrapper, {\n    onClick: () => handleClick(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoTextWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(ProductCostActionWrapper, {\n    costColor: item.inCart ? 'var(--primary-dwed)' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, item.cost, \" \", item.currency), showBag && /*#__PURE__*/React.createElement(IconBox, {\n    color: item.inCart ? 'var(--primary-dwed)' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, !item.loading ? /*#__PURE__*/React.createElement(OfferingSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 43\n    }\n  }) : /*#__PURE__*/React.createElement(Spin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 43\n    }\n  })))));\n});","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Cards/ProductCard/index.jsx"],"names":["React","Link","OfferingSvg","getRandom","IconBox","Title","ImageLazyLoad","ActionLinksWrapper","InfoTextWrapper","OffersInfoWrapper","ProductCostActionWrapper","Spin","item","handleClick","showBag","inCart","path","image","name","cost","currency","loading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAAQC,SAAR,QAAwB,+BAAxB;AACA,SAAQC,OAAR,QAAsB,oCAAtB;AACA,SAAQC,KAAR,QAAoB,wCAApB;AACA,SAAQC,aAAR,QAA4B,qCAA5B;AACA,SAAQC,kBAAR,EAA4BC,eAA5B,EAA6CC,iBAA7C,EAAgEC,wBAAhE,QAA+F,SAA/F;AACA,SAAQC,IAAR,QAAmB,MAAnB;AAEA,gBAAe,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,WAAP;AAAoBC,EAAAA;AAApB,CAAD,KAAkC;AAE7C,sBACI,oBAAC,iBAAD;AACI,IAAA,OAAO,EAAEF,IAAI,CAACG,MAAL,GAAc,kBAAd,GAAmC,EADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEH,IAAI,CAACI,IAAL,IAAaJ,IAAI,CAACI,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEb,SAAS,CAAC,GAAD,EAAM,GAAN,CAAhC;AAA4C,IAAA,GAAG,EAAG,GAAES,IAAI,CAACK,KAAM,EAA/D;AAAkE,IAAA,GAAG,EAAEL,IAAI,CAACM,IAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,eAMI,oBAAC,kBAAD;AACI,IAAA,OAAO,EAAE,MAAML,WAAW,CAACD,IAAD,CAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBA,IAAI,CAACM,IAAvB,CADJ,CAHJ,eAMI,oBAAC,wBAAD;AACI,IAAA,SAAS,EAAEN,IAAI,CAACG,MAAL,GAAc,qBAAd,GAAsC,EADrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAE,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKH,IAAI,CAACO,IAHV,OAGiBP,IAAI,CAACQ,QAHtB,CAHJ,EASQN,OAAO,iBACH,oBAAC,OAAD;AACI,IAAA,KAAK,EAAEF,IAAI,CAACG,MAAL,GAAc,qBAAd,GAAsC,EADjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIQ,CAACH,IAAI,CAACS,OAAN,gBACM,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,gBAEM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANd,CAVZ,CANJ,CANJ,CADJ;AAsCH,CAxCD","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {OfferingSvg} from '../../../Icons/Offering'\r\nimport {getRandom} from '../../../utils/skeleton-utils'\r\nimport {IconBox} from '../../../UIComponents/GlobalStyles'\r\nimport {Title} from '../../../UIComponents/Typography/Title'\r\nimport {ImageLazyLoad} from '../../../UIComponents/ImageLazyLoad'\r\nimport {ActionLinksWrapper, InfoTextWrapper, OffersInfoWrapper, ProductCostActionWrapper} from './style'\r\nimport {Spin} from 'antd'\r\n\r\nexport default ({item, handleClick, showBag}) => {\r\n    \r\n    return (\r\n        <OffersInfoWrapper\r\n            bgColor={item.inCart ? 'var(--active-bg)' : ''}\r\n        >\r\n            <Link to={item.path && item.path}>\r\n                <ImageLazyLoad height={getRandom(100, 200)} src={`${item.image}`} alt={item.name}/>\r\n            </Link>\r\n            <ActionLinksWrapper\r\n                onClick={() => handleClick(item)}\r\n            >\r\n                <InfoTextWrapper>\r\n                    <Title level={5}>{item.name}</Title>\r\n                </InfoTextWrapper>\r\n                <ProductCostActionWrapper\r\n                    costColor={item.inCart ? 'var(--primary-dwed)' : ''}\r\n                >\r\n                    <Title\r\n                        level={4}\r\n                    >\r\n                        {item.cost} {item.currency}\r\n                    </Title>\r\n                    {\r\n                        showBag && (\r\n                            <IconBox\r\n                                color={item.inCart ? 'var(--primary-dwed)' : ''}\r\n                            >\r\n                                {\r\n                                    !item.loading\r\n                                        ? <OfferingSvg/>\r\n                                        : <Spin/>\r\n                                }\r\n                            </IconBox>\r\n                        )\r\n                    }\r\n                </ProductCostActionWrapper>\r\n            </ActionLinksWrapper>\r\n        </OffersInfoWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}