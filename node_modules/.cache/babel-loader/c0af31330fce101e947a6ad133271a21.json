{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Auth/FastAuth/ActivationForm/index.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { $appModel } from '../../../../Models/app';\nimport { CloseSvg } from '../../../../Icons/Close';\nimport { INFO_MAT } from '../../../../Constants/app';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { RefreshSvg } from '../../../../Icons/refresh';\nimport { Button } from '../../../../UIComponents/Button';\nimport { InputUI } from '../../../../UIComponents/mu-inputs';\nimport { Text } from '../../../../UIComponents/Typography/Text';\nimport { Title } from '../../../../UIComponents/Typography/Title';\nimport { Container } from '../../../../UIComponents/GlobalStyles';\nimport { AuthForm, CloseModalForm, CountdownWrapper, StyledCountdown } from '../../style';\nexport const ActivationForm = ({\n  formik,\n  onFinish,\n  deadline,\n  showResend,\n  resend,\n  phone,\n  onClose\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    $device\n  } = useStore($appModel);\n  return /*#__PURE__*/React.createElement(AuthForm, {\n    onSubmit: formik.handleSubmit,\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, $device && $device === INFO_MAT && /*#__PURE__*/React.createElement(CloseModalForm, {\n    onClick: () => onClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 24],\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    weight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, t('SMS_confirmation'))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Trans, {\n    i18nKey: \"verify_code_sentence\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, {\n    phone\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    type: \"tel\",\n    pattern: \"[0-9]*\",\n    mask: \"9 9 9 9 9 9\",\n    inputType: \"masked\",\n    name: \"activation_code\",\n    onBlur: formik.handleBlur,\n    onChange: formik.handleChange,\n    label: t('verification_code'),\n    values: formik.values.activation_code,\n    error: formik.touched.activation_code && formik.errors.activation_code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  })), showResend ? /*#__PURE__*/React.createElement(Button, {\n    onClick: () => resend(),\n    size: \"l\",\n    style: {\n      boxShadow: 'unset',\n      color: 'var(--dark-dwed)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(RefreshSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }), t('send_again')) : /*#__PURE__*/React.createElement(CountdownWrapper, {\n    padding: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Trans, {\n    i18nKey: \"get_code_sentence\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(StyledCountdown, {\n    value: deadline,\n    format: \"s\",\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"l\",\n    variant: \"primary\",\n    htmlType: \"submit\",\n    disabled: formik.touched.activation_code && !!formik.errors.activation_code || !formik.values.activation_code.match(/^(\\d\\s*){6}$/),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, t('enter'))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Auth/FastAuth/ActivationForm/index.jsx"],"names":["React","Col","Row","useStore","$appModel","CloseSvg","INFO_MAT","Trans","useTranslation","RefreshSvg","Button","InputUI","Text","Title","Container","AuthForm","CloseModalForm","CountdownWrapper","StyledCountdown","ActivationForm","formik","onFinish","deadline","showResend","resend","phone","onClose","t","$device","handleSubmit","position","marginBottom","handleBlur","handleChange","values","activation_code","touched","errors","boxShadow","color","match"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {$appModel} from '../../../../Models/app'\nimport {CloseSvg} from '../../../../Icons/Close'\nimport {INFO_MAT} from '../../../../Constants/app'\nimport {Trans, useTranslation} from 'react-i18next'\nimport {RefreshSvg} from '../../../../Icons/refresh'\nimport {Button} from '../../../../UIComponents/Button'\nimport {InputUI} from '../../../../UIComponents/mu-inputs'\nimport {Text} from '../../../../UIComponents/Typography/Text'\nimport {Title} from '../../../../UIComponents/Typography/Title'\nimport {Container} from '../../../../UIComponents/GlobalStyles'\nimport {AuthForm, CloseModalForm, CountdownWrapper, StyledCountdown} from '../../style'\n\nexport const ActivationForm = ({formik, onFinish, deadline, showResend, resend, phone, onClose}) => {\n    const {t} = useTranslation()\n    const {$device} = useStore($appModel)\n    \n    return (\n        <AuthForm onSubmit={formik.handleSubmit} style={{position: 'relative'}}>\n            {\n                $device && $device === INFO_MAT && (\n                    <CloseModalForm onClick={() => onClose()}>\n                        <CloseSvg/>\n                    </CloseModalForm>\n                )\n            }\n            <Container>\n                <Row gutter={[0, 24]} style={{marginBottom: 0}}>\n                    <Col span={24}>\n                        <Title weight={500}>{t('SMS_confirmation')}</Title>\n                    </Col>\n                    <Col span={24}>\n                        <Text>\n                            <Trans i18nKey='verify_code_sentence'>\n                                {{phone}}\n                                <br/>\n                            </Trans>\n                        </Text>\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            type='tel'\n                            pattern='[0-9]*'\n                            mask='9 9 9 9 9 9'\n                            inputType='masked'\n                            name='activation_code'\n                            onBlur={formik.handleBlur}\n                            onChange={formik.handleChange}\n                            label={t('verification_code')}\n                            values={formik.values.activation_code}\n                            error={formik.touched.activation_code && formik.errors.activation_code}\n                        />\n                    </Col>\n                    {\n                        showResend\n                            ? <Button\n                                onClick={() => resend()}\n                                size='l'\n                                style={{boxShadow: 'unset', color: 'var(--dark-dwed)'}}\n                            >\n                                <RefreshSvg/>\n                                {t('send_again')}\n                            </Button>\n                            : <CountdownWrapper padding='0'>\n                                <Trans i18nKey='get_code_sentence'>\n                                    <StyledCountdown value={deadline} format='s' onFinish={onFinish}/>\n                                </Trans>\n                            </CountdownWrapper>\n                    }\n                    <Col span={24}>\n                        <Button\n                            size='l'\n                            variant='primary'\n                            htmlType='submit'\n                            disabled={\n                                (formik.touched.activation_code && !!formik.errors.activation_code)\n                                || !formik.values.activation_code.match(/^(\\d\\s*){6}$/)\n                            }\n                        >\n                            {t('enter')}\n                        </Button>\n                    </Col>\n                </Row>\n            </Container>\n        </AuthForm>\n    )\n}"]},"metadata":{},"sourceType":"module"}