{"ast":null,"code":"import React from'react';import moment from'moment';import{Col,Row}from'antd';import{PostMore}from'../PostMore';import{Link}from'react-router-dom';import{useStore}from'effector-react';import{PostInfoWrapper,PostOwnerNameWrapper,PostTime}from'../style';import{$appModel}from'../../../Models/app';import{usePostMore}from'../../../Hooks/post';import{MoreVerticalSvg}from'../../../Icons/More';import{Trans,useTranslation}from'react-i18next';import{Text}from'../../../UIComponents/Typography/Text';import{IconBox}from'../../../UIComponents/GlobalStyles';import{Title}from'../../../UIComponents/Typography/Title';import{Avatar}from'../../../UIComponents/Avatar';export var PostHeader=function PostHeader(_ref){var _data$author;var name=_ref.name,data=_ref.data,date=_ref.date,anons=_ref.anons,imgUrl=_ref.imgUrl,newDuty=_ref.newDuty,postOwner=_ref.postOwner,newAvatar=_ref.newAvatar,isOfficial=_ref.isOfficial,handlePush=_ref.handlePush;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useStore=useStore($appModel),token=_useStore.$app.token;var _usePostMore=usePostMore(),show=_usePostMore.show,setShow=_usePostMore.setShow,postRef=_usePostMore.postRef;return/*#__PURE__*/React.createElement(PostInfoWrapper,null,/*#__PURE__*/React.createElement(Row,{align:\"top\",wrap:false,justify:\"space-between\"},/*#__PURE__*/React.createElement(Col,{onClick:handlePush},/*#__PURE__*/React.createElement(Avatar,{imgUrl:imgUrl,size:40})),/*#__PURE__*/React.createElement(Col,{flex:1,onClick:handlePush},(data===null||data===void 0?void 0:(_data$author=data.author)===null||_data$author===void 0?void 0:_data$author.type)&&/*#__PURE__*/React.createElement(PostOwnerNameWrapper,null,/*#__PURE__*/React.createElement(Title,null,name),/*#__PURE__*/React.createElement(PostTime,null,date)),postOwner||anons||newDuty||newAvatar?/*#__PURE__*/React.createElement(React.Fragment,null,postOwner&&/*#__PURE__*/React.createElement(Text,null,t('reposted_post'),/*#__PURE__*/React.createElement(Link,{to:\"/@\".concat(postOwner.author.slug_name,\"/tape\"),style:{color:'#262626'}},/*#__PURE__*/React.createElement(\"span\",null,postOwner.author.name))),anons&&/*#__PURE__*/React.createElement(Text,null,/*#__PURE__*/React.createElement(Trans,{i18nKey:\"anons_start\",values:{d:moment(anons).format('DD.MM.YYYY'),t:moment(anons).format('HH:mm')}},/*#__PURE__*/React.createElement(\"span\",null))),newDuty&&/*#__PURE__*/React.createElement(Text,null,\"\".concat(newDuty.job.name,\" \"),/*#__PURE__*/React.createElement(\"span\",null,newDuty.org.name)),newAvatar&&/*#__PURE__*/React.createElement(Text,null,t('updated_profile_photo'))):/*#__PURE__*/React.createElement(Text,null,data.author.sub_text)),!!token&&/*#__PURE__*/React.createElement(Col,{ref:postRef,onClick:function onClick(){return setShow(!show);}},/*#__PURE__*/React.createElement(IconBox,null,/*#__PURE__*/React.createElement(MoreVerticalSvg,null),show&&/*#__PURE__*/React.createElement(PostMore,{data:data,postRef:postRef,setShow:setShow})))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Post/PostHeader/index.jsx"],"names":["React","moment","Col","Row","PostMore","Link","useStore","PostInfoWrapper","PostOwnerNameWrapper","PostTime","$appModel","usePostMore","MoreVerticalSvg","Trans","useTranslation","Text","IconBox","Title","Avatar","PostHeader","name","data","date","anons","imgUrl","newDuty","postOwner","newAvatar","isOfficial","handlePush","t","token","$app","show","setShow","postRef","author","type","slug_name","color","d","format","job","org","sub_text"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport moment from 'moment'\r\nimport {Col, Row} from 'antd'\r\nimport {PostMore} from '../PostMore'\r\nimport {Link} from 'react-router-dom'\r\nimport {useStore} from 'effector-react'\r\nimport {PostInfoWrapper, PostOwnerNameWrapper, PostTime} from '../style'\r\nimport {$appModel} from '../../../Models/app'\r\nimport {usePostMore} from '../../../Hooks/post'\r\nimport {MoreVerticalSvg} from '../../../Icons/More'\r\nimport {Trans, useTranslation} from 'react-i18next'\r\nimport {Text} from '../../../UIComponents/Typography/Text'\r\nimport {IconBox} from '../../../UIComponents/GlobalStyles'\r\nimport {Title} from '../../../UIComponents/Typography/Title'\r\nimport {Avatar} from '../../../UIComponents/Avatar'\r\n\r\nexport const PostHeader = (\r\n    {\r\n        name,\r\n        data,\r\n        date,\r\n        anons,\r\n        imgUrl,\r\n        newDuty,\r\n        postOwner,\r\n        newAvatar,\r\n        isOfficial,\r\n        handlePush\r\n    }\r\n) => {\r\n    const {t} = useTranslation()\r\n    const {$app: {token}} = useStore($appModel)\r\n    const {show, setShow, postRef} = usePostMore()\r\n    \r\n    \r\n    return (\r\n        <PostInfoWrapper>\r\n            <Row\r\n                align='top'\r\n                wrap={false}\r\n                justify='space-between'\r\n            >\r\n                <Col onClick={handlePush}>\r\n                    <Avatar\r\n                        imgUrl={imgUrl}\r\n                        size={40}\r\n                    />\r\n                </Col>\r\n                <Col\r\n                    flex={1}\r\n                    onClick={handlePush}\r\n                >\r\n                    {\r\n                        data?.author?.type &&\r\n                        <PostOwnerNameWrapper>\r\n                            <Title>{name}</Title>\r\n                            <PostTime>\r\n                                {date}\r\n                            </PostTime>\r\n                        </PostOwnerNameWrapper>\r\n                    }\r\n                    {\r\n                        (postOwner || anons || newDuty || newAvatar) ? (\r\n                            <>\r\n                                {\r\n                                    postOwner &&\r\n                                    <Text>\r\n                                        {t('reposted_post')}\r\n                                        <Link\r\n                                            to={`/@${postOwner.author.slug_name}/tape`}\r\n                                            style={{color: '#262626'}}\r\n                                        >\r\n                                            <span>{postOwner.author.name}</span>\r\n                                        </Link>\r\n                                    </Text>\r\n                                }\r\n                                {\r\n                                    anons && (\r\n                                        <Text>\r\n                                            <Trans\r\n                                                i18nKey='anons_start'\r\n                                                values={{\r\n                                                    d: moment(anons).format('DD.MM.YYYY'),\r\n                                                    t: moment(anons).format('HH:mm')\r\n                                                }}\r\n                                            >\r\n                                                <span/>\r\n                                            </Trans>\r\n                                        </Text>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    newDuty &&\r\n                                    <Text>\r\n                                        {`${newDuty.job.name} `}<span>{newDuty.org.name}</span>\r\n                                    </Text>\r\n                                }\r\n                                {\r\n                                    newAvatar &&\r\n                                    <Text>\r\n                                        {t('updated_profile_photo')}\r\n                                    </Text>\r\n                                }\r\n                            </>\r\n                        ) : (\r\n                            <Text>\r\n                                {data.author.sub_text}\r\n                            </Text>\r\n                        )\r\n                    }\r\n                </Col>\r\n                {\r\n                    !!token && (\r\n                        <Col\r\n                            ref={postRef}\r\n                            onClick={() => setShow(!show)}\r\n                        >\r\n                            <IconBox>\r\n                                <MoreVerticalSvg/>\r\n                                {\r\n                                    show\r\n                                    && <PostMore\r\n                                        data={data}\r\n                                        postRef={postRef}\r\n                                        setShow={setShow}\r\n                                    />\r\n                                }\r\n                            </IconBox>\r\n                        </Col>\r\n                    )\r\n                }\r\n            </Row>\r\n        </PostInfoWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}