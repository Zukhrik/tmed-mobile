{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OverlayOfferingGroup/index.jsx\";\nimport React, { useCallback } from 'react';\nimport { OfferGroupWrapper } from '../style';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { $offeringsModel } from '../../../../Models/offerings-model';\nimport { OfferingGroupItem } from '../OfferingGroupItem';\nimport { URL_KEYS } from '../../../../Constants';\nimport { useUrlParams } from '../../../../Hooks/app';\nimport { useLocation } from 'react-router-dom';\nimport { Text } from '../../../../UIComponents/Typography/Text';\nexport const OverlayOfferingGroup = () => {\n  const {\n    urlData\n  } = useUrlParams();\n  const {\n    pathname\n  } = useLocation();\n  const groupId = urlData[URL_KEYS.OFFERING_GROUP_ID];\n  const {\n    $offeringGroupList: {\n      data\n    }\n  } = useStore($offeringsModel);\n  const generateUrl = useCallback(id => {\n    const url = [];\n\n    if (urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]) {\n      url.push(`${URL_KEYS.SPECIALIST_CATEGORY_ID}=${urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]}`);\n    }\n\n    if (urlData[URL_KEYS.SPECIALIST_ID]) {\n      url.push(`${URL_KEYS.SPECIALIST_ID}=${urlData[URL_KEYS.SPECIALIST_ID]}`);\n    }\n\n    if (!groupId || groupId !== String(id)) {\n      url.push(`${URL_KEYS.OFFERING_GROUP_ID}=${id}`);\n    }\n\n    return {\n      pathname,\n      search: url.join('&')\n    };\n  }, [pathname, groupId, urlData]);\n  return /*#__PURE__*/React.createElement(OfferGroupWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [12, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, data && data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    key: `${idx + 1}`,\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(OfferingGroupItem, {\n    size: 75,\n    shape: \"square\",\n    name: item.name,\n    imgUrl: item.image,\n    path: generateUrl(item.id),\n    isActive: () => groupId && groupId === String(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OverlayOfferingGroup/index.jsx"],"names":["React","useCallback","OfferGroupWrapper","Col","Row","useStore","$offeringsModel","OfferingGroupItem","URL_KEYS","useUrlParams","useLocation","Text","OverlayOfferingGroup","urlData","pathname","groupId","OFFERING_GROUP_ID","$offeringGroupList","data","generateUrl","id","url","SPECIALIST_CATEGORY_ID","push","SPECIALIST_ID","String","search","join","map","item","idx","name","image"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,iBAAR,QAAgC,UAAhC;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,eAAR,QAA8B,oCAA9B;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;AACA,SAAQC,QAAR,QAAuB,uBAAvB;AACA,SAAQC,YAAR,QAA2B,uBAA3B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,IAAR,QAAmB,0CAAnB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACtC,QAAM;AAACC,IAAAA;AAAD,MAAYJ,YAAY,EAA9B;AACA,QAAM;AAACK,IAAAA;AAAD,MAAaJ,WAAW,EAA9B;AACA,QAAMK,OAAO,GAAGF,OAAO,CAACL,QAAQ,CAACQ,iBAAV,CAAvB;AACA,QAAM;AAACC,IAAAA,kBAAkB,EAAE;AAACC,MAAAA;AAAD;AAArB,MAA+Bb,QAAQ,CAACC,eAAD,CAA7C;AAEA,QAAMa,WAAW,GAAGlB,WAAW,CAAEmB,EAAD,IAAQ;AACpC,UAAMC,GAAG,GAAG,EAAZ;;AACA,QAAIR,OAAO,CAACL,QAAQ,CAACc,sBAAV,CAAX,EAA8C;AAC1CD,MAAAA,GAAG,CAACE,IAAJ,CAAU,GAAEf,QAAQ,CAACc,sBAAuB,IAAGT,OAAO,CAACL,QAAQ,CAACc,sBAAV,CAAkC,EAAxF;AACH;;AAED,QAAIT,OAAO,CAACL,QAAQ,CAACgB,aAAV,CAAX,EAAqC;AACjCH,MAAAA,GAAG,CAACE,IAAJ,CAAU,GAAEf,QAAQ,CAACgB,aAAc,IAAGX,OAAO,CAACL,QAAQ,CAACgB,aAAV,CAAyB,EAAtE;AACH;;AAED,QAAI,CAACT,OAAD,IAAYA,OAAO,KAAKU,MAAM,CAACL,EAAD,CAAlC,EAAwC;AACpCC,MAAAA,GAAG,CAACE,IAAJ,CAAU,GAAEf,QAAQ,CAACQ,iBAAkB,IAAGI,EAAG,EAA7C;AACH;;AAED,WAAO;AACHN,MAAAA,QADG;AAEHY,MAAAA,MAAM,EAAEL,GAAG,CAACM,IAAJ,CAAS,GAAT;AAFL,KAAP;AAIH,GAlB8B,EAkB5B,CAACb,QAAD,EAAWC,OAAX,EAAoBF,OAApB,CAlB4B,CAA/B;AAoBA,sBACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQK,IAAI,IAAIA,IAAI,CAACU,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACb,oBAAC,GAAD;AACI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EADpB;AACuB,IAAA,IAAI,EAAE,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,iBAAD;AACI,IAAA,IAAI,EAAE,EADV;AAEI,IAAA,KAAK,EAAC,QAFV;AAGI,IAAA,IAAI,EAAED,IAAI,CAACE,IAHf;AAII,IAAA,MAAM,EAAEF,IAAI,CAACG,KAJjB;AAKI,IAAA,IAAI,EAAEb,WAAW,CAACU,IAAI,CAACT,EAAN,CALrB;AAMI,IAAA,QAAQ,EAAE,MAAML,OAAO,IAAIA,OAAO,KAAKU,MAAM,CAACI,IAAI,CAACT,EAAN,CANjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADI,CAFhB,CADJ,CADJ;AAsBH,CAhDM","sourcesContent":["import React, {useCallback} from 'react'\nimport {OfferGroupWrapper} from '../style'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {$offeringsModel} from '../../../../Models/offerings-model'\nimport {OfferingGroupItem} from '../OfferingGroupItem'\nimport {URL_KEYS} from '../../../../Constants'\nimport {useUrlParams} from '../../../../Hooks/app'\nimport {useLocation} from 'react-router-dom'\nimport {Text} from '../../../../UIComponents/Typography/Text'\n\nexport const OverlayOfferingGroup = () => {\n    const {urlData} = useUrlParams()\n    const {pathname} = useLocation()\n    const groupId = urlData[URL_KEYS.OFFERING_GROUP_ID]\n    const {$offeringGroupList: {data}} = useStore($offeringsModel)\n    \n    const generateUrl = useCallback((id) => {\n        const url = []\n        if (urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]) {\n            url.push(`${URL_KEYS.SPECIALIST_CATEGORY_ID}=${urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]}`)\n        }\n        \n        if (urlData[URL_KEYS.SPECIALIST_ID]) {\n            url.push(`${URL_KEYS.SPECIALIST_ID}=${urlData[URL_KEYS.SPECIALIST_ID]}`)\n        }\n        \n        if (!groupId || groupId !== String(id)) {\n            url.push(`${URL_KEYS.OFFERING_GROUP_ID}=${id}`)\n        }\n        \n        return {\n            pathname,\n            search: url.join('&')\n        }\n    }, [pathname, groupId, urlData])\n    \n    return (\n        <OfferGroupWrapper>\n            <Row gutter={[12, 12]}>\n                {\n                    data && data.map((item, idx) => (\n                        <Col\n                            key={`${idx + 1}`} span={8}\n                        >\n                            <OfferingGroupItem\n                                size={75}\n                                shape='square'\n                                name={item.name}\n                                imgUrl={item.image}\n                                path={generateUrl(item.id)}\n                                isActive={() => groupId && groupId === String(item.id)}\n                            />\n                        </Col>\n                    ))\n                }\n            </Row>\n        </OfferGroupWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}