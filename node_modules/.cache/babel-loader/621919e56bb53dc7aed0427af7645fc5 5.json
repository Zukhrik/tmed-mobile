{"ast":null,"code":"import React from'react';import{generateSkeleton}from'../../../utils/skeleton-utils';import{useOrderList}from'../../../Hooks/order';import{useHistory}from'react-router-dom';import{useStore}from'effector-react';import{$orderModel}from'../../../Models/order-model';import{saveURLMount}from'../../../Models/app';import{Col,Row}from'antd';import{QRCodeCartCard}from'../../../Components/Cards/QRCodeCartCard';import{QRCodeCartCardSkeleton}from'../../../Components/Cards';import{EmptyOrderContainer}from'./empty-order-container';var skeleton=generateSkeleton(5);export var Finished=function Finished(){useOrderList(5);var _useHistory=useHistory(),push=_useHistory.push,pathname=_useHistory.location.pathname;var _useStore=useStore($orderModel),_useStore$$orderList=_useStore.$orderList,data=_useStore$$orderList.data,result=_useStore$$orderList.result,forceLoading=_useStore$$orderList.forceLoading;var handlePush=function handlePush(item){push(\"/records/detail/\".concat(item.id));saveURLMount(pathname);};return/*#__PURE__*/React.createElement(Row,{gutter:[0,12],style:{paddingBottom:65}},forceLoading===2?/*#__PURE__*/React.createElement(React.Fragment,null,data&&data.length>0?/*#__PURE__*/React.createElement(React.Fragment,null,data.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{span:24,key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(QRCodeCartCard,{src:item.responsible.org.logo,time:item.meet_date,cost:item.total_cost,url:function url(){return handlePush(item);},count:result&&result.count,title:item.responsible.org.name,text:item.responsible.org.category.name,specialistImg:item.responsible.user.avatar,specialistName:item.responsible.user.full_name,specialistCat:item.responsible.user.main_cat.name}));})):/*#__PURE__*/React.createElement(EmptyOrderContainer,null)):/*#__PURE__*/React.createElement(React.Fragment,null,skeleton.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{span:24,key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(QRCodeCartCardSkeleton,null));})));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/organisms/finished.jsx"],"names":["React","generateSkeleton","useOrderList","useHistory","useStore","$orderModel","saveURLMount","Col","Row","QRCodeCartCard","QRCodeCartCardSkeleton","EmptyOrderContainer","skeleton","Finished","push","pathname","location","$orderList","data","result","forceLoading","handlePush","item","id","paddingBottom","length","map","idx","responsible","org","logo","meet_date","total_cost","count","name","category","user","avatar","full_name","main_cat"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,gBAAR,KAA+B,+BAA/B,CACA,OAAQC,YAAR,KAA2B,sBAA3B,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CACA,OAAQC,WAAR,KAA0B,6BAA1B,CACA,OAAQC,YAAR,KAA2B,qBAA3B,CACA,OAAQC,GAAR,CAAaC,GAAb,KAAuB,MAAvB,CACA,OAAQC,cAAR,KAA6B,0CAA7B,CACA,OAAQC,sBAAR,KAAqC,2BAArC,CACA,OAAQC,mBAAR,KAAkC,yBAAlC,CAEA,GAAMC,CAAAA,QAAQ,CAAGX,gBAAgB,CAAC,CAAD,CAAjC,CACA,MAAO,IAAMY,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAC1BX,YAAY,CAAC,CAAD,CAAZ,CACA,gBAAqCC,UAAU,EAA/C,CAAOW,IAAP,aAAOA,IAAP,CAAwBC,QAAxB,aAAaC,QAAb,CAAwBD,QAAxB,CACA,cAAmDX,QAAQ,CAACC,WAAD,CAA3D,gCAAOY,UAAP,CAAoBC,IAApB,sBAAoBA,IAApB,CAA0BC,MAA1B,sBAA0BA,MAA1B,CAAkCC,YAAlC,sBAAkCA,YAAlC,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,CACzBR,IAAI,2BAAoBQ,IAAI,CAACC,EAAzB,EAAJ,CACAjB,YAAY,CAACS,QAAD,CAAZ,CACH,CAHD,CAKA,mBACI,oBAAC,GAAD,EAAK,MAAM,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAb,CAAsB,KAAK,CAAE,CAACS,aAAa,CAAE,EAAhB,CAA7B,EAEQJ,YAAY,GAAK,CAAjB,cACM,wCAEMF,IAAI,EAAIA,IAAI,CAACO,MAAL,CAAc,CAAtB,cAEQ,wCAEQP,IAAI,CAACQ,GAAL,CAAS,SAACJ,IAAD,CAAOK,GAAP,qBACL,oBAAC,GAAD,EACI,IAAI,CAAE,EADV,CAEI,GAAG,WAAKA,GAAG,CAAG,CAAX,CAFP,eAII,oBAAC,cAAD,EACI,GAAG,CAAEL,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAqBC,IAD9B,CAEI,IAAI,CAAER,IAAI,CAACS,SAFf,CAGI,IAAI,CAAET,IAAI,CAACU,UAHf,CAII,GAAG,CAAE,qBAAMX,CAAAA,UAAU,CAACC,IAAD,CAAhB,EAJT,CAKI,KAAK,CAAEH,MAAM,EAAIA,MAAM,CAACc,KAL5B,CAMI,KAAK,CAAEX,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAqBK,IANhC,CAOI,IAAI,CAAEZ,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAqBM,QAArB,CAA8BD,IAPxC,CAQI,aAAa,CAAEZ,IAAI,CAACM,WAAL,CAAiBQ,IAAjB,CAAsBC,MARzC,CASI,cAAc,CAAEf,IAAI,CAACM,WAAL,CAAiBQ,IAAjB,CAAsBE,SAT1C,CAUI,aAAa,CAAEhB,IAAI,CAACM,WAAL,CAAiBQ,IAAjB,CAAsBG,QAAtB,CAA+BL,IAVlD,EAJJ,CADK,EAAT,CAFR,CAFR,cA0BQ,oBAAC,mBAAD,MA5Bd,CADN,cAiCM,wCAEMtB,QAAQ,CAACc,GAAT,CAAa,SAACJ,IAAD,CAAOK,GAAP,qBACT,oBAAC,GAAD,EAAK,IAAI,CAAE,EAAX,CAAe,GAAG,WAAKA,GAAG,CAAG,CAAX,CAAlB,eACI,oBAAC,sBAAD,MADJ,CADS,EAAb,CAFN,CAnCd,CADJ,CAgDH,CA1DM","sourcesContent":["import React from 'react'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {useOrderList} from '../../../Hooks/order'\nimport {useHistory} from 'react-router-dom'\nimport {useStore} from 'effector-react'\nimport {$orderModel} from '../../../Models/order-model'\nimport {saveURLMount} from '../../../Models/app'\nimport {Col, Row} from 'antd'\nimport {QRCodeCartCard} from '../../../Components/Cards/QRCodeCartCard'\nimport {QRCodeCartCardSkeleton} from '../../../Components/Cards'\nimport {EmptyOrderContainer} from './empty-order-container'\n\nconst skeleton = generateSkeleton(5)\nexport const Finished = () => {\n    useOrderList(5)\n    const {push, location: {pathname}} = useHistory()\n    const {$orderList: {data, result, forceLoading}} = useStore($orderModel)\n    \n    const handlePush = (item) => {\n        push(`/records/detail/${item.id}`)\n        saveURLMount(pathname)\n    }\n    \n    return (\n        <Row gutter={[0, 12]} style={{paddingBottom: 65}}>\n            {\n                forceLoading === 2\n                    ? <>\n                        {\n                            data && data.length > 0\n                                ? (\n                                    <>\n                                        {\n                                            data.map((item, idx) => (\n                                                <Col\n                                                    span={24}\n                                                    key={`${idx + 1}`}\n                                                >\n                                                    <QRCodeCartCard\n                                                        src={item.responsible.org.logo}\n                                                        time={item.meet_date}\n                                                        cost={item.total_cost}\n                                                        url={() => handlePush(item)}\n                                                        count={result && result.count}\n                                                        title={item.responsible.org.name}\n                                                        text={item.responsible.org.category.name}\n                                                        specialistImg={item.responsible.user.avatar}\n                                                        specialistName={item.responsible.user.full_name}\n                                                        specialistCat={item.responsible.user.main_cat.name}\n                                                    />\n                                                </Col>\n                                            ))\n                                        }\n                                    </>\n                                ) : (\n                                    <EmptyOrderContainer/>\n                                )\n                        }\n                    </>\n                    : <>\n                        {\n                            skeleton.map((item, idx) => (\n                                <Col span={24} key={`${idx + 1}`}>\n                                    <QRCodeCartCardSkeleton/>\n                                </Col>\n                            ))\n                        }\n                    </>\n            }\n        </Row>\n    )\n}"]},"metadata":{},"sourceType":"module"}