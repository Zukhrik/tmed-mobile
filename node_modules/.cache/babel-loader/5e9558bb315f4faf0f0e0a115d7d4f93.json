{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Post/PostMore/index.jsx\";\nimport React, { useCallback } from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { PostMoreWrapper } from '../style';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { deletePostMount } from '../../../Models/tape-model';\nimport { currentPostMoreList, postMore } from '../../../data';\nimport { $appModel, saveURLMount } from '../../../Models/app';\nimport { $accountModel } from '../../../Models/account-model';\nexport const PostMore = ({\n  data\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    username\n  } = useParams();\n  const {\n    $app: {\n      token\n    }\n  } = useStore($appModel);\n  const {\n    push,\n    location: {\n      pathname\n    }\n  } = useHistory();\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  const handleItemClick = useCallback(action => {\n    const author = currentProfile && `@${currentProfile.slug_name}`;\n    const params = {\n      post_id: data.id,\n      author\n    };\n\n    if (!!token) {\n      if (action === 'delete') {\n        deletePostMount(params);\n      }\n\n      if (action === 'repost') {\n        saveURLMount(pathname);\n        push(`/repost/${params.post_id}`);\n      }\n    }\n  }, [data.id, currentProfile, push, token, pathname]);\n  return /*#__PURE__*/React.createElement(PostMoreWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, currentProfile && currentProfile.slug_name === username || (currentProfile && currentProfile.slug_name) === data.author.slug_name ? currentPostMoreList.map((item, idx) => {\n    const Icon = item.icon;\n    return /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      key: `${idx + 1}`,\n      style: {\n        whiteSpace: 'nowrap'\n      },\n      onClick: () => handleItemClick(item.text),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      wrap: false,\n      align: \"middle\",\n      justify: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 45\n      }\n    }, t(`${item.text}`))), /*#__PURE__*/React.createElement(Col, {\n      className: \"icon-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }\n    }))));\n  }) : postMore.map((item, idx) => {\n    const Icon = item.icon;\n    return /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      key: `${idx + 1}`,\n      style: {\n        whiteSpace: 'nowrap'\n      },\n      onClick: () => handleItemClick(item.text),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      gutter: 12,\n      wrap: false,\n      align: \"middle\",\n      justify: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 45\n      }\n    }, t(`${item.text}`))), /*#__PURE__*/React.createElement(Col, {\n      className: \"icon-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 45\n      }\n    }))));\n  })));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Post/PostMore/index.jsx"],"names":["React","useCallback","Col","Row","useStore","PostMoreWrapper","useTranslation","useHistory","useParams","Text","deletePostMount","currentPostMoreList","postMore","$appModel","saveURLMount","$accountModel","PostMore","data","t","username","$app","token","push","location","pathname","$profiles","currentProfile","handleItemClick","action","author","slug_name","params","post_id","id","map","item","idx","Icon","icon","whiteSpace","text"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {PostMoreWrapper} from '../style'\nimport {useTranslation} from 'react-i18next'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {deletePostMount} from '../../../Models/tape-model'\nimport {currentPostMoreList, postMore} from '../../../data'\nimport {$appModel, saveURLMount} from '../../../Models/app'\nimport {$accountModel} from '../../../Models/account-model'\n\nexport const PostMore = ({data}) => {\n    const {t} = useTranslation()\n    const {username} = useParams()\n    const {$app: {token}} = useStore($appModel)\n    const {push, location: {pathname}} = useHistory()\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    \n    const handleItemClick = useCallback((action) => {\n        const author = currentProfile && `@${currentProfile.slug_name}`\n        const params = {\n            post_id: data.id,\n            author\n        }\n        if (!!token) {\n            if (action === 'delete') {\n                deletePostMount(params)\n            }\n            \n            if (action === 'repost') {\n                saveURLMount(pathname)\n                push(`/repost/${params.post_id}`)\n            }\n        }\n    }, [data.id, currentProfile, push, token, pathname])\n    \n    return (\n        <PostMoreWrapper>\n            <Row align='middle'>\n                {\n                    (currentProfile && currentProfile.slug_name === username) ||\n                    (currentProfile && currentProfile.slug_name) === data.author.slug_name\n                        ? currentPostMoreList.map((item, idx) => {\n                            const Icon = item.icon\n                            return (\n                                <Col\n                                    span={24}\n                                    key={`${idx + 1}`}\n                                    style={{whiteSpace: 'nowrap'}}\n                                    onClick={() => handleItemClick(item.text)}\n                                >\n                                    <Row\n                                        wrap={false}\n                                        align='middle'\n                                        justify='space-between'\n                                    >\n                                        <Col>\n                                            <Text>\n                                                {t(`${item.text}`)}\n                                            </Text>\n                                        </Col>\n                                        <Col className='icon-box'>\n                                            <Icon/>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            )\n                        })\n                        : postMore.map((item, idx) => {\n                            const Icon = item.icon\n                            return (\n                                <Col\n                                    span={24}\n                                    key={`${idx + 1}`}\n                                    style={{whiteSpace: 'nowrap'}}\n                                    onClick={() => handleItemClick(item.text)}\n                                >\n                                    <Row\n                                        gutter={12}\n                                        wrap={false}\n                                        align='middle'\n                                        justify='space-between'\n                                    >\n                                        <Col>\n                                            <Text>\n                                                {t(`${item.text}`)}\n                                            </Text>\n                                        </Col>\n                                        <Col className='icon-box'>\n                                            <Icon/>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            )\n                        })\n                }\n            </Row>\n        </PostMoreWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}