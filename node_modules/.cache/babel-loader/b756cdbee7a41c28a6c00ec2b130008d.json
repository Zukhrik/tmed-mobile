{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/RecommendUsers/organisms/people-list.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { RecommendUserCard } from './reccomend-users-card';\nimport { $userModel, subscribeToRecommendUserMount } from '../../../Models/user-model';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nexport const PeopleList = ({\n  loadMore\n}) => {\n  const {\n    $recommendUsers: {\n      data,\n      loading,\n      result\n    }\n  } = useStore($userModel);\n\n  const handleSubscribe = event => {\n    if (!event.subs.subscribed) {\n      const params = {\n        username: event.username\n      };\n      subscribeToRecommendUserMount(params);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    style: {\n      overflow: 'visible',\n      paddingBottom: '60px'\n    },\n    next: loadMore,\n    dataLength: result.nextOffset || 10,\n    hasMore: !loading && !!result.next,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, data && data.length > 0 && data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(RecommendUserCard, {\n    item: item,\n    imgUrl: item.avatar,\n    name: item.full_name,\n    username: item.username,\n    text: item.main_cat.name,\n    handleSubscribe: handleSubscribe,\n    path: `@${item.username}/tape`,\n    subscribed: item.subs.subscribed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/RecommendUsers/organisms/people-list.jsx"],"names":["React","Col","Row","useStore","RecommendUserCard","$userModel","subscribeToRecommendUserMount","InfiniteScroll","PeopleList","loadMore","$recommendUsers","data","loading","result","handleSubscribe","event","subs","subscribed","params","username","overflow","paddingBottom","nextOffset","next","length","map","item","idx","avatar","full_name","main_cat","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,iBAAR,QAAgC,wBAAhC;AACA,SAAQC,UAAR,EAAoBC,6BAApB,QAAwD,4BAAxD;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACtC,QAAM;AAACC,IAAAA,eAAe,EAAE;AAACC,MAAAA,IAAD;AAAOC,MAAAA,OAAP;AAAgBC,MAAAA;AAAhB;AAAlB,MAA6CV,QAAQ,CAACE,UAAD,CAA3D;;AAEA,QAAMS,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAI,CAACA,KAAK,CAACC,IAAN,CAAWC,UAAhB,EAA4B;AACxB,YAAMC,MAAM,GAAG;AACXC,QAAAA,QAAQ,EAAEJ,KAAK,CAACI;AADL,OAAf;AAGAb,MAAAA,6BAA6B,CAACY,MAAD,CAA7B;AACH;AACJ,GAPD;;AASA,sBACI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE;AAACE,MAAAA,QAAQ,EAAE,SAAX;AAAsBC,MAAAA,aAAa,EAAE;AAArC,KADX;AAEI,IAAA,IAAI,EAAEZ,QAFV;AAGI,IAAA,UAAU,EAAEI,MAAM,CAACS,UAAP,IAAqB,EAHrC;AAII,IAAA,OAAO,EAAE,CAACV,OAAD,IAAY,CAAC,CAACC,MAAM,CAACU,IAJlC;AAKI,IAAA,MAAM,eAAE,uDALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQZ,IAAI,IAAIA,IAAI,CAACa,MAAL,GAAc,CAAtB,IAA2Bb,IAAI,CAACc,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBAChC,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE,EADV;AAEI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,iBAAD;AACI,IAAA,IAAI,EAAED,IADV;AAEI,IAAA,MAAM,EAAEA,IAAI,CAACE,MAFjB;AAGI,IAAA,IAAI,EAAEF,IAAI,CAACG,SAHf;AAII,IAAA,QAAQ,EAAEH,IAAI,CAACP,QAJnB;AAKI,IAAA,IAAI,EAAEO,IAAI,CAACI,QAAL,CAAcC,IALxB;AAMI,IAAA,eAAe,EAAEjB,eANrB;AAOI,IAAA,IAAI,EAAG,IAAGY,IAAI,CAACP,QAAS,OAP5B;AAQI,IAAA,UAAU,EAAEO,IAAI,CAACV,IAAL,CAAUC,UAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADuB,CAFnC,CAPJ,CADJ;AA+BH,CA3CM","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {RecommendUserCard} from './reccomend-users-card'\nimport {$userModel, subscribeToRecommendUserMount} from '../../../Models/user-model'\nimport InfiniteScroll from 'react-infinite-scroll-component'\n\nexport const PeopleList = ({loadMore}) => {\n    const {$recommendUsers: {data, loading, result}} = useStore($userModel)\n    \n    const handleSubscribe = (event) => {\n        if (!event.subs.subscribed) {\n            const params = {\n                username: event.username\n            }\n            subscribeToRecommendUserMount(params)\n        }\n    }\n    \n    return (\n        <InfiniteScroll\n            style={{overflow: 'visible', paddingBottom: '60px'}}\n            next={loadMore}\n            dataLength={result.nextOffset || 10}\n            hasMore={!loading && !!result.next}\n            loader={<>...loading</>}\n        >\n            <Row gutter={[0, 12]}>\n                {\n                    data && data.length > 0 && data.map((item, idx) => (\n                        <Col\n                            span={24}\n                            key={`${idx + 1}`}\n                        >\n                            <RecommendUserCard\n                                item={item}\n                                imgUrl={item.avatar}\n                                name={item.full_name}\n                                username={item.username}\n                                text={item.main_cat.name}\n                                handleSubscribe={handleSubscribe}\n                                path={`@${item.username}/tape`}\n                                subscribed={item.subs.subscribed}\n                            />\n                        </Col>\n                    ))\n                }\n            </Row>\n        </InfiniteScroll>\n    )\n}"]},"metadata":{},"sourceType":"module"}