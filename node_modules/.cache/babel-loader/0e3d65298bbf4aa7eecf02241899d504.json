{"ast":null,"code":"import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useState}from'react';import{allOrgMount}from'../../Models/org-model';import{URL_KEYS,URL_VALUES}from'../../Constants';import{allUserMount}from'../../Models/user-model';import{useUrlParams}from'../app';import{useLocation}from'react-router-dom';import{offeringsListMount}from'../../Models/offerings-model';export function useHomeSearch(){var _useUrlParams=useUrlParams(),urlData=_useUrlParams.urlData;var _useLocation=useLocation(),pathname=_useLocation.pathname,search=_useLocation.search;var searchType=urlData[URL_KEYS.SEARCH_TYPE];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchValue=_useState2[0],setSearchValue=_useState2[1];var getActive=function getActive(id){if(id==='organization'&&search===''){return pathname==='/search';}else{return searchType&&searchType===id;}};var handleSubmit=useCallback(function(e){e.preventDefault();if(searchValue.trim().length>0){var data={clear:true,params:{search:searchValue}};if(!searchType){allOrgMount(data);}if(searchType&&searchType===URL_VALUES.PEOPLE){allUserMount(data);}if(searchType&&searchType===URL_VALUES.OFFERINGS){offeringsListMount(data);}setSearchValue('');}},[searchType,searchValue]);return{handleSubmit:handleSubmit,searchValue:searchValue,setSearchValue:setSearchValue,getActive:getActive};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/home/use-home-search.js"],"names":["useCallback","useState","allOrgMount","URL_KEYS","URL_VALUES","allUserMount","useUrlParams","useLocation","offeringsListMount","useHomeSearch","urlData","pathname","search","searchType","SEARCH_TYPE","searchValue","setSearchValue","getActive","id","handleSubmit","e","preventDefault","trim","length","data","clear","params","PEOPLE","OFFERINGS"],"mappings":"qKAAA,OAAQA,WAAR,CAAqBC,QAArB,KAAoC,OAApC,CACA,OAAQC,WAAR,KAA0B,wBAA1B,CACA,OAAQC,QAAR,CAAkBC,UAAlB,KAAmC,iBAAnC,CACA,OAAQC,YAAR,KAA2B,yBAA3B,CACA,OAAQC,YAAR,KAA2B,QAA3B,CACA,OAAQC,WAAR,KAA0B,kBAA1B,CACA,OAAQC,kBAAR,KAAiC,8BAAjC,CAEA,MAAO,SAASC,CAAAA,aAAT,EAAyB,CAC5B,kBAAkBH,YAAY,EAA9B,CAAOI,OAAP,eAAOA,OAAP,CACA,iBAA2BH,WAAW,EAAtC,CAAOI,QAAP,cAAOA,QAAP,CAAiBC,MAAjB,cAAiBA,MAAjB,CACA,GAAMC,CAAAA,UAAU,CAAGH,OAAO,CAACP,QAAQ,CAACW,WAAV,CAA1B,CACA,cAAsCb,QAAQ,CAAC,EAAD,CAA9C,wCAAOc,WAAP,eAAoBC,cAApB,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,EAAD,CAAQ,CACtB,GAAIA,EAAE,GAAK,cAAP,EAAyBN,MAAM,GAAK,EAAxC,CAA4C,CACxC,MAAOD,CAAAA,QAAQ,GAAK,SAApB,CACH,CAFD,IAEO,CACH,MAAOE,CAAAA,UAAU,EAAIA,UAAU,GAAKK,EAApC,CACH,CACJ,CAND,CAQA,GAAMC,CAAAA,YAAY,CAAGnB,WAAW,CAAC,SAACoB,CAAD,CAAO,CACpCA,CAAC,CAACC,cAAF,GACA,GAAIN,WAAW,CAACO,IAAZ,GAAmBC,MAAnB,CAA4B,CAAhC,CAAmC,CAC/B,GAAMC,CAAAA,IAAI,CAAG,CACTC,KAAK,CAAE,IADE,CAETC,MAAM,CAAE,CACJd,MAAM,CAAEG,WADJ,CAFC,CAAb,CAOA,GAAI,CAACF,UAAL,CAAiB,CACbX,WAAW,CAACsB,IAAD,CAAX,CACH,CAED,GAAIX,UAAU,EAAIA,UAAU,GAAKT,UAAU,CAACuB,MAA5C,CAAoD,CAChDtB,YAAY,CAACmB,IAAD,CAAZ,CACH,CAED,GAAIX,UAAU,EAAIA,UAAU,GAAKT,UAAU,CAACwB,SAA5C,CAAuD,CACnDpB,kBAAkB,CAACgB,IAAD,CAAlB,CACH,CAEDR,cAAc,CAAC,EAAD,CAAd,CACH,CACJ,CAxB+B,CAwB7B,CAACH,UAAD,CAAaE,WAAb,CAxB6B,CAAhC,CA0BA,MAAO,CAACI,YAAY,CAAZA,YAAD,CAAeJ,WAAW,CAAXA,WAAf,CAA4BC,cAAc,CAAdA,cAA5B,CAA4CC,SAAS,CAATA,SAA5C,CAAP,CACH","sourcesContent":["import {useCallback, useState} from 'react'\nimport {allOrgMount} from '../../Models/org-model'\nimport {URL_KEYS, URL_VALUES} from '../../Constants'\nimport {allUserMount} from '../../Models/user-model'\nimport {useUrlParams} from '../app'\nimport {useLocation} from 'react-router-dom'\nimport {offeringsListMount} from '../../Models/offerings-model'\n\nexport function useHomeSearch() {\n    const {urlData} = useUrlParams()\n    const {pathname, search} = useLocation()\n    const searchType = urlData[URL_KEYS.SEARCH_TYPE]\n    const [searchValue, setSearchValue] = useState('')\n    \n    const getActive = (id) => {\n        if (id === 'organization' && search === '') {\n            return pathname === '/search'\n        } else {\n            return searchType && searchType === id\n        }\n    }\n    \n    const handleSubmit = useCallback((e) => {\n        e.preventDefault()\n        if (searchValue.trim().length > 0) {\n            const data = {\n                clear: true,\n                params: {\n                    search: searchValue\n                }\n            }\n            \n            if (!searchType) {\n                allOrgMount(data)\n            }\n            \n            if (searchType && searchType === URL_VALUES.PEOPLE) {\n                allUserMount(data)\n            }\n            \n            if (searchType && searchType === URL_VALUES.OFFERINGS) {\n                offeringsListMount(data)\n            }\n            \n            setSearchValue('')\n        }\n    }, [searchType, searchValue])\n    \n    return {handleSubmit, searchValue, setSearchValue, getActive}\n}"]},"metadata":{},"sourceType":"module"}