{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/organisms/unregistered.jsx\";\nimport React, { useEffect } from 'react';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { useAllOrdersList } from '../../../Hooks/order';\nimport { useStore } from 'effector-react';\nimport { $appModel, saveURLMount } from '../../../Models/app';\nimport { useHistory } from 'react-router-dom';\nimport { $orderModel } from '../../../Models/order-model';\nimport { Col, Row } from 'antd';\nimport { OrderCardSkeleton, OrderCartCard } from '../../../Components/Cards';\nconst skeleton = generateSkeleton(10);\nexport const Unregistered = () => {\n  useAllOrdersList();\n  const {\n    $app: {\n      saveURL\n    }\n  } = useStore($appModel);\n  const {\n    push,\n    location: {\n      pathname\n    }\n  } = useHistory();\n  const {\n    $orderCartList: {\n      data,\n      forceLoading\n    }\n  } = useStore($orderModel);\n\n  const handlePushToItem = item => {\n    if (item.seller_type === 'user') {\n      saveURLMount(pathname) && push(`/records/unregistered/@${item.seller.slug_name}`);\n    } else {\n      saveURLMount(pathname) && push(`/records/unregistered/${item.seller.slug_name}`);\n    }\n  };\n\n  useEffect(() => {\n    if (saveURL === '/records/unregistered') {\n      saveURLMount('');\n    }\n  }, [pathname, saveURL]);\n  return /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    style: {\n      paddingBottom: 65\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, forceLoading === 2 ? data && data.length > 0 && data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    onClick: () => handlePushToItem(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(OrderCartCard, {\n    cost: item.total.cost,\n    name: item.seller.name,\n    count: item.total.count,\n    imgUrl: item.seller.logo,\n    category: item.seller.category.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 37\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(OrderCardSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 37\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/organisms/unregistered.jsx"],"names":["React","useEffect","generateSkeleton","useAllOrdersList","useStore","$appModel","saveURLMount","useHistory","$orderModel","Col","Row","OrderCardSkeleton","OrderCartCard","skeleton","Unregistered","$app","saveURL","push","location","pathname","$orderCartList","data","forceLoading","handlePushToItem","item","seller_type","seller","slug_name","paddingBottom","length","map","idx","total","cost","name","count","logo","category"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {useAllOrdersList} from '../../../Hooks/order'\nimport {useStore} from 'effector-react'\nimport {$appModel, saveURLMount} from '../../../Models/app'\nimport {useHistory} from 'react-router-dom'\nimport {$orderModel} from '../../../Models/order-model'\nimport {Col, Row} from 'antd'\nimport {OrderCardSkeleton, OrderCartCard} from '../../../Components/Cards'\n\n\nconst skeleton = generateSkeleton(10)\nexport const Unregistered = () => {\n    useAllOrdersList()\n    const {$app: {saveURL}} = useStore($appModel)\n    const {push, location: {pathname}} = useHistory()\n    const {$orderCartList: {data, forceLoading}} = useStore($orderModel)\n    \n    const handlePushToItem = (item) => {\n        if (item.seller_type === 'user') {\n            saveURLMount(pathname) && push(`/records/unregistered/@${item.seller.slug_name}`)\n        } else {\n            saveURLMount(pathname) && push(`/records/unregistered/${item.seller.slug_name}`)\n        }\n    }\n    \n    useEffect(() => {\n        if (saveURL === '/records/unregistered') {\n            saveURLMount('')\n        }\n    }, [pathname, saveURL])\n    \n    return (\n        <Row gutter={[0, 12]} style={{paddingBottom: 65}}>\n            {\n                forceLoading === 2\n                    ? (\n                        data && data.length > 0 && data.map((item, idx) => (\n                                <Col\n                                    span={24}\n                                    key={`${idx + 1}`}\n                                    onClick={() => handlePushToItem(item)}\n                                >\n                                    \n                                    <OrderCartCard\n                                        cost={item.total.cost}\n                                        name={item.seller.name}\n                                        count={item.total.count}\n                                        imgUrl={item.seller.logo}\n                                        category={item.seller.category.name}\n                                    />\n                                </Col>\n                            )\n                        ))\n                    : <>\n                        {\n                            skeleton.map((item, idx) => (\n                                <Col\n                                    span={24}\n                                    key={`${idx + 1}`}\n                                >\n                                    <OrderCardSkeleton/>\n                                </Col>\n                            ))\n                        }\n                    </>\n                \n            }\n        </Row>\n    )\n}"]},"metadata":{},"sourceType":"module"}