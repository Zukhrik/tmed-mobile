{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/OfferingPage/organisms/offering-description.jsx\";\nimport React, { useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { Description } from '../atoms';\nimport { useTranslation } from 'react-i18next';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { SkeletonUI } from '../../../UIComponents/GlobalStyles';\nimport { truncateString } from '../../../utils/stringUtils';\nexport const OfferingDescription = ({\n  description,\n  loading\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const [truncate, setTruncate] = useState(false);\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    level: 5,\n    color: \"var(--grey-dwed)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, `${t('description')}:`)), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 29\n    }\n  }, description.length > 150 ? !truncate ? /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 47\n    }\n  }, truncateString(description, 150), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setTruncate(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 49\n    }\n  }, t('more'))) : /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 47\n    }\n  }, description, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setTruncate(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 49\n    }\n  }, t('hide'))) : /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 43\n    }\n  }, description)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SkeletonUI, {\n    variant: \"text\",\n    width: \"100%\",\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(SkeletonUI, {\n    variant: \"text\",\n    width: \"100%\",\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(SkeletonUI, {\n    variant: \"text\",\n    width: \"100%\",\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(SkeletonUI, {\n    variant: \"text\",\n    width: \"100%\",\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(SkeletonUI, {\n    variant: \"text\",\n    width: \"100%\",\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/OfferingPage/organisms/offering-description.jsx"],"names":["React","useState","Col","Row","Description","useTranslation","Text","SkeletonUI","truncateString","OfferingDescription","description","loading","t","truncate","setTruncate","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Col, Row} from 'antd'\nimport {Description} from '../atoms'\nimport {useTranslation} from 'react-i18next'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {SkeletonUI} from '../../../UIComponents/GlobalStyles'\nimport {truncateString} from '../../../utils/stringUtils'\n\nexport const OfferingDescription = ({description, loading}) => {\n    const {t} = useTranslation()\n    const [truncate, setTruncate] = useState(false)\n    \n    \n    return (\n        <Row>\n            <Col span={24}>\n                <Text level={5} color='var(--grey-dwed)'>{`${t('description')}:`}</Text>\n            </Col>\n            <Col span={24}>\n                {\n                    !loading\n                        ? (\n                            <Description>\n                                {\n                                    description.length > 150\n                                        ? !truncate\n                                            ? <Text>\n                                                {truncateString(description, 150)}\n                                                <span onClick={() => setTruncate(true)}>{t('more')}</span>\n                                            </Text>\n                                            : <Text>\n                                                {description}\n                                                <span onClick={() => setTruncate(false)}>{t('hide')}</span>\n                                            </Text>\n                                        : <Text>\n                                            {description}\n                                        </Text>\n                                }\n                            </Description>\n                        )\n                        : (\n                            <>\n                                <SkeletonUI variant='text' width='100%' height={12}/>\n                                <SkeletonUI variant='text' width='100%' height={12}/>\n                                <SkeletonUI variant='text' width='100%' height={12}/>\n                                <SkeletonUI variant='text' width='100%' height={12}/>\n                                <SkeletonUI variant='text' width='100%' height={12}/>\n                            </>\n                        )\n                }\n            </Col>\n        </Row>\n    )\n}"]},"metadata":{},"sourceType":"module"}