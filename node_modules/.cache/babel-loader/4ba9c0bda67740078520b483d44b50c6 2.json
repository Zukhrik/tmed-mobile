{"ast":null,"code":"import React from'react';import{Col,Row}from'antd';import{postControlData}from'../../../data';import{Text}from'../../../UIComponents/Typography/Text';import{CardControlWrapper,IconItemWrapper,PostIndicatorItem}from'../style';import{Container,IconBox,SkeletonUI}from'../../../UIComponents/GlobalStyles';import{ShortCardSkeleton}from'../../Cards';export var PostSkeleton=function PostSkeleton(){return/*#__PURE__*/React.createElement(CardControlWrapper,null,/*#__PURE__*/React.createElement(Row,{gutter:[0,12]},/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(ShortCardSkeleton,{height:40.84,size:40}))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(SkeletonUI,{variant:\"text\",width:\"100%\",height:12}),/*#__PURE__*/React.createElement(SkeletonUI,{variant:\"text\",width:\"100%\",height:12}),/*#__PURE__*/React.createElement(SkeletonUI,{variant:\"text\",width:\"100%\",height:12}))),/*#__PURE__*/React.createElement(Col,{span:24,style:{display:'flex',flexDirection:'column'}},/*#__PURE__*/React.createElement(SkeletonUI,{variant:\"rect\",width:\"100%\",height:350}),/*#__PURE__*/React.createElement(\"div\",{className:\"post-indicator-wrapper\"},postControlData.map(function(item){var Icon=item.icon();return/*#__PURE__*/React.createElement(PostIndicatorItem,{key:item.icon},/*#__PURE__*/React.createElement(Icon,null),/*#__PURE__*/React.createElement(Text,null,item.title));})),/*#__PURE__*/React.createElement(Row,{justify:\"space-around\"},postControlData.map(function(item){var Icon=item.icon();return/*#__PURE__*/React.createElement(Col,{key:item.icon},/*#__PURE__*/React.createElement(IconItemWrapper,null,/*#__PURE__*/React.createElement(IconBox,{color:\"var(--grey-dwed)\"},/*#__PURE__*/React.createElement(Icon,null),/*#__PURE__*/React.createElement(Text,null,item.title))));})))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Post/PostSkeleton/index.jsx"],"names":["React","Col","Row","postControlData","Text","CardControlWrapper","IconItemWrapper","PostIndicatorItem","Container","IconBox","SkeletonUI","ShortCardSkeleton","PostSkeleton","display","flexDirection","map","item","Icon","icon","title"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,GAAR,CAAaC,GAAb,KAAuB,MAAvB,CACA,OAAQC,eAAR,KAA8B,eAA9B,CACA,OAAQC,IAAR,KAAmB,uCAAnB,CACA,OAAQC,kBAAR,CAA4BC,eAA5B,CAA6CC,iBAA7C,KAAqE,UAArE,CACA,OAAQC,SAAR,CAAmBC,OAAnB,CAA4BC,UAA5B,KAA6C,oCAA7C,CACA,OAAQC,iBAAR,KAAgC,aAAhC,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAE9B,mBACI,oBAAC,kBAAD,mBACI,oBAAC,GAAD,EAAK,MAAM,CAAE,CAAC,CAAD,CAAI,EAAJ,CAAb,eACI,oBAAC,GAAD,EAAK,IAAI,CAAE,EAAX,eACI,oBAAC,SAAD,mBACI,oBAAC,iBAAD,EACI,MAAM,CAAE,KADZ,CAEI,IAAI,CAAE,EAFV,EADJ,CADJ,CADJ,cASI,oBAAC,GAAD,EAAK,IAAI,CAAE,EAAX,eACI,oBAAC,SAAD,mBACI,oBAAC,UAAD,EAAY,OAAO,CAAC,MAApB,CAA2B,KAAK,CAAC,MAAjC,CAAwC,MAAM,CAAE,EAAhD,EADJ,cAEI,oBAAC,UAAD,EAAY,OAAO,CAAC,MAApB,CAA2B,KAAK,CAAC,MAAjC,CAAwC,MAAM,CAAE,EAAhD,EAFJ,cAGI,oBAAC,UAAD,EAAY,OAAO,CAAC,MAApB,CAA2B,KAAK,CAAC,MAAjC,CAAwC,MAAM,CAAE,EAAhD,EAHJ,CADJ,CATJ,cAgBI,oBAAC,GAAD,EAAK,IAAI,CAAE,EAAX,CAAe,KAAK,CAAE,CAACC,OAAO,CAAE,MAAV,CAAkBC,aAAa,CAAE,QAAjC,CAAtB,eACI,oBAAC,UAAD,EAAY,OAAO,CAAC,MAApB,CAA2B,KAAK,CAAC,MAAjC,CAAwC,MAAM,CAAE,GAAhD,EADJ,cAEI,2BAAK,SAAS,CAAC,wBAAf,EAEQX,eAAe,CAACY,GAAhB,CAAoB,SAAAC,IAAI,CAAI,CACxB,GAAMC,CAAAA,IAAI,CAAGD,IAAI,CAACE,IAAL,EAAb,CACA,mBACI,oBAAC,iBAAD,EAAmB,GAAG,CAAEF,IAAI,CAACE,IAA7B,eACI,oBAAC,IAAD,MADJ,cAEI,oBAAC,IAAD,MACKF,IAAI,CAACG,KADV,CAFJ,CADJ,CAQH,CAVD,CAFR,CAFJ,cAiBI,oBAAC,GAAD,EAAK,OAAO,CAAC,cAAb,EAEQhB,eAAe,CAACY,GAAhB,CAAoB,SAACC,IAAD,CAAU,CAC1B,GAAMC,CAAAA,IAAI,CAAGD,IAAI,CAACE,IAAL,EAAb,CACA,mBACI,oBAAC,GAAD,EAAK,GAAG,CAAEF,IAAI,CAACE,IAAf,eACI,oBAAC,eAAD,mBACI,oBAAC,OAAD,EAAS,KAAK,CAAC,kBAAf,eACI,oBAAC,IAAD,MADJ,cAEI,oBAAC,IAAD,MACKF,IAAI,CAACG,KADV,CAFJ,CADJ,CADJ,CADJ,CAYH,CAdD,CAFR,CAjBJ,CAhBJ,CADJ,CADJ,CA0DH,CA5DM","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {postControlData} from '../../../data'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {CardControlWrapper, IconItemWrapper, PostIndicatorItem} from '../style'\nimport {Container, IconBox, SkeletonUI} from '../../../UIComponents/GlobalStyles'\nimport {ShortCardSkeleton} from '../../Cards'\n\nexport const PostSkeleton = () => {\n    \n    return (\n        <CardControlWrapper>\n            <Row gutter={[0, 12]}>\n                <Col span={24}>\n                    <Container>\n                        <ShortCardSkeleton\n                            height={40.84}\n                            size={40}\n                        />\n                    </Container>\n                </Col>\n                <Col span={24}>\n                    <Container>\n                        <SkeletonUI variant='text' width='100%' height={12}/>\n                        <SkeletonUI variant='text' width='100%' height={12}/>\n                        <SkeletonUI variant='text' width='100%' height={12}/>\n                    </Container>\n                </Col>\n                <Col span={24} style={{display: 'flex', flexDirection: 'column'}}>\n                    <SkeletonUI variant='rect' width='100%' height={350}/>\n                    <div className='post-indicator-wrapper'>\n                        {\n                            postControlData.map(item => {\n                                const Icon = item.icon()\n                                return (\n                                    <PostIndicatorItem key={item.icon}>\n                                        <Icon/>\n                                        <Text>\n                                            {item.title}\n                                        </Text>\n                                    </PostIndicatorItem>\n                                )\n                            })\n                        }\n                    </div>\n                    <Row justify='space-around'>\n                        {\n                            postControlData.map((item) => {\n                                const Icon = item.icon()\n                                return (\n                                    <Col key={item.icon}>\n                                        <IconItemWrapper>\n                                            <IconBox color='var(--grey-dwed)'>\n                                                <Icon/>\n                                                <Text>\n                                                    {item.title}\n                                                </Text>\n                                            </IconBox>\n                                        </IconItemWrapper>\n                                    </Col>\n                                )\n                            })\n                        }\n                    </Row>\n                </Col>\n            </Row>\n        </CardControlWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}