{"ast":null,"code":"import React from'react';import{Col,Row}from'antd';import{useStore}from'effector-react';import{degreesData}from'../../../../data';import{useTranslation}from'react-i18next';import{$appModel}from'../../../../Models/app';import{OvalBgSvg}from'../../../../Icons/OvalBg';import{Avatar}from'../../../../UIComponents/Avatar';import{useGenerateRating}from'../../../../Hooks/app';import defaultImage from'../../../../Assets/cards/9.png';import{IconBox}from'../../../../UIComponents/GlobalStyles';import{Text}from'../../../../UIComponents/Typography/Text';import{$accountModel}from'../../../../Models/account-model';import{Title}from'../../../../UIComponents/Typography/Title';import{AvatarContainerWrapper,BackgroundImage,OrganizationCardWrapper,OrganizationInfoWrapper,SubscribeButton}from'../atoms';export var OrganizationCard=function OrganizationCard(_ref){var backgroundImage=_ref.backgroundImage,imgUrl=_ref.imgUrl,name=_ref.name,category=_ref.category,aesthetics=_ref.aesthetics,ethics=_ref.ethics,professional=_ref.professional,subscribed=_ref.subscribed,subscribe=_ref.subscribe,slug_name=_ref.slug_name,containerPath=_ref.containerPath;var _useGenerateRating=useGenerateRating(aesthetics,ethics,professional),generateRating=_useGenerateRating.generateRating;var _useStore=useStore($accountModel),currentProfile=_useStore.$profiles.currentProfile;var _useStore2=useStore($appModel),token=_useStore2.$app.token;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/React.createElement(OrganizationCardWrapper,{onClick:containerPath},currentProfile&&currentProfile.slug_name!==slug_name&&token&&subscribed&&/*#__PURE__*/React.createElement(SubscribeButton,null,!subscribed?/*#__PURE__*/React.createElement(Text,{onClick:function onClick(){return subscribe({slug_name:slug_name,name:name});}},t('subscribe')):/*#__PURE__*/React.createElement(Text,{style:{color:'#000'}},t('subscribed'))),/*#__PURE__*/React.createElement(BackgroundImage,{src:backgroundImage?backgroundImage:defaultImage,alt:backgroundImage}),/*#__PURE__*/React.createElement(OrganizationInfoWrapper,null,/*#__PURE__*/React.createElement(AvatarContainerWrapper,null,/*#__PURE__*/React.createElement(OvalBgSvg,null),/*#__PURE__*/React.createElement(Avatar,{size:32,shape:\"circle\",imgUrl:imgUrl})),/*#__PURE__*/React.createElement(Row,{gutter:[4,0],align:\"middle\",justify:\"end\"},degreesData.map(function(item,idx){var Icon=item.icon;return/*#__PURE__*/React.createElement(Col,{key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(IconBox,{color:item.color},/*#__PURE__*/React.createElement(Icon,null),generateRating(item.id)));})),/*#__PURE__*/React.createElement(Title,null,name),/*#__PURE__*/React.createElement(Text,{color:\"var(--grey-dwed)\"},category)));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Cards/OrganizationCard/molecules/organization-card.jsx"],"names":["React","Col","Row","useStore","degreesData","useTranslation","$appModel","OvalBgSvg","Avatar","useGenerateRating","defaultImage","IconBox","Text","$accountModel","Title","AvatarContainerWrapper","BackgroundImage","OrganizationCardWrapper","OrganizationInfoWrapper","SubscribeButton","OrganizationCard","backgroundImage","imgUrl","name","category","aesthetics","ethics","professional","subscribed","subscribe","slug_name","containerPath","generateRating","currentProfile","$profiles","token","$app","t","color","map","item","idx","Icon","icon","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {degreesData} from '../../../../data'\nimport {useTranslation} from 'react-i18next'\nimport {$appModel} from '../../../../Models/app'\nimport {OvalBgSvg} from '../../../../Icons/OvalBg'\nimport {Avatar} from '../../../../UIComponents/Avatar'\nimport {useGenerateRating} from '../../../../Hooks/app'\nimport defaultImage from '../../../../Assets/cards/9.png'\nimport {IconBox} from '../../../../UIComponents/GlobalStyles'\nimport {Text} from '../../../../UIComponents/Typography/Text'\nimport {$accountModel} from '../../../../Models/account-model'\nimport {Title} from '../../../../UIComponents/Typography/Title'\nimport {\n    AvatarContainerWrapper,\n    BackgroundImage,\n    OrganizationCardWrapper,\n    OrganizationInfoWrapper,\n    SubscribeButton\n} from '../atoms'\n\nexport const OrganizationCard = (\n    {\n        backgroundImage,\n        imgUrl,\n        name,\n        category,\n        aesthetics,\n        ethics,\n        professional,\n        subscribed,\n        subscribe,\n        slug_name,\n        containerPath\n    }\n) => {\n    const {generateRating} = useGenerateRating(aesthetics, ethics, professional)\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    const {$app: {token}} = useStore($appModel)\n    const {t} = useTranslation()\n    \n    return (\n        <OrganizationCardWrapper onClick={containerPath}>\n            {\n                currentProfile && currentProfile.slug_name !== slug_name && token && subscribed &&\n                <SubscribeButton>\n                    {\n                        !subscribed\n                            ? <Text onClick={() => subscribe({slug_name, name})}>{t('subscribe')}</Text>\n                            : <Text style={{color: '#000'}}>{t('subscribed')}</Text>\n                    }\n                </SubscribeButton>\n            }\n            <BackgroundImage\n                src={backgroundImage ? backgroundImage : defaultImage}\n                alt={backgroundImage}\n            />\n            <OrganizationInfoWrapper>\n                <AvatarContainerWrapper>\n                    <OvalBgSvg/>\n                    <Avatar\n                        size={32}\n                        shape='circle'\n                        imgUrl={imgUrl}\n                    />\n                </AvatarContainerWrapper>\n                <Row\n                    gutter={[4, 0]}\n                    align='middle'\n                    justify='end'\n                >\n                    {\n                        degreesData.map((item, idx) => {\n                            const Icon = item.icon\n                            return (\n                                <Col\n                                    key={`${idx + 1}`}\n                                >\n                                    <IconBox color={item.color}>\n                                        <Icon/>\n                                        {generateRating(item.id)}\n                                    </IconBox>\n                                </Col>\n                            )\n                        })\n                    }\n                </Row>\n                <Title>{name}</Title>\n                <Text color='var(--grey-dwed)'>{category}</Text>\n            </OrganizationInfoWrapper>\n        </OrganizationCardWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}