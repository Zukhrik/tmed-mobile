{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Settings/organisms/currency-items.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { $appModel } from '../../../Models/app';\nimport account from '../../../Service/account';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { accountCardMount } from '../../../Models/payment-model';\nexport const CurrencyItems = ({\n  setCurrency,\n  setOpenOverlay\n}) => {\n  const {\n    $currenciesList: {\n      data\n    }\n  } = useStore($appModel);\n\n  const renderCurrencies = item => {\n    if (item.code === 'uzs') {\n      return 'UZS - Uzbek sum';\n    } else if (item.code === 'usd') {\n      return 'USD - United States dollar';\n    } else if (item.code === 'rub') {\n      return 'RUB - Russian ruble';\n    } else if (item.code === 'eur') {\n      return 'EUR - The Euro';\n    }\n  };\n\n  const handleClick = item => {\n    setCurrency(item.code);\n    const params = {\n      data: {\n        currency: {\n          name: item.name,\n          code: item.code\n        },\n        currency_id: item.id\n      }\n    };\n    account.updateAccount(params).then(res => {\n      if (res) {\n        setOpenOverlay(false);\n        accountCardMount();\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, data === null || data === void 0 ? void 0 : data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    onClick: () => handleClick(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    level: 4,\n    alignType: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, renderCurrencies(item)))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Settings/organisms/currency-items.jsx"],"names":["React","Col","Row","useStore","$appModel","account","Text","accountCardMount","CurrencyItems","setCurrency","setOpenOverlay","$currenciesList","data","renderCurrencies","item","code","handleClick","params","currency","name","currency_id","id","updateAccount","then","res","map","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAAQC,IAAR,QAAmB,uCAAnB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,KAAmC;AAC5D,QAAM;AAACC,IAAAA,eAAe,EAAE;AAACC,MAAAA;AAAD;AAAlB,MAA4BT,QAAQ,CAACC,SAAD,CAA1C;;AAGA,QAAMS,gBAAgB,GAAIC,IAAD,IAAU;AAC/B,QAAIA,IAAI,CAACC,IAAL,KAAc,KAAlB,EAAyB;AACrB,aAAO,iBAAP;AACH,KAFD,MAEO,IAAID,IAAI,CAACC,IAAL,KAAc,KAAlB,EAAyB;AAC5B,aAAO,4BAAP;AACH,KAFM,MAEA,IAAID,IAAI,CAACC,IAAL,KAAc,KAAlB,EAAyB;AAC5B,aAAO,qBAAP;AACH,KAFM,MAEA,IAAID,IAAI,CAACC,IAAL,KAAc,KAAlB,EAAyB;AAC5B,aAAO,gBAAP;AACH;AACJ,GAVD;;AAYA,QAAMC,WAAW,GAAIF,IAAD,IAAU;AAC1BL,IAAAA,WAAW,CAACK,IAAI,CAACC,IAAN,CAAX;AACA,UAAME,MAAM,GAAG;AACXL,MAAAA,IAAI,EAAE;AACFM,QAAAA,QAAQ,EAAE;AACNC,UAAAA,IAAI,EAAEL,IAAI,CAACK,IADL;AAENJ,UAAAA,IAAI,EAAED,IAAI,CAACC;AAFL,SADR;AAKFK,QAAAA,WAAW,EAAEN,IAAI,CAACO;AALhB;AADK,KAAf;AASAhB,IAAAA,OAAO,CAACiB,aAAR,CAAsBL,MAAtB,EACKM,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAJ,EAAS;AACLd,QAAAA,cAAc,CAAC,KAAD,CAAd;AACAH,QAAAA,gBAAgB;AACnB;AACJ,KANL;AAOH,GAlBD;;AAoBA,sBACI,oBAAC,GAAD;AACI,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIQK,IAJR,aAIQA,IAJR,uBAIQA,IAAI,CAAEa,GAAN,CAAU,CAACX,IAAD,EAAOY,GAAP,kBACN,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE,EADV;AAEI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAFpB;AAGI,IAAA,OAAO,EAAE,MAAMV,WAAW,CAACF,IAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE,CADX;AAEI,IAAA,SAAS,EAAC,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKD,gBAAgB,CAACC,IAAD,CAJrB,CALJ,CADJ,CAJR,CADJ;AAsBH,CA1DM","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {$appModel} from '../../../Models/app'\nimport account from '../../../Service/account'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {accountCardMount} from '../../../Models/payment-model'\n\nexport const CurrencyItems = ({setCurrency, setOpenOverlay}) => {\n    const {$currenciesList: {data}} = useStore($appModel)\n    \n    \n    const renderCurrencies = (item) => {\n        if (item.code === 'uzs') {\n            return 'UZS - Uzbek sum'\n        } else if (item.code === 'usd') {\n            return 'USD - United States dollar'\n        } else if (item.code === 'rub') {\n            return 'RUB - Russian ruble'\n        } else if (item.code === 'eur') {\n            return 'EUR - The Euro'\n        }\n    }\n    \n    const handleClick = (item) => {\n        setCurrency(item.code)\n        const params = {\n            data: {\n                currency: {\n                    name: item.name,\n                    code: item.code\n                },\n                currency_id: item.id\n            }\n        }\n        account.updateAccount(params)\n            .then(res => {\n                if (res) {\n                    setOpenOverlay(false)\n                    accountCardMount()\n                }\n            })\n    }\n    \n    return (\n        <Row\n            gutter={[0, 24]}\n        >\n            {\n                data?.map((item, idx) => (\n                    <Col\n                        span={24}\n                        key={`${idx + 1}`}\n                        onClick={() => handleClick(item)}\n                    >\n                        <Text\n                            level={4}\n                            alignType='start'\n                        >\n                            {renderCurrencies(item)}\n                        </Text>\n                    </Col>\n                ))\n            }\n        </Row>\n    )\n}"]},"metadata":{},"sourceType":"module"}