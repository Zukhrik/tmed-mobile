{"ast":null,"code":"import{useEffect}from'react';import{useStore}from'effector-react';import{URL_KEYS}from'../../Constants';import{useHistory,useParams}from'react-router-dom';import{changeSpecPanel,saveURLMount}from'../../Models/app';import{$orderModel,resetOrderCartList,resetOrgOrderCart}from'../../Models/order-model';export function usePushToCart(){var _useParams=useParams(),organization=_useParams.organization;var _useHistory=useHistory(),push=_useHistory.push,pathname=_useHistory.location.pathname;var _useStore=useStore($orderModel),_useStore$$orgOrderCa=_useStore.$orgOrderCartList,data=_useStore$$orgOrderCa.data,result=_useStore$$orgOrderCa.result;useEffect(function(){if(pathname===\"/\".concat(organization,\"/offerings\")){saveURLMount('');}},[organization,pathname]);var handlePush=function handlePush(){var _result$organization;if(((_result$organization=result[organization])===null||_result$organization===void 0?void 0:_result$organization.count)>0){var _data$organization$,_data$organization$$r;resetOrgOrderCart();resetOrderCartList();changeSpecPanel(false);saveURLMount(pathname);var specId=(_data$organization$=data[organization][0])===null||_data$organization$===void 0?void 0:(_data$organization$$r=_data$organization$.responsible)===null||_data$organization$$r===void 0?void 0:_data$organization$$r.id;push({pathname:\"/records/unregistered/\".concat(organization),search:\"?\".concat(URL_KEYS.SPECIALIST_ID,\":\").concat(specId)});}else{resetOrgOrderCart();resetOrderCartList();changeSpecPanel(false);saveURLMount(pathname);push('/records/unregistered');}};return{handlePush:handlePush,result:result};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/order/use-push-to-cart.js"],"names":["useEffect","useStore","URL_KEYS","useHistory","useParams","changeSpecPanel","saveURLMount","$orderModel","resetOrderCartList","resetOrgOrderCart","usePushToCart","organization","push","pathname","location","$orgOrderCartList","data","result","handlePush","count","specId","responsible","id","search","SPECIALIST_ID"],"mappings":"AAAA,OAAQA,SAAR,KAAwB,OAAxB,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CACA,OAAQC,QAAR,KAAuB,iBAAvB,CACA,OAAQC,UAAR,CAAoBC,SAApB,KAAoC,kBAApC,CACA,OAAQC,eAAR,CAAyBC,YAAzB,KAA4C,kBAA5C,CACA,OAAQC,WAAR,CAAqBC,kBAArB,CAAyCC,iBAAzC,KAAiE,0BAAjE,CAGA,MAAO,SAASC,CAAAA,aAAT,EAAyB,CAC5B,eAAuBN,SAAS,EAAhC,CAAOO,YAAP,YAAOA,YAAP,CACA,gBAAqCR,UAAU,EAA/C,CAAOS,IAAP,aAAOA,IAAP,CAAwBC,QAAxB,aAAaC,QAAb,CAAwBD,QAAxB,CACA,cAA4CZ,QAAQ,CAACM,WAAD,CAApD,iCAAOQ,iBAAP,CAA2BC,IAA3B,uBAA2BA,IAA3B,CAAiCC,MAAjC,uBAAiCA,MAAjC,CAEAjB,SAAS,CAAC,UAAM,CACZ,GAAIa,QAAQ,cAASF,YAAT,cAAZ,CAA+C,CAC3CL,YAAY,CAAC,EAAD,CAAZ,CACH,CACJ,CAJQ,CAIN,CAACK,YAAD,CAAeE,QAAf,CAJM,CAAT,CAMA,GAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,0BACrB,GAAI,uBAAAD,MAAM,CAACN,YAAD,CAAN,oEAAsBQ,KAAtB,EAA8B,CAAlC,CAAqC,+CACjCV,iBAAiB,GACjBD,kBAAkB,GAClBH,eAAe,CAAC,KAAD,CAAf,CACAC,YAAY,CAACO,QAAD,CAAZ,CACA,GAAMO,CAAAA,MAAM,sBAAGJ,IAAI,CAACL,YAAD,CAAJ,CAAmB,CAAnB,CAAH,qEAAG,oBAAuBU,WAA1B,gDAAG,sBAAoCC,EAAnD,CACAV,IAAI,CAAC,CACDC,QAAQ,iCAA2BF,YAA3B,CADP,CAEDY,MAAM,YAAMrB,QAAQ,CAACsB,aAAf,aAAgCJ,MAAhC,CAFL,CAAD,CAAJ,CAIH,CAVD,IAUO,CACHX,iBAAiB,GACjBD,kBAAkB,GAClBH,eAAe,CAAC,KAAD,CAAf,CACAC,YAAY,CAACO,QAAD,CAAZ,CACAD,IAAI,CAAC,uBAAD,CAAJ,CACH,CACJ,CAlBD,CAoBA,MAAO,CAACM,UAAU,CAAVA,UAAD,CAAaD,MAAM,CAANA,MAAb,CAAP,CACH","sourcesContent":["import {useEffect} from 'react'\nimport {useStore} from 'effector-react'\nimport {URL_KEYS} from '../../Constants'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {changeSpecPanel, saveURLMount} from '../../Models/app'\nimport {$orderModel, resetOrderCartList, resetOrgOrderCart} from '../../Models/order-model'\n\n\nexport function usePushToCart() {\n    const {organization} = useParams()\n    const {push, location: {pathname}} = useHistory()\n    const {$orgOrderCartList: {data, result}} = useStore($orderModel)\n    \n    useEffect(() => {\n        if (pathname === `/${organization}/offerings`) {\n            saveURLMount('')\n        }\n    }, [organization, pathname])\n    \n    const handlePush = () => {\n        if (result[organization]?.count > 0) {\n            resetOrgOrderCart()\n            resetOrderCartList()\n            changeSpecPanel(false)\n            saveURLMount(pathname)\n            const specId = data[organization][0]?.responsible?.id\n            push({\n                pathname: `/records/unregistered/${organization}`,\n                search: `?${URL_KEYS.SPECIALIST_ID}:${specId}`\n            })\n        } else {\n            resetOrgOrderCart()\n            resetOrderCartList()\n            changeSpecPanel(false)\n            saveURLMount(pathname)\n            push('/records/unregistered')\n        }\n    }\n    \n    return {handlePush, result}\n}"]},"metadata":{},"sourceType":"module"}