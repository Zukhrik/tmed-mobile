{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/organisms/followings-list.jsx\";\nimport React, { useState } from 'react';\nimport { FollsListWrapper } from '../atoms';\nimport { useStore } from 'effector-react';\nimport { $userModel, userSubsMyMount } from '../../../Models/user-model';\nimport { Col, Row } from 'antd';\nimport { ShortCard, ShortCardSkeleton } from '../../../Components/Cards';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { AccountSearchInput } from '../molecules';\nimport { useParams } from 'react-router-dom';\nimport { Button } from '../../../UIComponents/Button';\nimport { $accountModel } from '../../../Models/account-model';\nimport { useTranslation } from 'react-i18next';\nimport { useUnfollowFollsUser } from '../../../Hooks/user/use-unfollow-folls-user';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nconst initialParams = {\n  limit: 5,\n  offset: 0\n};\nconst skeleton = generateSkeleton(5);\nexport const FollowingsList = ({\n  loadMore\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    username\n  } = useParams();\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  const {\n    handleUnfollow\n  } = useUnfollowFollsUser('followings');\n  const {\n    $userSubsMy: {\n      data,\n      result,\n      loading,\n      forceLoading\n    }\n  } = useStore($userModel);\n  const [search, setSearch] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (search.trim().length > 2) {\n      const data = {\n        clear: true,\n        username: username,\n        params: { ...initialParams,\n          search: search\n        }\n      };\n      userSubsMyMount(data);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(FollsListWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    next: loadMore,\n    dataLength: (result === null || result === void 0 ? void 0 : result.nextOffset) || 20,\n    hasMore: !loading && !!(result === null || result === void 0 ? void 0 : result.next),\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    style: {\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AccountSearchInput, {\n    search: search,\n    setSearch: setSearch,\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  })), forceLoading === 2 ? /*#__PURE__*/React.createElement(React.Fragment, null, data && data.map((item, idx) => {\n    var _item$to_user, _item$to_org, _item$to_user2, _item$to_org2, _item$to_user3, _item$to_org3, _item$to_user4, _item$to_user4$subs, _item$to_org4, _item$to_org4$subs;\n\n    return /*#__PURE__*/React.createElement(Col, {\n      span: 24,\n      key: `${idx + 1}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      justify: \"space-between\",\n      align: \"middle\",\n      wrap: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      flex: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ShortCard, {\n      imgSize: 48,\n      imgUrl: !item.to_org ? (_item$to_user = item.to_user) === null || _item$to_user === void 0 ? void 0 : _item$to_user.avatar : (_item$to_org = item.to_org) === null || _item$to_org === void 0 ? void 0 : _item$to_org.logo,\n      name: !item.to_org ? (_item$to_user2 = item.to_user) === null || _item$to_user2 === void 0 ? void 0 : _item$to_user2.full_name : (_item$to_org2 = item.to_org) === null || _item$to_org2 === void 0 ? void 0 : _item$to_org2.name,\n      text: !item.to_org ? (_item$to_user3 = item.to_user) === null || _item$to_user3 === void 0 ? void 0 : _item$to_user3.main_cat.name : (_item$to_org3 = item.to_org) === null || _item$to_org3 === void 0 ? void 0 : _item$to_org3.category.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 53\n      }\n    })), !!currentProfile && currentProfile.slug_name === username && /*#__PURE__*/React.createElement(Col, {\n      onClick: () => handleUnfollow(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 61\n      }\n    }, !item.to_org ? ((_item$to_user4 = item.to_user) === null || _item$to_user4 === void 0 ? void 0 : (_item$to_user4$subs = _item$to_user4.subs) === null || _item$to_user4$subs === void 0 ? void 0 : _item$to_user4$subs.subscribed) ? t('unfollow') : t('follow') : ((_item$to_org4 = item.to_org) === null || _item$to_org4 === void 0 ? void 0 : (_item$to_org4$subs = _item$to_org4.subs) === null || _item$to_org4$subs === void 0 ? void 0 : _item$to_org4$subs.subscribed) ? t('unfollow') : t('follow')))));\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(ShortCardSkeleton, {\n    size: 48,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 45\n    }\n  })))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/organisms/followings-list.jsx"],"names":["React","useState","FollsListWrapper","useStore","$userModel","userSubsMyMount","Col","Row","ShortCard","ShortCardSkeleton","InfiniteScroll","AccountSearchInput","useParams","Button","$accountModel","useTranslation","useUnfollowFollsUser","generateSkeleton","initialParams","limit","offset","skeleton","FollowingsList","loadMore","t","username","$profiles","currentProfile","handleUnfollow","$userSubsMy","data","result","loading","forceLoading","search","setSearch","handleSubmit","e","preventDefault","trim","length","clear","params","nextOffset","next","overflow","map","item","idx","to_org","to_user","avatar","logo","full_name","name","main_cat","category","slug_name","subs","subscribed"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {FollsListWrapper} from '../atoms'\nimport {useStore} from 'effector-react'\nimport {$userModel, userSubsMyMount} from '../../../Models/user-model'\nimport {Col, Row} from 'antd'\nimport {ShortCard, ShortCardSkeleton} from '../../../Components/Cards'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport {AccountSearchInput} from '../molecules'\nimport {useParams} from 'react-router-dom'\nimport {Button} from '../../../UIComponents/Button'\nimport {$accountModel} from '../../../Models/account-model'\nimport {useTranslation} from 'react-i18next'\nimport {useUnfollowFollsUser} from '../../../Hooks/user/use-unfollow-folls-user'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\n\nconst initialParams = {\n    limit: 5,\n    offset: 0\n}\nconst skeleton = generateSkeleton(5)\nexport const FollowingsList = ({loadMore}) => {\n    const {t} = useTranslation()\n    const {username} = useParams()\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    const {handleUnfollow} = useUnfollowFollsUser('followings')\n    const {$userSubsMy: {data, result, loading, forceLoading}} = useStore($userModel)\n    const [search, setSearch] = useState('')\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (search.trim().length > 2) {\n            const data = {\n                clear: true,\n                username: username,\n                params: {\n                    ...initialParams,\n                    search: search\n                }\n            }\n            userSubsMyMount(data)\n        }\n    }\n    \n    \n    return (\n        <FollsListWrapper>\n            <InfiniteScroll\n                next={loadMore}\n                dataLength={result?.nextOffset || 20}\n                hasMore={!loading && !!result?.next}\n                loader={<>...loading</>}\n                style={{overflow: 'hidden'}}\n            >\n                <Row gutter={[0, 12]}>\n                    <Col span={24}>\n                        <AccountSearchInput\n                            search={search}\n                            setSearch={setSearch}\n                            handleSubmit={handleSubmit}\n                        />\n                    </Col>\n                    {\n                        forceLoading === 2\n                            ? <>\n                                {\n                                    data && data.map((item, idx) => (\n                                        <Col\n                                            span={24}\n                                            key={`${idx + 1}`}\n                                        >\n                                            <Row justify='space-between' align='middle' wrap={false}>\n                                                <Col flex={1}>\n                                                    <ShortCard\n                                                        imgSize={48}\n                                                        imgUrl={!item.to_org ? item.to_user?.avatar : item.to_org?.logo}\n                                                        name={!item.to_org ? item.to_user?.full_name : item.to_org?.name}\n                                                        text={!item.to_org ? item.to_user?.main_cat.name : item.to_org?.category.name}\n                                                    />\n                                                </Col>\n                                                {\n                                                    !!currentProfile && currentProfile.slug_name === username && (\n                                                        <Col onClick={() => handleUnfollow(item)}>\n                                                            <Button>\n                                                                {\n                                                                    !item.to_org\n                                                                        ? item.to_user?.subs?.subscribed\n                                                                            ? t('unfollow')\n                                                                            : t('follow')\n                                                                        : item.to_org?.subs?.subscribed\n                                                                            ? t('unfollow')\n                                                                            : t('follow')\n                                                                }\n                                                            </Button>\n                                                        </Col>\n                                                    )\n                                                }\n                                            </Row>\n                                        </Col>\n                                    ))\n                                }\n                            </>\n                            : <>\n                                {\n                                    skeleton.map((item, idx) => (\n                                        <Col\n                                            span={24}\n                                            key={`${idx + 1}`}\n                                        >\n                                            <ShortCardSkeleton size={48}/>\n                                        </Col>\n                                    ))\n                                }\n                            </>\n                    }\n                </Row>\n            </InfiniteScroll>\n        </FollsListWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}