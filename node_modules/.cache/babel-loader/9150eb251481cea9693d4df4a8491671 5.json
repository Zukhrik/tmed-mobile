{"ast":null,"code":"import*as Yup from'yup';import Cookies from'js-cookie';import{useFormik}from'formik';import{useCallback}from'react';import auth from'../../Service/auth';import{useHistory}from'react-router-dom';import{tokenMount}from'../../Models/app';import{useTranslation}from'react-i18next';import{getCurrentAccount}from'../../Models/account-model';export function useSignIn(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useHistory=useHistory(),push=_useHistory.push;var validationSchema=Yup.object().shape({username:Yup.string().required(t('required_field')),password:Yup.string().required(t('required_field'))});var formik=useFormik({initialValues:{username:'',password:''},validationSchema:validationSchema,onSubmit:function onSubmit(_ref,_ref2){var username=_ref.username,password=_ref.password;var setSubmitting=_ref2.setSubmitting;setSubmitting(true);var timeout=null;auth.getToken({password:password,username:username}).then(function(res){var users=Cookies.get('users')?JSON.parse(Cookies.get('users')):{};users[username]=res.data;Cookies.set('users',JSON.stringify(users));Cookies.set('token',res.data.access);Cookies.set('refresh-token',res.data.refresh);tokenMount(res.data.access);getCurrentAccount();timeout=setTimeout(function(){push('/');},100);}).finally(function(){return setSubmitting(false);}).catch(function(){setSubmitting(false);});clearTimeout(timeout);timeout=null;}});var disabled=useCallback(function(){return formik.isSubmitting||formik.touched.password&&!!formik.errors.password||formik.touched.name&&!!formik.errors.name;},[formik]);return{formik:formik,disabled:disabled};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/auth/use-sign-in.js"],"names":["Yup","Cookies","useFormik","useCallback","auth","useHistory","tokenMount","useTranslation","getCurrentAccount","useSignIn","t","push","validationSchema","object","shape","username","string","required","password","formik","initialValues","onSubmit","setSubmitting","timeout","getToken","then","res","users","get","JSON","parse","data","set","stringify","access","refresh","setTimeout","finally","catch","clearTimeout","disabled","isSubmitting","touched","errors","name"],"mappings":"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","sourcesContent":["import * as Yup from 'yup'\r\nimport Cookies from 'js-cookie'\r\nimport {useFormik} from 'formik'\r\nimport {useCallback} from 'react'\r\nimport auth from '../../Service/auth'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {tokenMount} from '../../Models/app'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {getCurrentAccount} from '../../Models/account-model'\r\n\r\nexport function useSignIn() {\r\n    const {t} = useTranslation()\r\n    const {push} = useHistory()\r\n    const validationSchema = Yup.object().shape({\r\n        username: Yup.string().required(t('required_field')),\r\n        password: Yup.string().required(t('required_field'))\r\n    })\r\n    \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            username: '',\r\n            password: ''\r\n        },\r\n        validationSchema,\r\n        onSubmit({username, password}, {setSubmitting}) {\r\n            setSubmitting(true)\r\n            let timeout = null\r\n            auth.getToken({password, username})\r\n                .then((res) => {\r\n                    let users = Cookies.get('users') ? JSON.parse(Cookies.get('users')) : {}\r\n                    users[username] = res.data\r\n                    Cookies.set('users', JSON.stringify(users))\r\n                    Cookies.set('token', res.data.access)\r\n                    Cookies.set('refresh-token', res.data.refresh)\r\n                    tokenMount(res.data.access)\r\n                    getCurrentAccount()\r\n                    timeout = setTimeout(() => {\r\n                        push('/')\r\n                    }, 100)\r\n                })\r\n                .finally(() => setSubmitting(false))\r\n                .catch(() => {\r\n                    setSubmitting(false)\r\n                })\r\n            clearTimeout(timeout)\r\n            timeout = null\r\n        }\r\n    })\r\n    \r\n    const disabled = useCallback(() => {\r\n        return (\r\n            formik.isSubmitting\r\n            || (formik.touched.password && !!formik.errors.password)\r\n            || (formik.touched.name && !!formik.errors.name)\r\n        )\r\n        \r\n    }, [formik])\r\n    \r\n    return {formik, disabled}\r\n}"]},"metadata":{},"sourceType":"module"}