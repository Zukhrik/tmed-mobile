{"ast":null,"code":"import { LISTS } from '../../Constants';\nimport { useStore } from 'effector-react';\nimport { useCallback, useEffect, useState } from 'react';\nimport { $regionModel, userRegionMount } from '../../Models/region-model';\nimport { $categoryModel, categoryForceLoading, userCatListMount } from '../../Models/category-model';\nconst initialParams = {\n  parent: 0,\n  params: {\n    limit: 20,\n    offset: 0,\n    show_empties: '1'\n  }\n};\nexport function useCategory({\n  listType,\n  onChange,\n  onClose\n}) {\n  const [breadcrumb, setBreadcrumb] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [parent, setParent] = useState(0);\n  const {\n    $categoryList,\n    $categoryList: {\n      result\n    }\n  } = useStore($categoryModel);\n  const [list, setList] = useState({});\n  const {\n    $userRegion\n  } = useStore($regionModel);\n  const [searchValue, setSearchValue] = useState('');\n  const getList = useCallback(params => {\n    if (listType === LISTS.USER_CATEGORY) {\n      userCatListMount(params);\n    }\n\n    if (listType === LISTS.REGION) {\n      userRegionMount(params);\n    }\n  }, [listType]);\n  const getChildren = useCallback(item => {\n    const parentId = item.slug ? item.slug : item.id;\n    const data = {\n      clear: true,\n      ...initialParams,\n      parent: parentId\n    };\n    categoryForceLoading();\n    setParent(String(parentId));\n    setBreadcrumb([...breadcrumb, { ...item\n    }]);\n    getList(data);\n  }, [getList, breadcrumb]);\n  const renderList = useCallback(() => {\n    if (listType === LISTS.USER_CATEGORY) {\n      setList($categoryList);\n    }\n\n    if (listType === LISTS.REGION) {\n      setList($userRegion);\n    }\n  }, [listType, $categoryList, $userRegion]);\n  const loadMore = useCallback(() => {\n    if (result === null || result === void 0 ? void 0 : result.nextOffset) {\n      const data = { ...initialParams,\n        parent,\n        params: { ...initialParams.params,\n          offset: result === null || result === void 0 ? void 0 : result.nextOffset\n        }\n      };\n      getList(data);\n    }\n  }, [getList, parent, result]);\n  const onSelect = useCallback(item => {\n    if (selected && selected.id === item.id) {\n      setSelected(null);\n    } else {\n      setSelected(item);\n    }\n  }, [selected]);\n  const handleAccept = useCallback(() => {\n    onChange(selected);\n    onClose();\n  }, [onChange, selected, onClose]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchValue.trim().length > 0) {\n      if (listType === 'user_category') {\n        const data = { ...initialParams,\n          clear: true,\n          params: { ...initialParams.params,\n            search: searchValue\n          }\n        };\n        userCatListMount(data);\n      }\n\n      if (listType === 'region') {\n        const data = { ...initialParams,\n          clear: true,\n          params: { ...initialParams.params,\n            search: searchValue\n          }\n        };\n        userRegionMount(data);\n      }\n    }\n  };\n\n  const handleClick = (e, id) => {\n    e.preventDefault();\n    const data = { ...initialParams,\n      parent: id,\n      clear: true\n    };\n\n    if (id === 0) {\n      setBreadcrumb([]);\n    } else {\n      const idx = breadcrumb.findIndex(item => item.id === id);\n      const newData = [...breadcrumb.slice(0, idx + 1)];\n      setBreadcrumb(newData);\n    }\n\n    categoryForceLoading();\n    setParent(id);\n    getList(data);\n  };\n\n  useEffect(() => {\n    let timeout = null;\n    timeout = setTimeout(() => {\n      categoryForceLoading();\n      const data = {\n        clear: true,\n        ...initialParams\n      };\n      setBreadcrumb([]);\n      setParent(0);\n      getList(data);\n    }, 200);\n    return () => {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n  }, [getList]);\n  useEffect(() => {\n    renderList();\n  }, [renderList]);\n  return {\n    list,\n    parent,\n    loadMore,\n    onSelect,\n    selected,\n    breadcrumb,\n    getChildren,\n    searchValue,\n    handleClick,\n    handleSubmit,\n    handleAccept,\n    setSearchValue\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/category/use-category.js"],"names":["LISTS","useStore","useCallback","useEffect","useState","$regionModel","userRegionMount","$categoryModel","categoryForceLoading","userCatListMount","initialParams","parent","params","limit","offset","show_empties","useCategory","listType","onChange","onClose","breadcrumb","setBreadcrumb","selected","setSelected","setParent","$categoryList","result","list","setList","$userRegion","searchValue","setSearchValue","getList","USER_CATEGORY","REGION","getChildren","item","parentId","slug","id","data","clear","String","renderList","loadMore","nextOffset","onSelect","handleAccept","handleSubmit","e","preventDefault","trim","length","search","handleClick","idx","findIndex","newData","slice","timeout","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import {LISTS} from '../../Constants'\r\nimport {useStore} from 'effector-react'\r\nimport {useCallback, useEffect, useState} from 'react'\r\nimport {$regionModel, userRegionMount} from '../../Models/region-model'\r\nimport {$categoryModel, categoryForceLoading, userCatListMount} from '../../Models/category-model'\r\n\r\nconst initialParams = {\r\n    parent: 0,\r\n    params: {\r\n        limit: 20,\r\n        offset: 0,\r\n        show_empties: '1'\r\n    }\r\n}\r\n\r\nexport function useCategory({listType, onChange, onClose}) {\r\n    const [breadcrumb, setBreadcrumb] = useState([])\r\n    const [selected, setSelected] = useState(null)\r\n    const [parent, setParent] = useState(0)\r\n    const {$categoryList, $categoryList: {result}} = useStore($categoryModel)\r\n    const [list, setList] = useState({})\r\n    const {$userRegion} = useStore($regionModel)\r\n    const [searchValue, setSearchValue] = useState('')\r\n    \r\n    const getList = useCallback((params) => {\r\n        if (listType === LISTS.USER_CATEGORY) {\r\n            userCatListMount(params)\r\n        }\r\n        \r\n        if (listType === LISTS.REGION) {\r\n            userRegionMount(params)\r\n        }\r\n        \r\n    }, [listType])\r\n    \r\n    const getChildren = useCallback((item) => {\r\n        const parentId = item.slug ? item.slug : item.id\r\n        const data = {\r\n            clear: true,\r\n            ...initialParams,\r\n            parent: parentId\r\n        }\r\n        \r\n        categoryForceLoading()\r\n        setParent(String(parentId))\r\n        setBreadcrumb([...breadcrumb, {...item}])\r\n        getList(data)\r\n    }, [getList, breadcrumb])\r\n    \r\n    const renderList = useCallback(() => {\r\n        if (listType === LISTS.USER_CATEGORY) {\r\n            setList($categoryList)\r\n        }\r\n        \r\n        if (listType === LISTS.REGION) {\r\n            setList($userRegion)\r\n        }\r\n        \r\n    }, [listType, $categoryList, $userRegion])\r\n    \r\n    const loadMore = useCallback(() => {\r\n        if (result?.nextOffset) {\r\n            const data = {\r\n                ...initialParams,\r\n                parent,\r\n                params: {\r\n                    ...initialParams.params,\r\n                    offset: result?.nextOffset\r\n                }\r\n            }\r\n            getList(data)\r\n        }\r\n        \r\n    }, [getList, parent, result])\r\n    \r\n    const onSelect = useCallback((item) => {\r\n        if (selected && selected.id === item.id) {\r\n            setSelected(null)\r\n        } else {\r\n            setSelected(item)\r\n        }\r\n    }, [selected])\r\n    \r\n    const handleAccept = useCallback(() => {\r\n        onChange(selected)\r\n        onClose()\r\n    }, [onChange, selected, onClose])\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (searchValue.trim().length > 0) {\r\n            if (listType === 'user_category') {\r\n                const data = {\r\n                    ...initialParams,\r\n                    clear: true,\r\n                    params: {\r\n                        ...initialParams.params,\r\n                        search: searchValue\r\n                    }\r\n                }\r\n                userCatListMount(data)\r\n            }\r\n            \r\n            if (listType === 'region') {\r\n                const data = {\r\n                    ...initialParams,\r\n                    clear: true,\r\n                    params: {\r\n                        ...initialParams.params,\r\n                        search: searchValue\r\n                    }\r\n                }\r\n                userRegionMount(data)\r\n            }\r\n        }\r\n    }\r\n    \r\n    const handleClick = (e, id) => {\r\n        e.preventDefault()\r\n        const data = {\r\n            ...initialParams,\r\n            parent: id,\r\n            clear: true\r\n        }\r\n        \r\n        if (id === 0) {\r\n            setBreadcrumb([])\r\n        } else {\r\n            const idx = breadcrumb.findIndex(item => item.id === id)\r\n            const newData = [...breadcrumb.slice(0, idx + 1)]\r\n            setBreadcrumb(newData)\r\n        }\r\n        categoryForceLoading()\r\n        setParent(id)\r\n        getList(data)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        let timeout = null\r\n        \r\n        timeout = setTimeout(() => {\r\n            categoryForceLoading()\r\n            const data = {\r\n                clear: true,\r\n                ...initialParams\r\n            }\r\n            setBreadcrumb([])\r\n            setParent(0)\r\n            getList(data)\r\n        }, 200)\r\n        \r\n        return () => {\r\n            clearTimeout(timeout)\r\n            timeout = null\r\n        }\r\n    }, [getList])\r\n    \r\n    useEffect(() => {\r\n        renderList()\r\n    }, [renderList])\r\n    \r\n    \r\n    return {\r\n        list,\r\n        parent,\r\n        loadMore,\r\n        onSelect,\r\n        selected,\r\n        breadcrumb,\r\n        getChildren,\r\n        searchValue,\r\n        handleClick,\r\n        handleSubmit,\r\n        handleAccept,\r\n        setSearchValue\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}