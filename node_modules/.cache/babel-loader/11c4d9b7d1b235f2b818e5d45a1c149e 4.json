{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as Yup from'yup';import Cookies from'js-cookie';import{useFormik}from'formik';import jwtDecode from'jwt-decode';import auth from'../../Service/auth';import{useCallback,useState}from'react';import{tokenMount}from'../../Models/app';import{useTranslation}from'react-i18next';import{isValidPhoneNumber}from'libphonenumber-js';import{getCurrentAccount}from'../../Models/account-model';var values={phone:null,activation_code:''};export function useFastAuth(_ref){var onClose=_ref.onClose,action=_ref.action;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(values),_useState2=_slicedToArray(_useState,1),initialValues=_useState2[0];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),nextStep=_useState4[0],setNextStep=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showResend=_useState6[0],setShowResend=_useState6[1];var _useState7=useState(Date.now()+1000*120),_useState8=_slicedToArray(_useState7,2),deadline=_useState8[0],setDeadline=_useState8[1];var validationSchema=Yup.object().shape({phone:Yup.mixed().test('phoneValidation',t('invalid_phone_number'),function(data){if(data){var value=data.value,countryCode=data.countryCode;return isValidPhoneNumber(value,countryCode);}return true;}).required(t('required_field'))});var formik=useFormik({initialValues:initialValues,validationSchema:validationSchema,onSubmit:function onSubmit(values,_ref2){var setSubmitting=_ref2.setSubmitting;setSubmitting(true);var data={phone:\"\".concat(values.phone.value)};if(nextStep&&values.activation_code){data.activation_code=values.activation_code.replace(/\\s/g,'');}auth.createFastAuth(data).then(function(res){if(res){if(res.data.phone){setNextStep(true);}if(res.data.access){var users={};if(Cookies.get('users')){var oldUsers=JSON.parse(Cookies.get('users'));users=_objectSpread({},oldUsers);}users[jwtDecode(res.data.access).username]=res.data;tokenMount(res.data.access);Cookies.set('users',JSON.stringify(users));Cookies.set('token',res.data.access);Cookies.set('refresh-token',res.data.refresh);getCurrentAccount();onClose();if(action){action();}}}}).catch(function(error){console.log(error);}).finally(function(){return setSubmitting(false);});}});var disabledButton=useCallback(function(){return formik.isSubmitting||formik.touched.phone&&!!formik.errors.phone;},[formik]);var handleChange=function handleChange(key,value){formik.setFieldValue(key,value);};var onFinish=function onFinish(){setShowResend(true);};var resend=useCallback(function(){auth.createFastAuth({phone:\"+\".concat(formik.values.phone.value)}).then(function(res){if(res){setDeadline(Date.now()+1000*120);setShowResend(false);}});},[formik]);var phone=formik.values.phone;return{formik:formik,handleChange:handleChange,disabledButton:disabledButton,nextStep:nextStep,deadline:deadline,showResend:showResend,onFinish:onFinish,phone:phone,resend:resend};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/auth/use-fast-auth.js"],"names":["Yup","Cookies","useFormik","jwtDecode","auth","useCallback","useState","tokenMount","useTranslation","isValidPhoneNumber","getCurrentAccount","values","phone","activation_code","useFastAuth","onClose","action","t","initialValues","nextStep","setNextStep","showResend","setShowResend","Date","now","deadline","setDeadline","validationSchema","object","shape","mixed","test","data","value","countryCode","required","formik","onSubmit","setSubmitting","replace","createFastAuth","then","res","access","users","get","oldUsers","JSON","parse","username","set","stringify","refresh","catch","error","console","log","finally","disabledButton","isSubmitting","touched","errors","handleChange","key","setFieldValue","onFinish","resend"],"mappings":"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","sourcesContent":["import * as Yup from 'yup'\nimport Cookies from 'js-cookie'\nimport {useFormik} from 'formik'\nimport jwtDecode from 'jwt-decode'\nimport auth from '../../Service/auth'\nimport {useCallback, useState} from 'react'\nimport {tokenMount} from '../../Models/app'\nimport {useTranslation} from 'react-i18next'\nimport {isValidPhoneNumber} from 'libphonenumber-js'\nimport {getCurrentAccount} from '../../Models/account-model'\n\nconst values = {\n    phone: null,\n    activation_code: ''\n}\n\nexport function useFastAuth({onClose, action}) {\n    const {t} = useTranslation()\n    const [initialValues] = useState(values)\n    const [nextStep, setNextStep] = useState(false)\n    const [showResend, setShowResend] = useState(false)\n    const [deadline, setDeadline] = useState(Date.now() + 1000 * 120)\n    \n    const validationSchema = Yup.object().shape({\n        phone: Yup.mixed()\n            .test('phoneValidation', t('invalid_phone_number'), (data) => {\n                if (data) {\n                    const {value, countryCode} = data\n                    return isValidPhoneNumber(value, countryCode)\n                }\n                return true\n            })\n            .required(t('required_field'))\n    })\n    \n    const formik = useFormik({\n        initialValues,\n        validationSchema,\n        onSubmit(values, {setSubmitting}) {\n            setSubmitting(true)\n            const data = {phone: `${values.phone.value}`}\n            \n            if (nextStep && values.activation_code) {\n                data.activation_code = values.activation_code.replace(/\\s/g, '')\n            }\n            \n            auth.createFastAuth(data)\n                .then((res) => {\n                    if (res) {\n                        if (res.data.phone) {\n                            setNextStep(true)\n                        }\n                        \n                        if (res.data.access) {\n                            let users = {}\n                            if (Cookies.get('users')) {\n                                const oldUsers = JSON.parse(Cookies.get('users'))\n                                users = {...oldUsers}\n                            }\n                            users[jwtDecode(res.data.access).username] = res.data\n                            tokenMount(res.data.access)\n                            Cookies.set('users', JSON.stringify(users))\n                            Cookies.set('token', res.data.access)\n                            Cookies.set('refresh-token', res.data.refresh)\n                            getCurrentAccount()\n                            onClose()\n                            if (action) {\n                                action()\n                            }\n                        }\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n                .finally(() => setSubmitting(false))\n        }\n    })\n    \n    const disabledButton = useCallback(() => {\n        return (\n            formik.isSubmitting\n            || (formik.touched.phone && !!formik.errors.phone)\n        )\n    }, [formik])\n    \n    const handleChange = (key, value) => {\n        formik.setFieldValue(key, value)\n    }\n    \n    const onFinish = () => {\n        setShowResend(true)\n    }\n    \n    const resend = useCallback(() => {\n        auth.createFastAuth({phone: `+${formik.values.phone.value}`})\n            .then((res) => {\n                if (res) {\n                    setDeadline(Date.now() + 1000 * 120)\n                    setShowResend(false)\n                }\n            })\n    }, [formik])\n    let phone = formik.values.phone\n    \n    return {\n        formik,\n        handleChange,\n        disabledButton,\n        nextStep,\n        deadline,\n        showResend,\n        onFinish,\n        phone,\n        resend\n    }\n}"]},"metadata":{},"sourceType":"module"}