{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Cards/AccountCard/index.jsx\";\nimport React from 'react';\nimport { ShortCard } from '../ShortCard';\nimport { useStore } from 'effector-react';\nimport { useTranslation } from 'react-i18next';\nimport { $appModel } from '../../../Models/app';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { $accountModel } from '../../../Models/account-model';\nimport { CardWrapper, ShortInfoWrapper, SubscribeWrapper } from './style';\nimport { AccountCardRatingList } from '../../Progress/AccountCardRatingList';\nimport { INFO_MAT } from '../../../Constants/app';\nexport default (({\n  imgUrl,\n  slug_name,\n  name,\n  text,\n  path,\n  imgSize,\n  rating,\n  subscribed,\n  subscribe\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    $device\n  } = useStore($appModel);\n  const {\n    $app: {\n      token\n    }\n  } = useStore($appModel);\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  return /*#__PURE__*/React.createElement(CardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ShortInfoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ShortCard, {\n    name: name,\n    text: text,\n    imgUrl: imgUrl,\n    imgSize: $device && $device === INFO_MAT ? 80 : 56,\n    containerPath: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }), currentProfile && currentProfile.slug_name !== slug_name && token && /*#__PURE__*/React.createElement(SubscribeWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, !subscribed ? /*#__PURE__*/React.createElement(Text, {\n    onClick: () => subscribe({\n      slug_name,\n      name\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }\n  }, t('subscribe')) : /*#__PURE__*/React.createElement(Text, {\n    style: {\n      color: '#000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 35\n    }\n  }, t('subscribed')))), rating && /*#__PURE__*/React.createElement(AccountCardRatingList, {\n    rating: rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Cards/AccountCard/index.jsx"],"names":["React","ShortCard","useStore","useTranslation","$appModel","Text","$accountModel","CardWrapper","ShortInfoWrapper","SubscribeWrapper","AccountCardRatingList","INFO_MAT","imgUrl","slug_name","name","text","path","imgSize","rating","subscribed","subscribe","t","$device","$app","token","$profiles","currentProfile","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAAQC,IAAR,QAAmB,uCAAnB;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AACA,SAAQC,WAAR,EAAqBC,gBAArB,EAAuCC,gBAAvC,QAA8D,SAA9D;AACA,SAAQC,qBAAR,QAAoC,sCAApC;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AAEA,gBAAe,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,SAAT;AAAoBC,EAAAA,IAApB;AAA0BC,EAAAA,IAA1B;AAAgCC,EAAAA,IAAhC;AAAsCC,EAAAA,OAAtC;AAA+CC,EAAAA,MAA/C;AAAuDC,EAAAA,UAAvD;AAAmEC,EAAAA;AAAnE,CAAD,KAAmF;AAC9F,QAAM;AAACC,IAAAA;AAAD,MAAMlB,cAAc,EAA1B;AACA,QAAM;AAACmB,IAAAA;AAAD,MAAYpB,QAAQ,CAACE,SAAD,CAA1B;AACA,QAAM;AAACmB,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAAkBtB,QAAQ,CAACE,SAAD,CAAhC;AACA,QAAM;AAACqB,IAAAA,SAAS,EAAE;AAACC,MAAAA;AAAD;AAAZ,MAAgCxB,QAAQ,CAACI,aAAD,CAA9C;AAEA,sBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAEQ,IADV;AAEI,IAAA,IAAI,EAAEC,IAFV;AAGI,IAAA,MAAM,EAAEH,MAHZ;AAII,IAAA,OAAO,EAAEU,OAAO,IAAIA,OAAO,KAAKX,QAAvB,GAAkC,EAAlC,GAAuC,EAJpD;AAKI,IAAA,aAAa,EAAEK,IALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASQU,cAAc,IAAIA,cAAc,CAACb,SAAf,KAA6BA,SAA/C,IAA4DW,KAA5D,iBACA,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAACL,UAAD,gBACM,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,MAAMC,SAAS,CAAC;AAACP,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDO,CAAC,CAAC,WAAD,CAArD,CADN,gBAEM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACM,MAAAA,KAAK,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BN,CAAC,CAAC,YAAD,CAAhC,CAJd,CAVR,CADJ,EAqBQH,MAAM,iBACN,oBAAC,qBAAD;AACI,IAAA,MAAM,EAAEA,MADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBR,CADJ;AA6BH,CAnCD","sourcesContent":["import React from 'react'\r\nimport {ShortCard} from '../ShortCard'\r\nimport {useStore} from 'effector-react'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {$appModel} from '../../../Models/app'\r\nimport {Text} from '../../../UIComponents/Typography/Text'\r\nimport {$accountModel} from '../../../Models/account-model'\r\nimport {CardWrapper, ShortInfoWrapper, SubscribeWrapper} from './style'\r\nimport {AccountCardRatingList} from '../../Progress/AccountCardRatingList'\r\nimport {INFO_MAT} from '../../../Constants/app'\r\n\r\nexport default ({imgUrl, slug_name, name, text, path, imgSize, rating, subscribed, subscribe}) => {\r\n    const {t} = useTranslation()\r\n    const {$device} = useStore($appModel)\r\n    const {$app: {token}} = useStore($appModel)\r\n    const {$profiles: {currentProfile}} = useStore($accountModel)\r\n    \r\n    return (\r\n        <CardWrapper>\r\n            <ShortInfoWrapper>\r\n                <ShortCard\r\n                    name={name}\r\n                    text={text}\r\n                    imgUrl={imgUrl}\r\n                    imgSize={$device && $device === INFO_MAT ? 80 : 56}\r\n                    containerPath={path}\r\n                />\r\n                {\r\n                    currentProfile && currentProfile.slug_name !== slug_name && token &&\r\n                    <SubscribeWrapper>\r\n                        {\r\n                            !subscribed\r\n                                ? <Text onClick={() => subscribe({slug_name, name})}>{t('subscribe')}</Text>\r\n                                : <Text style={{color: '#000'}}>{t('subscribed')}</Text>\r\n                        }\r\n                    </SubscribeWrapper>\r\n                }\r\n            </ShortInfoWrapper>\r\n            {\r\n                rating &&\r\n                <AccountCardRatingList\r\n                    rating={rating}\r\n                />\r\n            }\r\n        </CardWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}