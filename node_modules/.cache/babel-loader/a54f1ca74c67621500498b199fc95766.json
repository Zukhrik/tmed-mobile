{"ast":null,"code":"import { useCallback, useEffect } from 'react';\nimport { useUrlParams } from '../app';\nimport { URL_KEYS, URL_VALUES } from '../../Constants';\nimport { $catsModel, catsOfferCatsMount, catsOrgCatsMount } from '../../Models/cats-model';\nimport { useStore } from 'effector-react';\nconst initialParams = {\n  limit: 10,\n  offset: 0\n};\nexport function useCategoryList() {\n  const {\n    urlData\n  } = useUrlParams();\n  const searchType = urlData[URL_KEYS.SEARCH_TYPE];\n  const {\n    urlData: {\n      category\n    }\n  } = useUrlParams();\n  const {\n    $catsOfferCats: {\n      result\n    }\n  } = useStore($catsModel);\n  const loadMore = useCallback(() => {\n    if (result === null || result === void 0 ? void 0 : result.nextOffset) {\n      const data = {\n        clear: true,\n        ...initialParams,\n        offset: result.nextOffset\n      };\n      catsOfferCatsMount(data);\n    }\n  }, [result]);\n  useEffect(() => {\n    let timeout = null;\n    timeout = setTimeout(() => {\n      if (!searchType) {\n        const params = {\n          clear: true,\n          parent_slug: category ? category : 0,\n          params: { ...initialParams\n          }\n        };\n        catsOrgCatsMount(params);\n      } else if (searchType === URL_VALUES.OFFERINGS) {\n        const data = {\n          clear: true,\n          parent: category ? category : 0,\n          params: { ...initialParams\n          }\n        };\n        catsOfferCatsMount(data);\n      }\n    }, 300);\n    return () => {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n  }, [searchType, category]);\n  return {\n    loadMore\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/cats/use-category-list.js"],"names":["useCallback","useEffect","useUrlParams","URL_KEYS","URL_VALUES","$catsModel","catsOfferCatsMount","catsOrgCatsMount","useStore","initialParams","limit","offset","useCategoryList","urlData","searchType","SEARCH_TYPE","category","$catsOfferCats","result","loadMore","nextOffset","data","clear","timeout","setTimeout","params","parent_slug","OFFERINGS","parent","clearTimeout"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,QAAqC,OAArC;AACA,SAAQC,YAAR,QAA2B,QAA3B;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,iBAAnC;AACA,SAAQC,UAAR,EAAoBC,kBAApB,EAAwCC,gBAAxC,QAA+D,yBAA/D;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,MAAM,EAAE;AAFU,CAAtB;AAKA,OAAO,SAASC,eAAT,GAA2B;AAC9B,QAAM;AAACC,IAAAA;AAAD,MAAYX,YAAY,EAA9B;AACA,QAAMY,UAAU,GAAGD,OAAO,CAACV,QAAQ,CAACY,WAAV,CAA1B;AACA,QAAM;AAACF,IAAAA,OAAO,EAAE;AAACG,MAAAA;AAAD;AAAV,MAAwBd,YAAY,EAA1C;AACA,QAAM;AAACe,IAAAA,cAAc,EAAE;AAACC,MAAAA;AAAD;AAAjB,MAA6BV,QAAQ,CAACH,UAAD,CAA3C;AAGA,QAAMc,QAAQ,GAAGnB,WAAW,CAAC,MAAM;AAC/B,QAAIkB,MAAJ,aAAIA,MAAJ,uBAAIA,MAAM,CAAEE,UAAZ,EAAwB;AACpB,YAAMC,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAE,IADE;AAET,WAAGb,aAFM;AAGTE,QAAAA,MAAM,EAAEO,MAAM,CAACE;AAHN,OAAb;AAKAd,MAAAA,kBAAkB,CAACe,IAAD,CAAlB;AACH;AACJ,GAT2B,EASzB,CAACH,MAAD,CATyB,CAA5B;AAWAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIsB,OAAO,GAAG,IAAd;AAEAA,IAAAA,OAAO,GAAGC,UAAU,CAAC,MAAM;AACvB,UAAI,CAACV,UAAL,EAAiB;AACb,cAAMW,MAAM,GAAG;AACXH,UAAAA,KAAK,EAAE,IADI;AAEXI,UAAAA,WAAW,EAAEV,QAAQ,GAAGA,QAAH,GAAc,CAFxB;AAGXS,UAAAA,MAAM,EAAE,EACJ,GAAGhB;AADC;AAHG,SAAf;AAOAF,QAAAA,gBAAgB,CAACkB,MAAD,CAAhB;AACH,OATD,MASO,IAAIX,UAAU,KAAKV,UAAU,CAACuB,SAA9B,EAAyC;AAC5C,cAAMN,IAAI,GAAG;AACTC,UAAAA,KAAK,EAAE,IADE;AAETM,UAAAA,MAAM,EAAEZ,QAAQ,GAAGA,QAAH,GAAc,CAFrB;AAGTS,UAAAA,MAAM,EAAE,EACJ,GAAGhB;AADC;AAHC,SAAb;AAOAH,QAAAA,kBAAkB,CAACe,IAAD,CAAlB;AACH;AACJ,KApBmB,EAoBjB,GApBiB,CAApB;AAsBA,WAAO,MAAM;AACTQ,MAAAA,YAAY,CAACN,OAAD,CAAZ;AACAA,MAAAA,OAAO,GAAG,IAAV;AACH,KAHD;AAIH,GA7BQ,EA6BN,CAACT,UAAD,EAAaE,QAAb,CA7BM,CAAT;AA+BA,SAAO;AAACG,IAAAA;AAAD,GAAP;AACH","sourcesContent":["import {useCallback, useEffect} from 'react'\nimport {useUrlParams} from '../app'\nimport {URL_KEYS, URL_VALUES} from '../../Constants'\nimport {$catsModel, catsOfferCatsMount, catsOrgCatsMount} from '../../Models/cats-model'\nimport {useStore} from 'effector-react'\n\nconst initialParams = {\n    limit: 10,\n    offset: 0\n}\n\nexport function useCategoryList() {\n    const {urlData} = useUrlParams()\n    const searchType = urlData[URL_KEYS.SEARCH_TYPE]\n    const {urlData: {category}} = useUrlParams()\n    const {$catsOfferCats: {result}} = useStore($catsModel)\n    \n    \n    const loadMore = useCallback(() => {\n        if (result?.nextOffset) {\n            const data = {\n                clear: true,\n                ...initialParams,\n                offset: result.nextOffset\n            }\n            catsOfferCatsMount(data)\n        }\n    }, [result])\n    \n    useEffect(() => {\n        let timeout = null\n        \n        timeout = setTimeout(() => {\n            if (!searchType) {\n                const params = {\n                    clear: true,\n                    parent_slug: category ? category : 0,\n                    params: {\n                        ...initialParams\n                    }\n                }\n                catsOrgCatsMount(params)\n            } else if (searchType === URL_VALUES.OFFERINGS) {\n                const data = {\n                    clear: true,\n                    parent: category ? category : 0,\n                    params: {\n                        ...initialParams\n                    }\n                }\n                catsOfferCatsMount(data)\n            }\n        }, 300)\n        \n        return () => {\n            clearTimeout(timeout)\n            timeout = null\n        }\n    }, [searchType, category])\n    \n    return {loadMore}\n}"]},"metadata":{},"sourceType":"module"}