{"ast":null,"code":"import { createStore, combine } from 'effector';\nimport { fetchUserRegion } from './effects';\nconst $userRegion = createStore({\n  loading: false,\n  data: [],\n  result: {},\n  error: false\n}).on(fetchUserRegion.pending, (state, loading) => ({ ...state,\n  loading\n})).on(fetchUserRegion.fail, (state, {\n  error\n}) => ({ ...state,\n  error,\n  data: [],\n  result: {}\n})).on(fetchUserRegion.done, (state, res) => {\n  const {\n    params: {\n      clear\n    }\n  } = res;\n  const newData = clear ? res.result.data.results : [...state.data, ...res.result.data.results];\n  return { ...state,\n    result: res.result.data,\n    data: newData\n  };\n});\nexport const $regionModel = combine({\n  $userRegion\n});","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Models/region-model/stores.js"],"names":["createStore","combine","fetchUserRegion","$userRegion","loading","data","result","error","on","pending","state","fail","done","res","params","clear","newData","results","$regionModel"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,OAArB,QAAmC,UAAnC;AACA,SAAQC,eAAR,QAA8B,WAA9B;AAEA,MAAMC,WAAW,GAAGH,WAAW,CAAC;AAACI,EAAAA,OAAO,EAAE,KAAV;AAAiBC,EAAAA,IAAI,EAAE,EAAvB;AAA2BC,EAAAA,MAAM,EAAE,EAAnC;AAAuCC,EAAAA,KAAK,EAAE;AAA9C,CAAD,CAAX,CAChBC,EADgB,CACbN,eAAe,CAACO,OADH,EACY,CAACC,KAAD,EAAQN,OAAR,MAAqB,EAAC,GAAGM,KAAJ;AAAWN,EAAAA;AAAX,CAArB,CADZ,EAEhBI,EAFgB,CAEbN,eAAe,CAACS,IAFH,EAES,CAACD,KAAD,EAAQ;AAACH,EAAAA;AAAD,CAAR,MAAqB,EAC7C,GAAGG,KAD0C;AACnCH,EAAAA,KADmC;AAC5BF,EAAAA,IAAI,EAAE,EADsB;AAClBC,EAAAA,MAAM,EAAE;AADU,CAArB,CAFT,EAKhBE,EALgB,CAKbN,eAAe,CAACU,IALH,EAKS,CAACF,KAAD,EAAQG,GAAR,KAAgB;AACxC,QAAM;AAACC,IAAAA,MAAM,EAAE;AAACC,MAAAA;AAAD;AAAT,MAAoBF,GAA1B;AACA,QAAMG,OAAO,GAAGD,KAAK,GAAGF,GAAG,CAACP,MAAJ,CAAWD,IAAX,CAAgBY,OAAnB,GAA6B,CAAC,GAAGP,KAAK,CAACL,IAAV,EAAgB,GAAGQ,GAAG,CAACP,MAAJ,CAAWD,IAAX,CAAgBY,OAAnC,CAAlD;AACA,SAAO,EACL,GAAGP,KADE;AACKJ,IAAAA,MAAM,EAAEO,GAAG,CAACP,MAAJ,CAAWD,IADxB;AAC8BA,IAAAA,IAAI,EAAEW;AADpC,GAAP;AAGD,CAXgB,CAApB;AAaA,OAAO,MAAME,YAAY,GAAGjB,OAAO,CAAC;AAClCE,EAAAA;AADkC,CAAD,CAA5B","sourcesContent":["import {createStore, combine} from 'effector';\r\nimport {fetchUserRegion} from './effects';\r\n\r\nconst $userRegion = createStore({loading: false, data: [], result: {}, error: false})\r\n   .on(fetchUserRegion.pending, (state, loading) => ({...state, loading}))\r\n   .on(fetchUserRegion.fail, (state, {error}) => ({\r\n     ...state, error, data: [], result: {}\r\n   }))\r\n   .on(fetchUserRegion.done, (state, res) => {\r\n     const {params: {clear}} = res\r\n     const newData = clear ? res.result.data.results : [...state.data, ...res.result.data.results]\r\n     return {\r\n       ...state, result: res.result.data, data: newData\r\n     }\r\n   })\r\n\r\nexport const $regionModel = combine({\r\n  $userRegion\r\n})"]},"metadata":{},"sourceType":"module"}