{"ast":null,"code":"import { useParams } from 'react-router-dom';\nimport { useCallback, useEffect } from 'react';\nimport { $orderModel, orderOffersConclusionsMount } from '../../Models/order-model';\nimport { useStore } from 'effector-react';\nconst initialParams = {\n  limit: 10,\n  offset: 0\n};\nexport function useOrderOfferIdConclusions() {\n  const {\n    offer_id\n  } = useParams();\n  const {\n    $orderOffersConclusions\n  } = useStore($orderModel);\n  console.log($orderOffersConclusions);\n  const loadMore = useCallback(() => {}, []);\n  useEffect(() => {\n    if (offer_id) {\n      const params = {\n        order_offer_id: offer_id\n      };\n      orderOffersConclusionsMount(params);\n    }\n  }, [offer_id]);\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/order/use-order-offer-id-conclusions.js"],"names":["useParams","useCallback","useEffect","$orderModel","orderOffersConclusionsMount","useStore","initialParams","limit","offset","useOrderOfferIdConclusions","offer_id","$orderOffersConclusions","console","log","loadMore","params","order_offer_id"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,kBAAxB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,OAArC;AACA,SAAQC,WAAR,EAAqBC,2BAArB,QAAuD,0BAAvD;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,MAAM,EAAE;AAFU,CAAtB;AAKA,OAAO,SAASC,0BAAT,GAAsC;AACzC,QAAM;AAACC,IAAAA;AAAD,MAAaV,SAAS,EAA5B;AACA,QAAM;AAACW,IAAAA;AAAD,MAA4BN,QAAQ,CAACF,WAAD,CAA1C;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYF,uBAAZ;AAEA,QAAMG,QAAQ,GAAGb,WAAW,CAAC,MAAM,CAGlC,CAH2B,EAGzB,EAHyB,CAA5B;AAKAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,QAAJ,EAAc;AACV,YAAMK,MAAM,GAAG;AACXC,QAAAA,cAAc,EAAEN;AADL,OAAf;AAGAN,MAAAA,2BAA2B,CAACW,MAAD,CAA3B;AACH;AACJ,GAPQ,EAON,CAACL,QAAD,CAPM,CAAT;AAQH","sourcesContent":["import {useParams} from 'react-router-dom'\nimport {useCallback, useEffect} from 'react'\nimport {$orderModel, orderOffersConclusionsMount} from '../../Models/order-model'\nimport {useStore} from 'effector-react'\n\nconst initialParams = {\n    limit: 10,\n    offset: 0\n}\n\nexport function useOrderOfferIdConclusions() {\n    const {offer_id} = useParams()\n    const {$orderOffersConclusions} = useStore($orderModel)\n    console.log($orderOffersConclusions)\n    \n    const loadMore = useCallback(() => {\n    \n    \n    }, [])\n    \n    useEffect(() => {\n        if (offer_id) {\n            const params = {\n                order_offer_id: offer_id\n            }\n            orderOffersConclusionsMount(params)\n        }\n    }, [offer_id])\n}"]},"metadata":{},"sourceType":"module"}