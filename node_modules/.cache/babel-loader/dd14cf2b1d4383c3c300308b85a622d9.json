{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useEventSource = void 0;\n\nvar react_1 = require(\"react\");\n\nvar use_websocket_1 = require(\"./use-websocket\");\n\nvar constants_1 = require(\"./constants\");\n\nexports.useEventSource = function (url, _a, connect) {\n  if (_a === void 0) {\n    _a = constants_1.DEFAULT_EVENT_SOURCE_OPTIONS;\n  }\n\n  if (connect === void 0) {\n    connect = true;\n  }\n\n  var withCredentials = _a.withCredentials,\n      events = _a.events,\n      options = __rest(_a, [\"withCredentials\", \"events\"]);\n\n  var optionsWithEventSource = __assign(__assign({}, options), {\n    eventSourceOptions: {\n      withCredentials: withCredentials\n    }\n  });\n\n  var eventsRef = react_1.useRef(constants_1.EMPTY_EVENT_HANDLERS);\n\n  if (events) {\n    eventsRef.current = events;\n  }\n\n  var _b = use_websocket_1.useWebSocket(url, optionsWithEventSource, connect),\n      lastMessage = _b.lastMessage,\n      readyState = _b.readyState,\n      getWebSocket = _b.getWebSocket;\n\n  react_1.useEffect(function () {\n    if (lastMessage === null || lastMessage === void 0 ? void 0 : lastMessage.type) {\n      Object.entries(eventsRef.current).forEach(function (_a) {\n        var type = _a[0],\n            handler = _a[1];\n\n        if (type === lastMessage.type) {\n          handler(lastMessage);\n        }\n      });\n    }\n  }, [lastMessage]);\n  return {\n    lastEvent: lastMessage,\n    readyState: readyState,\n    getEventSource: getWebSocket\n  };\n};","map":null,"metadata":{},"sourceType":"script"}