{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/organisms/approved.jsx\";\nimport React, { useEffect } from 'react';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { useOrderList } from '../../../Hooks/org';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'effector-react';\nimport { $orderModel } from '../../../Models/order-model';\nimport { saveURLMount } from '../../../Models/app';\nimport { Col, Row } from 'antd';\nimport { QRCodeCartCard } from '../../../Components/Cards/QRCodeCartCard';\nimport { QRCodeCartCardSkeleton } from '../../../Components/Cards';\nimport { EmptyOrderContainer } from './empty-order-container';\nconst skeleton = generateSkeleton(5);\nexport const Approved = () => {\n  useOrderList(1);\n  const {\n    push,\n    location: {\n      pathname\n    }\n  } = useHistory();\n  const {\n    $orderList: {\n      data,\n      forceLoading\n    }\n  } = useStore($orderModel);\n\n  const handlePush = item => {\n    push(`/records/detail/${item.id}`);\n    saveURLMount(pathname);\n  };\n\n  useEffect(() => {\n    saveURLMount('');\n  }, []);\n  return /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, forceLoading === 2 ? /*#__PURE__*/React.createElement(React.Fragment, null, data && data.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(QRCodeCartCard, {\n    src: item.responsible.org.logo,\n    time: item.date,\n    cost: item.total_cost,\n    url: () => handlePush(item),\n    title: item.responsible.org.name,\n    text: item.responsible.org.category.name,\n    specialistImg: item.responsible.user.avatar,\n    specialistName: item.responsible.user.full_name,\n    specialistCat: item.responsible.user.main_cat.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 53\n    }\n  })))) : /*#__PURE__*/React.createElement(EmptyOrderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(QRCodeCartCardSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/organisms/approved.jsx"],"names":["React","useEffect","generateSkeleton","useOrderList","useHistory","useStore","$orderModel","saveURLMount","Col","Row","QRCodeCartCard","QRCodeCartCardSkeleton","EmptyOrderContainer","skeleton","Approved","push","location","pathname","$orderList","data","forceLoading","handlePush","item","id","length","map","idx","responsible","org","logo","date","total_cost","name","category","user","avatar","full_name","main_cat"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {useOrderList} from '../../../Hooks/org'\nimport {useHistory} from 'react-router-dom'\nimport {useStore} from 'effector-react'\nimport {$orderModel} from '../../../Models/order-model'\nimport {saveURLMount} from '../../../Models/app'\nimport {Col, Row} from 'antd'\nimport {QRCodeCartCard} from '../../../Components/Cards/QRCodeCartCard'\nimport {QRCodeCartCardSkeleton} from '../../../Components/Cards'\nimport {EmptyOrderContainer} from './empty-order-container'\n\n\nconst skeleton = generateSkeleton(5)\nexport const Approved = () => {\n    useOrderList(1)\n    const {push, location: {pathname}} = useHistory()\n    const {$orderList: {data, forceLoading}} = useStore($orderModel)\n    \n    const handlePush = (item) => {\n        push(`/records/detail/${item.id}`)\n        saveURLMount(pathname)\n    }\n    \n    useEffect(() => {\n        saveURLMount('')\n    }, [])\n    \n    return (\n        <Row gutter={[0, 12]}>\n            {\n                forceLoading === 2\n                    ? <>\n                        {\n                            data && data.length > 0\n                                ? (\n                                    <>\n                                        {\n                                            data.map((item, idx) => (\n                                                <Col\n                                                    span={24}\n                                                    key={`${idx + 1}`}\n                                                >\n                                                    <QRCodeCartCard\n                                                        src={item.responsible.org.logo}\n                                                        time={item.date}\n                                                        cost={item.total_cost}\n                                                        url={() => handlePush(item)}\n                                                        title={item.responsible.org.name}\n                                                        text={item.responsible.org.category.name}\n                                                        specialistImg={item.responsible.user.avatar}\n                                                        specialistName={item.responsible.user.full_name}\n                                                        specialistCat={item.responsible.user.main_cat.name}\n                                                    />\n                                                </Col>\n                                            ))\n                                        }\n                                    </>\n                                ) : (\n                                    <EmptyOrderContainer/>\n                                )\n                        }\n                    </>\n                    : <>\n                        {\n                            skeleton.map((item, idx) => (\n                                <Col span={24} key={`${idx + 1}`}>\n                                    <QRCodeCartCardSkeleton/>\n                                </Col>\n                            ))\n                        }\n                    </>\n            }\n        </Row>\n    )\n}"]},"metadata":{},"sourceType":"module"}