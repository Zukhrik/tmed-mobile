{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/OfferingPage/organisms/offering-info.jsx\";\nimport React from 'react';\nimport { OfferInfoItemWrapper, OfferingColorItem, OfferingColorItemWrapper, OfferShortInfoWrapper, PropertyDescription, PropertyName } from '../atoms';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { useTranslation } from 'react-i18next';\nimport { $appModel } from '../../../Models/app';\nimport { InfinitySvg } from '../../../Icons/infinity';\nimport { numberFormat } from '../../../utils/number-utils';\nimport { PARAMS_CHARACTER_TYPE } from '../../../Constants';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { $accountModel } from '../../../Models/account-model';\nimport { Title } from '../../../UIComponents/Typography/Title';\nimport { $offeringsModel } from '../../../Models/offerings-model';\nimport { IconBox, SkeletonUI, SkeletonWrapper } from '../../../UIComponents/GlobalStyles';\nexport const OfferingInfo = ({\n  loading,\n  name,\n  cost,\n  qty\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    $detectLocationInfo\n  } = useStore($appModel);\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  const {\n    $offeringsCharacs: {\n      data: paramData\n    }\n  } = useStore($offeringsModel);\n  let colorsParam = paramData.length > 0 && paramData.find(item => item.character.character_type === PARAMS_CHARACTER_TYPE.COLOUR_FIELD);\n  const currency = currentProfile ? currentProfile.currency && currentProfile.currency.code : $detectLocationInfo.currency || '';\n\n  const getColor = value => {\n    return `#${value.split('|')[1]}`;\n  };\n\n  return /*#__PURE__*/React.createElement(OfferShortInfoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"offering-description container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }\n  }, name) : /*#__PURE__*/React.createElement(SkeletonWrapper, {\n    height: 25.14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonUI, {\n    variant: \"text\",\n    width: \"100%\",\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"offering-description container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, !isLoading ? `${numberFormat(cost)} ${currency === null || currency === void 0 ? void 0 : currency.toUpperCase()}` : /*#__PURE__*/React.createElement(SkeletonWrapper, {\n    height: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(SkeletonUI, {\n    variant: \"text\",\n    width: \"100%\",\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(OfferInfoItemWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PropertyName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, t('quantity'))), /*#__PURE__*/React.createElement(PropertyDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, !loading ? qty ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 47\n    }\n  }, `${qty} ${t('peaces')}`) : /*#__PURE__*/React.createElement(IconBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 47\n    }\n  }, /*#__PURE__*/React.createElement(InfinitySvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 56\n    }\n  })) : '')))), colorsParam && (colorsParam === null || colorsParam === void 0 ? void 0 : colorsParam.value) && /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(OfferingColorItemWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(PropertyName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }, t('color'))), /*#__PURE__*/React.createElement(PropertyDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, colorsParam.value.map((item, idx) => /*#__PURE__*/React.createElement(OfferingColorItem, {\n    key: `${idx + 1}`,\n    backgroundColor: getColor(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 45\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"info-bottom-line container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/OfferingPage/organisms/offering-info.jsx"],"names":["React","OfferInfoItemWrapper","OfferingColorItem","OfferingColorItemWrapper","OfferShortInfoWrapper","PropertyDescription","PropertyName","Col","Row","useStore","useTranslation","$appModel","InfinitySvg","numberFormat","PARAMS_CHARACTER_TYPE","Text","$accountModel","Title","$offeringsModel","IconBox","SkeletonUI","SkeletonWrapper","OfferingInfo","loading","name","cost","qty","t","$detectLocationInfo","$profiles","currentProfile","$offeringsCharacs","data","paramData","colorsParam","length","find","item","character","character_type","COLOUR_FIELD","currency","code","getColor","value","split","isLoading","toUpperCase","marginLeft","map","idx"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    OfferInfoItemWrapper,\n    OfferingColorItem,\n    OfferingColorItemWrapper,\n    OfferShortInfoWrapper,\n    PropertyDescription,\n    PropertyName\n} from '../atoms'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {useTranslation} from 'react-i18next'\nimport {$appModel} from '../../../Models/app'\nimport {InfinitySvg} from '../../../Icons/infinity'\nimport {numberFormat} from '../../../utils/number-utils'\nimport {PARAMS_CHARACTER_TYPE} from '../../../Constants'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {$accountModel} from '../../../Models/account-model'\nimport {Title} from '../../../UIComponents/Typography/Title'\nimport {$offeringsModel} from '../../../Models/offerings-model'\nimport {IconBox, SkeletonUI, SkeletonWrapper} from '../../../UIComponents/GlobalStyles'\n\n\nexport const OfferingInfo = ({loading, name, cost, qty}) => {\n    const {t} = useTranslation()\n    const {$detectLocationInfo} = useStore($appModel)\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    const {$offeringsCharacs: {data: paramData}} = useStore($offeringsModel)\n    \n    let colorsParam = paramData.length > 0 && paramData.find(\n        item => item.character.character_type === PARAMS_CHARACTER_TYPE.COLOUR_FIELD\n    )\n    const currency = currentProfile\n        ? (currentProfile.currency && currentProfile.currency.code)\n        : $detectLocationInfo.currency || ''\n    const getColor = (value) => {\n        return `#${value.split('|')[1]}`\n    }\n    \n    return (\n        <OfferShortInfoWrapper>\n            <Row gutter={[0, 12]}>\n                <Col span={24} className='offering-description container'>\n                    {\n                        !loading\n                            ? <Text>{name}</Text>\n                            : <SkeletonWrapper height={25.14}>\n                                <SkeletonUI variant='text' width='100%' height={12}/>\n                            </SkeletonWrapper>\n                    }\n                </Col>\n                <Col span={24} className='offering-description container'>\n                    <Title level={3}>\n                        {\n                            !isLoading\n                                ? `${numberFormat(cost)} ${currency?.toUpperCase()}`\n                                : <SkeletonWrapper height={18}>\n                                    <SkeletonUI variant='text' width='100%' height={12}/>\n                                </SkeletonWrapper>\n                        }\n                    </Title>\n                </Col>\n                <Col span={24} className='container'>\n                    <OfferInfoItemWrapper>\n                        <PropertyName>\n                            <Text>{t('quantity')}</Text>\n                        </PropertyName>\n                        <PropertyDescription>\n                            <Text>\n                                {\n                                    !loading\n                                        ? qty\n                                            ? <span style={{marginLeft: 10}}>{`${qty} ${t('peaces')}`}</span>\n                                            : <IconBox><InfinitySvg/></IconBox>\n                                        : ''\n                                }\n                            </Text>\n                        </PropertyDescription>\n                    </OfferInfoItemWrapper>\n                </Col>\n                {\n                    colorsParam && colorsParam?.value && (\n                        <Col span={24} className='container'>\n                            <OfferingColorItemWrapper>\n                                <PropertyName>\n                                    <Text>{t('color')}</Text>\n                                </PropertyName>\n                                <PropertyDescription>\n                                    {\n                                        colorsParam.value.map((item, idx) => (\n                                            <OfferingColorItem\n                                                key={`${idx + 1}`}\n                                                backgroundColor={getColor(item)}\n                                            />\n                                        ))\n                                    }\n                                </PropertyDescription>\n                            </OfferingColorItemWrapper>\n                        </Col>\n                    )\n                }\n                <Col span={24} className='info-bottom-line container'/>\n            </Row>\n        </OfferShortInfoWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}