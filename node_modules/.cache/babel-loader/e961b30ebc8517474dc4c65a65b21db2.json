{"ast":null,"code":"import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"label\",\"error\",\"onBlur\",\"search\",\"options\",\"loading\",\"onSearch\",\"onChange\",\"onLoadMore\",\"helperText\",\"staticError\",\"defaultValue\",\"hideErrorText\"];import React,{useState}from'react';import{Avatar}from'../../Avatar';import{TextField}from'@material-ui/core';import{Autocomplete}from'@material-ui/lab';import{ArrowIosBottomSvg}from'../../../Icons/Arrow';import{debounce}from'../../../utils/debounce-utils';import{StyledFormControl,StyledHelperText,StyledInputError}from'../atoms';export var AutocompleteSelect=function AutocompleteSelect(_ref){var label=_ref.label,error=_ref.error,onBlur=_ref.onBlur,search=_ref.search,options=_ref.options,loading=_ref.loading,onSearch=_ref.onSearch,onChange=_ref.onChange,onLoadMore=_ref.onLoadMore,helperText=_ref.helperText,staticError=_ref.staticError,defaultValue=_ref.defaultValue,hideErrorText=_ref.hideErrorText,props=_objectWithoutProperties(_ref,_excluded);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputValue=_useState2[0],setInputValue=_useState2[1];var renderOption=function renderOption(option){return/*#__PURE__*/React.createElement(React.Fragment,null,option.image&&/*#__PURE__*/React.createElement(Avatar,{imgUrl:option.image,size:24}),option.label);};var handleChange=function handleChange(e,newValue){onChange(newValue);};var handleBlur=function handleBlur(){if(inputValue.length>0){debounce(onSearch(''),300);setInputValue('');}onBlur();};return/*#__PURE__*/React.createElement(StyledFormControl,null,/*#__PURE__*/React.createElement(Autocomplete,Object.assign({},props,{limitTags:2,options:options,onBlur:handleBlur,autoComplete:true,loading:loading,includeInputInList:true,popupIcon:/*#__PURE__*/React.createElement(ArrowIosBottomSvg,null),renderOption:renderOption,filterOptions:function filterOptions(v){return v;},classes:{paper:'select-dropdown'},getOptionLabel:function getOptionLabel(option){return option.label;},ListboxProps:{onScroll:onLoadMore,style:{maxHeight:30*8+8}},onChange:function onChange(e,value){return handleChange(e,value);},getOptionSelected:function getOptionSelected(option,values){return props.multiple?option.value===values.value:!!option.value&&!!values.value;},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{onChange:function onChange(e){setInputValue(e.target.value);debounce(onSearch(e.target.value),300);},label:label,variant:\"filled\",error:!!error}));}})),helperText&&/*#__PURE__*/React.createElement(StyledHelperText,null,helperText),!hideErrorText&&error&&/*#__PURE__*/React.createElement(StyledInputError,{staticError:staticError},error));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/UIComponents/mu-inputs/maleculas/autocomplete-select.js"],"names":["React","useState","Avatar","TextField","Autocomplete","ArrowIosBottomSvg","debounce","StyledFormControl","StyledHelperText","StyledInputError","AutocompleteSelect","label","error","onBlur","search","options","loading","onSearch","onChange","onLoadMore","helperText","staticError","defaultValue","hideErrorText","props","inputValue","setInputValue","renderOption","option","image","handleChange","e","newValue","handleBlur","length","v","paper","onScroll","style","maxHeight","value","values","multiple","params","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {Avatar} from '../../Avatar'\r\nimport {TextField} from '@material-ui/core'\r\nimport {Autocomplete} from '@material-ui/lab'\r\nimport {ArrowIosBottomSvg} from '../../../Icons/Arrow'\r\nimport {debounce} from '../../../utils/debounce-utils'\r\nimport {StyledFormControl, StyledHelperText, StyledInputError} from '../atoms'\r\n\r\nexport const AutocompleteSelect = (\r\n    {\r\n        label,\r\n        error,\r\n        onBlur,\r\n        search,\r\n        options,\r\n        loading,\r\n        onSearch,\r\n        onChange,\r\n        onLoadMore,\r\n        helperText,\r\n        staticError,\r\n        defaultValue,\r\n        hideErrorText,\r\n        ...props\r\n    }\r\n) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const renderOption = (option) => {\r\n        return (\r\n            <>\r\n                {option.image && <Avatar imgUrl={option.image} size={24}/>}\r\n                {option.label}\r\n            </>\r\n        )\r\n    }\r\n    \r\n    const handleChange = (e, newValue) => {\r\n        onChange(newValue)\r\n    }\r\n    \r\n    const handleBlur = () => {\r\n        if (inputValue.length > 0) {\r\n            debounce(onSearch(''), 300)\r\n            setInputValue('')\r\n        }\r\n        onBlur()\r\n    }\r\n    \r\n    return (\r\n        <StyledFormControl>\r\n            <Autocomplete\r\n                {...props}\r\n                limitTags={2}\r\n                options={options}\r\n                onBlur={handleBlur}\r\n                autoComplete\r\n                loading={loading}\r\n                includeInputInList\r\n                popupIcon={<ArrowIosBottomSvg/>}\r\n                renderOption={renderOption}\r\n                filterOptions={(v) => v}\r\n                classes={{paper: 'select-dropdown'}}\r\n                getOptionLabel={option => option.label}\r\n                ListboxProps={{onScroll: onLoadMore, style: {maxHeight: 30 * 8 + 8}}}\r\n                onChange={(e, value) => handleChange(e, value)}\r\n                getOptionSelected={(option, values) => props.multiple ? option.value === values.value : !!option.value && !!values.value}\r\n                renderInput={(params) => {\r\n                    return (\r\n                        <TextField\r\n                            {...params}\r\n                            onChange={(e) => {\r\n                                setInputValue(e.target.value)\r\n                                debounce(onSearch(e.target.value), 300)\r\n                            }}\r\n                            label={label}\r\n                            variant='filled'\r\n                            error={!!error}\r\n                        />\r\n                    )\r\n                }}\r\n            />\r\n            {helperText && <StyledHelperText>{helperText}</StyledHelperText>}\r\n            {!hideErrorText && error && <StyledInputError staticError={staticError}>{error}</StyledInputError>}\r\n        </StyledFormControl>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}