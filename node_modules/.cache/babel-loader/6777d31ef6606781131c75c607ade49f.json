{"ast":null,"code":"import moment from 'moment';\nimport i18next from 'i18next';\nexport const getDWEDChatDetailTime = date => {\n  const last = moment(date);\n  const now = moment(new Date());\n  const duration = moment.duration(now.diff(last));\n\n  if (duration.asHours() < 1) {\n    return last.fromNow();\n  } else if (duration.asHours() > 1 && duration.asDays() < 2) {\n    return last.calendar().toLowerCase();\n  } else if (duration.asDays() > 2 && duration.asDays() < 8) {\n    const weekDay = moment.weekdays()[last.isoWeekday()];\n    return `${weekDay}, ${last.format('HH:mm')}`;\n  } else if (duration.asDays() > 7) {\n    return last.format('DD.MM.YYYY');\n  }\n};\nexport const getDWEDCHatListTime = date => {\n  const last = moment(date);\n  const now = moment(new Date());\n  const duration = moment.duration(now.diff(last));\n  return last.calendar(null, {\n    sameDay: 'HH:mm',\n    lastDay: 'dd',\n    lastWeek: 'dd',\n    sameElse: duration.asYears() > 1 ? 'DD.MM.YY' : 'DD.MM'\n  });\n};\nexport const getDWEDGroupOfChatTime = date => {\n  const last = moment(date);\n  const now = moment(new Date());\n  const duration = moment.duration(now.diff(last));\n\n  if (duration.asDays() < 1) {\n    return i18next.t('today');\n  } else {\n    return last.format('D MMMM');\n  }\n};\nexport const getWeekDay = date => new Date(date).toLocaleString('en-US', {\n  weekday: 'short'\n}).toLowerCase();\nexport const getDateTime = number => {\n  const now = new Date().toDateString();\n  const time = String(number.toFixed(2)).split('.').join(':');\n  return new Date(`${now} ${time}`);\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/utils/time-utils.js"],"names":["moment","i18next","getDWEDChatDetailTime","date","last","now","Date","duration","diff","asHours","fromNow","asDays","calendar","toLowerCase","weekDay","weekdays","isoWeekday","format","getDWEDCHatListTime","sameDay","lastDay","lastWeek","sameElse","asYears","getDWEDGroupOfChatTime","t","getWeekDay","toLocaleString","weekday","getDateTime","number","toDateString","time","String","toFixed","split","join"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport i18next from 'i18next'\n\nexport const getDWEDChatDetailTime = (date) => {\n    const last = moment(date)\n    const now = moment(new Date())\n    const duration = moment.duration(now.diff(last))\n\n    if (duration.asHours() < 1) {\n        return last.fromNow()\n    } else if (duration.asHours() > 1 && duration.asDays() < 2 ) {\n        return last.calendar().toLowerCase()\n    }else if(duration.asDays() > 2 && duration.asDays() < 8) {\n        const weekDay = moment.weekdays()[last.isoWeekday()]\n        return `${weekDay}, ${last.format('HH:mm')}`\n    }else if(duration.asDays() > 7){\n        return last.format('DD.MM.YYYY')\n    }\n}\n\nexport const getDWEDCHatListTime= (date) => {\n    const last = moment(date)\n    const now = moment(new Date())\n    const duration = moment.duration(now.diff(last))\n\n    return last.calendar(null, {\n            sameDay: 'HH:mm',\n            lastDay: 'dd',\n            lastWeek: 'dd',\n            sameElse: duration.asYears() > 1 ? 'DD.MM.YY' : 'DD.MM'\n        })\n\n}\n\nexport const getDWEDGroupOfChatTime = (date) => {\n    const last = moment(date)\n    const now = moment(new Date())\n    const duration = moment.duration(now.diff(last))\n\n    if(duration.asDays() < 1) {\n        return i18next.t('today')\n    }else {\n        return last.format('D MMMM')\n    }\n}\n\nexport const getWeekDay = (date) => new Date(date).toLocaleString('en-US', {weekday: 'short'}).toLowerCase()\n\nexport const getDateTime = (number) => {\n    const now = new Date().toDateString()\n    const time = String(number.toFixed(2)).split('.').join(':')\n    return new Date(`${now} ${time}`)\n}\n"]},"metadata":{},"sourceType":"module"}