{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/OfferingPage/organisms/offering-description.jsx\";\nimport React, { useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { Description } from '../atoms';\nimport { useStore } from 'effector-react';\nimport { useTranslation } from 'react-i18next';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { SkeletonUI } from '../../../UIComponents/GlobalStyles';\nimport { $offeringsModel } from '../../../Models/offerings-model';\nimport { truncateString } from '../../../utils/stringUtils';\nexport const OfferingDescription = () => {\n  const {\n    t\n  } = useTranslation();\n  const [truncate, setTruncate] = useState(false);\n  const {\n    $offeringInfo: {\n      data,\n      forceLoading\n    }\n  } = useStore($offeringsModel);\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    level: 5,\n    color: \"var(--grey-dwed)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, `${t('description')}:`)), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, forceLoading === 2 ? /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 29\n    }\n  }, data.length > 150 ? /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 43\n    }\n  }, truncateString(data === null || data === void 0 ? void 0 : data.description, 150)) : /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 43\n    }\n  }, data === null || data === void 0 ? void 0 : data.description)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SkeletonUI, {\n    variant: \"text\",\n    width: \"100%\",\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(SkeletonUI, {\n    variant: \"text\",\n    width: \"100%\",\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(SkeletonUI, {\n    variant: \"text\",\n    width: \"100%\",\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(SkeletonUI, {\n    variant: \"text\",\n    width: \"100%\",\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(SkeletonUI, {\n    variant: \"text\",\n    width: \"100%\",\n    height: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/OfferingPage/organisms/offering-description.jsx"],"names":["React","useState","Col","Row","Description","useStore","useTranslation","Text","SkeletonUI","$offeringsModel","truncateString","OfferingDescription","t","truncate","setTruncate","$offeringInfo","data","forceLoading","length","description"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,WAAR,QAA0B,UAA1B;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,IAAR,QAAmB,uCAAnB;AACA,SAAQC,UAAR,QAAyB,oCAAzB;AACA,SAAQC,eAAR,QAA8B,iCAA9B;AACA,SAAQC,cAAR,QAA6B,4BAA7B;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACrC,QAAM;AAACC,IAAAA;AAAD,MAAMN,cAAc,EAA1B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAACc,IAAAA,aAAa,EAAE;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP;AAAhB,MAAwCZ,QAAQ,CAACI,eAAD,CAAtD;AAEA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,SAAS,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAb;AAAgB,IAAA,KAAK,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2C,GAAEG,CAAC,CAAC,aAAD,CAAgB,GAA9D,CADJ,CADJ,eAII,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,SAAS,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQK,YAAY,KAAK,CAAjB,gBAEQ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,IAAI,CAACE,MAAL,GAAc,GAAd,gBACM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,cAAc,CAACM,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,WAAP,EAAoB,GAApB,CAArB,CADN,gBAEM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEG,WAAb,CAJd,CAFR,gBAWQ,uDACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,MAApB;AAA2B,IAAA,KAAK,EAAC,MAAjC;AAAwC,IAAA,MAAM,EAAE,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,MAApB;AAA2B,IAAA,KAAK,EAAC,MAAjC;AAAwC,IAAA,MAAM,EAAE,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,MAApB;AAA2B,IAAA,KAAK,EAAC,MAAjC;AAAwC,IAAA,MAAM,EAAE,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,MAApB;AAA2B,IAAA,KAAK,EAAC,MAAjC;AAAwC,IAAA,MAAM,EAAE,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,MAApB;AAA2B,IAAA,KAAK,EAAC,MAAjC;AAAwC,IAAA,MAAM,EAAE,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAbhB,CAJJ,CADJ;AA8BH,CAnCM","sourcesContent":["import React, {useState} from 'react'\nimport {Col, Row} from 'antd'\nimport {Description} from '../atoms'\nimport {useStore} from 'effector-react'\nimport {useTranslation} from 'react-i18next'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {SkeletonUI} from '../../../UIComponents/GlobalStyles'\nimport {$offeringsModel} from '../../../Models/offerings-model'\nimport {truncateString} from '../../../utils/stringUtils'\n\nexport const OfferingDescription = () => {\n    const {t} = useTranslation()\n    const [truncate, setTruncate] = useState(false)\n    const {$offeringInfo: {data, forceLoading}} = useStore($offeringsModel)\n    \n    return (\n        <Row>\n            <Col span={24} className='container'>\n                <Text level={5} color='var(--grey-dwed)'>{`${t('description')}:`}</Text>\n            </Col>\n            <Col span={24} className='container'>\n                {\n                    forceLoading === 2\n                        ? (\n                            <Description>\n                                {\n                                    data.length > 150\n                                        ? <Text>{truncateString(data?.description, 150)}</Text>\n                                        : <Text>{data?.description}</Text>\n                                }\n                            </Description>\n                        )\n                        : (\n                            <>\n                                <SkeletonUI variant='text' width='100%' height={12}/>\n                                <SkeletonUI variant='text' width='100%' height={12}/>\n                                <SkeletonUI variant='text' width='100%' height={12}/>\n                                <SkeletonUI variant='text' width='100%' height={12}/>\n                                <SkeletonUI variant='text' width='100%' height={12}/>\n                            </>\n                        )\n                }\n            </Col>\n        </Row>\n    )\n}"]},"metadata":{},"sourceType":"module"}