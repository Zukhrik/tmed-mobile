{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Post/organisms/page-indicators.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { usePostPageIndicator } from '../../../Hooks/post';\nimport { postControlData } from '../../../data';\nimport { IconBox } from '../../../UIComponents/GlobalStyles';\nimport { POST_ACTIONS } from '../../../Constants';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { IconItemWrapper } from '../atoms';\nimport { useTranslation } from 'react-i18next';\nexport const PageIndicators = ({\n  data\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    handleChangeLike\n  } = usePostPageIndicator(data);\n  return /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    justify: \"space-around\",\n    style: {\n      borderBottom: ' 1px solid rgba(38, 38, 38, 0.1)',\n      height: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, data && postControlData.map(item => {\n    const Icon = item.icon(data.is_liked);\n    return /*#__PURE__*/React.createElement(Col, {\n      key: item.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IconItemWrapper, {\n      onClick: () => handleChangeLike(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IconBox, {\n      color: item.count === POST_ACTIONS.LIKES_COUNT && !!data.is_liked ? 'var(--danger-dwed)' : 'var(--grey-dwed)',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    }, t(item.title))));\n  }));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Post/organisms/page-indicators.jsx"],"names":["React","Col","Row","usePostPageIndicator","postControlData","IconBox","POST_ACTIONS","Text","IconItemWrapper","useTranslation","PageIndicators","data","t","handleChangeLike","borderBottom","height","map","item","Icon","icon","is_liked","count","LIKES_COUNT","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,oBAAR,QAAmC,qBAAnC;AACA,SAAQC,eAAR,QAA8B,eAA9B;AACA,SAAQC,OAAR,QAAsB,oCAAtB;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AACA,SAAQC,IAAR,QAAmB,uCAAnB;AACA,SAAQC,eAAR,QAA8B,UAA9B;AACA,SAAQC,cAAR,QAA6B,eAA7B;AAGA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACtC,QAAM;AAACC,IAAAA;AAAD,MAAMH,cAAc,EAA1B;AACA,QAAM;AAACI,IAAAA;AAAD,MAAqBV,oBAAoB,CAACQ,IAAD,CAA/C;AAEA,sBACI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,QAAX;AAAoB,IAAA,OAAO,EAAC,cAA5B;AACK,IAAA,KAAK,EAAE;AAACG,MAAAA,YAAY,EAAE,kCAAf;AAAmDC,MAAAA,MAAM,EAAE;AAA3D,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQJ,IAAI,IAAIP,eAAe,CAACY,GAAhB,CAAoBC,IAAI,IAAI;AAChC,UAAMC,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUR,IAAI,CAACS,QAAf,CAAb;AACA,wBACI,oBAAC,GAAD;AACI,MAAA,GAAG,EAAEH,IAAI,CAACE,IADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,eAAD;AACI,MAAA,OAAO,EAAE,MAAMN,gBAAgB,CAACI,IAAD,CADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,OAAD;AACI,MAAA,KAAK,EACDA,IAAI,CAACI,KAAL,KAAef,YAAY,CAACgB,WAA5B,IAA2C,CAAC,CAACX,IAAI,CAACS,QAAlD,GACM,oBADN,GAEM,kBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAHJ,eAYI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,CAAC,CAACK,IAAI,CAACM,KAAN,CADN,CAZJ,CAHJ,CADJ;AAsBH,GAxBO,CAHhB,CADJ;AAgCH,CApCM","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {usePostPageIndicator} from '../../../Hooks/post'\nimport {postControlData} from '../../../data'\nimport {IconBox} from '../../../UIComponents/GlobalStyles'\nimport {POST_ACTIONS} from '../../../Constants'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {IconItemWrapper} from '../atoms'\nimport {useTranslation} from 'react-i18next'\n\n\nexport const PageIndicators = ({data}) => {\n    const {t} = useTranslation()\n    const {handleChangeLike} = usePostPageIndicator(data)\n    \n    return (\n        <Row align='middle' justify='space-around'\n             style={{borderBottom: ' 1px solid rgba(38, 38, 38, 0.1)', height: 40}}>\n            {\n                data && postControlData.map(item => {\n                    const Icon = item.icon(data.is_liked)\n                    return (\n                        <Col\n                            key={item.icon}\n                        >\n                            <IconItemWrapper\n                                onClick={() => handleChangeLike(item)}\n                            >\n                                <IconBox\n                                    color={\n                                        item.count === POST_ACTIONS.LIKES_COUNT && !!data.is_liked\n                                            ? 'var(--danger-dwed)'\n                                            : 'var(--grey-dwed)'\n                                    }\n                                >\n                                    <Icon/>\n                                </IconBox>\n                                <Text>\n                                    {t(item.title)}\n                                </Text>\n                            </IconItemWrapper>\n                        </Col>\n                    )\n                })\n            }\n        </Row>\n    )\n}"]},"metadata":{},"sourceType":"module"}