{"ast":null,"code":"import React from'react';import{CreateCard}from'./CreateCard';import{PaymentMethod}from'./PaymentMethod';import{useAccountCard}from'../../../../../Hooks/payment';import{useCreateAccountCard}from'../../../../../Hooks/account';export var CreditCardDetail=function CreditCardDetail(_ref){var cardWrapper=_ref.cardWrapper,setCardWrapper=_ref.setCardWrapper,onClose=_ref.onClose,payment=_ref.payment,setPayment=_ref.setPayment;useAccountCard();var _useCreateAccountCard=useCreateAccountCard({onClose:onClose,setPayment:setPayment,payment:payment}),formik=_useCreateAccountCard.formik,cardId=_useCreateAccountCard.cardId,deadline=_useCreateAccountCard.deadline,setCardId=_useCreateAccountCard.setCardId,codeFormik=_useCreateAccountCard.codeFormik,showResend=_useCreateAccountCard.showResend,resendCode=_useCreateAccountCard.resendCode,handleChange=_useCreateAccountCard.handleChange,setShowResend=_useCreateAccountCard.setShowResend,disabledButton=_useCreateAccountCard.disabledButton,handleChangeCode=_useCreateAccountCard.handleChangeCode,disabledButtonCode=_useCreateAccountCard.disabledButtonCode;var handleAdd=function handleAdd(){setCardWrapper(true);setCardId(undefined);};return/*#__PURE__*/React.createElement(React.Fragment,null,cardWrapper?/*#__PURE__*/React.createElement(CreateCard,{deadline:deadline,showResend:showResend,cardId:cardId,setShowResend:setShowResend,formik:formik,setPayment:setPayment,resendCode:resendCode,codeFormik:codeFormik,handleChange:handleChange,disabledButton:disabledButton,handleChangeCode:handleChangeCode,disabledButtonCode:disabledButtonCode}):/*#__PURE__*/React.createElement(PaymentMethod,{setCardId:setCardId,setCardWrapper:setCardWrapper,onClose:onClose,handleAddCard:handleAdd,setPayment:setPayment,payment:payment}));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Checkout/InfoCard/CheckoutDetail/CreditCardDetail/index.jsx"],"names":["React","CreateCard","PaymentMethod","useAccountCard","useCreateAccountCard","CreditCardDetail","cardWrapper","setCardWrapper","onClose","payment","setPayment","formik","cardId","deadline","setCardId","codeFormik","showResend","resendCode","handleChange","setShowResend","disabledButton","handleChangeCode","disabledButtonCode","handleAdd","undefined"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,UAAR,KAAyB,cAAzB,CACA,OAAQC,aAAR,KAA4B,iBAA5B,CACA,OAAQC,cAAR,KAA6B,8BAA7B,CACA,OAAQC,oBAAR,KAAmC,8BAAnC,CAGA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAiE,IAA/DC,CAAAA,WAA+D,MAA/DA,WAA+D,CAAlDC,cAAkD,MAAlDA,cAAkD,CAAlCC,OAAkC,MAAlCA,OAAkC,CAAzBC,OAAyB,MAAzBA,OAAyB,CAAhBC,UAAgB,MAAhBA,UAAgB,CAC7FP,cAAc,GACd,0BAaIC,oBAAoB,CAAC,CAACI,OAAO,CAAPA,OAAD,CAAUE,UAAU,CAAVA,UAAV,CAAsBD,OAAO,CAAPA,OAAtB,CAAD,CAbxB,CACIE,MADJ,uBACIA,MADJ,CAEIC,MAFJ,uBAEIA,MAFJ,CAGIC,QAHJ,uBAGIA,QAHJ,CAIIC,SAJJ,uBAIIA,SAJJ,CAKIC,UALJ,uBAKIA,UALJ,CAMIC,UANJ,uBAMIA,UANJ,CAOIC,UAPJ,uBAOIA,UAPJ,CAQIC,YARJ,uBAQIA,YARJ,CASIC,aATJ,uBASIA,aATJ,CAUIC,cAVJ,uBAUIA,cAVJ,CAWIC,gBAXJ,uBAWIA,gBAXJ,CAYIC,kBAZJ,uBAYIA,kBAZJ,CAeA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpBhB,cAAc,CAAC,IAAD,CAAd,CACAO,SAAS,CAACU,SAAD,CAAT,CACH,CAHD,CAMA,mBACI,wCAEQlB,WAAW,cAEH,oBAAC,UAAD,EACI,QAAQ,CAAEO,QADd,CAEI,UAAU,CAAEG,UAFhB,CAGI,MAAM,CAAEJ,MAHZ,CAII,aAAa,CAAEO,aAJnB,CAKI,MAAM,CAAER,MALZ,CAMI,UAAU,CAAED,UANhB,CAOI,UAAU,CAAEO,UAPhB,CAQI,UAAU,CAAEF,UARhB,CASI,YAAY,CAAEG,YATlB,CAUI,cAAc,CAAEE,cAVpB,CAWI,gBAAgB,CAAEC,gBAXtB,CAYI,kBAAkB,CAAEC,kBAZxB,EAFG,cAiBL,oBAAC,aAAD,EACE,SAAS,CAAER,SADb,CAEE,cAAc,CAAEP,cAFlB,CAGE,OAAO,CAAEC,OAHX,CAIE,aAAa,CAAEe,SAJjB,CAKE,UAAU,CAAEb,UALd,CAME,OAAO,CAAED,OANX,EAnBd,CADJ,CA+BH,CAtDM","sourcesContent":["import React from 'react'\nimport {CreateCard} from './CreateCard'\nimport {PaymentMethod} from './PaymentMethod'\nimport {useAccountCard} from '../../../../../Hooks/payment'\nimport {useCreateAccountCard} from '../../../../../Hooks/account'\n\n\nexport const CreditCardDetail = ({cardWrapper, setCardWrapper, onClose, payment, setPayment}) => {\n    useAccountCard()\n    const {\n        formik,\n        cardId,\n        deadline,\n        setCardId,\n        codeFormik,\n        showResend,\n        resendCode,\n        handleChange,\n        setShowResend,\n        disabledButton,\n        handleChangeCode,\n        disabledButtonCode\n    } = useCreateAccountCard({onClose, setPayment, payment})\n    \n    const handleAdd = () => {\n        setCardWrapper(true)\n        setCardId(undefined)\n    }\n    \n    \n    return (\n        <>\n            {\n                cardWrapper\n                    ? (\n                        <CreateCard\n                            deadline={deadline}\n                            showResend={showResend}\n                            cardId={cardId}\n                            setShowResend={setShowResend}\n                            formik={formik}\n                            setPayment={setPayment}\n                            resendCode={resendCode}\n                            codeFormik={codeFormik}\n                            handleChange={handleChange}\n                            disabledButton={disabledButton}\n                            handleChangeCode={handleChangeCode}\n                            disabledButtonCode={disabledButtonCode}\n                        />\n                    )\n                    : <PaymentMethod\n                        setCardId={setCardId}\n                        setCardWrapper={setCardWrapper}\n                        onClose={onClose}\n                        handleAddCard={handleAdd}\n                        setPayment={setPayment}\n                        payment={payment}\n                    />\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}