{"ast":null,"code":"import _defineProperty from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useState}from'react';import{useUrlParams}from'../app';import order from'../../Service/order';import{URL_KEYS}from'../../Constants';import{useParams}from'react-router-dom';import{useTranslation}from'react-i18next';import{getMeasurement}from'../../utils/get-measurement';import{getOrgOrderCartsMount}from'../../Models/order-model';import{showMessage}from'../../UIComponents/MessageNotification';export function useManageCount(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useUrlParams=useUrlParams(),urlData=_useUrlParams.urlData;var _useParams=useParams(),organization=_useParams.organization;var specId=urlData[URL_KEYS.SPECIALIST_ID];var _useState=useState({}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var initialParams={limit:10,offset:0};var handleDecrement=useCallback(function(item){if(item.qty!==item.offering.min_qty){var params={offering_id:item.offering.id,data:{qty:item.qty-item.offering.min_qty}};order.updateOrgOrderCart(params).then(function(res){if(res){var data={clear:true,org_slug_name:organization,params:_objectSpread(_objectSpread({},initialParams),{},{responsible:specId})};getOrgOrderCartsMount(data);}});}},[initialParams,organization,specId]);var handleIncrement=useCallback(function(item){if(item.offering.qty>item.qty||!item.offering.qty){var params={offering_id:item.offering.id,data:{qty:item.qty+item.offering.min_qty}};order.updateOrgOrderCart(params).then(function(res){if(res){var data={clear:true,org_slug_name:organization,params:_objectSpread(_objectSpread({},initialParams),{},{responsible:specId})};getOrgOrderCartsMount(data);}});}},[organization,initialParams,specId]);var handleChange=useCallback(function(value,_ref){var offering=_ref.offering;setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},offering.id,value.replace(/\\D/g,''))));},[values]);var handleBlur=useCallback(function(offering,qty){var value=values[offering.id]!==undefined&&values[offering.id]!==''&&Number(values[offering.id]);if(value){if(offering.qty&&value>offering.qty){showMessage(t('in_stock_var',{q:offering.qty,m:t(getMeasurement(offering.measurement,'label'))}),'danger',false);setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},offering.id,qty)));return false;}else if(offering.max_qty&&value>offering.max_qty){showMessage(t('max_count_purchases_var',{q:offering.max_qty,m:t(getMeasurement(offering.measurement,'label'))}),'danger',false);setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},offering.id,offering.max_qty)));return false;}else if(value>offering.min_qty&&offering.max_qty){showMessage(t('min_count_purchases_var',{q:offering.min_qty,m:t(getMeasurement(offering.measurement,'label'))}),'danger',false);setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},offering.id,offering.min_qty)));return false;}}else{showMessage(t('min_count_purchases_var',{q:offering.min_qty,m:t(getMeasurement(offering.measurement,'label'))}),'danger',false);setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},offering.id,offering.min_qty)));return false;}},[values,t]);return{handleIncrement:handleIncrement,handleDecrement:handleDecrement,handleChange:handleChange,handleBlur:handleBlur,values:values,setValues:setValues};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/order/use-manage-count.js"],"names":["useCallback","useState","useUrlParams","order","URL_KEYS","useParams","useTranslation","getMeasurement","getOrgOrderCartsMount","showMessage","useManageCount","t","urlData","organization","specId","SPECIALIST_ID","values","setValues","initialParams","limit","offset","handleDecrement","item","qty","offering","min_qty","params","offering_id","id","data","updateOrgOrderCart","then","res","clear","org_slug_name","responsible","handleIncrement","handleChange","value","replace","handleBlur","undefined","Number","q","m","measurement","max_qty"],"mappings":"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","sourcesContent":["import {useCallback, useState} from 'react'\nimport {useUrlParams} from '../app'\nimport order from '../../Service/order'\nimport {URL_KEYS} from '../../Constants'\nimport {useParams} from 'react-router-dom'\nimport {useTranslation} from 'react-i18next'\nimport {getMeasurement} from '../../utils/get-measurement'\nimport {getOrgOrderCartsMount} from '../../Models/order-model'\nimport {showMessage} from '../../UIComponents/MessageNotification'\n\n\nexport function useManageCount() {\n    const {t} = useTranslation()\n    const {urlData} = useUrlParams()\n    const {organization} = useParams()\n    const specId = urlData[URL_KEYS.SPECIALIST_ID]\n    const [values, setValues] = useState({})\n    \n    const initialParams = {\n        limit: 10,\n        offset: 0\n    }\n    \n    \n    const handleDecrement = useCallback((item) => {\n        if (item.qty !== item.offering.min_qty) {\n            const params = {\n                offering_id: item.offering.id,\n                data: {\n                    qty: item.qty - item.offering.min_qty\n                }\n            }\n            \n            order.updateOrgOrderCart(params)\n                .then(res => {\n                    if (res) {\n                        const data = {\n                            clear: true,\n                            org_slug_name: organization,\n                            params: {\n                                ...initialParams,\n                                responsible: specId\n                            }\n                        }\n                        getOrgOrderCartsMount(data)\n                    }\n                })\n        }\n    }, [initialParams, organization, specId])\n    \n    const handleIncrement = useCallback((item) => {\n        if (item.offering.qty > item.qty || !item.offering.qty) {\n            const params = {\n                offering_id: item.offering.id,\n                data: {\n                    qty: item.qty + item.offering.min_qty\n                }\n            }\n            order.updateOrgOrderCart(params)\n                .then(res => {\n                    if (res) {\n                        const data = {\n                            clear: true,\n                            org_slug_name: organization,\n                            params: {\n                                ...initialParams,\n                                responsible: specId\n                            }\n                        }\n                        getOrgOrderCartsMount(data)\n                    }\n                })\n        }\n    }, [organization, initialParams, specId])\n    \n    const handleChange = useCallback((value, {offering}) => {\n        setValues({...values, [offering.id]: value.replace(/\\D/g, '')})\n    }, [values])\n    \n    const handleBlur = useCallback((offering, qty) => {\n        const value = values[offering.id] !== undefined && values[offering.id] !== '' && Number(values[offering.id])\n        \n        if (value) {\n            if (offering.qty && value > offering.qty) {\n                showMessage(\n                    t('in_stock_var', {q: offering.qty, m: t(getMeasurement(offering.measurement, 'label'))}),\n                    'danger',\n                    false\n                )\n                setValues({...values, [offering.id]: qty})\n                return false\n            } else if (offering.max_qty && value > offering.max_qty) {\n                showMessage(\n                    t('max_count_purchases_var', {\n                        q: offering.max_qty,\n                        m: t(getMeasurement(offering.measurement, 'label'))\n                    }),\n                    'danger',\n                    false\n                )\n                setValues({...values, [offering.id]: offering.max_qty})\n                return false\n            } else if (value > offering.min_qty && offering.max_qty) {\n                showMessage(\n                    t('min_count_purchases_var', {\n                        q: offering.min_qty,\n                        m: t(getMeasurement(offering.measurement, 'label'))\n                    }),\n                    'danger',\n                    false\n                )\n                setValues({...values, [offering.id]: offering.min_qty})\n                \n                return false\n            }\n        } else {\n            showMessage(\n                t('min_count_purchases_var', {\n                    q: offering.min_qty,\n                    m: t(getMeasurement(offering.measurement, 'label'))\n                }),\n                'danger',\n                false\n            )\n            setValues({...values, [offering.id]: offering.min_qty})\n            return false\n        }\n        \n    }, [values, t])\n    \n    return {handleIncrement, handleDecrement, handleChange, handleBlur, values, setValues}\n}"]},"metadata":{},"sourceType":"module"}