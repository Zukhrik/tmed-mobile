{"ast":null,"code":"import { useCallback, useEffect } from 'react';\nimport { idbGet } from '../../Config/db';\nimport { onlineUserMountFromIDB } from '../../Models/user-model';\nimport { useStore } from 'effector-react';\nimport { $appModel } from '../../Models/app';\nexport function useAppDb() {\n  const {\n    $app: {\n      token\n    }\n  } = useStore($appModel);\n  const getOnlineAccounts = useCallback(() => {\n    if (token) {\n      idbGet('online_accounts', 'online_accounts').then(res => {\n        if (res) {\n          const data = JSON.parse(res);\n          onlineUserMountFromIDB(data);\n        }\n      });\n    }\n  }, [token]);\n  useEffect(() => {\n    getOnlineAccounts();\n  }, [getOnlineAccounts]);\n  const setStyleProperty = useCallback(() => {\n    let vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n  }, []);\n  useEffect(() => {\n    setStyleProperty();\n    window.addEventListener('resize', setStyleProperty);\n    return () => {\n      window.removeEventListener('resize', setStyleProperty);\n    };\n  }, [setStyleProperty]);\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Hooks/app/use-app-db.js"],"names":["useCallback","useEffect","idbGet","onlineUserMountFromIDB","useStore","$appModel","useAppDb","$app","token","getOnlineAccounts","then","res","data","JSON","parse","setStyleProperty","vh","window","innerHeight","document","documentElement","style","setProperty","addEventListener","removeEventListener"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,QAAqC,OAArC;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SAAQC,sBAAR,QAAqC,yBAArC;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAO,SAASC,QAAT,GAAoB;AACvB,QAAM;AAACC,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAAkBJ,QAAQ,CAACC,SAAD,CAAhC;AACA,QAAMI,iBAAiB,GAAGT,WAAW,CAAC,MAAM;AACxC,QAAIQ,KAAJ,EAAW;AACPN,MAAAA,MAAM,CAAC,iBAAD,EAAoB,iBAApB,CAAN,CACKQ,IADL,CACWC,GAAD,IAAS;AACX,YAAIA,GAAJ,EAAS;AACL,gBAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAb;AACAR,UAAAA,sBAAsB,CAACS,IAAD,CAAtB;AACH;AACJ,OANL;AAOH;AACJ,GAVoC,EAUlC,CAACJ,KAAD,CAVkC,CAArC;AAYAP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;AAIA,QAAMM,gBAAgB,GAAGf,WAAW,CAAC,MAAM;AACvC,QAAIgB,EAAE,GAAGC,MAAM,CAACC,WAAP,GAAqB,IAA9B;AACAC,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,WAA/B,CAA2C,MAA3C,EAAoD,GAAEN,EAAG,IAAzD;AACH,GAHmC,EAGjC,EAHiC,CAApC;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,gBAAgB;AAChBE,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCR,gBAAlC;AAEA,WAAO,MAAM;AACTE,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCT,gBAArC;AACH,KAFD;AAGH,GAPQ,EAON,CAACA,gBAAD,CAPM,CAAT;AAQH","sourcesContent":["import {useCallback, useEffect} from 'react'\nimport {idbGet} from '../../Config/db'\nimport {onlineUserMountFromIDB} from '../../Models/user-model'\nimport {useStore} from 'effector-react'\nimport {$appModel} from '../../Models/app'\n\nexport function useAppDb() {\n    const {$app: {token}} = useStore($appModel)\n    const getOnlineAccounts = useCallback(() => {\n        if (token) {\n            idbGet('online_accounts', 'online_accounts')\n                .then((res) => {\n                    if (res) {\n                        const data = JSON.parse(res)\n                        onlineUserMountFromIDB(data)\n                    }\n                })\n        }\n    }, [token])\n\n    useEffect(() => {\n        getOnlineAccounts()\n    }, [getOnlineAccounts])\n\n    const setStyleProperty = useCallback(() => {\n        let vh = window.innerHeight * 0.01\n        document.documentElement.style.setProperty('--vh', `${vh}px`)\n    }, [])\n\n\n    useEffect(() => {\n        setStyleProperty()\n        window.addEventListener('resize', setStyleProperty)\n\n        return () => {\n            window.removeEventListener('resize', setStyleProperty)\n        }\n    }, [setStyleProperty])\n}"]},"metadata":{},"sourceType":"module"}