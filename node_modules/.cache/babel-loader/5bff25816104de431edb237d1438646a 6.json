{"ast":null,"code":"import{useStore}from'effector-react';import{useParams}from'react-router-dom';import{$appModel,commentIdMount,onReplyCommentDataMount}from'../../Models/app';import{commentLikeMount,commentReplyListMount,deleteLikeMount,deletePostCommentMount}from'../../Models/post-model';export function useCommentItem(){var _useParams=useParams(),post_id=_useParams.post_id;var _useStore=useStore($appModel),token=_useStore.$app.token;var handleLike=function handleLike(event){if(token){if(!event.is_liked){var params={post_id:post_id,comment_id:event.id};commentLikeMount(params);}else{var _params={post_id:post_id,comment_id:event.id};deleteLikeMount(_params);}}};var handleDelete=function handleDelete(event){if(token){var params={post_id:post_id,comment_id:event.id};deletePostCommentMount(params);}};var handleReply=function handleReply(event){if(token){onReplyCommentDataMount(event);}};var handleReplyList=function handleReplyList(event){var params={post_id:post_id,comment_id:event.id};commentReplyListMount(params);commentIdMount(event.id);};return{handleDelete:handleDelete,handleLike:handleLike,handleReply:handleReply,post_id:post_id,handleReplyList:handleReplyList};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/post/use-comment-item.js"],"names":["useStore","useParams","$appModel","commentIdMount","onReplyCommentDataMount","commentLikeMount","commentReplyListMount","deleteLikeMount","deletePostCommentMount","useCommentItem","post_id","token","$app","handleLike","event","is_liked","params","comment_id","id","handleDelete","handleReply","handleReplyList"],"mappings":"AAAA,OAAQA,QAAR,KAAuB,gBAAvB,CACA,OAAQC,SAAR,KAAwB,kBAAxB,CACA,OAAQC,SAAR,CAAmBC,cAAnB,CAAmCC,uBAAnC,KAAiE,kBAAjE,CACA,OAAQC,gBAAR,CAA0BC,qBAA1B,CAAiDC,eAAjD,CAAkEC,sBAAlE,KAA+F,yBAA/F,CAGA,MAAO,SAASC,CAAAA,cAAT,EAA0B,CAC7B,eAAkBR,SAAS,EAA3B,CAAOS,OAAP,YAAOA,OAAP,CACA,cAAwBV,QAAQ,CAACE,SAAD,CAAhC,CAAcS,KAAd,WAAOC,IAAP,CAAcD,KAAd,CAEA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC1B,GAAIH,KAAJ,CAAW,CACP,GAAI,CAACG,KAAK,CAACC,QAAX,CAAqB,CACjB,GAAMC,CAAAA,MAAM,CAAG,CACXN,OAAO,CAAEA,OADE,CAEXO,UAAU,CAAEH,KAAK,CAACI,EAFP,CAAf,CAIAb,gBAAgB,CAACW,MAAD,CAAhB,CACH,CAND,IAMO,CACH,GAAMA,CAAAA,OAAM,CAAG,CACXN,OAAO,CAAEA,OADE,CAEXO,UAAU,CAAEH,KAAK,CAACI,EAFP,CAAf,CAIAX,eAAe,CAACS,OAAD,CAAf,CACH,CACJ,CACJ,CAhBD,CAkBA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACL,KAAD,CAAW,CAC5B,GAAIH,KAAJ,CAAW,CACP,GAAMK,CAAAA,MAAM,CAAG,CACXN,OAAO,CAAEA,OADE,CAEXO,UAAU,CAAEH,KAAK,CAACI,EAFP,CAAf,CAIAV,sBAAsB,CAACQ,MAAD,CAAtB,CACH,CACJ,CARD,CAUA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACN,KAAD,CAAW,CAC3B,GAAIH,KAAJ,CAAW,CACPP,uBAAuB,CAACU,KAAD,CAAvB,CACH,CACJ,CAJD,CAMA,GAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACP,KAAD,CAAW,CAC/B,GAAME,CAAAA,MAAM,CAAG,CACXN,OAAO,CAAEA,OADE,CAEXO,UAAU,CAAEH,KAAK,CAACI,EAFP,CAAf,CAIAZ,qBAAqB,CAACU,MAAD,CAArB,CACAb,cAAc,CAACW,KAAK,CAACI,EAAP,CAAd,CACH,CAPD,CASA,MAAO,CAACC,YAAY,CAAZA,YAAD,CAAeN,UAAU,CAAVA,UAAf,CAA2BO,WAAW,CAAXA,WAA3B,CAAwCV,OAAO,CAAPA,OAAxC,CAAiDW,eAAe,CAAfA,eAAjD,CAAP,CACH","sourcesContent":["import {useStore} from 'effector-react'\nimport {useParams} from 'react-router-dom'\nimport {$appModel, commentIdMount, onReplyCommentDataMount} from '../../Models/app'\nimport {commentLikeMount, commentReplyListMount, deleteLikeMount, deletePostCommentMount} from '../../Models/post-model'\n\n\nexport function useCommentItem() {\n    const {post_id} = useParams()\n    const {$app: {token}} = useStore($appModel)\n    \n    const handleLike = (event) => {\n        if (token) {\n            if (!event.is_liked) {\n                const params = {\n                    post_id: post_id,\n                    comment_id: event.id\n                }\n                commentLikeMount(params)\n            } else {\n                const params = {\n                    post_id: post_id,\n                    comment_id: event.id\n                }\n                deleteLikeMount(params)\n            }\n        }\n    }\n    \n    const handleDelete = (event) => {\n        if (token) {\n            const params = {\n                post_id: post_id,\n                comment_id: event.id\n            }\n            deletePostCommentMount(params)\n        }\n    }\n    \n    const handleReply = (event) => {\n        if (token) {\n            onReplyCommentDataMount(event)\n        }\n    }\n    \n    const handleReplyList = (event) => {\n        const params = {\n            post_id: post_id,\n            comment_id: event.id\n        }\n        commentReplyListMount(params)\n        commentIdMount(event.id)\n    }\n    \n    return {handleDelete, handleLike, handleReply, post_id, handleReplyList}\n}"]},"metadata":{},"sourceType":"module"}