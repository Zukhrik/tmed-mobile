{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/OrganizationPage/OfferingsList/index.jsx\";\nimport React, { useMemo, useState } from 'react';\nimport { useStore } from 'effector-react';\nimport { useParams } from 'react-router-dom';\nimport { OfferingListWrapper } from '../style';\nimport { $appModel, changeSpecPanel, switchOrgGroupPanel } from '../../../Models/app';\nimport { useOfferingList } from '../../../Hooks/offerings';\nimport { OverlaySettings } from '../../../Components/Overlay';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { OverlayAuth } from '../../../UIComponents/OverlayAuth';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { useOrgOrder, useOrgOrderList } from '../../../Hooks/order';\nimport Masorny, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport { OverlayOfferingGroup, OverlaySpecialists } from '../../../Components/Offering/OrgOfferings';\nimport { useBodyOverflowHidden } from '../../../Hooks/app';\nimport { useInfiniteQuery } from 'react-query';\nimport orgApi from '../../../Service-v2/organization';\nimport { numberFormat } from '../../../utils/number-utils';\nimport { ProductCard, ProductCardSkeleton } from '../../../Components/Cards';\nimport { EmptyContainerWrapper } from '../../../UIComponents/GlobalStyles';\nimport { NoOfferingSvg } from '../../../Icons/NoOffering';\nconst skeleton = generateSkeleton(10, 100, 220);\nexport const OfferingsList = () => {\n  var _data$pages2;\n\n  useOrgOrderList();\n  const {\n    organization\n  } = useParams();\n  const {\n    $app: {\n      token,\n      changeOrgGroupPanel,\n      showSpecPanel\n    }\n  } = useStore($appModel);\n  useBodyOverflowHidden(changeOrgGroupPanel || showSpecPanel);\n  const {\n    loadMoreOfferingGroup\n  } = useOfferingList();\n  const [auth, setAuth] = useState(false);\n  const {\n    currency,\n    checkoutOffering\n  } = useOrgOrder();\n  const [offeringItem, setOfferingItem] = useState(false);\n  const {\n    isLoading,\n    hasNextPage,\n    fetchNextPage,\n    data\n  } = useInfiniteQuery(['/org/offerings', organization], async ({\n    pageParam = 0\n  }) => {\n    const params = {\n      limit: 10,\n      offset: pageParam\n    };\n    const res = await orgApi.getOrgOffering({\n      slug: organization,\n      params\n    });\n    return { ...res.data,\n      nextOffset: pageParam + 10\n    };\n  }, {\n    enabled: !!organization,\n    getNextPageParam: data => {\n      if (data.count - data.nextOffset > 10) {\n        return data === null || data === void 0 ? void 0 : data.nextOffset;\n      } else {\n        return undefined;\n      }\n    }\n  });\n\n  const handleClose = () => {\n    if (auth) {\n      setAuth(false);\n    }\n\n    setOfferingItem(false);\n  };\n\n  const list = useMemo(() => {\n    if ((data === null || data === void 0 ? void 0 : data.pages) && (data === null || data === void 0 ? void 0 : data.pages.length) > 0) {\n      const arr = data === null || data === void 0 ? void 0 : data.pages;\n      let tmp = [];\n\n      for (let g of arr) {\n        tmp = [...tmp, ...g.result];\n      }\n\n      return tmp;\n    }\n\n    return [];\n  }, [data]);\n  const dataLength = useMemo(() => {\n    var _data$pages;\n\n    return (data === null || data === void 0 ? void 0 : data.pages) ? ((_data$pages = data.pages[data.pages.length - 1]) === null || _data$pages === void 0 ? void 0 : _data$pages.nextOffset) || 10 : 10;\n  }, [data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OverlaySettings, {\n    openSettings: changeOrgGroupPanel,\n    content: /*#__PURE__*/React.createElement(OverlayOfferingGroup, {\n      loadMore: loadMoreOfferingGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 26\n      }\n    }),\n    onClose: () => switchOrgGroupPanel(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(OverlaySettings, {\n    openSettings: showSpecPanel,\n    onClose: () => changeSpecPanel(false),\n    content: /*#__PURE__*/React.createElement(OverlaySpecialists, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(OverlaySettings, {\n    openSettings: offeringItem,\n    onClose: handleClose,\n    content: /*#__PURE__*/React.createElement(OverlayAuth, {\n      action: () => checkoutOffering(offeringItem),\n      auth: auth,\n      setAuth: setAuth,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    next: () => fetchNextPage(),\n    dataLength: dataLength,\n    hasMore: !isLoading && !!hasNextPage,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(OfferingListWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveMasonry, {\n    style: {\n      padding: '0 12px'\n    },\n    columnsCountBreakPoints: {\n      350: 2,\n      768: 2,\n      900: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Masorny, {\n    gutter: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, !isLoading ? (list === null || list === void 0 ? void 0 : list.length) > 0 && list.map(item => {\n    const offeringData = {\n      id: item.id,\n      qty: item.qty,\n      name: item.name,\n      image: item.image,\n      currency: currency,\n      loading: item.loading,\n      inCart: item.is_in_cart,\n      organization: organization,\n      cost: numberFormat(item.cost),\n      responsible: item.responsible,\n      path: `/${organization}/offerings/${item.id}`\n    };\n    return /*#__PURE__*/React.createElement(ProductCard, {\n      showBag: true,\n      key: item.id,\n      item: offeringData,\n      handleClick: item => {\n        token ? checkoutOffering(item) : setOfferingItem(item);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 49\n      }\n    });\n  }) : skeleton.map((item, idx) => /*#__PURE__*/React.createElement(ProductCardSkeleton, {\n    key: `${idx + 1}`,\n    imgSkeletonHeight: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 45\n    }\n  })))))), (data === null || data === void 0 ? void 0 : data.pages) && (data === null || data === void 0 ? void 0 : (_data$pages2 = data.pages) === null || _data$pages2 === void 0 ? void 0 : _data$pages2.count) === 0 && /*#__PURE__*/React.createElement(EmptyContainerWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(NoOfferingSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/OrganizationPage/OfferingsList/index.jsx"],"names":["React","useMemo","useState","useStore","useParams","OfferingListWrapper","$appModel","changeSpecPanel","switchOrgGroupPanel","useOfferingList","OverlaySettings","InfiniteScroll","OverlayAuth","generateSkeleton","useOrgOrder","useOrgOrderList","Masorny","ResponsiveMasonry","OverlayOfferingGroup","OverlaySpecialists","useBodyOverflowHidden","useInfiniteQuery","orgApi","numberFormat","ProductCard","ProductCardSkeleton","EmptyContainerWrapper","NoOfferingSvg","skeleton","OfferingsList","organization","$app","token","changeOrgGroupPanel","showSpecPanel","loadMoreOfferingGroup","auth","setAuth","currency","checkoutOffering","offeringItem","setOfferingItem","isLoading","hasNextPage","fetchNextPage","data","pageParam","params","limit","offset","res","getOrgOffering","slug","nextOffset","enabled","getNextPageParam","count","undefined","handleClose","list","pages","length","arr","tmp","g","result","dataLength","padding","map","item","offeringData","id","qty","name","image","loading","inCart","is_in_cart","cost","responsible","path","idx"],"mappings":"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","sourcesContent":["import React, {useMemo, useState} from 'react'\r\nimport {useStore} from 'effector-react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {OfferingListWrapper} from '../style'\r\nimport {$appModel, changeSpecPanel, switchOrgGroupPanel} from '../../../Models/app'\r\nimport {useOfferingList} from '../../../Hooks/offerings'\r\nimport {OverlaySettings} from '../../../Components/Overlay'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport {OverlayAuth} from '../../../UIComponents/OverlayAuth'\r\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\r\nimport {useOrgOrder, useOrgOrderList} from '../../../Hooks/order'\r\nimport Masorny, {ResponsiveMasonry} from 'react-responsive-masonry'\r\nimport {OverlayOfferingGroup, OverlaySpecialists} from '../../../Components/Offering/OrgOfferings'\r\nimport {useBodyOverflowHidden} from '../../../Hooks/app'\r\nimport {useInfiniteQuery} from 'react-query'\r\nimport orgApi from '../../../Service-v2/organization'\r\nimport {numberFormat} from '../../../utils/number-utils'\r\nimport {ProductCard, ProductCardSkeleton} from '../../../Components/Cards'\r\nimport {EmptyContainerWrapper} from '../../../UIComponents/GlobalStyles'\r\nimport {NoOfferingSvg} from '../../../Icons/NoOffering'\r\n\r\nconst skeleton = generateSkeleton(10, 100, 220)\r\nexport const OfferingsList = () => {\r\n    useOrgOrderList()\r\n    const {organization} = useParams()\r\n    const {$app: {token, changeOrgGroupPanel, showSpecPanel}} = useStore($appModel)\r\n    useBodyOverflowHidden(changeOrgGroupPanel || showSpecPanel)\r\n    const {loadMoreOfferingGroup} = useOfferingList()\r\n    const [auth, setAuth] = useState(false)\r\n    const {currency, checkoutOffering} = useOrgOrder()\r\n    const [offeringItem, setOfferingItem] = useState(false)\r\n    \r\n    const {isLoading, hasNextPage, fetchNextPage, data} = useInfiniteQuery(\r\n        ['/org/offerings', organization],\r\n        async ({pageParam = 0}) => {\r\n            const params = {\r\n                limit: 10,\r\n                offset: pageParam\r\n            }\r\n            const res = await orgApi.getOrgOffering({slug: organization, params})\r\n            return {...res.data, nextOffset: pageParam + 10}\r\n        },\r\n        {\r\n            enabled: !!organization,\r\n            getNextPageParam: (data) => {\r\n                if (data.count - data.nextOffset > 10) {\r\n                    return data?.nextOffset\r\n                } else {\r\n                    return undefined\r\n                }\r\n            }\r\n        }\r\n    )\r\n    \r\n    const handleClose = () => {\r\n        if (auth) {\r\n            setAuth(false)\r\n        }\r\n        setOfferingItem(false)\r\n    }\r\n    \r\n    const list = useMemo(() => {\r\n        if (data?.pages && data?.pages.length > 0) {\r\n            const arr = data?.pages\r\n            let tmp = []\r\n            for (let g of arr) {\r\n                tmp = [...tmp, ...g.result]\r\n            }\r\n            return tmp\r\n        }\r\n        return []\r\n    }, [data])\r\n    \r\n    const dataLength = useMemo(() => {\r\n        return data?.pages ? data.pages[data.pages.length - 1]?.nextOffset || 10 : 10\r\n    }, [data])\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <OverlaySettings\r\n                openSettings={changeOrgGroupPanel}\r\n                content={<OverlayOfferingGroup loadMore={loadMoreOfferingGroup}/>}\r\n                onClose={() => switchOrgGroupPanel(false)}\r\n            />\r\n            <OverlaySettings\r\n                openSettings={showSpecPanel}\r\n                onClose={() => changeSpecPanel(false)}\r\n                content={<OverlaySpecialists/>}\r\n            />\r\n            <OverlaySettings\r\n                openSettings={offeringItem}\r\n                onClose={handleClose}\r\n                content={<OverlayAuth\r\n                    action={() => checkoutOffering(offeringItem)}\r\n                    auth={auth}\r\n                    setAuth={setAuth}\r\n                    onClose={handleClose}\r\n                />}\r\n            />\r\n            <InfiniteScroll\r\n                next={() => fetchNextPage()}\r\n                dataLength={dataLength}\r\n                hasMore={!isLoading && !!hasNextPage}\r\n                loader={<>...loading</>}\r\n            >\r\n                <OfferingListWrapper>\r\n                    <ResponsiveMasonry\r\n                        style={{padding: '0 12px'}}\r\n                        columnsCountBreakPoints={{350: 2, 768: 2, 900: 3}}\r\n                    >\r\n                        <Masorny gutter='8px'>\r\n                            {\r\n                                !isLoading\r\n                                    ? (\r\n                                        list?.length > 0 && list.map((item) => {\r\n                                            const offeringData = {\r\n                                                id: item.id,\r\n                                                qty: item.qty,\r\n                                                name: item.name,\r\n                                                image: item.image,\r\n                                                currency: currency,\r\n                                                loading: item.loading,\r\n                                                inCart: item.is_in_cart,\r\n                                                organization: organization,\r\n                                                cost: numberFormat(item.cost),\r\n                                                responsible: item.responsible,\r\n                                                path: `/${organization}/offerings/${item.id}`\r\n                                            }\r\n                                            return (\r\n                                                <ProductCard\r\n                                                    showBag\r\n                                                    key={item.id}\r\n                                                    item={offeringData}\r\n                                                    handleClick={(item) => {\r\n                                                        token ? checkoutOffering(item) : setOfferingItem(item)\r\n                                                    }}\r\n                                                />\r\n                                            )\r\n                                        })\r\n                                    ) : (\r\n                                        skeleton.map((item, idx) => (\r\n                                            <ProductCardSkeleton\r\n                                                key={`${idx + 1}`}\r\n                                                imgSkeletonHeight={item}\r\n                                            />\r\n                                        ))\r\n                                    )\r\n                            }\r\n                        </Masorny>\r\n                    </ResponsiveMasonry>\r\n                </OfferingListWrapper>\r\n            </InfiniteScroll>\r\n            {\r\n                data?.pages && data?.pages?.count === 0 && (\r\n                    <EmptyContainerWrapper>\r\n                        <NoOfferingSvg/>\r\n                    </EmptyContainerWrapper>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}