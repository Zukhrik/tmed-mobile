{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/UIComponents/OverlayAuth/organisms/login-view.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { Button } from '../../Button';\nimport { InputUI } from '../../mu-inputs';\nimport { Text } from '../../Typography/Text';\nimport { useHistory } from 'react-router-dom';\nimport { Title } from '../../Typography/Title';\nimport { useFastAuth } from '../../../Hooks/auth';\nimport { RefreshSvg } from '../../../Icons/refresh';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { CountdownWrapper, StyledCountdown } from '../../../Views/Auth/style';\nexport const LoginView = ({\n  onClose,\n  action\n}) => {\n  const {\n    phone,\n    formik,\n    resend,\n    nextStep,\n    deadline,\n    onFinish,\n    showResend,\n    handleChange,\n    disabledButton\n  } = useFastAuth({\n    onClose,\n    action\n  });\n  const {\n    t\n  } = useTranslation();\n  const {\n    push\n  } = useHistory();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, nextStep ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    weight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }, t('SMS_confirmation'))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Trans, {\n    i18nKey: \"verify_code_sentence\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }, {\n    phone\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    type: \"tel\",\n    pattern: \"[0-9]*\",\n    mask: \"9 9 9 9 9 9\",\n    inputType: \"masked\",\n    name: \"activation_code\",\n    onBlur: formik.handleBlur,\n    onChange: formik.handleChange,\n    label: t('verification_code'),\n    values: formik.values.activation_code,\n    error: formik.touched.activation_code && formik.errors.activation_code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  })), showResend ? /*#__PURE__*/React.createElement(Button, {\n    onClick: () => resend(),\n    size: \"l\",\n    style: {\n      boxShadow: 'unset',\n      color: 'var(--dark-dwed)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(RefreshSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 41\n    }\n  }), t('send_again')) : /*#__PURE__*/React.createElement(CountdownWrapper, {\n    padding: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(Trans, {\n    i18nKey: \"get_code_sentence\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(StyledCountdown, {\n    value: deadline,\n    format: \"s\",\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"l\",\n    variant: \"primary\",\n    htmlType: \"submit\",\n    disabled: formik.touched.activation_code && !!formik.errors.activation_code || !formik.values.activation_code.match(/^(\\d\\s*){6}$/),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, t('enter'))))) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, t('enter_ur_phone_number')), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    name: \"phone\",\n    pattern: \"[0-9]*\",\n    inputType: \"phone\",\n    value: formik.values.phone ? formik.values.phone.value : '',\n    onBlur: formik.handleBlur,\n    onChange: (value, {\n      countryCode\n    }) => handleChange('phone', {\n      value,\n      countryCode\n    }),\n    error: formik.touched.phone && formik.errors.phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"l\",\n    variant: \"primary\",\n    htmlType: \"submit\",\n    disabled: disabledButton(),\n    loading: formik.isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, t('get_code'))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    level: 4,\n    alignType: \"center\",\n    onClick: () => push('/sign-in'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, t('enter_by_login'))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/UIComponents/OverlayAuth/organisms/login-view.jsx"],"names":["React","Col","Row","Button","InputUI","Text","useHistory","Title","useFastAuth","RefreshSvg","Trans","useTranslation","CountdownWrapper","StyledCountdown","LoginView","onClose","action","phone","formik","resend","nextStep","deadline","onFinish","showResend","handleChange","disabledButton","t","push","handleSubmit","handleBlur","values","activation_code","touched","errors","boxShadow","color","match","value","countryCode","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {Button} from '../../Button'\nimport {InputUI} from '../../mu-inputs'\nimport {Text} from '../../Typography/Text'\nimport {useHistory} from 'react-router-dom'\nimport {Title} from '../../Typography/Title'\nimport {useFastAuth} from '../../../Hooks/auth'\nimport {RefreshSvg} from '../../../Icons/refresh'\nimport {Trans, useTranslation} from 'react-i18next'\nimport {CountdownWrapper, StyledCountdown} from '../../../Views/Auth/style'\n\nexport const LoginView = ({onClose, action}) => {\n    const {\n        phone,\n        formik,\n        resend,\n        nextStep,\n        deadline,\n        onFinish,\n        showResend,\n        handleChange,\n        disabledButton\n    } = useFastAuth({onClose, action})\n    const {t} = useTranslation()\n    const {push} = useHistory()\n    \n    return (\n        <>\n            {\n                nextStep\n                    ? <form onSubmit={formik.handleSubmit}>\n                        <Row gutter={[0, 12]}>\n                            <Col span={24}>\n                                <Title weight={500}>{t('SMS_confirmation')}</Title>\n                            </Col>\n                            <Col span={24}>\n                                <Text>\n                                    <Trans i18nKey='verify_code_sentence'>\n                                        {{phone}}\n                                        <br/>\n                                    </Trans>\n                                </Text>\n                            </Col>\n                            <Col span={24}>\n                                <InputUI\n                                    type='tel'\n                                    pattern='[0-9]*'\n                                    mask='9 9 9 9 9 9'\n                                    inputType='masked'\n                                    name='activation_code'\n                                    onBlur={formik.handleBlur}\n                                    onChange={formik.handleChange}\n                                    label={t('verification_code')}\n                                    values={formik.values.activation_code}\n                                    error={formik.touched.activation_code && formik.errors.activation_code}\n                                />\n                            </Col>\n                            {\n                                showResend\n                                    ? <Button\n                                        onClick={() => resend()}\n                                        size='l'\n                                        style={{boxShadow: 'unset', color: 'var(--dark-dwed)'}}\n                                    >\n                                        <RefreshSvg/>\n                                        {t('send_again')}\n                                    </Button>\n                                    : <CountdownWrapper padding='0'>\n                                        <Trans i18nKey='get_code_sentence'>\n                                            <StyledCountdown value={deadline} format='s' onFinish={onFinish}/>\n                                        </Trans>\n                                    </CountdownWrapper>\n                            }\n                            <Col span={24}>\n                                <Button\n                                    size='l'\n                                    variant='primary'\n                                    htmlType='submit'\n                                    disabled={\n                                        (formik.touched.activation_code && !!formik.errors.activation_code)\n                                        || !formik.values.activation_code.match(/^(\\d\\s*){6}$/)\n                                    }\n                                >\n                                    {t('enter')}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                    \n                    : <form onSubmit={formik.handleSubmit}>\n                        <Row gutter={[0, 24]}>\n                            <Col span={24}>\n                                {t('enter_ur_phone_number')}\n                            </Col>\n                            <Col span={24}>\n                                <InputUI\n                                    name='phone'\n                                    pattern='[0-9]*'\n                                    inputType='phone'\n                                    value={formik.values.phone ? formik.values.phone.value : ''}\n                                    onBlur={formik.handleBlur}\n                                    onChange={(value, {countryCode}) => handleChange('phone', {value, countryCode})}\n                                    error={formik.touched.phone && formik.errors.phone}\n                                />\n                            </Col>\n                            <Col span={24}>\n                                <Button\n                                    size='l'\n                                    variant='primary'\n                                    htmlType='submit'\n                                    disabled={disabledButton()}\n                                    loading={formik.isSubmitting}\n                                >\n                                    {t('get_code')}\n                                </Button>\n                            </Col>\n                            <Col span={24}>\n                                <Text\n                                    level={4}\n                                    alignType='center'\n                                    onClick={() => push('/sign-in')}\n                                >\n                                    {t('enter_by_login')}\n                                </Text>\n                            </Col>\n                        </Row>\n                    </form>\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}