{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSocketIO = void 0;\n\nvar react_1 = require(\"react\");\n\nvar use_websocket_1 = require(\"./use-websocket\");\n\nvar constants_1 = require(\"./constants\");\n\nvar emptyEvent = {\n  type: 'empty',\n  payload: null\n};\n\nvar getSocketData = function (event) {\n  if (!event || !event.data) {\n    return emptyEvent;\n  }\n\n  var match = event.data.match(/\\[.*]/);\n\n  if (!match) {\n    return emptyEvent;\n  }\n\n  var data = JSON.parse(match);\n\n  if (!Array.isArray(data) || !data[1]) {\n    return emptyEvent;\n  }\n\n  return {\n    type: data[0],\n    payload: data[1]\n  };\n};\n\nexports.useSocketIO = function (url, options, connect) {\n  if (options === void 0) {\n    options = constants_1.DEFAULT_OPTIONS;\n  }\n\n  if (connect === void 0) {\n    connect = true;\n  }\n\n  var optionsWithSocketIO = react_1.useMemo(function () {\n    return __assign(__assign({}, options), {\n      fromSocketIO: true\n    });\n  }, []);\n\n  var _a = use_websocket_1.useWebSocket(url, optionsWithSocketIO, connect),\n      sendMessage = _a.sendMessage,\n      sendJsonMessage = _a.sendJsonMessage,\n      lastMessage = _a.lastMessage,\n      readyState = _a.readyState,\n      getWebSocket = _a.getWebSocket;\n\n  var socketIOLastMessage = react_1.useMemo(function () {\n    return getSocketData(lastMessage);\n  }, [lastMessage]);\n  return {\n    sendMessage: sendMessage,\n    sendJsonMessage: sendJsonMessage,\n    lastMessage: socketIOLastMessage,\n    lastJsonMessage: socketIOLastMessage,\n    readyState: readyState,\n    getWebSocket: getWebSocket\n  };\n};","map":null,"metadata":{},"sourceType":"script"}