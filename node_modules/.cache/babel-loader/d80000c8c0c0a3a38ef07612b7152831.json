{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useUrlParams}from'../app';import{URL_KEYS}from'../../Constants';import{useParams}from'react-router-dom';import{useCallback,useEffect}from'react';import{orgSpecialistCatMount,orgSpecialistsMount}from'../../Models/org-model';var initialParams={limit:20,offset:0};export function useOrgSpecialistLists(){var _useUrlParams=useUrlParams(),urlData=_useUrlParams.urlData;var _useParams=useParams(),organization=_useParams.organization;var spec_cat_id=urlData[URL_KEYS.SPECIALIST_CATEGORY_ID];var getOrgSpecialists=useCallback(function(params){if(organization){var data=_objectSpread({organization:organization},params);orgSpecialistsMount(data);}},[organization]);var getOrgSpecCatList=useCallback(function(params){if(organization){var data=_objectSpread({organization:organization},params);orgSpecialistCatMount(data);}},[organization]);useEffect(function(){var data={clear:true,params:_objectSpread({},initialParams)};getOrgSpecCatList(data);},[getOrgSpecCatList]);useEffect(function(){var timeout=null;timeout=setTimeout(function(){var data={clear:true,params:_objectSpread({},initialParams)};if(spec_cat_id){data['params']['spec_cat']=spec_cat_id;}else{delete data['params']['spec_cat'];}getOrgSpecialists(data);},300);return function(){clearTimeout(timeout);timeout=null;};},[getOrgSpecialists,spec_cat_id]);}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/org/use-org-specialists.js"],"names":["useUrlParams","URL_KEYS","useParams","useCallback","useEffect","orgSpecialistCatMount","orgSpecialistsMount","initialParams","limit","offset","useOrgSpecialistLists","urlData","organization","spec_cat_id","SPECIALIST_CATEGORY_ID","getOrgSpecialists","params","data","getOrgSpecCatList","clear","timeout","setTimeout","clearTimeout"],"mappings":"oKAAA,OAAQA,YAAR,KAA2B,QAA3B,CACA,OAAQC,QAAR,KAAuB,iBAAvB,CACA,OAAQC,SAAR,KAAwB,kBAAxB,CACA,OAAQC,WAAR,CAAqBC,SAArB,KAAqC,OAArC,CACA,OAAQC,qBAAR,CAA+BC,mBAA/B,KAAyD,wBAAzD,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,KAAK,CAAE,EADW,CAElBC,MAAM,CAAE,CAFU,CAAtB,CAKA,MAAO,SAASC,CAAAA,qBAAT,EAAiC,CACpC,kBAAkBV,YAAY,EAA9B,CAAOW,OAAP,eAAOA,OAAP,CACA,eAAuBT,SAAS,EAAhC,CAAOU,YAAP,YAAOA,YAAP,CACA,GAAMC,CAAAA,WAAW,CAAGF,OAAO,CAACV,QAAQ,CAACa,sBAAV,CAA3B,CAEA,GAAMC,CAAAA,iBAAiB,CAAGZ,WAAW,CAAC,SAACa,MAAD,CAAY,CAC9C,GAAIJ,YAAJ,CAAkB,CACd,GAAMK,CAAAA,IAAI,gBACNL,YAAY,CAAZA,YADM,EAEHI,MAFG,CAAV,CAIAV,mBAAmB,CAACW,IAAD,CAAnB,CACH,CACJ,CARoC,CAQlC,CAACL,YAAD,CARkC,CAArC,CAUA,GAAMM,CAAAA,iBAAiB,CAAGf,WAAW,CAAC,SAACa,MAAD,CAAY,CAC9C,GAAIJ,YAAJ,CAAkB,CACd,GAAMK,CAAAA,IAAI,gBACNL,YAAY,CAAZA,YADM,EAEHI,MAFG,CAAV,CAIAX,qBAAqB,CAACY,IAAD,CAArB,CACH,CACJ,CARoC,CAQlC,CAACL,YAAD,CARkC,CAArC,CAWAR,SAAS,CAAC,UAAM,CACZ,GAAMa,CAAAA,IAAI,CAAG,CACTE,KAAK,CAAE,IADE,CAETH,MAAM,kBAAMT,aAAN,CAFG,CAAb,CAIAW,iBAAiB,CAACD,IAAD,CAAjB,CACH,CANQ,CAMN,CAACC,iBAAD,CANM,CAAT,CAQAd,SAAS,CAAC,UAAM,CACZ,GAAIgB,CAAAA,OAAO,CAAG,IAAd,CAEAA,OAAO,CAAGC,UAAU,CAAC,UAAM,CACvB,GAAMJ,CAAAA,IAAI,CAAG,CACTE,KAAK,CAAE,IADE,CAETH,MAAM,kBACCT,aADD,CAFG,CAAb,CAOA,GAAIM,WAAJ,CAAiB,CACbI,IAAI,CAAC,QAAD,CAAJ,CAAe,UAAf,EAA6BJ,WAA7B,CACH,CAFD,IAEO,CACH,MAAOI,CAAAA,IAAI,CAAC,QAAD,CAAJ,CAAe,UAAf,CAAP,CACH,CAEDF,iBAAiB,CAACE,IAAD,CAAjB,CACH,CAfmB,CAejB,GAfiB,CAApB,CAiBA,MAAO,WAAM,CACTK,YAAY,CAACF,OAAD,CAAZ,CACAA,OAAO,CAAG,IAAV,CACH,CAHD,CAKH,CAzBQ,CAyBN,CAACL,iBAAD,CAAoBF,WAApB,CAzBM,CAAT,CA0BH","sourcesContent":["import {useUrlParams} from '../app'\r\nimport {URL_KEYS} from '../../Constants'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useCallback, useEffect} from 'react'\r\nimport {orgSpecialistCatMount, orgSpecialistsMount} from '../../Models/org-model'\r\n\r\nconst initialParams = {\r\n    limit: 20,\r\n    offset: 0\r\n}\r\n\r\nexport function useOrgSpecialistLists() {\r\n    const {urlData} = useUrlParams()\r\n    const {organization} = useParams()\r\n    const spec_cat_id = urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]\r\n    \r\n    const getOrgSpecialists = useCallback((params) => {\r\n        if (organization) {\r\n            const data = {\r\n                organization,\r\n                ...params\r\n            }\r\n            orgSpecialistsMount(data)\r\n        }\r\n    }, [organization])\r\n    \r\n    const getOrgSpecCatList = useCallback((params) => {\r\n        if (organization) {\r\n            const data = {\r\n                organization,\r\n                ...params\r\n            }\r\n            orgSpecialistCatMount(data)\r\n        }\r\n    }, [organization])\r\n    \r\n    \r\n    useEffect(() => {\r\n        const data = {\r\n            clear: true,\r\n            params: {...initialParams}\r\n        }\r\n        getOrgSpecCatList(data)\r\n    }, [getOrgSpecCatList])\r\n    \r\n    useEffect(() => {\r\n        let timeout = null\r\n        \r\n        timeout = setTimeout(() => {\r\n            const data = {\r\n                clear: true,\r\n                params: {\r\n                    ...initialParams\r\n                }\r\n            }\r\n            \r\n            if (spec_cat_id) {\r\n                data['params']['spec_cat'] = spec_cat_id\r\n            } else {\r\n                delete data['params']['spec_cat']\r\n            }\r\n            \r\n            getOrgSpecialists(data)\r\n        }, 300)\r\n        \r\n        return () => {\r\n            clearTimeout(timeout)\r\n            timeout = null\r\n        }\r\n        \r\n    }, [getOrgSpecialists, spec_cat_id])\r\n}"]},"metadata":{},"sourceType":"module"}