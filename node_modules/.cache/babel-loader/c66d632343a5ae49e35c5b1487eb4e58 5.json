{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/organisms/my-orders.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { $orderModel } from '../../../Models/order-model';\nimport { RecordCard, RecordCardSkeleton } from '../molecules';\nimport moment from 'moment';\nimport { useOrderList } from '../../../Hooks/order';\nimport { useHistory } from 'react-router-dom';\nimport { saveURLMount } from '../../../Models/app';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { $accountModel } from '../../../Models/account-model';\nconst skeleton = generateSkeleton(5);\nexport const MyOrders = () => {\n  const {\n    loadMore\n  } = useOrderList();\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  const {\n    push,\n    location: {\n      pathname\n    }\n  } = useHistory();\n  const {\n    $orderList: {\n      data,\n      loading,\n      result,\n      forceLoading\n    }\n  } = useStore($orderModel);\n\n  const handlePush = item => {\n    push(`/records/detail/${item.id}`);\n    saveURLMount(pathname);\n  };\n\n  const handleRecordsPush = item => {\n    push(`/@${currentProfile && currentProfile.slug_name}/records/${item.id}`);\n    saveURLMount(pathname);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, forceLoading === 2 ? /*#__PURE__*/React.createElement(InfiniteScroll, {\n    next: loadMore,\n    hasMore: !loading && !!result.next,\n    style: {\n      overflow: 'hidden'\n    },\n    dataLength: result.nextOffset || 10,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(RecordCard, {\n    meet: moment(item.meet_date).format('LT'),\n    status: item.status,\n    date: moment(item.meet_date).format('DD/MM/YY'),\n    name: item.responsible.user.full_name,\n    category: item.responsible.user.main_cat.name,\n    src: item.responsible.org.logo,\n    link: () => handlePush(item),\n    recordsLink: () => handleRecordsPush(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 45\n    }\n  }))))) : /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(RecordCardSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 41\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/organisms/my-orders.jsx"],"names":["React","Col","Row","useStore","$orderModel","RecordCard","RecordCardSkeleton","moment","useOrderList","useHistory","saveURLMount","InfiniteScroll","generateSkeleton","$accountModel","skeleton","MyOrders","loadMore","$profiles","currentProfile","push","location","pathname","$orderList","data","loading","result","forceLoading","handlePush","item","id","handleRecordsPush","slug_name","next","overflow","nextOffset","map","idx","meet_date","format","status","responsible","user","full_name","main_cat","name","org","logo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,WAAR,QAA0B,6BAA1B;AACA,SAAQC,UAAR,EAAoBC,kBAApB,QAA6C,cAA7C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,YAAR,QAA2B,qBAA3B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AAGA,MAAMC,QAAQ,GAAGF,gBAAgB,CAAC,CAAD,CAAjC;AACA,OAAO,MAAMG,QAAQ,GAAG,MAAM;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAaR,YAAY,EAA/B;AACA,QAAM;AAACS,IAAAA,SAAS,EAAE;AAACC,MAAAA;AAAD;AAAZ,MAAgCf,QAAQ,CAACU,aAAD,CAA9C;AACA,QAAM;AAACM,IAAAA,IAAD;AAAOC,IAAAA,QAAQ,EAAE;AAACC,MAAAA;AAAD;AAAjB,MAA+BZ,UAAU,EAA/C;AACA,QAAM;AAACa,IAAAA,UAAU,EAAE;AAACC,MAAAA,IAAD;AAAOC,MAAAA,OAAP;AAAgBC,MAAAA,MAAhB;AAAwBC,MAAAA;AAAxB;AAAb,MAAsDvB,QAAQ,CAACC,WAAD,CAApE;;AAEA,QAAMuB,UAAU,GAAIC,IAAD,IAAU;AACzBT,IAAAA,IAAI,CAAE,mBAAkBS,IAAI,CAACC,EAAG,EAA5B,CAAJ;AACAnB,IAAAA,YAAY,CAACW,QAAD,CAAZ;AACH,GAHD;;AAKA,QAAMS,iBAAiB,GAAIF,IAAD,IAAU;AAChCT,IAAAA,IAAI,CAAE,KAAID,cAAc,IAAIA,cAAc,CAACa,SAAU,YAAWH,IAAI,CAACC,EAAG,EAApE,CAAJ;AACAnB,IAAAA,YAAY,CAACW,QAAD,CAAZ;AACH,GAHD;;AAKA,sBACI,0CAEQK,YAAY,KAAK,CAAjB,gBAEQ,oBAAC,cAAD;AACI,IAAA,IAAI,EAAEV,QADV;AAEI,IAAA,OAAO,EAAE,CAACQ,OAAD,IAAY,CAAC,CAACC,MAAM,CAACO,IAFlC;AAGI,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAHX;AAII,IAAA,UAAU,EAAER,MAAM,CAACS,UAAP,IAAqB,EAJrC;AAKI,IAAA,MAAM,eAAE,uDALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAsB,IAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQX,IAAI,CAACY,GAAL,CAAS,CAACP,IAAD,EAAOQ,GAAP,kBACL,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAE7B,MAAM,CAACqB,IAAI,CAACS,SAAN,CAAN,CAAuBC,MAAvB,CAA8B,IAA9B,CADV;AAEI,IAAA,MAAM,EAAEV,IAAI,CAACW,MAFjB;AAGI,IAAA,IAAI,EAAEhC,MAAM,CAACqB,IAAI,CAACS,SAAN,CAAN,CAAuBC,MAAvB,CAA8B,UAA9B,CAHV;AAII,IAAA,IAAI,EAAEV,IAAI,CAACY,WAAL,CAAiBC,IAAjB,CAAsBC,SAJhC;AAKI,IAAA,QAAQ,EAAEd,IAAI,CAACY,WAAL,CAAiBC,IAAjB,CAAsBE,QAAtB,CAA+BC,IAL7C;AAMI,IAAA,GAAG,EAAEhB,IAAI,CAACY,WAAL,CAAiBK,GAAjB,CAAqBC,IAN9B;AAOI,IAAA,IAAI,EAAE,MAAMnB,UAAU,CAACC,IAAD,CAP1B;AAQI,IAAA,WAAW,EAAE,MAAME,iBAAiB,CAACF,IAAD,CARxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFR,CAPJ,CAFR,gBA8BQ,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAsB,IAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQd,QAAQ,CAACqB,GAAT,CAAa,CAACP,IAAD,EAAOQ,GAAP,kBACT,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFR,CAhChB,CADJ;AA8CH,CA9DM","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {$orderModel} from '../../../Models/order-model'\nimport {RecordCard, RecordCardSkeleton} from '../molecules'\nimport moment from 'moment'\nimport {useOrderList} from '../../../Hooks/order'\nimport {useHistory} from 'react-router-dom'\nimport {saveURLMount} from '../../../Models/app'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {$accountModel} from '../../../Models/account-model'\n\n\nconst skeleton = generateSkeleton(5)\nexport const MyOrders = () => {\n    const {loadMore} = useOrderList()\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    const {push, location: {pathname}} = useHistory()\n    const {$orderList: {data, loading, result, forceLoading}} = useStore($orderModel)\n    \n    const handlePush = (item) => {\n        push(`/records/detail/${item.id}`)\n        saveURLMount(pathname)\n    }\n    \n    const handleRecordsPush = (item) => {\n        push(`/@${currentProfile && currentProfile.slug_name}/records/${item.id}`)\n        saveURLMount(pathname)\n    }\n    \n    return (\n        <>\n            {\n                forceLoading === 2\n                    ? (\n                        <InfiniteScroll\n                            next={loadMore}\n                            hasMore={!loading && !!result.next}\n                            style={{overflow: 'hidden'}}\n                            dataLength={result.nextOffset || 10}\n                            loader={<>...loading</>}\n                        >\n                            <Row gutter={[0, 12]} className='container'>\n                                {\n                                    data.map((item, idx) => (\n                                        <Col span={24} key={`${idx + 1}`}>\n                                            <RecordCard\n                                                meet={moment(item.meet_date).format('LT')}\n                                                status={item.status}\n                                                date={moment(item.meet_date).format('DD/MM/YY')}\n                                                name={item.responsible.user.full_name}\n                                                category={item.responsible.user.main_cat.name}\n                                                src={item.responsible.org.logo}\n                                                link={() => handlePush(item)}\n                                                recordsLink={() => handleRecordsPush(item)}\n                                            />\n                                        </Col>\n                                    ))\n                                }\n                            \n                            </Row>\n                        </InfiniteScroll>\n                    ) : (\n                        <Row gutter={[0, 12]} className='container'>\n                            {\n                                skeleton.map((item, idx) => (\n                                    <Col span={24} key={`${idx + 1}`}>\n                                        <RecordCardSkeleton/>\n                                    </Col>\n                                ))\n                            }\n                        </Row>\n                    )\n            }\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}