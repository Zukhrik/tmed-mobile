{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Components/Post/PostContent/index.jsx\";\nimport React, { useCallback } from 'react';\nimport { OfferCard } from '../../Cards';\nimport { CommonPost } from './CommonPost';\nimport { StreamPost } from './StreamPost';\nimport { useStore } from 'effector-react';\nimport { ActionPost } from './ActionPost';\nimport { OfferingPost } from './OfferingPost';\nimport { $postModel } from '../../../Models/post-model';\nimport { truncateString } from '../../../utils/stringUtils';\nimport { CardPostWrapper, HasOfferingsCardWrapper } from '../style';\nexport const PostContent = ({\n  data,\n  author\n}) => {\n  const {\n    $postOfferings: {\n      data: postData\n    }\n  } = useStore($postModel);\n  const renderPostType = useCallback(() => {\n    const {\n      stream_schedule,\n      medias,\n      text,\n      has_offerings,\n      action,\n      repost\n    } = data;\n\n    if (action) {\n      if (action.key === 'new_duty') {\n        return /*#__PURE__*/React.createElement(ActionPost, {\n          size1: 170,\n          size2: 130,\n          type: action.key,\n          imgUrl1: data.author.avatar,\n          imgUrl2: data.action.data.new_specialism.org.logo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 24\n          }\n        });\n      }\n\n      if (action.key === 'new_avatar') {\n        return /*#__PURE__*/React.createElement(ActionPost, {\n          imgUrl1: data.action.data.old,\n          size1: 150,\n          imgUrl2: data.action.data.new,\n          size2: 170,\n          type: action.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 24\n          }\n        });\n      }\n    } else {\n      if (stream_schedule) {\n        return /*#__PURE__*/React.createElement(StreamPost, {\n          data: stream_schedule,\n          author: author,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 24\n          }\n        });\n      }\n\n      if (has_offerings) {\n        return /*#__PURE__*/React.createElement(OfferingPost, {\n          data: data,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 24\n          }\n        });\n      }\n\n      if (repost) {\n        return /*#__PURE__*/React.createElement(CommonPost, {\n          mediaData: repost.medias,\n          repostText: text,\n          post: repost.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 24\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(CommonPost, {\n          mediaData: medias,\n          post: text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 24\n          }\n        });\n      }\n    }\n  }, [data, author]);\n  const offerings = data.has_offerings && postData[data.id];\n  return /*#__PURE__*/React.createElement(CardPostWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, renderPostType(), /*#__PURE__*/React.createElement(HasOfferingsCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, offerings && offerings.length > 0 && offerings.map((item, idx) => /*#__PURE__*/React.createElement(OfferCard, {\n    key: `${idx + 1}`,\n    imgUrl: item.offering.image,\n    offerName: truncateString(item.offering.name, 16),\n    cost: item.offering.cost.toLocaleString('fi-Fi'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Components/Post/PostContent/index.jsx"],"names":["React","useCallback","OfferCard","CommonPost","StreamPost","useStore","ActionPost","OfferingPost","$postModel","truncateString","CardPostWrapper","HasOfferingsCardWrapper","PostContent","data","author","$postOfferings","postData","renderPostType","stream_schedule","medias","text","has_offerings","action","repost","key","avatar","new_specialism","org","logo","old","new","offerings","id","length","map","item","idx","offering","image","name","cost","toLocaleString"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {OfferCard} from '../../Cards'\r\nimport {CommonPost} from './CommonPost'\r\nimport {StreamPost} from './StreamPost'\r\nimport {useStore} from 'effector-react'\r\nimport {ActionPost} from './ActionPost'\r\nimport {OfferingPost} from './OfferingPost'\r\nimport {$postModel} from '../../../Models/post-model'\r\nimport {truncateString} from '../../../utils/stringUtils'\r\nimport {CardPostWrapper, HasOfferingsCardWrapper} from '../style'\r\n\r\nexport const PostContent = ({data, author}) => {\r\n    const {$postOfferings: {data: postData}} = useStore($postModel)\r\n    \r\n    const renderPostType = useCallback(() => {\r\n        const {stream_schedule, medias, text, has_offerings, action, repost} = data\r\n        \r\n        if (action) {\r\n            if (action.key === 'new_duty') {\r\n                return <ActionPost\r\n                    size1={170}\r\n                    size2={130}\r\n                    type={action.key}\r\n                    imgUrl1={data.author.avatar}\r\n                    imgUrl2={data.action.data.new_specialism.org.logo}\r\n                />\r\n            }\r\n            \r\n            if (action.key === 'new_avatar') {\r\n                return <ActionPost\r\n                    imgUrl1={data.action.data.old}\r\n                    size1={150}\r\n                    imgUrl2={data.action.data.new}\r\n                    size2={170}\r\n                    type={action.key}\r\n                />\r\n            }\r\n        } else {\r\n            \r\n            if (stream_schedule) {\r\n                return <StreamPost data={stream_schedule} author={author}/>\r\n            }\r\n            \r\n            if (has_offerings) {\r\n                return <OfferingPost data={data}/>\r\n            }\r\n            \r\n            if (repost) {\r\n                return <CommonPost mediaData={repost.medias} repostText={text} post={repost.text}/>\r\n            } else {\r\n                return <CommonPost mediaData={medias} post={text}/>\r\n            }\r\n            \r\n        }\r\n        \r\n    }, [data, author])\r\n    \r\n    const offerings = data.has_offerings && postData[data.id]\r\n    \r\n    return (\r\n        <CardPostWrapper>\r\n            {renderPostType()}\r\n            <HasOfferingsCardWrapper>\r\n                {\r\n                    offerings && offerings.length > 0 && offerings.map((item, idx) => (\r\n                        <OfferCard\r\n                            key={`${idx + 1}`}\r\n                            imgUrl={item.offering.image}\r\n                            offerName={truncateString(item.offering.name, 16)}\r\n                            cost={item.offering.cost.toLocaleString('fi-Fi')}\r\n                        />\r\n                    ))\r\n                }\r\n            </HasOfferingsCardWrapper>\r\n        </CardPostWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}