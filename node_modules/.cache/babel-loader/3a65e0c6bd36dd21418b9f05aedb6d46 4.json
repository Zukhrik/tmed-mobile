{"ast":null,"code":"import React from'react';import moment from'moment';import{Col,Row}from'antd';import{useStore}from'effector-react';import{RecordsCard}from'../molecules';import{useGoBack}from'../../../Hooks/app';import{useOrder,useOrderIdOffers}from'../../../Hooks/order';import{useHistory,useParams}from'react-router-dom';import{$orderModel}from'../../../Models/order-model';import{FixedHeader}from'../../../Components/FixedHeader';import{generateSkeleton}from'../../../utils/skeleton-utils';import{RootContent}from'../../../UIComponents/GlobalStyles';import{RecordsCardSkeleton}from'../molecules/records-card-skeleton';import{$appModel}from'../../../Models/app';var skeleton=generateSkeleton(3);export var AccountRecordsDetail=function AccountRecordsDetail(){var _detail$order_id,_detail$order_id2,_detail$order_id2$res,_detail$order_id2$res2;useOrder();useOrderIdOffers();var _useParams=useParams(),order_id=_useParams.order_id;var _useParams2=useParams(),username=_useParams2.username;var _useHistory=useHistory(),push=_useHistory.push,pathname=_useHistory.location.pathname;var _useStore=useStore($appModel),saveURL=_useStore.$app.saveURL;var _useStore2=useStore($orderModel),_useStore2$$orderIdOf=_useStore2.$orderIdOffers,data=_useStore2$$orderIdOf.data,forceLoading=_useStore2$$orderIdOf.forceLoading,detail=_useStore2.$orderDetail.data;var _useGoBack=useGoBack({pathname:saveURL?saveURL:\"/@\".concat(username,\"/records\")}),goBack=_useGoBack.goBack;var meetDate=detail&&((_detail$order_id=detail[order_id])===null||_detail$order_id===void 0?void 0:_detail$order_id.meet_date);var handleCardClick=function handleCardClick(item){if(item.offering.id){push(\"\".concat(pathname,\"/\").concat(item.id));}};return/*#__PURE__*/React.createElement(RootContent,{paddingTop:62,height:\"100vh\"},/*#__PURE__*/React.createElement(FixedHeader,{title:(_detail$order_id2=detail[order_id])===null||_detail$order_id2===void 0?void 0:(_detail$order_id2$res=_detail$order_id2.responsible)===null||_detail$order_id2$res===void 0?void 0:(_detail$order_id2$res2=_detail$order_id2$res.org)===null||_detail$order_id2$res2===void 0?void 0:_detail$order_id2$res2.name,goBack:goBack}),/*#__PURE__*/React.createElement(Row,{className:\"container\",gutter:[0,12],style:{paddingBottom:65}},forceLoading===2&&data?/*#__PURE__*/React.createElement(React.Fragment,null,data.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{span:24,key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(RecordsCard,{offeringName:item.offering.name,offeringUrl:item.offering.image,orgName:item.offering.org.name,meetTime:moment(meetDate).format('DD.MM.YYYY HH:mm'),containerPath:function containerPath(){return handleCardClick(item);}}));})):/*#__PURE__*/React.createElement(React.Fragment,null,skeleton.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{span:24,key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(RecordsCardSkeleton,null));}))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/organisms/account-records-detail.jsx"],"names":["React","moment","Col","Row","useStore","RecordsCard","useGoBack","useOrder","useOrderIdOffers","useHistory","useParams","$orderModel","FixedHeader","generateSkeleton","RootContent","RecordsCardSkeleton","$appModel","skeleton","AccountRecordsDetail","order_id","username","push","pathname","location","saveURL","$app","$orderIdOffers","data","forceLoading","detail","$orderDetail","goBack","meetDate","meet_date","handleCardClick","item","offering","id","responsible","org","name","paddingBottom","map","idx","image","format"],"mappings":"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","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {RecordsCard} from '../molecules'\nimport {useGoBack} from '../../../Hooks/app'\nimport {useOrder, useOrderIdOffers} from '../../../Hooks/order'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {$orderModel} from '../../../Models/order-model'\nimport {FixedHeader} from '../../../Components/FixedHeader'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {RootContent} from '../../../UIComponents/GlobalStyles'\nimport {RecordsCardSkeleton} from '../molecules/records-card-skeleton'\nimport {$appModel} from '../../../Models/app'\n\nconst skeleton = generateSkeleton(3)\nexport const AccountRecordsDetail = () => {\n    useOrder()\n    useOrderIdOffers()\n    const {order_id} = useParams()\n    const {username} = useParams()\n    const {push, location: {pathname}} = useHistory()\n    const {$app: {saveURL}} = useStore($appModel)\n    const {$orderIdOffers: {data, forceLoading}, $orderDetail: {data: detail}} = useStore($orderModel)\n    const {goBack} = useGoBack({pathname: saveURL ? saveURL : `/@${username}/records`})\n    const meetDate = detail && detail[order_id]?.meet_date\n    \n    const handleCardClick = (item) => {\n        if (item.offering.id) {\n            push(`${pathname}/${item.id}`)\n        }\n    }\n    \n    return (\n        <RootContent\n            paddingTop={62}\n            height='100vh'\n        >\n            <FixedHeader\n                title={detail[order_id]?.responsible?.org?.name}\n                goBack={goBack}\n            />\n            <Row className='container' gutter={[0, 12]} style={{paddingBottom: 65}}>\n                {\n                    forceLoading === 2 && data\n                        ? (\n                            <>\n                                {\n                                    data.map((item, idx) => (\n                                        <Col span={24} key={`${idx + 1}`}>\n                                            <RecordsCard\n                                                offeringName={item.offering.name}\n                                                offeringUrl={item.offering.image}\n                                                orgName={item.offering.org.name}\n                                                meetTime={moment(meetDate).format('DD.MM.YYYY HH:mm')}\n                                                containerPath={() => handleCardClick(item)}\n                                            />\n                                        </Col>\n                                    ))\n                                }\n                            </>\n                        ) : (\n                            <>\n                                {\n                                    skeleton.map((item, idx) => (\n                                        <Col span={24} key={`${idx + 1}`}>\n                                            <RecordsCardSkeleton/>\n                                        </Col>\n                                    ))\n                                }\n                            </>\n                        )\n                }\n            </Row>\n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}