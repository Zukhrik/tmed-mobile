{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/molecules/record-card.jsx\";\nimport React, { useCallback } from 'react';\nimport { IconItemWrapper, RecordCardWrapper } from '../atoms';\nimport { Col, Row } from 'antd';\nimport { Title } from '../../../UIComponents/Typography/Title';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { Avatar } from '../../../UIComponents/Avatar';\nimport { TimeCircleSvg } from '../../../Icons/Time';\nimport { StarSvg } from '../../../Icons/Start';\nimport { OfficialSvg } from '../../../Icons/Official';\nimport { useTranslation } from 'react-i18next';\nimport { QuickResponseCodeSvg } from '../../../Icons/QRCode';\nimport { DoneSvg } from '../../../Icons/Done';\nimport { ClockSvg } from '../../../Icons/Clock';\nimport { Button } from '../../../UIComponents/Button';\nimport { DocumentText } from '../../../Icons/DocumentText';\nimport { CalendarSvg } from '../../../Icons/Calendar';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'effector-react';\nimport { $accountModel } from '../../../Models/account-model';\nexport const RecordCard = ({\n  name,\n  category,\n  src,\n  status,\n  meet,\n  date,\n  link\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    push\n  } = useHistory();\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  const generateStatus = useCallback(statuses => {\n    switch (statuses) {\n      case -1:\n        return /*#__PURE__*/React.createElement(IconItemWrapper, {\n          color: \"var(--danger-dwed)\",\n          textColor: \"var(--danger-dwed)\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(OfficialSvg, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }\n        }), t('canceled'));\n\n      case 0:\n        return /*#__PURE__*/React.createElement(IconItemWrapper, {\n          color: \"var(--aesthetic-color)\",\n          textColor: \"var(--aesthetic-color)\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ClockSvg, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }\n        }), t('awaiting'));\n\n      case 1:\n        return /*#__PURE__*/React.createElement(IconItemWrapper, {\n          color: \"var(--professional-color)\",\n          textColor: \"var(--professional-color)\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(StarSvg, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }\n        }), t('approved'));\n\n      case 2:\n        return /*#__PURE__*/React.createElement(IconItemWrapper, {\n          color: \"#05D696\",\n          textColor: \"##05D696\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(QuickResponseCodeSvg, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }\n        }), t('scanned'));\n\n      case 5:\n        return /*#__PURE__*/React.createElement(IconItemWrapper, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(DoneSvg, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 41\n          }\n        }), t('finished'));\n\n      default:\n        return null;\n    }\n  }, [t]);\n  return /*#__PURE__*/React.createElement(RecordCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    onClick: link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    wrap: false,\n    gutter: [4, 0],\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, name), /*#__PURE__*/React.createElement(Text, {\n    color: \"var(--grey-dwed)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, category)), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    size: 36,\n    imgUrl: src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    wrap: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"icon-item-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TimeCircleSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }), \" \", meet), /*#__PURE__*/React.createElement(Col, {\n    className: \"icon-item-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CalendarSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }), \" \", date), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, generateStatus(status)))), status && /*#__PURE__*/React.createElement(Col, {\n    className: \"buttons-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, status === 5 && /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => push(`/@${!!currentProfile.slug_name}/records`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(DocumentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 41\n    }\n  }), t('view_record')))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Records/molecules/record-card.jsx"],"names":["React","useCallback","IconItemWrapper","RecordCardWrapper","Col","Row","Title","Text","Avatar","TimeCircleSvg","StarSvg","OfficialSvg","useTranslation","QuickResponseCodeSvg","DoneSvg","ClockSvg","Button","DocumentText","CalendarSvg","useHistory","useStore","$accountModel","RecordCard","name","category","src","status","meet","date","link","t","push","$profiles","currentProfile","generateStatus","statuses","slug_name"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react'\nimport {IconItemWrapper, RecordCardWrapper} from '../atoms'\nimport {Col, Row} from 'antd'\nimport {Title} from '../../../UIComponents/Typography/Title'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {Avatar} from '../../../UIComponents/Avatar'\nimport {TimeCircleSvg} from '../../../Icons/Time'\nimport {StarSvg} from '../../../Icons/Start'\nimport {OfficialSvg} from '../../../Icons/Official'\nimport {useTranslation} from 'react-i18next'\nimport {QuickResponseCodeSvg} from '../../../Icons/QRCode'\nimport {DoneSvg} from '../../../Icons/Done'\nimport {ClockSvg} from '../../../Icons/Clock'\nimport {Button} from '../../../UIComponents/Button'\nimport {DocumentText} from '../../../Icons/DocumentText'\nimport {CalendarSvg} from '../../../Icons/Calendar'\nimport {useHistory} from 'react-router-dom'\nimport {useStore} from 'effector-react'\nimport {$accountModel} from '../../../Models/account-model'\n\nexport const RecordCard = ({name, category, src, status, meet, date, link}) => {\n    const {t} = useTranslation()\n    const {push} = useHistory()\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    \n    const generateStatus = useCallback((statuses) => {\n        switch (statuses) {\n            case -1:\n                return (\n                    <IconItemWrapper\n                        color='var(--danger-dwed)'\n                        textColor='var(--danger-dwed)'\n                    >\n                        <OfficialSvg/>{t('canceled')}\n                    </IconItemWrapper>\n                )\n            case 0:\n                return (\n                    <IconItemWrapper\n                        color='var(--aesthetic-color)'\n                        textColor='var(--aesthetic-color)'\n                    >\n                        <ClockSvg/>{t('awaiting')}\n                    </IconItemWrapper>\n                )\n            case 1:\n                return (\n                    <IconItemWrapper\n                        color='var(--professional-color)'\n                        textColor='var(--professional-color)'\n                    >\n                        <StarSvg/>{t('approved')}\n                    </IconItemWrapper>\n                )\n            case 2:\n                return (\n                    <IconItemWrapper\n                        color='#05D696'\n                        textColor='##05D696'\n                    >\n                        <QuickResponseCodeSvg/>{t('scanned')}\n                    </IconItemWrapper>\n                )\n            case 5:\n                return <IconItemWrapper><DoneSvg/>{t('finished')}</IconItemWrapper>\n            \n            default:\n                return null\n        }\n    }, [t])\n    \n    \n    return (\n        <RecordCardWrapper>\n            <Row gutter={[0, 10]}>\n                <Col span={24} onClick={link}>\n                    <Row wrap={false} gutter={[4, 0]} justify='space-between'>\n                        <Col>\n                            <Title level={4}>{name}</Title>\n                            <Text color='var(--grey-dwed)'>{category}</Text>\n                        </Col>\n                        <Col>\n                            <Avatar size={36} imgUrl={src}/>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col span={24}>\n                    <Row wrap={false}>\n                        <Col className='icon-item-wrapper'>\n                            <TimeCircleSvg/> {meet}\n                        </Col>\n                        <Col className='icon-item-wrapper'>\n                            <CalendarSvg/> {date}\n                        </Col>\n                        <Col>\n                            {generateStatus(status)}\n                        </Col>\n                    </Row>\n                </Col>\n                {\n                    status && (\n                        <Col className='buttons-wrapper'>\n                            {\n                                status === 5 && (\n                                    <Button variant='primary' onClick={() => push(`/@${!!currentProfile.slug_name}/records`)}>\n                                        <DocumentText/>\n                                        {t('view_record')}\n                                    </Button>\n                                )\n                            }\n                        </Col>\n                    )\n                }\n            </Row>\n        </RecordCardWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}