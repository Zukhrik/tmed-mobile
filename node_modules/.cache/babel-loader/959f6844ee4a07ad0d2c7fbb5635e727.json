{"ast":null,"code":"import{useEffect}from'react';import{useStore}from'effector-react';import{useInView}from'react-intersection-observer';import{$postModel,postOfferingMount}from'../../Models/post-model';export function useTapeInView(){var _useStore=useStore($postModel),data=_useStore.$postOfferings.data;var _useInView=useInView({threshold:0.25,delay:300}),ref=_useInView.ref,inView=_useInView.inView,entry=_useInView.entry;useEffect(function(){if(inView){var id=entry.target.getAttribute('data-id');if(id&&data[id]===undefined){var _data={post_id:id,clear:true,params:{params:{limit:10,offset:0}}};postOfferingMount(_data);}}},[entry,data,inView]);return{ref:ref};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/tape/use-tape-in-view.js"],"names":["useEffect","useStore","useInView","$postModel","postOfferingMount","useTapeInView","data","$postOfferings","threshold","delay","ref","inView","entry","id","target","getAttribute","undefined","post_id","clear","params","limit","offset"],"mappings":"AAAA,OAAQA,SAAR,KAAwB,OAAxB,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CACA,OAAQC,SAAR,KAAwB,6BAAxB,CACA,OAAQC,UAAR,CAAoBC,iBAApB,KAA4C,yBAA5C,CAEA,MAAO,SAASC,CAAAA,aAAT,EAAyB,CAC5B,cAAiCJ,QAAQ,CAACE,UAAD,CAAzC,CAAwBG,IAAxB,WAAOC,cAAP,CAAwBD,IAAxB,CACA,eAA6BJ,SAAS,CAAC,CACnCM,SAAS,CAAE,IADwB,CAEnCC,KAAK,CAAE,GAF4B,CAAD,CAAtC,CAAOC,GAAP,YAAOA,GAAP,CAAYC,MAAZ,YAAYA,MAAZ,CAAoBC,KAApB,YAAoBA,KAApB,CAKAZ,SAAS,CAAC,UAAM,CACZ,GAAIW,MAAJ,CAAY,CACR,GAAME,CAAAA,EAAE,CAAGD,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,SAA1B,CAAX,CACA,GAAIF,EAAE,EAAIP,IAAI,CAACO,EAAD,CAAJ,GAAaG,SAAvB,CAAkC,CAC9B,GAAMV,CAAAA,KAAI,CAAG,CACTW,OAAO,CAAEJ,EADA,CAETK,KAAK,CAAE,IAFE,CAGTC,MAAM,CAAE,CACJA,MAAM,CAAE,CACJC,KAAK,CAAE,EADH,CAEJC,MAAM,CAAE,CAFJ,CADJ,CAHC,CAAb,CAUAjB,iBAAiB,CAACE,KAAD,CAAjB,CACH,CACJ,CACJ,CAjBQ,CAiBN,CAACM,KAAD,CAAQN,IAAR,CAAcK,MAAd,CAjBM,CAAT,CAmBA,MAAO,CAACD,GAAG,CAAHA,GAAD,CAAP,CACH","sourcesContent":["import {useEffect} from 'react'\r\nimport {useStore} from 'effector-react'\r\nimport {useInView} from 'react-intersection-observer'\r\nimport {$postModel, postOfferingMount} from '../../Models/post-model'\r\n\r\nexport function useTapeInView() {\r\n    const {$postOfferings: {data}} = useStore($postModel)\r\n    const {ref, inView, entry} = useInView({\r\n        threshold: 0.25,\r\n        delay: 300\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (inView) {\r\n            const id = entry.target.getAttribute('data-id')\r\n            if (id && data[id] === undefined) {\r\n                const data = {\r\n                    post_id: id,\r\n                    clear: true,\r\n                    params: {\r\n                        params: {\r\n                            limit: 10,\r\n                            offset: 0\r\n                        }\r\n                    }\r\n                }\r\n                postOfferingMount(data)\r\n            }\r\n        }\r\n    }, [entry, data, inView])\r\n\r\n    return {ref}\r\n}"]},"metadata":{},"sourceType":"module"}