{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Chat/NewChat/index.jsx\";\nimport React from 'react';\nimport { FixedHeader } from '../../../Components/FixedHeader';\nimport { NewChatHeader } from '../ChatHeaders/NewChatHeader';\nimport { ChatNewItem, NewChatWrapper } from '../style';\nimport { Input } from '../../../UIComponents/Inputs';\nimport { useTranslation } from 'react-i18next';\nimport { SearchSvg } from '../../../Icons/Search';\nimport { Container } from '../../../UIComponents/GlobalStyles';\nimport { Col, Row } from 'antd';\nimport { PeopleFillSvg } from '../../../Icons/People';\nimport { useUserSubs } from '../../../Hooks/user';\nimport { useStore } from 'effector-react';\nimport { $accountModel } from '../../../Models/account-model';\nimport { useUrlParams } from '../../../Hooks/app';\nimport { URL_KEYS } from '../../../Constants';\nimport { useChatContactSearch } from '../../../Hooks/chat';\nimport { ChatNewTab } from './ChatTab';\nimport { ChatSearchContact } from './SearchContact';\nimport { ChatContacts } from './ChatContacts';\nexport const NewChat = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    urlData\n  } = useUrlParams();\n  const search = urlData[URL_KEYS.SEARCH];\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  const {\n    loadMore: userSubsLoadMore\n  } = useUserSubs({\n    slug_name: currentProfile && currentProfile.slug_name\n  });\n  const {\n    searchText,\n    onChange,\n    loadMore: searchLoadMore\n  } = useChatContactSearch();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FixedHeader, {\n    hideBorder: true,\n    component: /*#__PURE__*/React.createElement(NewChatHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 48\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NewChatWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"chat-search-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: searchText || '',\n    onChange: e => onChange(e.target.value),\n    placeholder: t('search'),\n    icon: /*#__PURE__*/React.createElement(SearchSvg, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 31\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  })), !search && /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ChatNewItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(PeopleFillSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }\n  }), t('new_group'))))), /*#__PURE__*/React.createElement(ChatNewTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), !search && /*#__PURE__*/React.createElement(ChatContacts, {\n    loadMore: () => userSubsLoadMore('my'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 32\n    }\n  }), search && /*#__PURE__*/React.createElement(ChatSearchContact, {\n    loadMore: searchLoadMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Chat/NewChat/index.jsx"],"names":["React","FixedHeader","NewChatHeader","ChatNewItem","NewChatWrapper","Input","useTranslation","SearchSvg","Container","Col","Row","PeopleFillSvg","useUserSubs","useStore","$accountModel","useUrlParams","URL_KEYS","useChatContactSearch","ChatNewTab","ChatSearchContact","ChatContacts","NewChat","t","urlData","search","SEARCH","$profiles","currentProfile","loadMore","userSubsLoadMore","slug_name","searchText","onChange","searchLoadMore","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,iCAA1B;AACA,SAAQC,aAAR,QAA4B,8BAA5B;AACA,SAAQC,WAAR,EAAqBC,cAArB,QAA0C,UAA1C;AACA,SAAQC,KAAR,QAAoB,8BAApB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,SAAQC,SAAR,QAAwB,oCAAxB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,aAAR,QAA4B,uBAA5B;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,oBAAR,QAAmC,qBAAnC;AACA,SAAQC,UAAR,QAAyB,WAAzB;AACA,SAAQC,iBAAR,QAAgC,iBAAhC;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAM;AAACC,IAAAA;AAAD,MAAMhB,cAAc,EAA1B;AACA,QAAM;AAACiB,IAAAA;AAAD,MAAYR,YAAY,EAA9B;AACA,QAAMS,MAAM,GAAGD,OAAO,CAACP,QAAQ,CAACS,MAAV,CAAtB;AACA,QAAM;AAACC,IAAAA,SAAS,EAAE;AAACC,MAAAA;AAAD;AAAZ,MAAgCd,QAAQ,CAACC,aAAD,CAA9C;AACA,QAAM;AAACc,IAAAA,QAAQ,EAAEC;AAAX,MAA+BjB,WAAW,CAAC;AAACkB,IAAAA,SAAS,EAAEH,cAAc,IAAIA,cAAc,CAACG;AAA7C,GAAD,CAAhD;AACA,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA,QAAb;AAAuBJ,IAAAA,QAAQ,EAAEK;AAAjC,MAAmDhB,oBAAoB,EAA7E;AAEA,sBACI,uDACI,oBAAC,WAAD;AAAa,IAAA,UAAU,MAAvB;AAAwB,IAAA,SAAS,eAAE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,uBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAEc,UAAU,IAAI,EADzB;AAEI,IAAA,QAAQ,EAAGG,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAF7B;AAGI,IAAA,WAAW,EAAEd,CAAC,CAAC,QAAD,CAHlB;AAII,IAAA,IAAI,eAAE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAUQ,CAACE,MAAD,iBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKF,CAAC,CAAC,WAAD,CAFN,CADJ,CADJ,CADJ,CAXZ,eAwBI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,EA0BQ,CAACE,MAAD,iBAAW,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAE,MAAMK,gBAAgB,CAAC,IAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BnB,EA6BQL,MAAM,iBAAI,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAES,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BlB,CAFJ,CADJ;AAqCH,CA7CM","sourcesContent":["import React from 'react'\r\nimport {FixedHeader} from '../../../Components/FixedHeader'\r\nimport {NewChatHeader} from '../ChatHeaders/NewChatHeader'\r\nimport {ChatNewItem, NewChatWrapper} from '../style'\r\nimport {Input} from '../../../UIComponents/Inputs'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {SearchSvg} from '../../../Icons/Search'\r\nimport {Container} from '../../../UIComponents/GlobalStyles'\r\nimport {Col, Row} from 'antd'\r\nimport {PeopleFillSvg} from '../../../Icons/People'\r\nimport {useUserSubs} from '../../../Hooks/user'\r\nimport {useStore} from 'effector-react'\r\nimport {$accountModel} from '../../../Models/account-model'\r\nimport {useUrlParams} from '../../../Hooks/app'\r\nimport {URL_KEYS} from '../../../Constants'\r\nimport {useChatContactSearch} from '../../../Hooks/chat'\r\nimport {ChatNewTab} from './ChatTab'\r\nimport {ChatSearchContact} from './SearchContact'\r\nimport {ChatContacts} from './ChatContacts'\r\n\r\nexport const NewChat = () => {\r\n    const {t} = useTranslation()\r\n    const {urlData} = useUrlParams()\r\n    const search = urlData[URL_KEYS.SEARCH]\r\n    const {$profiles: {currentProfile}} = useStore($accountModel)\r\n    const {loadMore: userSubsLoadMore} = useUserSubs({slug_name: currentProfile && currentProfile.slug_name})\r\n    const {searchText, onChange, loadMore: searchLoadMore} = useChatContactSearch()\r\n\r\n    return (\r\n        <>\r\n            <FixedHeader hideBorder component={<NewChatHeader/>}/>\r\n            <NewChatWrapper>\r\n                <Container className='chat-search-container'>\r\n                    <Input\r\n                        value={searchText || ''}\r\n                        onChange={(e) => onChange(e.target.value)}\r\n                        placeholder={t('search')}\r\n                        icon={<SearchSvg/>}\r\n                    />\r\n                </Container>\r\n                {\r\n                    !search && (\r\n                        <Container>\r\n                            <Row gutter={16}>\r\n                                <Col span={24}>\r\n                                    <ChatNewItem>\r\n                                        <PeopleFillSvg/>\r\n                                        {t('new_group')}\r\n                                    </ChatNewItem>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    )\r\n                }\r\n\r\n                <ChatNewTab/>\r\n                {\r\n                    !search && <ChatContacts loadMore={() => userSubsLoadMore('my')}/>\r\n                }\r\n                {\r\n                    search && <ChatSearchContact loadMore={searchLoadMore}/>\r\n                }\r\n            </NewChatWrapper>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}