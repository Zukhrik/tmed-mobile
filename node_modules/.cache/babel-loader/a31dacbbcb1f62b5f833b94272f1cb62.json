{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport { $chatModel, userChatDetailMount } from '../../Models/chat-model';\nimport { useParams } from 'react-router-dom';\nimport { useStore } from 'effector-react';\nconst initialParams = {\n  limit: 50,\n  offset: 0\n};\nexport function useUserMessages() {\n  const {\n    $userMessages: {\n      loading,\n      result\n    }\n  } = useStore($chatModel);\n  const {\n    partner_slug\n  } = useParams();\n  const [mounted, setMounted] = useState();\n  const getList = useCallback(params => {\n    if (partner_slug) {\n      const data = {\n        partner: partner_slug,\n        ...params\n      };\n      userChatDetailMount(data);\n    }\n  }, [partner_slug]);\n  const loadMore = useCallback(e => {\n    const r = result[partner_slug];\n    const {\n      target\n    } = e;\n\n    if (target.offsetHeight - target.scrollTop > target.scrollHeight - 300 && !loading && !!r.next) {\n      getList({\n        params: { ...initialParams,\n          offset: r.nextOffset\n        }\n      });\n    }\n  }, [partner_slug, result, getList, loading]);\n  useEffect(() => {\n    if (!mounted) {\n      getList({\n        clear: true,\n        params: initialParams\n      });\n      setMounted(true);\n    }\n  }, [getList, mounted]);\n  return {\n    loadMore\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/chat/use-user-messages.js"],"names":["useCallback","useEffect","useState","$chatModel","userChatDetailMount","useParams","useStore","initialParams","limit","offset","useUserMessages","$userMessages","loading","result","partner_slug","mounted","setMounted","getList","params","data","partner","loadMore","e","r","target","offsetHeight","scrollTop","scrollHeight","next","nextOffset","clear"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SAAQC,UAAR,EAAoBC,mBAApB,QAA8C,yBAA9C;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,MAAM,EAAE;AAFU,CAAtB;AAKA,OAAO,SAASC,eAAT,GAA2B;AAC9B,QAAM;AAACC,IAAAA,aAAa,EAAE;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV;AAAhB,MAAqCP,QAAQ,CAACH,UAAD,CAAnD;AACA,QAAM;AAACW,IAAAA;AAAD,MAAiBT,SAAS,EAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,EAAtC;AACA,QAAMe,OAAO,GAAGjB,WAAW,CAAEkB,MAAD,IAAY;AACpC,QAAIJ,YAAJ,EAAkB;AACd,YAAMK,IAAI,GAAG;AACTC,QAAAA,OAAO,EAAEN,YADA;AAET,WAAGI;AAFM,OAAb;AAIAd,MAAAA,mBAAmB,CAACe,IAAD,CAAnB;AACH;AACJ,GAR0B,EAQxB,CAACL,YAAD,CARwB,CAA3B;AAUA,QAAMO,QAAQ,GAAGrB,WAAW,CAAEsB,CAAD,IAAO;AAChC,UAAMC,CAAC,GAAGV,MAAM,CAACC,YAAD,CAAhB;AACA,UAAM;AAACU,MAAAA;AAAD,QAAWF,CAAjB;;AACA,QAAIE,MAAM,CAACC,YAAP,GAAsBD,MAAM,CAACE,SAA7B,GAAyCF,MAAM,CAACG,YAAP,GAAsB,GAA/D,IAAsE,CAACf,OAAvE,IAAkF,CAAC,CAACW,CAAC,CAACK,IAA1F,EAAgG;AAC5FX,MAAAA,OAAO,CAAC;AAACC,QAAAA,MAAM,EAAE,EAAC,GAAGX,aAAJ;AAAmBE,UAAAA,MAAM,EAAEc,CAAC,CAACM;AAA7B;AAAT,OAAD,CAAP;AACH;AACJ,GAN2B,EAMzB,CAACf,YAAD,EAAeD,MAAf,EAAuBI,OAAvB,EAAgCL,OAAhC,CANyB,CAA5B;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACc,OAAL,EAAc;AACVE,MAAAA,OAAO,CAAC;AAACa,QAAAA,KAAK,EAAE,IAAR;AAAcZ,QAAAA,MAAM,EAAEX;AAAtB,OAAD,CAAP;AACAS,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GALQ,EAKN,CAACC,OAAD,EAAUF,OAAV,CALM,CAAT;AAOA,SAAO;AAACM,IAAAA;AAAD,GAAP;AACH","sourcesContent":["import {useCallback, useEffect, useState} from 'react'\nimport {$chatModel, userChatDetailMount} from '../../Models/chat-model'\nimport {useParams} from 'react-router-dom'\nimport {useStore} from 'effector-react'\n\nconst initialParams = {\n    limit: 50,\n    offset: 0\n}\n\nexport function useUserMessages() {\n    const {$userMessages: {loading, result}} = useStore($chatModel)\n    const {partner_slug} = useParams()\n    const [mounted, setMounted] = useState()\n    const getList = useCallback((params) => {\n        if (partner_slug) {\n            const data = {\n                partner: partner_slug,\n                ...params\n            }\n            userChatDetailMount(data)\n        }\n    }, [partner_slug])\n\n    const loadMore = useCallback((e) => {\n        const r = result[partner_slug]\n        const {target} = e\n        if (target.offsetHeight - target.scrollTop > target.scrollHeight - 300 && !loading && !!r.next) {\n            getList({params: {...initialParams, offset: r.nextOffset}})\n        }\n    }, [partner_slug, result, getList, loading])\n\n    useEffect(() => {\n        if (!mounted) {\n            getList({clear: true, params: initialParams})\n            setMounted(true)\n        }\n    }, [getList, mounted])\n\n    return {loadMore}\n}"]},"metadata":{},"sourceType":"module"}