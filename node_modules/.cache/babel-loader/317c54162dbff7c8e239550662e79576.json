{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useStore } from 'effector-react';\nimport { $userModel } from '../../Models/user-model';\nimport { getDWEDChatDetailTime } from '../../utils/time-utils';\nimport { useTranslation } from 'react-i18next';\nexport function useUserOnline({\n  username\n}) {\n  const [onlineText, setOnlineText] = useState('');\n  const {\n    $onlineUser: {\n      data\n    }\n  } = useStore($userModel);\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    let timeout = null;\n    timeout = setInterval(() => {\n      if (username && data[username]) {\n        const time = data[username].time;\n        const now = new Date().getTime();\n\n        if (now - time <= 11000) {\n          setOnlineText(t('online'));\n        } else {\n          setOnlineText(t('last_seen_t', {\n            t: getDWEDChatDetailTime(time)\n          }));\n        }\n      } else {\n        setOnlineText(t('last_seen_recently'));\n      }\n    }, 1000);\n    return () => {\n      clearInterval(timeout);\n      timeout = null;\n    };\n  }, [data, username, t]);\n  return {\n    onlineText\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/user/use-user-online.js"],"names":["useEffect","useState","useStore","$userModel","getDWEDChatDetailTime","useTranslation","useUserOnline","username","onlineText","setOnlineText","$onlineUser","data","t","timeout","setInterval","time","now","Date","getTime","clearInterval"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,SAAQC,qBAAR,QAAoC,wBAApC;AACA,SAAQC,cAAR,QAA6B,eAA7B;AAEA,OAAO,SAASC,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAmC;AACtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAACS,IAAAA,WAAW,EAAE;AAACC,MAAAA;AAAD;AAAd,MAAwBT,QAAQ,CAACC,UAAD,CAAtC;AACA,QAAM;AAACS,IAAAA;AAAD,MAAMP,cAAc,EAA1B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,OAAO,GAAG,IAAd;AAEAA,IAAAA,OAAO,GAAGC,WAAW,CAAC,MAAM;AACxB,UAAIP,QAAQ,IAAII,IAAI,CAACJ,QAAD,CAApB,EAAgC;AAC5B,cAAMQ,IAAI,GAAGJ,IAAI,CAACJ,QAAD,CAAJ,CAAeQ,IAA5B;AACA,cAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;;AACA,YAAIF,GAAG,GAAGD,IAAN,IAAc,KAAlB,EAAyB;AACrBN,UAAAA,aAAa,CAACG,CAAC,CAAC,QAAD,CAAF,CAAb;AACH,SAFD,MAEO;AACHH,UAAAA,aAAa,CAACG,CAAC,CAAC,aAAD,EAAgB;AAACA,YAAAA,CAAC,EAAER,qBAAqB,CAACW,IAAD;AAAzB,WAAhB,CAAF,CAAb;AACH;AACJ,OARD,MAQM;AACFN,QAAAA,aAAa,CAACG,CAAC,CAAC,oBAAD,CAAF,CAAb;AACH;AACJ,KAZoB,EAYlB,IAZkB,CAArB;AAcA,WAAO,MAAM;AACTO,MAAAA,aAAa,CAACN,OAAD,CAAb;AACAA,MAAAA,OAAO,GAAG,IAAV;AACH,KAHD;AAIH,GArBQ,EAqBN,CAACF,IAAD,EAAOJ,QAAP,EAAiBK,CAAjB,CArBM,CAAT;AAuBA,SAAO;AAACJ,IAAAA;AAAD,GAAP;AAEH","sourcesContent":["import {useEffect, useState} from 'react'\nimport {useStore} from 'effector-react'\nimport {$userModel} from '../../Models/user-model'\nimport {getDWEDChatDetailTime} from '../../utils/time-utils'\nimport {useTranslation} from 'react-i18next'\n\nexport function useUserOnline({username}) {\n    const [onlineText, setOnlineText] = useState('')\n    const {$onlineUser: {data}} = useStore($userModel)\n    const {t} = useTranslation()\n\n    useEffect(() => {\n        let timeout = null\n\n        timeout = setInterval(() => {\n            if (username && data[username]) {\n                const time = data[username].time\n                const now = new Date().getTime()\n                if (now - time <= 11000) {\n                    setOnlineText(t('online'))\n                } else {\n                    setOnlineText(t('last_seen_t', {t: getDWEDChatDetailTime(time)}))\n                }\n            }else {\n                setOnlineText(t('last_seen_recently'))\n            }\n        }, 1000)\n\n        return () => {\n            clearInterval(timeout)\n            timeout = null\n        }\n    }, [data, username, t])\n\n    return {onlineText}\n\n}"]},"metadata":{},"sourceType":"module"}