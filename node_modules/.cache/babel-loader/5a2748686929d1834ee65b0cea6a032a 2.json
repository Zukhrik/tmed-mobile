{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Home/pages/home.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { RootContent } from '../../../UIComponents/GlobalStyles';\nimport { FixedHeader } from '../../../Components/FixedHeader';\nimport { HomeFixedHeaderComponent } from '../organisms';\nimport { useHomeList } from '../../../Hooks/home';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { useHistory } from 'react-router-dom';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { useTranslation } from 'react-i18next';\nimport { useInfiniteQuery } from 'react-query';\nimport organization from '../../../Service-v2/organization';\nimport { CLIENT_API } from '../../../Constants/api';\nconst skeleton = generateSkeleton(10);\nexport const Home = () => {\n  const {\n    push\n  } = useHistory();\n  const {\n    t\n  } = useTranslation();\n  const {\n    loadMore\n  } = useHomeList();\n  const [modal, setModal] = useState(false);\n  const {\n    data,\n    isLoading\n  } = useInfiniteQuery(['orgs'], async () => {\n    const res = await organization.getOrgList();\n    return res.data;\n  });\n\n  const handleOrgItemClick = item => {\n    push(`/${item.slug_name}/offerings`);\n  };\n\n  return /*#__PURE__*/React.createElement(RootContent, {\n    paddingTop: 62,\n    paddingBottom: 65,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FixedHeader, {\n    component: /*#__PURE__*/React.createElement(HomeFixedHeaderComponent, {\n      setModal: setModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 37\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    next: loadMore,\n    hasMore: !isLoading,\n    dataLength: 10,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Home/pages/home.jsx"],"names":["React","useEffect","useState","RootContent","FixedHeader","HomeFixedHeaderComponent","useHomeList","InfiniteScroll","useHistory","generateSkeleton","useTranslation","useInfiniteQuery","organization","CLIENT_API","skeleton","Home","push","t","loadMore","modal","setModal","data","isLoading","res","getOrgList","handleOrgItemClick","item","slug_name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,oCAA1B;AACA,SAAQC,WAAR,QAA0B,iCAA1B;AACA,SAAQC,wBAAR,QAAuC,cAAvC;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,gBAAR,QAA+B,aAA/B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AAEA,MAAMC,QAAQ,GAAGL,gBAAgB,CAAC,EAAD,CAAjC;AACA,OAAO,MAAMM,IAAI,GAAG,MAAM;AACtB,QAAM;AAACC,IAAAA;AAAD,MAASR,UAAU,EAAzB;AACA,QAAM;AAACS,IAAAA;AAAD,MAAMP,cAAc,EAA1B;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAaZ,WAAW,EAA9B;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAM;AAACmB,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAoBX,gBAAgB,CACtC,CAAC,MAAD,CADsC,EAEtC,YAAY;AACR,UAAMY,GAAG,GAAG,MAAMX,YAAY,CAACY,UAAb,EAAlB;AACA,WAAOD,GAAG,CAACF,IAAX;AACH,GALqC,CAA1C;;AAQA,QAAMI,kBAAkB,GAAIC,IAAD,IAAU;AACjCV,IAAAA,IAAI,CAAE,IAAGU,IAAI,CAACC,SAAU,YAApB,CAAJ;AACH,GAFD;;AAIA,sBACI,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAE,EAAzB;AAA6B,IAAA,aAAa,EAAE,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,SAAS,eAAE,oBAAC,wBAAD;AAA0B,MAAA,QAAQ,EAAEP,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,cAAD;AACI,IAAA,IAAI,EAAEF,QADV;AAEI,IAAA,OAAO,EAAE,CAACI,SAFd;AAGI,IAAA,UAAU,EAAE,EAHhB;AAII,IAAA,MAAM,eAAE,uDAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AA2DH,CA7EM","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {RootContent} from '../../../UIComponents/GlobalStyles'\nimport {FixedHeader} from '../../../Components/FixedHeader'\nimport {HomeFixedHeaderComponent} from '../organisms'\nimport {useHomeList} from '../../../Hooks/home'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport {useHistory} from 'react-router-dom'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {useTranslation} from 'react-i18next'\nimport {useInfiniteQuery} from 'react-query'\nimport organization from '../../../Service-v2/organization'\nimport {CLIENT_API} from '../../../Constants/api'\n\nconst skeleton = generateSkeleton(10)\nexport const Home = () => {\n    const {push} = useHistory()\n    const {t} = useTranslation()\n    const {loadMore} = useHomeList()\n    const [modal, setModal] = useState(false)\n    \n    const {data, isLoading} = useInfiniteQuery(\n        ['orgs'],\n        async () => {\n            const res = await organization.getOrgList()\n            return res.data\n        }\n    )\n    \n    const handleOrgItemClick = (item) => {\n        push(`/${item.slug_name}/offerings`)\n    }\n    \n    return (\n        <RootContent paddingTop={62} paddingBottom={65}>\n            <FixedHeader component={<HomeFixedHeaderComponent setModal={setModal}/>}/>\n            <InfiniteScroll\n                next={loadMore}\n                hasMore={!isLoading}\n                dataLength={10}\n                loader={<>...loading</>}\n            >\n                {/*{*/}\n                {/*    forceLoading === 2 && data*/}\n                {/*        ? (*/}\n                {/*            <>*/}\n                {/*                {*/}\n                {/*                    data.length > 0*/}\n                {/*                        ? (*/}\n                {/*                            <Row className='container' gutter={[0, 12]}>*/}\n                {/*                                {*/}\n                {/*                                    data.map((item, idx) => (*/}\n                {/*                                        <Col span={24} key={`${idx + 1}`}>*/}\n                {/*                                            <OrganizationCard*/}\n                {/*                                                name={item.name}*/}\n                {/*                                                imgUrl={item.logo}*/}\n                {/*                                                containerPath={() => handleOrgItemClick(item)}*/}\n                {/*                                                category={item.category.name}*/}\n                {/*                                                ethics={item.rating.ethics.level}*/}\n                {/*                                                aesthetics={item.rating.aesthetics.level}*/}\n                {/*                                                professional={item.rating.professional.level}*/}\n                {/*                                                backgroundImage={item.background}*/}\n                {/*                                            />*/}\n                {/*                                        </Col>*/}\n                {/*                                    ))*/}\n                {/*                                }*/}\n                {/*                            </Row>*/}\n                {/*                        ) : (*/}\n                {/*                            <EmptyContainerWrapper style={{height: '80vh'}}>*/}\n                {/*                                <NoSearchResultSvg/>*/}\n                {/*                                <Title level={4}>{t('no_search_result')}</Title>*/}\n                {/*                            </EmptyContainerWrapper>*/}\n                {/*                        )*/}\n                {/*                }*/}\n                {/*            </>*/}\n                {/*        )*/}\n                {/*        : (*/}\n                {/*            <Row className='container' gutter={[0, 12]}>*/}\n                {/*                {*/}\n                {/*                    skeleton.map((item, idx) => (*/}\n                {/*                        <Col span={24} key={`${idx + 1}`}>*/}\n                {/*                            <OrganizationCardSkeleton/>*/}\n                {/*                        </Col>*/}\n                {/*                    ))*/}\n                {/*                }*/}\n                {/*            </Row>*/}\n                {/*        )*/}\n                {/*}*/}\n            </InfiniteScroll>\n        \n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}