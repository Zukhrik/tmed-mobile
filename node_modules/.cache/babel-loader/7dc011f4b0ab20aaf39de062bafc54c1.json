{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/pages/account.jsx\";\nimport React from 'react';\nimport { useUser } from '../../../Hooks/user';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useStore } from 'effector-react';\nimport { $userModel } from '../../../Models/user-model';\nimport { RootContent } from '../../../UIComponents/GlobalStyles';\nimport { FixedHeader } from '../../../Components/FixedHeader';\nimport { UserFixedHeaderComponent } from '../organisms/user-fixed-header-component';\nimport { Col, Row } from 'antd';\nimport Cookies from 'js-cookie';\nimport { getCurrentAccount } from '../../../Models/account-model';\nimport { tokenMount } from '../../../Models/app';\nimport { resetOrderCartList, resetOrgOrderCart } from '../../../Models/order-model';\nimport { Title } from '../../../UIComponents/Typography/Title';\nimport { useTranslation } from 'react-i18next';\nimport { AccountInfo, AccountInfoSkeleton } from '../molecules';\nexport const Account = () => {\n  useUser();\n  const {\n    t\n  } = useTranslation();\n  const {\n    push\n  } = useHistory();\n  const {\n    username\n  } = useParams();\n  const {\n    $user: {\n      data,\n      forceLoading\n    }\n  } = useStore($userModel);\n  const userInfo = data && (data === null || data === void 0 ? void 0 : data[username]);\n\n  const handleClick = evt => {\n    if (evt === 'logo') {\n      push('/');\n    } else if (evt === 'logout') {\n      Cookies.remove('token');\n      Cookies.remove('users');\n      Cookies.remove('refresh-token');\n      getCurrentAccount();\n      localStorage.removeItem('currentProfile');\n      tokenMount(null);\n      push('/');\n      resetOrgOrderCart();\n      resetOrderCartList();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(RootContent, {\n    height: \"100vh\",\n    paddingTop: 62,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FixedHeader, {\n    component: /*#__PURE__*/React.createElement(UserFixedHeaderComponent, {\n      logoClick: () => handleClick('logo'),\n      logoutClick: () => handleClick('logout'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"container\",\n    gutter: [0, 16],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, forceLoading === 2 && userInfo ? /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AccountInfo, {\n    imgUrl: userInfo.avatar,\n    name: `${userInfo.name} ${userInfo.lastname}`,\n    category: userInfo.main_cat.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  })) : /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AccountInfoSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, t('records')))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/pages/account.jsx"],"names":["React","useUser","useHistory","useParams","useStore","$userModel","RootContent","FixedHeader","UserFixedHeaderComponent","Col","Row","Cookies","getCurrentAccount","tokenMount","resetOrderCartList","resetOrgOrderCart","Title","useTranslation","AccountInfo","AccountInfoSkeleton","Account","t","push","username","$user","data","forceLoading","userInfo","handleClick","evt","remove","localStorage","removeItem","avatar","name","lastname","main_cat"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useUser} from '../../../Hooks/user'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {useStore} from 'effector-react'\nimport {$userModel} from '../../../Models/user-model'\nimport {RootContent} from '../../../UIComponents/GlobalStyles'\nimport {FixedHeader} from '../../../Components/FixedHeader'\nimport {UserFixedHeaderComponent} from '../organisms/user-fixed-header-component'\nimport {Col, Row} from 'antd'\nimport Cookies from 'js-cookie'\nimport {getCurrentAccount} from '../../../Models/account-model'\nimport {tokenMount} from '../../../Models/app'\nimport {resetOrderCartList, resetOrgOrderCart} from '../../../Models/order-model'\nimport {Title} from '../../../UIComponents/Typography/Title'\nimport {useTranslation} from 'react-i18next'\nimport {AccountInfo, AccountInfoSkeleton} from '../molecules'\n\n\nexport const Account = () => {\n    useUser()\n    const {t} = useTranslation()\n    const {push} = useHistory()\n    const {username} = useParams()\n    const {$user: {data, forceLoading}} = useStore($userModel)\n    const userInfo = data && data?.[username]\n    \n    const handleClick = (evt) => {\n        if (evt === 'logo') {\n            push('/')\n        } else if (evt === 'logout') {\n            Cookies.remove('token')\n            Cookies.remove('users')\n            Cookies.remove('refresh-token')\n            getCurrentAccount()\n            localStorage.removeItem('currentProfile')\n            tokenMount(null)\n            push('/')\n            resetOrgOrderCart()\n            resetOrderCartList()\n        }\n    }\n    \n    return (\n        <RootContent height='100vh' paddingTop={62}>\n            <FixedHeader\n                component={<UserFixedHeaderComponent\n                    logoClick={() => handleClick('logo')}\n                    logoutClick={() => handleClick('logout')}\n                />}\n            />\n            <Row className='container' gutter={[0, 16]}>\n                {\n                    forceLoading === 2 && userInfo\n                        ? (\n                            <Col span={24}>\n                                <AccountInfo\n                                    imgUrl={userInfo.avatar}\n                                    name={`${userInfo.name} ${userInfo.lastname}`}\n                                    category={userInfo.main_cat.name}\n                                />\n                            </Col>\n                        )\n                        : (\n                            <Col span={24}>\n                                <AccountInfoSkeleton/>\n                            </Col>\n                        )\n                }\n                <Col span={24}>\n                    <Title>{t('records')}</Title>\n                </Col>\n            </Row>\n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}