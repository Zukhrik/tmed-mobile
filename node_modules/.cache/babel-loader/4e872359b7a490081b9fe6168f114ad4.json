{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/AccountComponents/UserTape/index.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { TapeItems } from '../../TapeTypes';\nimport { $appModel } from '../../../Models/app';\nimport { INFO_MAT } from '../../../Constants/app';\nimport { useAuthorTape } from '../../../Hooks/tape';\nimport { PostSkeleton } from '../../Post/PostSkeleton';\nimport { $tapeModel } from '../../../Models/tape-model';\nimport { NoOfferingSvg } from '../../../Icons/NoOffering';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { EmptyContainerWrapper, RootContent } from '../../../UIComponents/GlobalStyles';\nconst skeleton = generateSkeleton(10);\nexport const UserTape = () => {\n  const {\n    loadMore\n  } = useAuthorTape();\n  const {\n    $device\n  } = useStore($appModel);\n  const {\n    $authorTape: {\n      data,\n      forceLoading,\n      result,\n      loading\n    }\n  } = useStore($tapeModel);\n  return /*#__PURE__*/React.createElement(RootContent, {\n    paddingTop: $device && $device === INFO_MAT && '245px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, forceLoading === 2 ? /*#__PURE__*/React.createElement(React.Fragment, null, data && data.length > 0 ? /*#__PURE__*/React.createElement(InfiniteScroll, {\n    next: loadMore,\n    hasMore: !loading && !!(result === null || result === void 0 ? void 0 : result.next),\n    dataLength: (result === null || result === void 0 ? void 0 : result.nextOffset) || 10,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, data.map((item, idx) => /*#__PURE__*/React.createElement(TapeItems, {\n    key: `${idx + 1}`,\n    data: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 53\n    }\n  })))) : /*#__PURE__*/React.createElement(EmptyContainerWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(NoOfferingSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 41\n    }\n  }))) : /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(PostSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/AccountComponents/UserTape/index.jsx"],"names":["React","Col","Row","useStore","TapeItems","$appModel","INFO_MAT","useAuthorTape","PostSkeleton","$tapeModel","NoOfferingSvg","InfiniteScroll","generateSkeleton","EmptyContainerWrapper","RootContent","skeleton","UserTape","loadMore","$device","$authorTape","data","forceLoading","result","loading","length","next","nextOffset","map","item","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAAQC,aAAR,QAA4B,qBAA5B;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,UAAR,QAAyB,4BAAzB;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,qBAAR,EAA+BC,WAA/B,QAAiD,oCAAjD;AAEA,MAAMC,QAAQ,GAAGH,gBAAgB,CAAC,EAAD,CAAjC;AACA,OAAO,MAAMI,QAAQ,GAAG,MAAM;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAaV,aAAa,EAAhC;AACA,QAAM;AAACW,IAAAA;AAAD,MAAYf,QAAQ,CAACE,SAAD,CAA1B;AACA,QAAM;AAACc,IAAAA,WAAW,EAAE;AAACC,MAAAA,IAAD;AAAOC,MAAAA,YAAP;AAAqBC,MAAAA,MAArB;AAA6BC,MAAAA;AAA7B;AAAd,MAAuDpB,QAAQ,CAACM,UAAD,CAArE;AAEA,sBACI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAES,OAAO,IAAIA,OAAO,KAAKZ,QAAvB,IAAmC,OADnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIQe,YAAY,KAAK,CAAjB,gBAEQ,0CAEQD,IAAI,IAAIA,IAAI,CAACI,MAAL,GAAc,CAAtB,gBACM,oBAAC,cAAD;AACE,IAAA,IAAI,EAAEP,QADR;AAEE,IAAA,OAAO,EAAE,CAACM,OAAD,IAAY,CAAC,EAACD,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEG,IAAT,CAFxB;AAGE,IAAA,UAAU,EAAE,CAAAH,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEI,UAAR,KAAsB,EAHpC;AAIE,IAAA,MAAM,eAAE,uDAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,0CAEQN,IAAI,CAACO,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACL,oBAAC,SAAD;AACI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EADpB;AAEI,IAAA,IAAI,EAAED,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFR,CANF,CADN,gBAkBM,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApBd,CAFR,gBA2BQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIb,QAAQ,CAACY,GAAT,CAAa,CAACC,IAAD,EAAOC,GAAP,kBACT,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE,EADV;AAEI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CAFJ,CA/BhB,CADJ;AA+CH,CApDM","sourcesContent":["import React from 'react'\r\nimport {Col, Row} from 'antd'\r\nimport {useStore} from 'effector-react'\r\nimport {TapeItems} from '../../TapeTypes'\r\nimport {$appModel} from '../../../Models/app'\r\nimport {INFO_MAT} from '../../../Constants/app'\r\nimport {useAuthorTape} from '../../../Hooks/tape'\r\nimport {PostSkeleton} from '../../Post/PostSkeleton'\r\nimport {$tapeModel} from '../../../Models/tape-model'\r\nimport {NoOfferingSvg} from '../../../Icons/NoOffering'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\r\nimport {EmptyContainerWrapper, RootContent} from '../../../UIComponents/GlobalStyles'\r\n\r\nconst skeleton = generateSkeleton(10)\r\nexport const UserTape = () => {\r\n    const {loadMore} = useAuthorTape()\r\n    const {$device} = useStore($appModel)\r\n    const {$authorTape: {data, forceLoading, result, loading}} = useStore($tapeModel)\r\n    \r\n    return (\r\n        <RootContent\r\n            paddingTop={$device && $device === INFO_MAT && '245px'}\r\n        >\r\n            {\r\n                forceLoading === 2\r\n                    ? (\r\n                        <>\r\n                            {\r\n                                data && data.length > 0\r\n                                    ? <InfiniteScroll\r\n                                        next={loadMore}\r\n                                        hasMore={!loading && !!result?.next}\r\n                                        dataLength={result?.nextOffset || 10}\r\n                                        loader={<>...loading</>}\r\n                                    >\r\n                                        <>\r\n                                            {\r\n                                                data.map((item, idx) => (\r\n                                                    <TapeItems\r\n                                                        key={`${idx + 1}`}\r\n                                                        data={item}\r\n                                                    />\r\n                                                ))\r\n                                            }\r\n                                        </>\r\n                                    </InfiniteScroll>\r\n                                    : <EmptyContainerWrapper>\r\n                                        <NoOfferingSvg/>\r\n                                    </EmptyContainerWrapper>\r\n                            }\r\n                        </>\r\n                    ) : <Row>\r\n                        {\r\n                            skeleton.map((item, idx) => (\r\n                                <Col\r\n                                    span={24}\r\n                                    key={`${idx + 1}`}\r\n                                >\r\n                                    <PostSkeleton/>\r\n                                </Col>\r\n                            ))\r\n                        }\r\n                    </Row>\r\n            }\r\n        </RootContent>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}