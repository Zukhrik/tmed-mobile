{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useEffect}from'react';import{useUrlParams}from'../app';import{useStore}from'effector-react';import{URL_KEYS}from'../../Constants';import order from'../../Service/order';import{$appModel}from'../../Models/app';import{useHistory,useParams}from'react-router-dom';import{$orderModel,getOrderCartListMount,getOrgOrderCartsMount}from'../../Models/order-model';var initialParams={limit:10,offset:0};export function useOrgOrderDelete(){var _orderCartsData$find,_orderCartsData$find$;var _useHistory=useHistory(),push=_useHistory.push;var _useUrlParams=useUrlParams(),urlData=_useUrlParams.urlData;var _useParams=useParams(),organization=_useParams.organization;var specId=urlData[URL_KEYS.SPECIALIST_ID];var _useStore=useStore($appModel),saveURL=_useStore.$app.saveURL;var _useStore2=useStore($orderModel),data=_useStore2.$orgOrderCartList.data;var _useStore3=useStore($orderModel),orderCartsData=_useStore3.$orderCartList.data;var specList=(_orderCartsData$find=orderCartsData.find(function(item){return item.seller.slug_name===organization;}))===null||_orderCartsData$find===void 0?void 0:(_orderCartsData$find$=_orderCartsData$find.seller)===null||_orderCartsData$find$===void 0?void 0:_orderCartsData$find$.specialists;useEffect(function(){if(data[organization]&&data[organization].length<=0){if(specList&&specList.length>0){push({pathname:\"/records/unregistered/\".concat(organization),search:\"\".concat(URL_KEYS.SPECIALIST_ID,\"=\").concat(specList[0].id)});}}},[data,organization,push,specList]);var handleDelete=function handleDelete(id){var pushToOrg=function pushToOrg(){push(saveURL?saveURL:\"/\".concat(organization,\"/offerings\"));};if(data&&data[organization]){var params={offering_id:id,organization:organization,action:function action(){var params={action:function action(){return pushToOrg();},isRedirect:true,organization:organization};getOrderCartListMount(params);}};order.deleteOrderCart(params).then(function(res){if(res){var _data={clear:true,org_slug_name:organization,params:_objectSpread(_objectSpread({},initialParams),{},{responsible:specId}),action:function action(){var params={action:function action(){return pushToOrg();},isRedirect:true,organization:organization};getOrderCartListMount(params);}};getOrgOrderCartsMount(_data);}});// deleteOrderCartMount(params)\n}};return{organization:organization,handleDelete:handleDelete};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/order/use-org-order-delete.js"],"names":["useEffect","useUrlParams","useStore","URL_KEYS","order","$appModel","useHistory","useParams","$orderModel","getOrderCartListMount","getOrgOrderCartsMount","initialParams","limit","offset","useOrgOrderDelete","push","urlData","organization","specId","SPECIALIST_ID","saveURL","$app","data","$orgOrderCartList","orderCartsData","$orderCartList","specList","find","item","seller","slug_name","specialists","length","pathname","search","id","handleDelete","pushToOrg","params","offering_id","action","isRedirect","deleteOrderCart","then","res","clear","org_slug_name","responsible"],"mappings":"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","sourcesContent":["import {useEffect} from 'react'\nimport {useUrlParams} from '../app'\nimport {useStore} from 'effector-react'\nimport {URL_KEYS} from '../../Constants'\nimport order from '../../Service/order'\nimport {$appModel} from '../../Models/app'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {$orderModel, getOrderCartListMount, getOrgOrderCartsMount} from '../../Models/order-model'\n\nconst initialParams = {\n    limit: 10,\n    offset: 0\n}\n\nexport function useOrgOrderDelete() {\n    const {push} = useHistory()\n    const {urlData} = useUrlParams()\n    const {organization} = useParams()\n    const specId = urlData[URL_KEYS.SPECIALIST_ID]\n    const {$app: {saveURL}} = useStore($appModel)\n    const {$orgOrderCartList: {data}} = useStore($orderModel)\n    const {$orderCartList: {data: orderCartsData}} = useStore($orderModel)\n    const specList = orderCartsData.find(item => item.seller.slug_name === organization)?.seller?.specialists\n    \n    useEffect(() => {\n        if (data[organization] && data[organization].length <= 0) {\n            if (specList && specList.length > 0) {\n                push({\n                    pathname: `/records/unregistered/${organization}`,\n                    search: `${URL_KEYS.SPECIALIST_ID}=${specList[0].id}`\n                })\n            }\n        }\n        \n    }, [data, organization, push, specList])\n    \n    const handleDelete = (id) => {\n        const pushToOrg = () => {\n            push(saveURL ? saveURL : `/${organization}/offerings`)\n        }\n        \n        if (data && data[organization]) {\n            const params = {\n                offering_id: id,\n                organization,\n                action: () => {\n                    const params = {\n                        action: () => pushToOrg(),\n                        isRedirect: true,\n                        organization\n                    }\n                    getOrderCartListMount(params)\n                }\n            }\n            order.deleteOrderCart(params)\n                .then(res => {\n                    if (res) {\n                        const data = {\n                            clear: true,\n                            org_slug_name: organization,\n                            params: {\n                                ...initialParams,\n                                responsible: specId\n                            },\n                            action: () => {\n                                const params = {\n                                    action: () => pushToOrg(),\n                                    isRedirect: true,\n                                    organization\n                                }\n                                getOrderCartListMount(params)\n                            }\n                        }\n                        \n                        getOrgOrderCartsMount(data)\n                    }\n                })\n            \n            // deleteOrderCartMount(params)\n        }\n    }\n    \n    return {organization, handleDelete}\n}"]},"metadata":{},"sourceType":"module"}