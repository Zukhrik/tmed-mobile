{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/Records/organisms/account-info.jsx\";\nimport React from 'react';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { useStore } from 'effector-react';\nimport { $orderModel } from '../../../Models/order-model';\nimport { AccountScrollWrapper } from '../atoms';\nimport { Col, Row } from 'antd';\nimport { OrderCardSkeleton, OrderCartCard } from '../../../Components/Cards';\nconst skeleton = generateSkeleton(10);\nexport const AccountInfo = ({\n  currentOrg,\n  otherOrgs\n}) => {\n  const {\n    $orderCartList: {\n      forceLoading\n    }\n  } = useStore($orderModel);\n  return /*#__PURE__*/React.createElement(AccountScrollWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    wrap: false,\n    gutter: [12, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, currentOrg && /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(OrderCartCard, {\n    cost: currentOrg.total.cost,\n    name: currentOrg.seller.name,\n    count: currentOrg.total.count,\n    imgUrl: currentOrg.seller.logo,\n    category: currentOrg.seller.category.name,\n    background: \"var(--basic-active-background)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  })), forceLoading === 2 ? otherOrgs && otherOrgs.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(OrderCartCard, {\n    name: item.seller.name,\n    count: item.total.count,\n    imgUrl: item.seller.logo,\n    category: item.seller.category.name,\n    containerPath: `/records/unregistered/${item.seller.slug_name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 37\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(OrderCardSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }\n  }))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/Records/organisms/account-info.jsx"],"names":["React","generateSkeleton","useStore","$orderModel","AccountScrollWrapper","Col","Row","OrderCardSkeleton","OrderCartCard","skeleton","AccountInfo","currentOrg","otherOrgs","$orderCartList","forceLoading","total","cost","seller","name","count","logo","category","map","item","idx","slug_name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,WAAR,QAA0B,6BAA1B;AACA,SAAQC,oBAAR,QAAmC,UAAnC;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,iBAAR,EAA2BC,aAA3B,QAA+C,2BAA/C;AAEA,MAAMC,QAAQ,GAAGR,gBAAgB,CAAC,EAAD,CAAjC;AACA,OAAO,MAAMS,WAAW,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AACpD,QAAM;AAACC,IAAAA,cAAc,EAAE;AAACC,MAAAA;AAAD;AAAjB,MAAmCZ,QAAQ,CAACC,WAAD,CAAjD;AAEA,sBACI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,KAAX;AAAkB,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,CAAL,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQQ,UAAU,iBACV,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AACI,IAAA,IAAI,EAAEA,UAAU,CAACI,KAAX,CAAiBC,IAD3B;AAEI,IAAA,IAAI,EAAEL,UAAU,CAACM,MAAX,CAAkBC,IAF5B;AAGI,IAAA,KAAK,EAAEP,UAAU,CAACI,KAAX,CAAiBI,KAH5B;AAII,IAAA,MAAM,EAAER,UAAU,CAACM,MAAX,CAAkBG,IAJ9B;AAKI,IAAA,QAAQ,EAAET,UAAU,CAACM,MAAX,CAAkBI,QAAlB,CAA2BH,IALzC;AAMI,IAAA,UAAU,EAAC,gCANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHR,EAeQJ,YAAY,KAAK,CAAjB,GAEQF,SAAS,IAAIA,SAAS,CAACU,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,kBACvB,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE,EADV;AAEI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,aAAD;AACI,IAAA,IAAI,EAAED,IAAI,CAACN,MAAL,CAAYC,IADtB;AAEI,IAAA,KAAK,EAAEK,IAAI,CAACR,KAAL,CAAWI,KAFtB;AAGI,IAAA,MAAM,EAAEI,IAAI,CAACN,MAAL,CAAYG,IAHxB;AAII,IAAA,QAAQ,EAAEG,IAAI,CAACN,MAAL,CAAYI,QAAZ,CAAqBH,IAJnC;AAKI,IAAA,aAAa,EAAG,yBAAwBK,IAAI,CAACN,MAAL,CAAYQ,SAAU,EALlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADS,CAFrB,gBAgBQ,0CAEIhB,QAAQ,CAACa,GAAT,CAAa,CAACC,IAAD,EAAOC,GAAP,kBACT,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE,EADV;AAEI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CAFJ,CA/BhB,CADJ,CADJ;AAiDH,CApDM","sourcesContent":["import React from 'react'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {useStore} from 'effector-react'\nimport {$orderModel} from '../../../Models/order-model'\nimport {AccountScrollWrapper} from '../atoms'\nimport {Col, Row} from 'antd'\nimport {OrderCardSkeleton, OrderCartCard} from '../../../Components/Cards'\n\nconst skeleton = generateSkeleton(10)\nexport const AccountInfo = ({currentOrg, otherOrgs}) => {\n    const {$orderCartList: {forceLoading}} = useStore($orderModel)\n    \n    return (\n        <AccountScrollWrapper>\n            <Row wrap={false} gutter={[12, 0]}>\n                {\n                    currentOrg &&\n                    <Col span={24}>\n                        <OrderCartCard\n                            cost={currentOrg.total.cost}\n                            name={currentOrg.seller.name}\n                            count={currentOrg.total.count}\n                            imgUrl={currentOrg.seller.logo}\n                            category={currentOrg.seller.category.name}\n                            background='var(--basic-active-background)'\n                        />\n                    </Col>\n                }\n                {\n                    forceLoading === 2\n                        ? (\n                            otherOrgs && otherOrgs.map((item, idx) => (\n                                <Col\n                                    span={24}\n                                    key={`${idx + 1}`}\n                                >\n                                    <OrderCartCard\n                                        name={item.seller.name}\n                                        count={item.total.count}\n                                        imgUrl={item.seller.logo}\n                                        category={item.seller.category.name}\n                                        containerPath={`/records/unregistered/${item.seller.slug_name}`}\n                                    />\n                                </Col>\n                            ))\n                        ) : <>\n                            {\n                                skeleton.map((item, idx) => (\n                                    <Col\n                                        span={24}\n                                        key={`${idx + 1}`}\n                                    >\n                                        <OrderCardSkeleton/>\n                                    </Col>\n                                ))\n                            }\n                        </>\n                }\n            </Row>\n        </AccountScrollWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}