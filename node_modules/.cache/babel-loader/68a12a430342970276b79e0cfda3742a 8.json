{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as Yup from'yup';import moment from'moment';import{useFormik}from'formik';import{useStore}from'effector-react';import{$appModel}from'../../Models/app';import{useCallback,useState}from'react';import payment from'../../Service/payment';import{useTranslation}from'react-i18next';import{accountCardMount}from'../../Models/payment-model';var defaultValue={name:'',number:'',expire_date:null};var defaultCodeValue={activate_code:''};export function useCreateAccountCard(_ref){var onClose=_ref.onClose,setPayment=_ref.setPayment,paymentState=_ref.payment;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showResend=_useState2[0],setShowResend=_useState2[1];var _useState3=useState(Date.now()+1000*60),_useState4=_slicedToArray(_useState3,2),deadline=_useState4[0],setDeadline=_useState4[1];var _useStore=useStore($appModel),creditCardId=_useStore.$app.cardId;var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),cardId=_useState6[0],setCardId=_useState6[1];var getCard=useCallback(function(number){var tmp='';for(var i=0;i<number.length;i++){if(i%4===0){tmp+=' '+number[i];}else{tmp+=number[i];}}return tmp;},[]);var validationSchema=Yup.object().shape({number:Yup.string().required(t('required_field')).test('regexTest',t('required_field'),function(value){return value&&value.match(/^(\\d\\s*){16}$/);}),expire_date:Yup.mixed().required(t('required_field')).test('regexTest',t('required_field'),function(value){return value&&moment(value).format('MM/YY').replace(/\\//g,'').match(/^(\\d\\s*){4}$/);})});var codeValidationSchema=Yup.object().shape({activate_code:Yup.string().required(t('required_field')).test('regexTest',t('required_field'),function(value){return value&&value.match(/^(\\d\\s*){6}$/);})});var formik=useFormik({validationSchema:validationSchema,initialValues:_objectSpread({},defaultValue),onSubmit:function onSubmit(values,_ref2){var setSubmitting=_ref2.setSubmitting;setSubmitting(true);var number=values.number,expire_date=values.expire_date,name=values.name;var data={name:name,card_number:number.replace(/\\s/g,''),expire:expire_date.add(moment,'MM/YY').format('MM/YY')};payment.crateAccountCard(data).then(function(res){if(res){setCardId(res.data.id);}}).catch(function(error){console.log(error);}).finally(function(){setSubmitting(false);});}});var codeFormik=useFormik({validationSchema:codeValidationSchema,initialValues:_objectSpread({},defaultCodeValue),onSubmit:function onSubmit(values,_ref3){var setSubmitting=_ref3.setSubmitting;setSubmitting(true);var activate_code=values.activate_code;if(activate_code.replace(/\\s/g,'').length>0){var params={id:cardId?cardId:creditCardId,data:{code:activate_code.replace(/\\s/g,'')}};console.log(activate_code);payment.verifyAccountCard(params).then(function(res){if(res){onClose();accountCardMount();if(paymentState){setPayment({id:res.data.id,title:\"\".concat(getCard(res.data.card_number),\" \").concat(res.data.name),extraId:3});}setCardId(null);}}).catch(function(error){console.log(error);}).finally(function(){setSubmitting(false);});}}});var disabledButtonCode=useCallback(function(){return codeFormik.isSubmitting||codeFormik.touched.activate_code&&!!codeFormik.errors.activate_code;},[codeFormik]);var disabledButton=useCallback(function(){return formik.isSubmitting||formik.touched.number&&!!formik.errors.number||formik.touched.expire_date&&!!formik.errors.expire_date;},[formik]);var handleChangeCode=function handleChangeCode(key,value){codeFormik.setFieldValue(key,value);};var handleChange=function handleChange(key,value){formik.setFieldValue(key,value);};var resendCode=useCallback(function(){payment.resendPayMeCode({id:cardId?cardId:creditCardId}).then(function(res){if(res){setDeadline(Date.now()+1000*60);setShowResend(false);}});},[cardId,creditCardId]);return{formik:formik,cardId:cardId,deadline:deadline,setCardId:setCardId,showResend:showResend,codeFormik:codeFormik,resendCode:resendCode,handleChange:handleChange,setShowResend:setShowResend,disabledButton:disabledButton,handleChangeCode:handleChangeCode,disabledButtonCode:disabledButtonCode};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/account/use-create-account-card.js"],"names":["Yup","moment","useFormik","useStore","$appModel","useCallback","useState","payment","useTranslation","accountCardMount","defaultValue","name","number","expire_date","defaultCodeValue","activate_code","useCreateAccountCard","onClose","setPayment","paymentState","t","showResend","setShowResend","Date","now","deadline","setDeadline","creditCardId","$app","cardId","setCardId","getCard","tmp","i","length","validationSchema","object","shape","string","required","test","value","match","mixed","format","replace","codeValidationSchema","formik","initialValues","onSubmit","values","setSubmitting","data","card_number","expire","add","crateAccountCard","then","res","id","catch","error","console","log","finally","codeFormik","params","code","verifyAccountCard","title","extraId","disabledButtonCode","isSubmitting","touched","errors","disabledButton","handleChangeCode","key","setFieldValue","handleChange","resendCode","resendPayMeCode"],"mappings":"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","sourcesContent":["import * as Yup from 'yup'\nimport moment from 'moment'\nimport {useFormik} from 'formik'\nimport {useStore} from 'effector-react'\nimport {$appModel} from '../../Models/app'\nimport {useCallback, useState} from 'react'\nimport payment from '../../Service/payment'\nimport {useTranslation} from 'react-i18next'\nimport {accountCardMount} from '../../Models/payment-model'\n\nconst defaultValue = {\n    name: '',\n    number: '',\n    expire_date: null\n}\n\nconst defaultCodeValue = {\n    activate_code: ''\n}\n\nexport function useCreateAccountCard({onClose, setPayment, payment: paymentState}) {\n    const {t} = useTranslation()\n    const [showResend, setShowResend] = useState(false)\n    const [deadline, setDeadline] = useState(Date.now() + 1000 * 60)\n    const {$app: {cardId: creditCardId}} = useStore($appModel)\n    const [cardId, setCardId] = useState(null)\n    \n    const getCard = useCallback((number) => {\n        let tmp = ''\n        for (let i = 0; i < number.length; i++) {\n            if (i % 4 === 0) {\n                tmp += ' ' + number[i]\n            } else {\n                tmp += number[i]\n            }\n        }\n        return tmp\n    }, [])\n    \n    const validationSchema = Yup.object().shape({\n        number: Yup.string()\n            .required(t('required_field'))\n            .test('regexTest', t('required_field'), (value) => {\n                return value && value.match(/^(\\d\\s*){16}$/)\n            }),\n        expire_date: Yup.mixed()\n            .required(t('required_field'))\n            .test('regexTest', t('required_field'), (value) => {\n                return value && moment(value)\n                    .format('MM/YY')\n                    .replace(/\\//g, '')\n                    .match(/^(\\d\\s*){4}$/)\n            })\n    })\n    \n    const codeValidationSchema = Yup.object().shape({\n        activate_code: Yup.string()\n            .required(t('required_field'))\n            .test('regexTest', t('required_field'), (value) => {\n                return value && value.match(/^(\\d\\s*){6}$/)\n            })\n    })\n    \n    const formik = useFormik({\n        validationSchema,\n        initialValues: {\n            ...defaultValue\n        },\n        \n        onSubmit(values, {setSubmitting}) {\n            setSubmitting(true)\n            const {number, expire_date, name} = values\n            const data = {\n                name: name,\n                card_number: number.replace(/\\s/g, ''),\n                expire: expire_date.add(moment, 'MM/YY').format('MM/YY')\n            }\n            payment.crateAccountCard(data)\n                .then((res) => {\n                    if (res) {\n                        setCardId(res.data.id)\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n                .finally(() => {\n                    setSubmitting(false)\n                })\n        }\n    })\n    \n    const codeFormik = useFormik({\n        validationSchema: codeValidationSchema,\n        initialValues: {\n            ...defaultCodeValue\n        },\n        \n        onSubmit(values, {setSubmitting}) {\n            setSubmitting(true)\n            const {activate_code} = values\n            if (activate_code.replace(/\\s/g, '').length > 0) {\n                \n                const params = {\n                    id: cardId ? cardId : creditCardId,\n                    data: {\n                        code: activate_code.replace(/\\s/g, '')\n                    }\n                }\n                \n                console.log(activate_code)\n                payment.verifyAccountCard(params)\n                    .then(res => {\n                        if (res) {\n                            onClose()\n                            accountCardMount()\n                            if (paymentState) {\n                                setPayment({\n                                    id: res.data.id,\n                                    title: `${getCard(res.data.card_number)} ${res.data.name}`,\n                                    extraId: 3\n                                })\n                            }\n                            setCardId(null)\n                        }\n                    })\n                    .catch((error) => {\n                        console.log(error)\n                    })\n                    .finally(() => {\n                        setSubmitting(false)\n                    })\n            }\n        }\n    })\n    \n    const disabledButtonCode = useCallback(() => {\n        return (\n            codeFormik.isSubmitting\n            || (codeFormik.touched.activate_code && !!codeFormik.errors.activate_code)\n        )\n    }, [codeFormik])\n    \n    \n    const disabledButton = useCallback(() => {\n        return (\n            formik.isSubmitting\n            || (formik.touched.number && !!formik.errors.number)\n            || (formik.touched.expire_date && !!formik.errors.expire_date)\n        )\n    }, [formik])\n    \n    const handleChangeCode = (key, value) => {\n        codeFormik.setFieldValue(key, value)\n    }\n    \n    const handleChange = (key, value) => {\n        formik.setFieldValue(key, value)\n    }\n    \n    const resendCode = useCallback(() => {\n        payment.resendPayMeCode({id: cardId ? cardId : creditCardId})\n            .then((res) => {\n                if (res) {\n                    setDeadline(Date.now() + 1000 * 60)\n                    setShowResend(false)\n                }\n            })\n    }, [cardId, creditCardId])\n    \n    return {\n        formik,\n        cardId,\n        deadline,\n        setCardId,\n        showResend,\n        codeFormik,\n        resendCode,\n        handleChange,\n        setShowResend,\n        disabledButton,\n        handleChangeCode,\n        disabledButtonCode\n    }\n}"]},"metadata":{},"sourceType":"module"}