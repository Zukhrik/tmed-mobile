{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Progress/ProgressItem/index.jsx\";\nimport React, { useCallback } from 'react';\nimport { MainProgress, ProgressBack, ProgressItemWrapper } from '../style';\nexport const Progress = ({\n  item\n}) => {\n  const {\n    color,\n    level,\n    score,\n    remaining_score,\n    shadow_color\n  } = item;\n  const getWidth = useCallback(() => {\n    let tmp;\n\n    if (remaining_score !== 0 || score !== 0) {\n      tmp = score * 100 / (score + remaining_score);\n    } else {\n      tmp = 0;\n    }\n\n    return tmp;\n  }, [remaining_score, score]);\n  return /*#__PURE__*/React.createElement(ProgressItemWrapper, {\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, level, /*#__PURE__*/React.createElement(ProgressBack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MainProgress, {\n    color: color,\n    width: getWidth(),\n    className: \"animate\",\n    shadowColor: shadow_color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Progress/ProgressItem/index.jsx"],"names":["React","useCallback","MainProgress","ProgressBack","ProgressItemWrapper","Progress","item","color","level","score","remaining_score","shadow_color","getWidth","tmp"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,YAAR,EAAsBC,YAAtB,EAAoCC,mBAApC,QAA8D,UAA9D;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAChC,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,eAAtB;AAAuCC,IAAAA;AAAvC,MAAuDL,IAA7D;AAEA,QAAMM,QAAQ,GAAGX,WAAW,CAAC,MAAM;AAC/B,QAAIY,GAAJ;;AACA,QAAIH,eAAe,KAAK,CAApB,IAAyBD,KAAK,KAAK,CAAvC,EAA0C;AACtCI,MAAAA,GAAG,GAAIJ,KAAK,GAAG,GAAT,IAAiBA,KAAK,GAAGC,eAAzB,CAAN;AACH,KAFD,MAEO;AACHG,MAAAA,GAAG,GAAG,CAAN;AACH;;AACD,WAAOA,GAAP;AACH,GAR2B,EAQzB,CAACH,eAAD,EAAkBD,KAAlB,CARyB,CAA5B;AAUA,sBACI,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEF,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KADL,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAED,KADX;AAEI,IAAA,KAAK,EAAEK,QAAQ,EAFnB;AAGI,IAAA,SAAS,EAAC,SAHd;AAII,IAAA,WAAW,EAAED,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ;AAcH,CA3BM","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {MainProgress, ProgressBack, ProgressItemWrapper} from '../style'\r\n\r\nexport const Progress = ({item}) => {\r\n    const {color, level, score, remaining_score, shadow_color} = item\r\n\r\n    const getWidth = useCallback(() => {\r\n        let tmp\r\n        if (remaining_score !== 0 || score !== 0) {\r\n            tmp = (score * 100) / (score + remaining_score)\r\n        } else {\r\n            tmp = 0\r\n        }\r\n        return tmp\r\n    }, [remaining_score, score])\r\n\r\n    return (\r\n        <ProgressItemWrapper color={color}>\r\n            {level}\r\n            <ProgressBack>\r\n                <MainProgress\r\n                    color={color}\r\n                    width={getWidth()}\r\n                    className='animate'\r\n                    shadowColor={shadow_color}\r\n                />\r\n                {/*{icon ? <IconWrapper>{icon}</IconWrapper> : ''}*/}\r\n            </ProgressBack>\r\n        </ProgressItemWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}