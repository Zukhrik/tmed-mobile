{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Cards/OrganizationCard/molecules/organization-card.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { degreesData } from '../../../../data';\nimport { useTranslation } from 'react-i18next';\nimport { $appModel } from '../../../../Models/app';\nimport { OvalBgSvg } from '../../../../Icons/OvalBg';\nimport { Avatar } from '../../../../UIComponents/Avatar';\nimport { useGenerateRating } from '../../../../Hooks/app';\nimport defaultImage from '../../../../Assets/cards/9.png';\nimport { IconBox } from '../../../../UIComponents/GlobalStyles';\nimport { Text } from '../../../../UIComponents/Typography/Text';\nimport { $accountModel } from '../../../../Models/account-model';\nimport { Title } from '../../../../UIComponents/Typography/Title';\nimport { AvatarContainerWrapper, BackgroundImage, OrganizationCardWrapper, OrganizationInfoWrapper, SubscribeButton } from '../atoms';\nexport const OrganizationCard = ({\n  backgroundImage,\n  imgUrl,\n  name,\n  category,\n  aesthetics,\n  ethics,\n  professional,\n  subscribed,\n  subscribe,\n  slug_name,\n  containerPath\n}) => {\n  const {\n    generateRating\n  } = useGenerateRating(aesthetics, ethics, professional);\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  const {\n    $app: {\n      token\n    }\n  } = useStore($appModel);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(OrganizationCardWrapper, {\n    onClick: containerPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, currentProfile && currentProfile.slug_name !== slug_name && token && subscribed && /*#__PURE__*/React.createElement(SubscribeButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, !subscribed ? /*#__PURE__*/React.createElement(Text, {\n    onClick: () => subscribe({\n      slug_name,\n      name\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }\n  }, t('subscribe')) : /*#__PURE__*/React.createElement(Text, {\n    style: {\n      color: '#000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 31\n    }\n  }, t('subscribed'))), /*#__PURE__*/React.createElement(BackgroundImage, {\n    src: backgroundImage ? backgroundImage : defaultImage,\n    alt: backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(OrganizationInfoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AvatarContainerWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(OvalBgSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Avatar, {\n    size: 32,\n    shape: \"circle\",\n    imgUrl: imgUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    gutter: [4, 0],\n    align: \"middle\",\n    justify: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, degreesData.map((item, idx) => {\n    const Icon = item.icon;\n    return /*#__PURE__*/React.createElement(Col, {\n      key: `${idx + 1}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IconBox, {\n      color: item.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }\n    }), generateRating(item.id)));\n  })), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, name), /*#__PURE__*/React.createElement(Text, {\n    color: \"var(--grey-dwed)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, category)));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Cards/OrganizationCard/molecules/organization-card.jsx"],"names":["React","Col","Row","useStore","degreesData","useTranslation","$appModel","OvalBgSvg","Avatar","useGenerateRating","defaultImage","IconBox","Text","$accountModel","Title","AvatarContainerWrapper","BackgroundImage","OrganizationCardWrapper","OrganizationInfoWrapper","SubscribeButton","OrganizationCard","backgroundImage","imgUrl","name","category","aesthetics","ethics","professional","subscribed","subscribe","slug_name","containerPath","generateRating","$profiles","currentProfile","$app","token","t","color","map","item","idx","Icon","icon","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {degreesData} from '../../../../data'\nimport {useTranslation} from 'react-i18next'\nimport {$appModel} from '../../../../Models/app'\nimport {OvalBgSvg} from '../../../../Icons/OvalBg'\nimport {Avatar} from '../../../../UIComponents/Avatar'\nimport {useGenerateRating} from '../../../../Hooks/app'\nimport defaultImage from '../../../../Assets/cards/9.png'\nimport {IconBox} from '../../../../UIComponents/GlobalStyles'\nimport {Text} from '../../../../UIComponents/Typography/Text'\nimport {$accountModel} from '../../../../Models/account-model'\nimport {Title} from '../../../../UIComponents/Typography/Title'\nimport {\n    AvatarContainerWrapper,\n    BackgroundImage,\n    OrganizationCardWrapper,\n    OrganizationInfoWrapper,\n    SubscribeButton\n} from '../atoms'\n\nexport const OrganizationCard = (\n    {\n        backgroundImage,\n        imgUrl,\n        name,\n        category,\n        aesthetics,\n        ethics,\n        professional,\n        subscribed,\n        subscribe,\n        slug_name,\n        containerPath\n    }\n) => {\n    const {generateRating} = useGenerateRating(aesthetics, ethics, professional)\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    const {$app: {token}} = useStore($appModel)\n    const {t} = useTranslation()\n    \n    return (\n        <OrganizationCardWrapper onClick={containerPath}>\n            {\n                currentProfile && currentProfile.slug_name !== slug_name && token && subscribed &&\n                <SubscribeButton>\n                    {\n                        !subscribed\n                            ? <Text onClick={() => subscribe({slug_name, name})}>{t('subscribe')}</Text>\n                            : <Text style={{color: '#000'}}>{t('subscribed')}</Text>\n                    }\n                </SubscribeButton>\n            }\n            <BackgroundImage\n                src={backgroundImage ? backgroundImage : defaultImage}\n                alt={backgroundImage}\n            />\n            <OrganizationInfoWrapper>\n                <AvatarContainerWrapper>\n                    <OvalBgSvg/>\n                    <Avatar\n                        size={32}\n                        shape='circle'\n                        imgUrl={imgUrl}\n                    />\n                </AvatarContainerWrapper>\n                <Row\n                    gutter={[4, 0]}\n                    align='middle'\n                    justify='end'\n                >\n                    {\n                        degreesData.map((item, idx) => {\n                            const Icon = item.icon\n                            return (\n                                <Col\n                                    key={`${idx + 1}`}\n                                >\n                                    <IconBox color={item.color}>\n                                        <Icon/>\n                                        {generateRating(item.id)}\n                                    </IconBox>\n                                </Col>\n                            )\n                        })\n                    }\n                </Row>\n                <Title>{name}</Title>\n                <Text color='var(--grey-dwed)'>{category}</Text>\n            </OrganizationInfoWrapper>\n        </OrganizationCardWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}