{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/OrganizationPage/OfferingsList/index.jsx\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useStore } from 'effector-react';\nimport { useParams } from 'react-router-dom';\nimport { $appModel, changeSpecPanel, switchOrgGroupPanel } from '../../../Models/app';\nimport { useOfferingList } from '../../../Hooks/offerings';\nimport { OverlaySettings } from '../../../Components/Overlay';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { OverlayAuth } from '../../../UIComponents/OverlayAuth';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { useOrgOrder, useOrgOrderList } from '../../../Hooks/order';\nimport { OverlayOfferingGroup, OverlaySpecialists } from '../../../Components/Offering/OrgOfferings';\nimport { useBodyOverflowHidden, useUrlParams } from '../../../Hooks/app';\nimport { useInfiniteQuery } from 'react-query';\nimport orgApi from '../../../Service-v2/organization';\nimport { numberFormat } from '../../../utils/number-utils';\nimport { ProductCard, ProductCardSkeleton } from '../../../Components/Cards';\nimport { EmptyContainerWrapper } from '../../../UIComponents/GlobalStyles';\nimport { NoOfferingSvg } from '../../../Icons/NoOffering';\nimport { URL_KEYS } from '../../../Constants';\nimport { Col, Row } from 'antd';\nconst skeleton = generateSkeleton(10, 100, 220);\nexport const OfferingsList = () => {\n  var _data$pages2;\n\n  const [query, setQuery] = useState(null);\n  useOrgOrderList();\n  const {\n    organization\n  } = useParams();\n  const {\n    $app: {\n      token,\n      changeOrgGroupPanel,\n      showSpecPanel\n    }\n  } = useStore($appModel);\n  useBodyOverflowHidden(changeOrgGroupPanel || showSpecPanel);\n  const {\n    loadMoreOfferingGroup\n  } = useOfferingList();\n  const [auth, setAuth] = useState(false);\n  const {\n    currency,\n    checkoutOffering\n  } = useOrgOrder();\n  const [offeringItem, setOfferingItem] = useState(false);\n  const {\n    urlData\n  } = useUrlParams();\n  const group = urlData[URL_KEYS.OFFERING_GROUP_ID];\n  useEffect(() => {\n    let timeout = null;\n    timeout = setTimeout(() => {\n      const tmp = {};\n\n      if (group) {\n        tmp['group'] = group;\n      }\n\n      setQuery(tmp);\n    }, 300);\n    return () => {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n  }, [group]);\n  const {\n    isLoading,\n    hasNextPage,\n    fetchNextPage,\n    data\n  } = useInfiniteQuery(['/org/offerings', organization, query], async ({\n    pageParam = 0\n  }) => {\n    let params = {\n      limit: 10,\n      offset: pageParam\n    };\n\n    if (query) {\n      params = { ...params,\n        ...query\n      };\n    }\n\n    const res = await orgApi.getOrgOffering({\n      slug: organization,\n      params\n    });\n    return { ...res.data,\n      nextOffset: pageParam + 10\n    };\n  }, {\n    enabled: !!(organization && query),\n    getNextPageParam: data => {\n      if (data.count > data.nextOffset) {\n        return data === null || data === void 0 ? void 0 : data.nextOffset;\n      } else {\n        return undefined;\n      }\n    }\n  });\n\n  const handleClose = () => {\n    if (auth) {\n      setAuth(false);\n    }\n\n    setOfferingItem(false);\n  };\n\n  const list = useMemo(() => {\n    if ((data === null || data === void 0 ? void 0 : data.pages) && (data === null || data === void 0 ? void 0 : data.pages.length) > 0) {\n      const arr = data === null || data === void 0 ? void 0 : data.pages;\n      let tmp = [];\n\n      for (let g of arr) {\n        if (g) {\n          tmp = [...tmp, ...g.result];\n        }\n      }\n\n      return tmp;\n    }\n\n    return [];\n  }, [data]);\n  const dataLength = useMemo(() => {\n    var _data$pages;\n\n    return (data === null || data === void 0 ? void 0 : data.pages) ? ((_data$pages = data.pages[data.pages.length - 1]) === null || _data$pages === void 0 ? void 0 : _data$pages.nextOffset) || 10 : 10;\n  }, [data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OverlaySettings, {\n    openSettings: changeOrgGroupPanel,\n    content: /*#__PURE__*/React.createElement(OverlayOfferingGroup, {\n      loadMore: loadMoreOfferingGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 26\n      }\n    }),\n    onClose: () => switchOrgGroupPanel(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(OverlaySettings, {\n    openSettings: showSpecPanel,\n    onClose: () => changeSpecPanel(false),\n    content: /*#__PURE__*/React.createElement(OverlaySpecialists, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(OverlaySettings, {\n    openSettings: offeringItem,\n    onClose: handleClose,\n    content: /*#__PURE__*/React.createElement(OverlayAuth, {\n      action: () => checkoutOffering(offeringItem),\n      auth: auth,\n      setAuth: setAuth,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    next: () => fetchNextPage(),\n    dataLength: dataLength,\n    hasMore: !isLoading && !!hasNextPage,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [12, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, !isLoading ? (list === null || list === void 0 ? void 0 : list.length) > 0 && list.map(item => {\n    const offeringData = {\n      id: item.id,\n      qty: item.qty,\n      name: item.name,\n      image: item.image,\n      currency: currency,\n      loading: item.loading,\n      inCart: item.is_in_cart,\n      organization: organization,\n      cost: numberFormat(item.cost),\n      responsible: item.responsible,\n      path: `/${organization}/offerings/${item.id}`\n    };\n    return /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ProductCard, {\n      showBag: true,\n      item: offeringData,\n      handleClick: item => {\n        token ? checkoutOffering(item) : setOfferingItem(item);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 45\n      }\n    }));\n  }) : skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ProductCardSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 41\n    }\n  }))))), (data === null || data === void 0 ? void 0 : data.pages) && (data === null || data === void 0 ? void 0 : (_data$pages2 = data.pages) === null || _data$pages2 === void 0 ? void 0 : _data$pages2.count) === 0 && /*#__PURE__*/React.createElement(EmptyContainerWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(NoOfferingSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/OrganizationPage/OfferingsList/index.jsx"],"names":["React","useEffect","useMemo","useState","useStore","useParams","$appModel","changeSpecPanel","switchOrgGroupPanel","useOfferingList","OverlaySettings","InfiniteScroll","OverlayAuth","generateSkeleton","useOrgOrder","useOrgOrderList","OverlayOfferingGroup","OverlaySpecialists","useBodyOverflowHidden","useUrlParams","useInfiniteQuery","orgApi","numberFormat","ProductCard","ProductCardSkeleton","EmptyContainerWrapper","NoOfferingSvg","URL_KEYS","Col","Row","skeleton","OfferingsList","query","setQuery","organization","$app","token","changeOrgGroupPanel","showSpecPanel","loadMoreOfferingGroup","auth","setAuth","currency","checkoutOffering","offeringItem","setOfferingItem","urlData","group","OFFERING_GROUP_ID","timeout","setTimeout","tmp","clearTimeout","isLoading","hasNextPage","fetchNextPage","data","pageParam","params","limit","offset","res","getOrgOffering","slug","nextOffset","enabled","getNextPageParam","count","undefined","handleClose","list","pages","length","arr","g","result","dataLength","map","item","offeringData","id","qty","name","image","loading","inCart","is_in_cart","cost","responsible","path","idx"],"mappings":"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","sourcesContent":["import React, {useEffect, useMemo, useState} from 'react'\r\nimport {useStore} from 'effector-react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {$appModel, changeSpecPanel, switchOrgGroupPanel} from '../../../Models/app'\r\nimport {useOfferingList} from '../../../Hooks/offerings'\r\nimport {OverlaySettings} from '../../../Components/Overlay'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport {OverlayAuth} from '../../../UIComponents/OverlayAuth'\r\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\r\nimport {useOrgOrder, useOrgOrderList} from '../../../Hooks/order'\r\nimport {OverlayOfferingGroup, OverlaySpecialists} from '../../../Components/Offering/OrgOfferings'\r\nimport {useBodyOverflowHidden, useUrlParams} from '../../../Hooks/app'\r\nimport {useInfiniteQuery} from 'react-query'\r\nimport orgApi from '../../../Service-v2/organization'\r\nimport {numberFormat} from '../../../utils/number-utils'\r\nimport {ProductCard, ProductCardSkeleton} from '../../../Components/Cards'\r\nimport {EmptyContainerWrapper} from '../../../UIComponents/GlobalStyles'\r\nimport {NoOfferingSvg} from '../../../Icons/NoOffering'\r\nimport {URL_KEYS} from '../../../Constants'\r\nimport {Col, Row} from 'antd'\r\n\r\nconst skeleton = generateSkeleton(10, 100, 220)\r\nexport const OfferingsList = () => {\r\n    const [query, setQuery] = useState(null)\r\n    useOrgOrderList()\r\n    const {organization} = useParams()\r\n    const {$app: {token, changeOrgGroupPanel, showSpecPanel}} = useStore($appModel)\r\n    useBodyOverflowHidden(changeOrgGroupPanel || showSpecPanel)\r\n    const {loadMoreOfferingGroup} = useOfferingList()\r\n    const [auth, setAuth] = useState(false)\r\n    const {currency, checkoutOffering} = useOrgOrder()\r\n    const [offeringItem, setOfferingItem] = useState(false)\r\n    const {urlData} = useUrlParams()\r\n    const group = urlData[URL_KEYS.OFFERING_GROUP_ID]\r\n    \r\n    useEffect(() => {\r\n        let timeout = null\r\n        timeout = setTimeout(() => {\r\n            const tmp = {}\r\n            if (group) {\r\n                tmp['group'] = group\r\n            }\r\n            setQuery(tmp)\r\n        }, 300)\r\n        \r\n        return () => {\r\n            clearTimeout(timeout)\r\n            timeout = null\r\n        }\r\n    }, [group])\r\n    \r\n    const {isLoading, hasNextPage, fetchNextPage, data} = useInfiniteQuery(\r\n        ['/org/offerings', organization, query],\r\n        async ({pageParam = 0}) => {\r\n            \r\n            let params = {\r\n                limit: 10,\r\n                offset: pageParam\r\n            }\r\n            \r\n            if (query) {\r\n                params = {...params, ...query}\r\n            }\r\n            const res = await orgApi.getOrgOffering({slug: organization, params})\r\n            return {...res.data, nextOffset: pageParam + 10}\r\n        },\r\n        {\r\n            enabled: !!(organization && query),\r\n            getNextPageParam: (data) => {\r\n                if (data.count > data.nextOffset) {\r\n                    return data?.nextOffset\r\n                } else {\r\n                    return undefined\r\n                }\r\n            }\r\n        }\r\n    )\r\n    \r\n    const handleClose = () => {\r\n        if (auth) {\r\n            setAuth(false)\r\n        }\r\n        setOfferingItem(false)\r\n    }\r\n    \r\n    const list = useMemo(() => {\r\n        if (data?.pages && data?.pages.length > 0) {\r\n            const arr = data?.pages\r\n            let tmp = []\r\n            for (let g of arr) {\r\n                if (g) {\r\n                    tmp = [...tmp, ...g.result]\r\n                }\r\n            }\r\n            return tmp\r\n        }\r\n        return []\r\n    }, [data])\r\n    \r\n    const dataLength = useMemo(() => {\r\n        return data?.pages ? data.pages[data.pages.length - 1]?.nextOffset || 10 : 10\r\n    }, [data])\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <OverlaySettings\r\n                openSettings={changeOrgGroupPanel}\r\n                content={<OverlayOfferingGroup loadMore={loadMoreOfferingGroup}/>}\r\n                onClose={() => switchOrgGroupPanel(false)}\r\n            />\r\n            <OverlaySettings\r\n                openSettings={showSpecPanel}\r\n                onClose={() => changeSpecPanel(false)}\r\n                content={<OverlaySpecialists/>}\r\n            />\r\n            <OverlaySettings\r\n                openSettings={offeringItem}\r\n                onClose={handleClose}\r\n                content={<OverlayAuth\r\n                    action={() => checkoutOffering(offeringItem)}\r\n                    auth={auth}\r\n                    setAuth={setAuth}\r\n                    onClose={handleClose}\r\n                />}\r\n            />\r\n            <InfiniteScroll\r\n                next={() => fetchNextPage()}\r\n                dataLength={dataLength}\r\n                hasMore={!isLoading && !!hasNextPage}\r\n                loader={<>...loading</>}\r\n            >\r\n                <Row gutter={[12, 12]}>\r\n                    {\r\n                        !isLoading\r\n                            ? (\r\n                                list?.length > 0 && list.map((item) => {\r\n                                    const offeringData = {\r\n                                        id: item.id,\r\n                                        qty: item.qty,\r\n                                        name: item.name,\r\n                                        image: item.image,\r\n                                        currency: currency,\r\n                                        loading: item.loading,\r\n                                        inCart: item.is_in_cart,\r\n                                        organization: organization,\r\n                                        cost: numberFormat(item.cost),\r\n                                        responsible: item.responsible,\r\n                                        path: `/${organization}/offerings/${item.id}`\r\n                                    }\r\n                                    return (\r\n                                        <Col span={12} key={item.id}>\r\n                                            <ProductCard\r\n                                                showBag\r\n                                                item={offeringData}\r\n                                                handleClick={(item) => {\r\n                                                    token ? checkoutOffering(item) : setOfferingItem(item)\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            ) : (\r\n                                skeleton.map((item, idx) => (\r\n                                    <Col span={12} key={`${idx + 1}`}>\r\n                                        <ProductCardSkeleton/>\r\n                                    </Col>\r\n                                ))\r\n                            )\r\n                    }\r\n                </Row>\r\n            </InfiniteScroll>\r\n            {\r\n                data?.pages && data?.pages?.count === 0 && (\r\n                    <EmptyContainerWrapper>\r\n                        <NoOfferingSvg/>\r\n                    </EmptyContainerWrapper>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}