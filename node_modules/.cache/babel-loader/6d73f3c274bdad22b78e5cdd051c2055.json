{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useUrlParams}from'../app';import{URL_KEYS}from'../../Constants';import{useParams}from'react-router-dom';import{useCallback,useEffect}from'react';import{$orderModel,getOrgOrderCartsMount,resetOrgOrderCart}from'../../Models/order-model';import{useStore}from'effector-react';var initialParams={limit:10,offset:0};export function useOrgOrderCarts(){var _useParams=useParams(),organization=_useParams.organization;var _useUrlParams=useUrlParams(),urlData=_useUrlParams.urlData;var specId=urlData[URL_KEYS.SPECIALIST_ID];var _useStore=useStore($orderModel),result=_useStore.$orgOrderCartList.result;var getList=useCallback(function(params){var data=_objectSpread({org_slug_name:organization},params);getOrgOrderCartsMount(data);},[organization]);var loadMore=useCallback(function(){var _result$organization;if(result===null||result===void 0?void 0:(_result$organization=result[organization])===null||_result$organization===void 0?void 0:_result$organization.nextOffset){var params=_objectSpread(_objectSpread({},initialParams),{},{offset:result[organization].nextOffset});getList({params:params});}},[getList,result,organization]);useEffect(function(){var data={clear:true,params:initialParams};resetOrgOrderCart();if(specId){data.params['responsible']=specId;getList(data);}},[getList,specId]);return{loadMore:loadMore,organization:organization};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/order/use-org-order-carts.js"],"names":["useUrlParams","URL_KEYS","useParams","useCallback","useEffect","$orderModel","getOrgOrderCartsMount","resetOrgOrderCart","useStore","initialParams","limit","offset","useOrgOrderCarts","organization","urlData","specId","SPECIALIST_ID","result","$orgOrderCartList","getList","params","data","org_slug_name","loadMore","nextOffset","clear"],"mappings":"oKAAA,OAAQA,YAAR,KAA2B,QAA3B,CACA,OAAQC,QAAR,KAAuB,iBAAvB,CACA,OAAQC,SAAR,KAAwB,kBAAxB,CACA,OAAQC,WAAR,CAAqBC,SAArB,KAAqC,OAArC,CACA,OAAQC,WAAR,CAAqBC,qBAArB,CAA4CC,iBAA5C,KAAoE,0BAApE,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,KAAK,CAAE,EADW,CAElBC,MAAM,CAAE,CAFU,CAAtB,CAKA,MAAO,SAASC,CAAAA,gBAAT,EAA4B,CAC/B,eAAuBV,SAAS,EAAhC,CAAOW,YAAP,YAAOA,YAAP,CACA,kBAAkBb,YAAY,EAA9B,CAAOc,OAAP,eAAOA,OAAP,CACA,GAAMC,CAAAA,MAAM,CAAGD,OAAO,CAACb,QAAQ,CAACe,aAAV,CAAtB,CACA,cAAsCR,QAAQ,CAACH,WAAD,CAA9C,CAA2BY,MAA3B,WAAOC,iBAAP,CAA2BD,MAA3B,CAEA,GAAME,CAAAA,OAAO,CAAGhB,WAAW,CAAC,SAACiB,MAAD,CAAY,CACpC,GAAMC,CAAAA,IAAI,gBACNC,aAAa,CAAET,YADT,EAEHO,MAFG,CAAV,CAIAd,qBAAqB,CAACe,IAAD,CAArB,CACH,CAN0B,CAMxB,CAACR,YAAD,CANwB,CAA3B,CAQA,GAAMU,CAAAA,QAAQ,CAAGpB,WAAW,CAAC,UAAM,0BAC/B,GAAIc,MAAJ,SAAIA,MAAJ,uCAAIA,MAAM,CAAGJ,YAAH,CAAV,+CAAI,qBAAwBW,UAA5B,CAAwC,CACpC,GAAMJ,CAAAA,MAAM,gCACLX,aADK,MAERE,MAAM,CAAEM,MAAM,CAACJ,YAAD,CAAN,CAAqBW,UAFrB,EAAZ,CAIAL,OAAO,CAAC,CAACC,MAAM,CAANA,MAAD,CAAD,CAAP,CACH,CACJ,CAR2B,CAQzB,CAACD,OAAD,CAAUF,MAAV,CAAkBJ,YAAlB,CARyB,CAA5B,CAUAT,SAAS,CAAC,UAAM,CACZ,GAAMiB,CAAAA,IAAI,CAAG,CACTI,KAAK,CAAE,IADE,CAETL,MAAM,CAAEX,aAFC,CAAb,CAKAF,iBAAiB,GACjB,GAAIQ,MAAJ,CAAY,CACRM,IAAI,CAACD,MAAL,CAAY,aAAZ,EAA6BL,MAA7B,CACAI,OAAO,CAACE,IAAD,CAAP,CACH,CACJ,CAXQ,CAWN,CAACF,OAAD,CAAUJ,MAAV,CAXM,CAAT,CAaA,MAAO,CAACQ,QAAQ,CAARA,QAAD,CAAWV,YAAY,CAAZA,YAAX,CAAP,CACH","sourcesContent":["import {useUrlParams} from '../app'\nimport {URL_KEYS} from '../../Constants'\nimport {useParams} from 'react-router-dom'\nimport {useCallback, useEffect} from 'react'\nimport {$orderModel, getOrgOrderCartsMount, resetOrgOrderCart} from '../../Models/order-model'\nimport {useStore} from 'effector-react'\n\nconst initialParams = {\n    limit: 10,\n    offset: 0\n}\n\nexport function useOrgOrderCarts() {\n    const {organization} = useParams()\n    const {urlData} = useUrlParams()\n    const specId = urlData[URL_KEYS.SPECIALIST_ID]\n    const {$orgOrderCartList: {result}} = useStore($orderModel)\n    \n    const getList = useCallback((params) => {\n        const data = {\n            org_slug_name: organization,\n            ...params\n        }\n        getOrgOrderCartsMount(data)\n    }, [organization])\n    \n    const loadMore = useCallback(() => {\n        if (result?.[organization]?.nextOffset) {\n            const params = {\n                ...initialParams,\n                offset: result[organization].nextOffset\n            }\n            getList({params})\n        }\n    }, [getList, result, organization])\n    \n    useEffect(() => {\n        const data = {\n            clear: true,\n            params: initialParams\n        }\n        \n        resetOrgOrderCart()\n        if (specId) {\n            data.params['responsible'] = specId\n            getList(data)\n        }\n    }, [getList, specId])\n    \n    return {loadMore, organization}\n}"]},"metadata":{},"sourceType":"module"}