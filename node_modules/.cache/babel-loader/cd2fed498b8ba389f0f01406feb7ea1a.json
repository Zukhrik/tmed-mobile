{"ast":null,"code":"import { useTranslation } from 'react-i18next';\nimport { showMessage } from '../../UIComponents/MessageNotification';\nimport { subscribeToOrgMount, unsubscribeFromOrgMount } from '../../Models/org-model';\nimport { subscribeToUserMount, unsubscribeFromUserMount } from '../../Models/user-model';\nexport function useSubscription({\n  from\n}) {\n  const {\n    t\n  } = useTranslation();\n\n  const subscribeToAccount = ({\n    slug_name,\n    name\n  }) => {\n    const option = () => {\n      const message = t('you_subscribed_to', {\n        n: name\n      });\n      showMessage(message, 'success', false);\n    };\n\n    if (from === 'user_list' || from === 'user_info') {\n      subscribeToUserMount({\n        username: slug_name,\n        option\n      });\n    }\n\n    if (from === 'org_info' || from === 'org_list') {\n      subscribeToOrgMount({\n        org_slug_name: slug_name,\n        option\n      });\n    }\n  };\n\n  const unsubscribeFromAccount = ({\n    slug_name,\n    name\n  }) => {\n    const option = () => {\n      const message = t('you_unsubscribed_from', {\n        n: name\n      });\n      showMessage(message, 'success', false);\n    };\n\n    if (from === 'user_list' || from === 'user_info') {\n      unsubscribeFromUserMount({\n        username: slug_name,\n        option\n      });\n    }\n\n    if (from === 'org_info') {\n      unsubscribeFromOrgMount({\n        org_slug_name: slug_name,\n        option\n      });\n    }\n  };\n\n  return {\n    subscribeToAccount,\n    unsubscribeFromAccount\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Hooks/user/use-subscription.js"],"names":["useTranslation","showMessage","subscribeToOrgMount","unsubscribeFromOrgMount","subscribeToUserMount","unsubscribeFromUserMount","useSubscription","from","t","subscribeToAccount","slug_name","name","option","message","n","username","org_slug_name","unsubscribeFromAccount"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,eAA7B;AACA,SAAQC,WAAR,QAA0B,wCAA1B;AACA,SAAQC,mBAAR,EAA6BC,uBAA7B,QAA2D,wBAA3D;AACA,SAAQC,oBAAR,EAA8BC,wBAA9B,QAA6D,yBAA7D;AAEA,OAAO,SAASC,eAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAAiC;AACpC,QAAM;AAACC,IAAAA;AAAD,MAAMR,cAAc,EAA1B;;AAEA,QAAMS,kBAAkB,GAAG,CAAC;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAAD,KAAuB;AAC9C,UAAMC,MAAM,GAAG,MAAM;AACjB,YAAMC,OAAO,GAAGL,CAAC,CAAC,mBAAD,EAAsB;AAACM,QAAAA,CAAC,EAAEH;AAAJ,OAAtB,CAAjB;AACAV,MAAAA,WAAW,CAACY,OAAD,EAAU,SAAV,EAAqB,KAArB,CAAX;AACH,KAHD;;AAKA,QAAIN,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,WAArC,EAAkD;AAC9CH,MAAAA,oBAAoB,CAAC;AAACW,QAAAA,QAAQ,EAAEL,SAAX;AAAsBE,QAAAA;AAAtB,OAAD,CAApB;AACH;;AAED,QAAIL,IAAI,KAAK,UAAT,IAAuBA,IAAI,KAAK,UAApC,EAAgD;AAC5CL,MAAAA,mBAAmB,CAAC;AAACc,QAAAA,aAAa,EAAEN,SAAhB;AAA2BE,QAAAA;AAA3B,OAAD,CAAnB;AACH;AACJ,GAbD;;AAeA,QAAMK,sBAAsB,GAAG,CAAC;AAACP,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAAD,KAAuB;AAClD,UAAMC,MAAM,GAAG,MAAM;AACjB,YAAMC,OAAO,GAAGL,CAAC,CAAC,uBAAD,EAA0B;AAACM,QAAAA,CAAC,EAAEH;AAAJ,OAA1B,CAAjB;AACAV,MAAAA,WAAW,CAACY,OAAD,EAAU,SAAV,EAAqB,KAArB,CAAX;AACH,KAHD;;AAKA,QAAIN,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,WAArC,EAAkD;AAC9CF,MAAAA,wBAAwB,CAAC;AAACU,QAAAA,QAAQ,EAAEL,SAAX;AAAsBE,QAAAA;AAAtB,OAAD,CAAxB;AACH;;AAED,QAAIL,IAAI,KAAK,UAAb,EAAyB;AACrBJ,MAAAA,uBAAuB,CAAC;AAACa,QAAAA,aAAa,EAAEN,SAAhB;AAA2BE,QAAAA;AAA3B,OAAD,CAAvB;AACH;AACJ,GAbD;;AAeA,SAAO;AACHH,IAAAA,kBADG;AAEHQ,IAAAA;AAFG,GAAP;AAIH","sourcesContent":["import {useTranslation} from 'react-i18next'\nimport {showMessage} from '../../UIComponents/MessageNotification'\nimport {subscribeToOrgMount, unsubscribeFromOrgMount} from '../../Models/org-model'\nimport {subscribeToUserMount, unsubscribeFromUserMount} from '../../Models/user-model'\n\nexport function useSubscription({from}) {\n    const {t} = useTranslation()\n    \n    const subscribeToAccount = ({slug_name, name}) => {\n        const option = () => {\n            const message = t('you_subscribed_to', {n: name})\n            showMessage(message, 'success', false)\n        }\n        \n        if (from === 'user_list' || from === 'user_info') {\n            subscribeToUserMount({username: slug_name, option})\n        }\n        \n        if (from === 'org_info' || from === 'org_list') {\n            subscribeToOrgMount({org_slug_name: slug_name, option})\n        }\n    }\n    \n    const unsubscribeFromAccount = ({slug_name, name}) => {\n        const option = () => {\n            const message = t('you_unsubscribed_from', {n: name})\n            showMessage(message, 'success', false)\n        }\n        \n        if (from === 'user_list' || from === 'user_info') {\n            unsubscribeFromUserMount({username: slug_name, option})\n        }\n        \n        if (from === 'org_info') {\n            unsubscribeFromOrgMount({org_slug_name: slug_name, option})\n        }\n    }\n    \n    return {\n        subscribeToAccount,\n        unsubscribeFromAccount\n    }\n}"]},"metadata":{},"sourceType":"module"}