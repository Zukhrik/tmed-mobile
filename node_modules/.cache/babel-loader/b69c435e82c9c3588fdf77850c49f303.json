{"ast":null,"code":"import { useCallback, useEffect, useState } from \"react\";\nexport function useOutsideClicker(ref) {\n  const [clicked, setClicked] = useState(false);\n  const handleClickOutside = useCallback(event => {\n    if (ref && ref.current && !ref.current.contains(event.target)) {\n      setClicked(true);\n    } else {\n      setClicked(false);\n    }\n  }, [ref]);\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [handleClickOutside]);\n  return {\n    clicked\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/app/use-outside-clicker.js"],"names":["useCallback","useEffect","useState","useOutsideClicker","ref","clicked","setClicked","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;AAEA,OAAO,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMK,kBAAkB,GAAGP,WAAW,CAAEQ,KAAD,IAAW;AAC9C,QAAIJ,GAAG,IAAIA,GAAG,CAACK,OAAX,IAAsB,CAACL,GAAG,CAACK,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAA3B,EAA+D;AAC3DL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAFD,MAEO;AACHA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GANqC,EAMnC,CAACF,GAAD,CANmC,CAAtC;AAQAH,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,kBAAvC;AACA,WAAO,MAAM;AACTK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,kBAA1C;AACH,KAFD;AAGH,GALQ,EAKN,CAACA,kBAAD,CALM,CAAT;AAOA,SAAO;AAACF,IAAAA;AAAD,GAAP;AACH","sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\r\n\r\nexport function useOutsideClicker(ref) {\r\n    const [clicked, setClicked] = useState(false)\r\n\r\n    const handleClickOutside = useCallback((event) => {\r\n        if (ref && ref.current && !ref.current.contains(event.target)) {\r\n            setClicked(true)\r\n        } else {\r\n            setClicked(false)\r\n        }\r\n    }, [ref])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [handleClickOutside]);\r\n\r\n    return {clicked}\r\n}"]},"metadata":{},"sourceType":"module"}