{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{combine,createStore}from'effector';import{fetchAccountCard,fetchDeleteAccountCard}from'./effects';var $accountCard=createStore({loading:false,data:[],result:{},error:false}).on(fetchAccountCard.pending,function(state,loading){return _objectSpread(_objectSpread({},state),{},{loading:loading});}).on(fetchAccountCard.fail,function(state,_ref){var error=_ref.error;return _objectSpread(_objectSpread({},state),{},{error:error,data:[]});}).on(fetchAccountCard.done,function(state,res){return _objectSpread(_objectSpread({},state),{},{data:res.result.data.results,result:res.result.data});}).on(fetchDeleteAccountCard.done,function(state,params){var cardId=params.id;var idx=state.data.findIndex(function(item){return item.id===cardId;});var deletingCardItem=state.data[idx];console.log(deletingCardItem,idx);if(cardId){}return _objectSpread({},state);});export var $paymentModel=combine({$accountCard:$accountCard});","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Models/payment-model/stores.js"],"names":["combine","createStore","fetchAccountCard","fetchDeleteAccountCard","$accountCard","loading","data","result","error","on","pending","state","fail","done","res","results","params","cardId","id","idx","findIndex","item","deletingCardItem","console","log","$paymentModel"],"mappings":"oKAAA,OAAQA,OAAR,CAAiBC,WAAjB,KAAmC,UAAnC,CACA,OAAQC,gBAAR,CAA0BC,sBAA1B,KAAuD,WAAvD,CAGA,GAAMC,CAAAA,YAAY,CAAGH,WAAW,CAAC,CAACI,OAAO,CAAE,KAAV,CAAiBC,IAAI,CAAE,EAAvB,CAA2BC,MAAM,CAAE,EAAnC,CAAuCC,KAAK,CAAE,KAA9C,CAAD,CAAX,CAChBC,EADgB,CACbP,gBAAgB,CAACQ,OADJ,CACa,SAACC,KAAD,CAAQN,OAAR,wCAAyBM,KAAzB,MAAgCN,OAAO,CAAPA,OAAhC,IADb,EAEhBI,EAFgB,CAEbP,gBAAgB,CAACU,IAFJ,CAEU,SAACD,KAAD,UAASH,CAAAA,KAAT,MAASA,KAAT,uCAAyBG,KAAzB,MAAgCH,KAAK,CAALA,KAAhC,CAAuCF,IAAI,CAAE,EAA7C,IAFV,EAGhBG,EAHgB,CAGbP,gBAAgB,CAACW,IAHJ,CAGU,SAACF,KAAD,CAAQG,GAAR,CAAgB,CACvC,sCAAWH,KAAX,MAAkBL,IAAI,CAAEQ,GAAG,CAACP,MAAJ,CAAWD,IAAX,CAAgBS,OAAxC,CAAiDR,MAAM,CAAEO,GAAG,CAACP,MAAJ,CAAWD,IAApE,GACH,CALgB,EAMhBG,EANgB,CAMbN,sBAAsB,CAACU,IANV,CAMgB,SAACF,KAAD,CAAQK,MAAR,CAAmB,CAChD,GAAMC,CAAAA,MAAM,CAAGD,MAAM,CAACE,EAAtB,CACA,GAAMC,CAAAA,GAAG,CAAGR,KAAK,CAACL,IAAN,CAAWc,SAAX,CAAqB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACH,EAAL,GAAYD,MAAhB,EAAzB,CAAZ,CACA,GAAMK,CAAAA,gBAAgB,CAAGX,KAAK,CAACL,IAAN,CAAWa,GAAX,CAAzB,CACAI,OAAO,CAACC,GAAR,CAAYF,gBAAZ,CAA8BH,GAA9B,EAEA,GAAIF,MAAJ,CAAY,CAEX,CAED,wBAAWN,KAAX,EACH,CAjBgB,CAArB,CAoBA,MAAO,IAAMc,CAAAA,aAAa,CAAGzB,OAAO,CAAC,CACjCI,YAAY,CAAZA,YADiC,CAAD,CAA7B","sourcesContent":["import {combine, createStore} from 'effector'\nimport {fetchAccountCard, fetchDeleteAccountCard} from './effects'\n\n\nconst $accountCard = createStore({loading: false, data: [], result: {}, error: false})\n    .on(fetchAccountCard.pending, (state, loading) => ({...state, loading}))\n    .on(fetchAccountCard.fail, (state, {error}) => ({...state, error, data: []}))\n    .on(fetchAccountCard.done, (state, res) => {\n        return {...state, data: res.result.data.results, result: res.result.data}\n    })\n    .on(fetchDeleteAccountCard.done, (state, params) => {\n        const cardId = params.id\n        const idx = state.data.findIndex(item => item.id === cardId)\n        const deletingCardItem = state.data[idx]\n        console.log(deletingCardItem, idx)\n        \n        if (cardId) {\n        \n        }\n        \n        return {...state}\n    })\n\n\nexport const $paymentModel = combine({\n    $accountCard\n})"]},"metadata":{},"sourceType":"module"}