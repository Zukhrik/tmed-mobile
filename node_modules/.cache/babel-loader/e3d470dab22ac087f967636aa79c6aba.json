{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Settings/organisms/payment.jsx\";\nimport React, { useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { Cards } from './cards';\nimport { useStore } from 'effector-react';\nimport { PaymentBodyWrapper } from '../atoms';\nimport { useTranslation } from 'react-i18next';\nimport { CurrencyItems } from './currency-items';\nimport { PlusSquareSvg } from '../../../Icons/Plus';\nimport { ArrowIosRightSvg } from '../../../Icons/Arrow';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { IconBox } from '../../../UIComponents/GlobalStyles';\nimport { OverlaySettings } from '../../../Components/Overlay';\nimport { $accountModel } from '../../../Models/account-model';\nimport { useCreateAccountCard } from '../../../Hooks/account';\nimport { CreateCard } from '../../Checkout/InfoCard/CheckoutDetail/CreditCardDetail/CreateCard';\nexport const Payment = () => {\n  var _currentProfile$curre;\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  const [openCurrency, setOpenCurrency] = useState(false);\n  const [createCard, setCreateCard] = useState(false);\n  const [currency, setCurrency] = useState(currentProfile === null || currentProfile === void 0 ? void 0 : (_currentProfile$curre = currentProfile.currency) === null || _currentProfile$curre === void 0 ? void 0 : _currentProfile$curre.code);\n\n  const onClose = () => {\n    setCreateCard(false);\n  };\n\n  const {\n    formik,\n    cardId,\n    deadline,\n    setCardId,\n    codeFormik,\n    showResend,\n    resendCode,\n    handleChange,\n    setShowResend,\n    disabledButton,\n    handleChangeCode,\n    disabledButtonCode\n  } = useCreateAccountCard({\n    onClose\n  });\n\n  const renderCurrencies = item => {\n    if (item === 'uzs') {\n      return 'UZS - Uzbek sum';\n    } else if (item === 'usd') {\n      return 'USD - United States dollar';\n    } else if (item === 'rub') {\n      return 'RUB - Russian ruble';\n    } else if (item === 'eur') {\n      return 'EUR - The Euro';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(PaymentBodyWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OverlaySettings, {\n    openSettings: openCurrency,\n    onClose: () => setOpenCurrency(false),\n    content: /*#__PURE__*/React.createElement(CurrencyItems, {\n      currency: currency,\n      setOpenOverlay: setOpenCurrency,\n      setCurrency: setCurrency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(OverlaySettings, {\n    openSettings: createCard,\n    onClose: () => onClose(),\n    content: /*#__PURE__*/React.createElement(CreateCard, {\n      cardId: cardId,\n      formik: formik,\n      deadline: deadline,\n      showResend: showResend,\n      resendCode: resendCode,\n      codeFormik: codeFormik,\n      handleChange: handleChange,\n      setShowResend: setShowResend,\n      disabledButton: disabledButton,\n      handleChangeCode: handleChangeCode,\n      disabledButtonCode: disabledButtonCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    className: \"payment-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"payment-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, t('system_currency'))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"payment-item\",\n    onClick: () => setOpenCurrency(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, renderCurrencies(currency))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ArrowIosRightSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"payment-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, \"The prices of all products and offers are automatically converted into the exchange rate of the Central Bank\")), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [12, 0],\n    justify: \"space-between\",\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"var(--grey-dwed)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, t('my_cards'))), /*#__PURE__*/React.createElement(Col, {\n    onClick: () => setCreateCard(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IconBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(PlusSquareSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }), t('add_card'))))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    cardId: cardId,\n    setCardId: setCardId,\n    setCreateCard: setCreateCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Settings/organisms/payment.jsx"],"names":["React","useState","Col","Row","Cards","useStore","PaymentBodyWrapper","useTranslation","CurrencyItems","PlusSquareSvg","ArrowIosRightSvg","Text","IconBox","OverlaySettings","$accountModel","useCreateAccountCard","CreateCard","Payment","t","$profiles","currentProfile","openCurrency","setOpenCurrency","createCard","setCreateCard","currency","setCurrency","code","onClose","formik","cardId","deadline","setCardId","codeFormik","showResend","resendCode","handleChange","setShowResend","disabledButton","handleChangeCode","disabledButtonCode","renderCurrencies","item"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,kBAAR,QAAiC,UAAjC;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,aAAR,QAA4B,qBAA5B;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,IAAR,QAAmB,uCAAnB;AACA,SAAQC,OAAR,QAAsB,oCAAtB;AACA,SAAQC,eAAR,QAA8B,6BAA9B;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AACA,SAAQC,oBAAR,QAAmC,wBAAnC;AACA,SAAQC,UAAR,QAAyB,oEAAzB;AAGA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM;AAACC,IAAAA;AAAD,MAAMX,cAAc,EAA1B;AACA,QAAM;AAACY,IAAAA,SAAS,EAAE;AAACC,MAAAA;AAAD;AAAZ,MAAgCf,QAAQ,CAACS,aAAD,CAA9C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAACmB,cAAD,aAACA,cAAD,gDAACA,cAAc,CAAEK,QAAjB,0DAAC,sBAA0BE,IAA3B,CAAxC;;AAEA,QAAMC,OAAO,GAAG,MAAM;AAClBJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAIA,QAAM;AACFK,IAAAA,MADE;AAEFC,IAAAA,MAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,SAJE;AAKFC,IAAAA,UALE;AAMFC,IAAAA,UANE;AAOFC,IAAAA,UAPE;AAQFC,IAAAA,YARE;AASFC,IAAAA,aATE;AAUFC,IAAAA,cAVE;AAWFC,IAAAA,gBAXE;AAYFC,IAAAA;AAZE,MAaFzB,oBAAoB,CAAC;AAACa,IAAAA;AAAD,GAAD,CAbxB;;AAeA,QAAMa,gBAAgB,GAAIC,IAAD,IAAU;AAC/B,QAAIA,IAAI,KAAK,KAAb,EAAoB;AAChB,aAAO,iBAAP;AACH,KAFD,MAEO,IAAIA,IAAI,KAAK,KAAb,EAAoB;AACvB,aAAO,4BAAP;AACH,KAFM,MAEA,IAAIA,IAAI,KAAK,KAAb,EAAoB;AACvB,aAAO,qBAAP;AACH,KAFM,MAEA,IAAIA,IAAI,KAAK,KAAb,EAAoB;AACvB,aAAO,gBAAP;AACH;AACJ,GAVD;;AAaA,sBACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AACI,IAAA,YAAY,EAAErB,YADlB;AAEI,IAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,KAAD,CAFlC;AAGI,IAAA,OAAO,eAAE,oBAAC,aAAD;AACL,MAAA,QAAQ,EAAEG,QADL;AAEL,MAAA,cAAc,EAAEH,eAFX;AAGL,MAAA,WAAW,EAAEI,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAUI,oBAAC,eAAD;AACI,IAAA,YAAY,EAAEH,UADlB;AAEI,IAAA,OAAO,EAAE,MAAMK,OAAO,EAF1B;AAGI,IAAA,OAAO,eAAE,oBAAC,UAAD;AACL,MAAA,MAAM,EAAEE,MADH;AAEL,MAAA,MAAM,EAAED,MAFH;AAGL,MAAA,QAAQ,EAAEE,QAHL;AAIL,MAAA,UAAU,EAAEG,UAJP;AAKL,MAAA,UAAU,EAAEC,UALP;AAML,MAAA,UAAU,EAAEF,UANP;AAOL,MAAA,YAAY,EAAEG,YAPT;AAQL,MAAA,aAAa,EAAEC,aARV;AASL,MAAA,cAAc,EAAEC,cATX;AAUL,MAAA,gBAAgB,EAAEC,gBAVb;AAWL,MAAA,kBAAkB,EAAEC,kBAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eA2BI,oBAAC,GAAD;AACI,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CADZ;AAEI,IAAA,SAAS,EAAC,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,SAAS,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOtB,CAAC,CAAC,iBAAD,CAAR,CADJ,CAJJ,eAOI,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE,EADV;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,OAAO,EAAE,MAAMI,eAAe,CAAC,IAAD,CAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOmB,gBAAgB,CAAChB,QAAD,CAAvB,CADJ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CALJ,CAPJ,eAqBI,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE,EADV;AAEI,IAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oHAJJ,CArBJ,eA8BI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,CAAL,CAAb;AAAsB,IAAA,OAAO,EAAC,eAA9B;AAA8C,IAAA,KAAK,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCP,CAAC,CAAC,UAAD,CAAjC,CADJ,CADJ,eAII,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAE,MAAMM,aAAa,CAAC,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKN,CAAC,CAAC,UAAD,CAFN,CADJ,CAJJ,CADJ,CA9BJ,eA2CI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEY,MADZ;AAEI,IAAA,SAAS,EAAEE,SAFf;AAGI,IAAA,aAAa,EAAER,aAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA3CJ,CA3BJ,CADJ;AAiFH,CAxHM","sourcesContent":["import React, {useState} from 'react'\nimport {Col, Row} from 'antd'\nimport {Cards} from './cards'\nimport {useStore} from 'effector-react'\nimport {PaymentBodyWrapper} from '../atoms'\nimport {useTranslation} from 'react-i18next'\nimport {CurrencyItems} from './currency-items'\nimport {PlusSquareSvg} from '../../../Icons/Plus'\nimport {ArrowIosRightSvg} from '../../../Icons/Arrow'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {IconBox} from '../../../UIComponents/GlobalStyles'\nimport {OverlaySettings} from '../../../Components/Overlay'\nimport {$accountModel} from '../../../Models/account-model'\nimport {useCreateAccountCard} from '../../../Hooks/account'\nimport {CreateCard} from '../../Checkout/InfoCard/CheckoutDetail/CreditCardDetail/CreateCard'\n\n\nexport const Payment = () => {\n    const {t} = useTranslation()\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    const [openCurrency, setOpenCurrency] = useState(false)\n    const [createCard, setCreateCard] = useState(false)\n    const [currency, setCurrency] = useState(currentProfile?.currency?.code)\n    \n    const onClose = () => {\n        setCreateCard(false)\n    }\n    \n    const {\n        formik,\n        cardId,\n        deadline,\n        setCardId,\n        codeFormik,\n        showResend,\n        resendCode,\n        handleChange,\n        setShowResend,\n        disabledButton,\n        handleChangeCode,\n        disabledButtonCode\n    } = useCreateAccountCard({onClose})\n    \n    const renderCurrencies = (item) => {\n        if (item === 'uzs') {\n            return 'UZS - Uzbek sum'\n        } else if (item === 'usd') {\n            return 'USD - United States dollar'\n        } else if (item === 'rub') {\n            return 'RUB - Russian ruble'\n        } else if (item === 'eur') {\n            return 'EUR - The Euro'\n        }\n    }\n    \n    \n    return (\n        <PaymentBodyWrapper>\n            <OverlaySettings\n                openSettings={openCurrency}\n                onClose={() => setOpenCurrency(false)}\n                content={<CurrencyItems\n                    currency={currency}\n                    setOpenOverlay={setOpenCurrency}\n                    setCurrency={setCurrency}\n                />}\n            />\n            <OverlaySettings\n                openSettings={createCard}\n                onClose={() => onClose()}\n                content={<CreateCard\n                    cardId={cardId}\n                    formik={formik}\n                    deadline={deadline}\n                    showResend={showResend}\n                    resendCode={resendCode}\n                    codeFormik={codeFormik}\n                    handleChange={handleChange}\n                    setShowResend={setShowResend}\n                    disabledButton={disabledButton}\n                    handleChangeCode={handleChangeCode}\n                    disabledButtonCode={disabledButtonCode}\n                />}\n            />\n            <Row\n                gutter={[0, 12]}\n                className='payment-wrapper'\n            >\n                <Col span={24} className='payment-title'>\n                    <Text>{t('system_currency')}</Text>\n                </Col>\n                <Col\n                    span={24}\n                    className='payment-item'\n                    onClick={() => setOpenCurrency(true)}\n                >\n                    <Row justify='space-between'>\n                        <Col>\n                            <Text>{renderCurrencies(currency)}</Text>\n                        </Col>\n                        <Col>\n                            <ArrowIosRightSvg/>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col\n                    span={24}\n                    className='payment-text'\n                >\n                    <Text>\n                        The prices of all products and offers are automatically converted into the exchange rate of the\n                        Central Bank\n                    </Text>\n                </Col>\n                <Col span={24}>\n                    <Row gutter={[12, 0]} justify='space-between' align='middle'>\n                        <Col>\n                            <Text color='var(--grey-dwed)'>{t('my_cards')}</Text>\n                        </Col>\n                        <Col onClick={() => setCreateCard(true)}>\n                            <IconBox>\n                                <PlusSquareSvg/>\n                                {t('add_card')}\n                            </IconBox>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col span={24}>\n                    <Cards\n                        cardId={cardId}\n                        setCardId={setCardId}\n                        setCreateCard={setCreateCard}\n                    />\n                </Col>\n            </Row>\n        </PaymentBodyWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}