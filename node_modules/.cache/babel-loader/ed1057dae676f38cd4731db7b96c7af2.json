{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar elementWidth_1 = require(\"./elementWidth\");\n\nfunction notEnoughChildren(state) {\n  var slidesToShow = state.slidesToShow;\n  return state.totalItems < slidesToShow;\n}\n\nfunction getInitialState(state, props) {\n  var flexBisis,\n      domLoaded = state.domLoaded,\n      slidesToShow = state.slidesToShow,\n      containerWidth = state.containerWidth,\n      itemWidth = state.itemWidth,\n      deviceType = props.deviceType,\n      responsive = props.responsive,\n      ssr = props.ssr,\n      partialVisbile = props.partialVisbile,\n      partialVisible = props.partialVisible,\n      domFullyLoaded = Boolean(domLoaded && slidesToShow && containerWidth && itemWidth);\n  ssr && deviceType && !domFullyLoaded && (flexBisis = elementWidth_1.getWidthFromDeviceType(deviceType, responsive));\n  var shouldRenderOnSSR = Boolean(ssr && deviceType && !domFullyLoaded && flexBisis);\n  return {\n    shouldRenderOnSSR: shouldRenderOnSSR,\n    flexBisis: flexBisis,\n    domFullyLoaded: domFullyLoaded,\n    partialVisibilityGutter: elementWidth_1.getPartialVisibilityGutter(responsive, partialVisbile || partialVisible, deviceType, state.deviceType),\n    shouldRenderAtAll: shouldRenderOnSSR || domFullyLoaded\n  };\n}\n\nfunction getIfSlideIsVisbile(index, state) {\n  var currentSlide = state.currentSlide,\n      slidesToShow = state.slidesToShow;\n  return currentSlide <= index && index < currentSlide + slidesToShow;\n}\n\nfunction getTransformForCenterMode(state, props, transformPlaceHolder) {\n  var transform = transformPlaceHolder || state.transform;\n  return !props.infinite && 0 === state.currentSlide || notEnoughChildren(state) ? transform : transform + state.itemWidth / 2;\n}\n\nfunction isInLeftEnd(_a) {\n  return !(0 < _a.currentSlide);\n}\n\nfunction isInRightEnd(_a) {\n  var currentSlide = _a.currentSlide,\n      totalItems = _a.totalItems;\n  return !(currentSlide + _a.slidesToShow < totalItems);\n}\n\nfunction getTransformForPartialVsibile(state, partialVisibilityGutter, props, transformPlaceHolder) {\n  void 0 === partialVisibilityGutter && (partialVisibilityGutter = 0);\n  var currentSlide = state.currentSlide,\n      slidesToShow = state.slidesToShow,\n      isRightEndReach = isInRightEnd(state),\n      shouldRemoveRightGutter = !props.infinite && isRightEndReach,\n      baseTransform = transformPlaceHolder || state.transform;\n  if (notEnoughChildren(state)) return baseTransform;\n  var transform = baseTransform + currentSlide * partialVisibilityGutter;\n  return shouldRemoveRightGutter ? transform + (state.containerWidth - (state.itemWidth - partialVisibilityGutter) * slidesToShow) : transform;\n}\n\nfunction getTransform(state, props, transformPlaceHolder) {\n  var partialVisbile = props.partialVisbile,\n      partialVisible = props.partialVisible,\n      responsive = props.responsive,\n      deviceType = props.deviceType,\n      centerMode = props.centerMode,\n      transform = transformPlaceHolder || state.transform,\n      partialVisibilityGutter = elementWidth_1.getPartialVisibilityGutter(responsive, partialVisbile || partialVisible, deviceType, state.deviceType);\n  return partialVisible || partialVisbile ? getTransformForPartialVsibile(state, partialVisibilityGutter, props, transformPlaceHolder) : centerMode ? getTransformForCenterMode(state, props, transformPlaceHolder) : transform;\n}\n\nfunction getSlidesToSlide(state, props) {\n  var domLoaded = state.domLoaded,\n      slidesToShow = state.slidesToShow,\n      containerWidth = state.containerWidth,\n      itemWidth = state.itemWidth,\n      deviceType = props.deviceType,\n      responsive = props.responsive,\n      slidesToScroll = props.slidesToSlide || 1,\n      domFullyLoaded = Boolean(domLoaded && slidesToShow && containerWidth && itemWidth);\n  return props.ssr && props.deviceType && !domFullyLoaded && Object.keys(responsive).forEach(function (device) {\n    var slidesToSlide = responsive[device].slidesToSlide;\n    deviceType === device && slidesToSlide && (slidesToScroll = slidesToSlide);\n  }), domFullyLoaded && Object.keys(responsive).forEach(function (item) {\n    var _a = responsive[item],\n        breakpoint = _a.breakpoint,\n        slidesToSlide = _a.slidesToSlide,\n        max = breakpoint.max,\n        min = breakpoint.min;\n    slidesToSlide && window.innerWidth >= min && window.innerWidth <= max && (slidesToScroll = slidesToSlide);\n  }), slidesToScroll;\n}\n\nexports.notEnoughChildren = notEnoughChildren, exports.getInitialState = getInitialState, exports.getIfSlideIsVisbile = getIfSlideIsVisbile, exports.getTransformForCenterMode = getTransformForCenterMode, exports.isInLeftEnd = isInLeftEnd, exports.isInRightEnd = isInRightEnd, exports.getTransformForPartialVsibile = getTransformForPartialVsibile, exports.getTransform = getTransform, exports.getSlidesToSlide = getSlidesToSlide;","map":null,"metadata":{},"sourceType":"script"}