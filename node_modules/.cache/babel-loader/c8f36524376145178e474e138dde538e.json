{"ast":null,"code":"import { useEffect } from 'react';\nimport { useStore } from 'effector-react';\nimport { URL_KEYS } from '../../Constants';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { changeSpecPanel, saveURLMount } from '../../Models/app';\nimport { $orderModel, resetOrderCartList, resetOrgOrderCart } from '../../Models/order-model';\nexport function usePushToCart() {\n  const {\n    organization\n  } = useParams();\n  const {\n    push,\n    location: {\n      pathname\n    }\n  } = useHistory();\n  const {\n    $orgOrderCartList: {\n      data,\n      result\n    }\n  } = useStore($orderModel);\n  useEffect(() => {\n    if (pathname === `/${organization}/offerings`) {\n      saveURLMount('');\n    }\n  }, [organization, pathname]);\n\n  const handlePush = () => {\n    var _result$organization;\n\n    if (((_result$organization = result[organization]) === null || _result$organization === void 0 ? void 0 : _result$organization.count) > 0) {\n      var _data$organization$, _data$organization$$r;\n\n      resetOrgOrderCart();\n      resetOrderCartList();\n      changeSpecPanel(false);\n      saveURLMount(pathname);\n      const specId = (_data$organization$ = data[organization][0]) === null || _data$organization$ === void 0 ? void 0 : (_data$organization$$r = _data$organization$.responsible) === null || _data$organization$$r === void 0 ? void 0 : _data$organization$$r.id;\n      push({\n        pathname: `/records/unregistered/${organization}`,\n        search: `?${URL_KEYS.SPECIALIST_ID}:${specId}`\n      });\n    } else {\n      resetOrgOrderCart();\n      resetOrderCartList();\n      changeSpecPanel(false);\n      saveURLMount(pathname);\n      push('/records/unregistered');\n    }\n  };\n\n  return {\n    handlePush,\n    result\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/order/use-push-to-cart.js"],"names":["useEffect","useStore","URL_KEYS","useHistory","useParams","changeSpecPanel","saveURLMount","$orderModel","resetOrderCartList","resetOrgOrderCart","usePushToCart","organization","push","location","pathname","$orgOrderCartList","data","result","handlePush","count","specId","responsible","id","search","SPECIALIST_ID"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,kBAApC;AACA,SAAQC,eAAR,EAAyBC,YAAzB,QAA4C,kBAA5C;AACA,SAAQC,WAAR,EAAqBC,kBAArB,EAAyCC,iBAAzC,QAAiE,0BAAjE;AAGA,OAAO,SAASC,aAAT,GAAyB;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAiBP,SAAS,EAAhC;AACA,QAAM;AAACQ,IAAAA,IAAD;AAAOC,IAAAA,QAAQ,EAAE;AAACC,MAAAA;AAAD;AAAjB,MAA+BX,UAAU,EAA/C;AACA,QAAM;AAACY,IAAAA,iBAAiB,EAAE;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP;AAApB,MAAsChB,QAAQ,CAACM,WAAD,CAApD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,QAAQ,KAAM,IAAGH,YAAa,YAAlC,EAA+C;AAC3CL,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACH;AACJ,GAJQ,EAIN,CAACK,YAAD,EAAeG,QAAf,CAJM,CAAT;;AAMA,QAAMI,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAI,yBAAAD,MAAM,CAACN,YAAD,CAAN,8EAAsBQ,KAAtB,IAA8B,CAAlC,EAAqC;AAAA;;AACjCV,MAAAA,iBAAiB;AACjBD,MAAAA,kBAAkB;AAClBH,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAC,MAAAA,YAAY,CAACQ,QAAD,CAAZ;AACA,YAAMM,MAAM,0BAAGJ,IAAI,CAACL,YAAD,CAAJ,CAAmB,CAAnB,CAAH,iFAAG,oBAAuBU,WAA1B,0DAAG,sBAAoCC,EAAnD;AACAV,MAAAA,IAAI,CAAC;AACDE,QAAAA,QAAQ,EAAG,yBAAwBH,YAAa,EAD/C;AAEDY,QAAAA,MAAM,EAAG,IAAGrB,QAAQ,CAACsB,aAAc,IAAGJ,MAAO;AAF5C,OAAD,CAAJ;AAIH,KAVD,MAUO;AACHX,MAAAA,iBAAiB;AACjBD,MAAAA,kBAAkB;AAClBH,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAC,MAAAA,YAAY,CAACQ,QAAD,CAAZ;AACAF,MAAAA,IAAI,CAAC,uBAAD,CAAJ;AACH;AACJ,GAlBD;;AAoBA,SAAO;AAACM,IAAAA,UAAD;AAAaD,IAAAA;AAAb,GAAP;AACH","sourcesContent":["import {useEffect} from 'react'\nimport {useStore} from 'effector-react'\nimport {URL_KEYS} from '../../Constants'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {changeSpecPanel, saveURLMount} from '../../Models/app'\nimport {$orderModel, resetOrderCartList, resetOrgOrderCart} from '../../Models/order-model'\n\n\nexport function usePushToCart() {\n    const {organization} = useParams()\n    const {push, location: {pathname}} = useHistory()\n    const {$orgOrderCartList: {data, result}} = useStore($orderModel)\n    \n    useEffect(() => {\n        if (pathname === `/${organization}/offerings`) {\n            saveURLMount('')\n        }\n    }, [organization, pathname])\n    \n    const handlePush = () => {\n        if (result[organization]?.count > 0) {\n            resetOrgOrderCart()\n            resetOrderCartList()\n            changeSpecPanel(false)\n            saveURLMount(pathname)\n            const specId = data[organization][0]?.responsible?.id\n            push({\n                pathname: `/records/unregistered/${organization}`,\n                search: `?${URL_KEYS.SPECIALIST_ID}:${specId}`\n            })\n        } else {\n            resetOrgOrderCart()\n            resetOrderCartList()\n            changeSpecPanel(false)\n            saveURLMount(pathname)\n            push('/records/unregistered')\n        }\n    }\n    \n    return {handlePush, result}\n}"]},"metadata":{},"sourceType":"module"}