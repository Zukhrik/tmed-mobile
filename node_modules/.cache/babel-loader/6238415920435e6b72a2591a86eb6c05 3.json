{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import styled,{css}from'styled-components';var defaultTitle=css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  letter-spacing: 0;\\n  font-family: var(--medium-text);\\n  color: var(--dark-dwed);\\n\"])));var defaultText=css(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  font-family: var(--regular-text);\\n  letter-spacing: 0;\\n  color: var(--dark-dwed);\\n  font-style: normal;\\n\"])));var getLevel=function getLevel(_ref){var level=_ref.level;switch(level){case 1:return 32;case 2:return 24;case 3:return 20;case 4:return 16;case 5:return 14;case 6:return 10;default:return 12;}};var getTextFontFamily=function getTextFontFamily(_ref2){var weight=_ref2.weight;switch(weight){case 400:return'var(--regular-text)';case 500:return'var(--medium-text)';case 600:return'var(--demi-text)';case 700:return'var(--bold-text)';case 900:return'var(--black-text)';default:return'var(--regular-text)';}};var getTitleFontFamily=function getTitleFontFamily(_ref3){var weight=_ref3.weight;switch(weight){case 400:return'var(--regular-text)';case 500:return'var(--medium-text)';case 600:return'var(--demi-text)';case 700:return'var(--bold-text)';case 900:return'var(--black-text)';default:return'var(--medium-text)';}};export var StyledText=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  \",\";\\n  color: \",\";\\n  font-size: \",\"px;\\n  font-family: \",\";\\n  text-align: \",\";\\n\"])),defaultText,function(_ref4){var color=_ref4.color;return color?color:'var(--dark-dwed)';},getLevel,getTextFontFamily,function(_ref5){var alignType=_ref5.alignType;return alignType?alignType:'unset';});export var StyledTitle=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  \",\";\\n  font-size: \",\"px;\\n  color: \",\";\\n  text-align: \",\";\\n  font-family: \",\";\\n\"])),defaultTitle,getLevel,function(_ref6){var color=_ref6.color;return color?color:'var(--dark-dwed)';},function(_ref7){var alignType=_ref7.alignType;return alignType?alignType:'unset';},getTitleFontFamily);","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/UIComponents/Typography/style.js"],"names":["styled","css","defaultTitle","defaultText","getLevel","level","getTextFontFamily","weight","getTitleFontFamily","StyledText","div","color","alignType","StyledTitle"],"mappings":"4PAAA,MAAOA,CAAAA,MAAP,EAAgBC,GAAhB,KAA0B,mBAA1B,CAEA,GAAMC,CAAAA,YAAY,CAAGD,GAAH,yJAAlB,CAMA,GAAME,CAAAA,WAAW,CAAGF,GAAH,mLAAjB,CAQA,GAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAa,IAAXC,CAAAA,KAAW,MAAXA,KAAW,CAC1B,OAAQA,KAAR,EACI,IAAK,EAAL,CACI,MAAO,GAAP,CACJ,IAAK,EAAL,CACI,MAAO,GAAP,CACJ,IAAK,EAAL,CACI,MAAO,GAAP,CACJ,IAAK,EAAL,CACI,MAAO,GAAP,CACJ,IAAK,EAAL,CACI,MAAO,GAAP,CACJ,IAAK,EAAL,CACI,MAAO,GAAP,CACJ,QACI,MAAO,GAAP,CAdR,CAgBH,CAjBD,CAmBA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,OAAc,IAAZC,CAAAA,MAAY,OAAZA,MAAY,CACpC,OAAQA,MAAR,EACI,IAAK,IAAL,CACI,MAAO,qBAAP,CACJ,IAAK,IAAL,CACI,MAAO,oBAAP,CACJ,IAAK,IAAL,CACI,MAAO,kBAAP,CACJ,IAAK,IAAL,CACI,MAAO,kBAAP,CACJ,IAAK,IAAL,CACI,MAAO,mBAAP,CACJ,QACI,MAAO,qBAAP,CAZR,CAcH,CAfD,CAiBA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,OAAc,IAAZD,CAAAA,MAAY,OAAZA,MAAY,CACrC,OAAQA,MAAR,EACI,IAAK,IAAL,CACI,MAAO,qBAAP,CACJ,IAAK,IAAL,CACI,MAAO,oBAAP,CACJ,IAAK,IAAL,CACI,MAAO,kBAAP,CACJ,IAAK,IAAL,CACI,MAAO,kBAAP,CACJ,IAAK,IAAL,CACI,MAAO,mBAAP,CACJ,QACI,MAAO,oBAAP,CAZR,CAcH,CAfD,CAiBA,MAAO,IAAME,CAAAA,UAAU,CAAGT,MAAM,CAACU,GAAV,0JACnBP,WADmB,CAEZ,mBAAEQ,CAAAA,KAAF,OAAEA,KAAF,OAAaA,CAAAA,KAAK,CAAGA,KAAH,CAAW,kBAA7B,EAFY,CAGRP,QAHQ,CAINE,iBAJM,CAKP,mBAAEM,CAAAA,SAAF,OAAEA,SAAF,OAAiBA,CAAAA,SAAS,CAAGA,SAAH,CAAe,OAAzC,EALO,CAAhB,CAQP,MAAO,IAAMC,CAAAA,WAAW,CAAGb,MAAM,CAACU,GAAV,0JACpBR,YADoB,CAETE,QAFS,CAGb,mBAAEO,CAAAA,KAAF,OAAEA,KAAF,OAAaA,CAAAA,KAAK,CAAGA,KAAH,CAAW,kBAA7B,EAHa,CAIR,mBAAEC,CAAAA,SAAF,OAAEA,SAAF,OAAiBA,CAAAA,SAAS,CAAGA,SAAH,CAAe,OAAzC,EAJQ,CAKPJ,kBALO,CAAjB","sourcesContent":["import styled, {css} from 'styled-components'\n\nconst defaultTitle = css`\n  letter-spacing: 0;\n  font-family: var(--medium-text);\n  color: var(--dark-dwed);\n`\n\nconst defaultText = css`\n  font-family: var(--regular-text);\n  letter-spacing: 0;\n  color: var(--dark-dwed);\n  font-style: normal;\n`\n\n\nconst getLevel = ({level}) => {\n    switch (level) {\n        case 1 :\n            return 32\n        case 2 :\n            return 24\n        case 3 :\n            return 20\n        case 4 :\n            return 16\n        case 5 :\n            return 14\n        case 6 :\n            return 10\n        default :\n            return 12\n    }\n}\n\nconst getTextFontFamily = ({weight}) => {\n    switch (weight) {\n        case 400:\n            return 'var(--regular-text)'\n        case 500:\n            return 'var(--medium-text)'\n        case 600:\n            return 'var(--demi-text)'\n        case 700:\n            return 'var(--bold-text)'\n        case 900:\n            return 'var(--black-text)'\n        default:\n            return 'var(--regular-text)'\n    }\n}\n\nconst getTitleFontFamily = ({weight}) => {\n    switch (weight) {\n        case 400:\n            return 'var(--regular-text)'\n        case 500:\n            return 'var(--medium-text)'\n        case 600:\n            return 'var(--demi-text)'\n        case 700:\n            return 'var(--bold-text)'\n        case 900:\n            return 'var(--black-text)'\n        default:\n            return 'var(--medium-text)'\n    }\n}\n\nexport const StyledText = styled.div`\n  ${defaultText};\n  color: ${({color}) => color ? color : 'var(--dark-dwed)'};\n  font-size: ${getLevel}px;\n  font-family: ${getTextFontFamily};\n  text-align: ${({alignType}) => alignType ? alignType : 'unset'};\n`\n\nexport const StyledTitle = styled.div`\n  ${defaultTitle};\n  font-size: ${getLevel}px;\n  color: ${({color}) => color ? color : 'var(--dark-dwed)'};\n  text-align: ${({alignType}) => alignType ? alignType : 'unset'};\n  font-family: ${getTitleFontFamily};\n`"]},"metadata":{},"sourceType":"module"}