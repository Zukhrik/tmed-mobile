{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as Yup from'yup';import Cookies from'js-cookie';import{useFormik}from'formik';import jwtDecode from'jwt-decode';import auth from'../../Service/auth';import{useEffect,useState}from'react';import{useHistory}from'react-router-dom';import{AsYouType}from'libphonenumber-js';import{tokenMount}from'../../Models/app';import{useTranslation}from'react-i18next';import{getCurrentAccount}from'../../Models/account-model';export var usePhoneVerify=function usePhoneVerify(){var _useState=useState(Date.now()+1000*60),_useState2=_slicedToArray(_useState,2),deadline=_useState2[0],setDeadline=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showResend=_useState4[0],setShowResend=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),phone=_useState6[0],setPhone=_useState6[1];var _useHistory=useHistory(),location=_useHistory.location,push=_useHistory.push;var _useTranslation=useTranslation(),t=_useTranslation.t;var validationSchema=Yup.object().shape({activation_code:Yup.string().required(t('required_field')).test('regexTest',t('required_field'),function(value){return value&&value.match(/^(\\d\\s*){6}$/);})});var formik=useFormik({initialValues:{activation_code:''},validationSchema:validationSchema,onSubmit:function onSubmit(_ref){var activation_code=_ref.activation_code;auth.activateCode({activation_code:activation_code.replace(/\\s/g,'')}).then(function(res){if(res){var users={};if(Cookies.get('users')){var oldUsers=JSON.parse(Cookies.get('users'));users=_objectSpread({},oldUsers);}users[jwtDecode(res.data.access).username]=res.data;tokenMount(res.data.access);Cookies.set('users',JSON.stringify(users));Cookies.set('token',res.data.access);Cookies.set('refresh-token',res.data.refresh);getCurrentAccount();push('/');}});}});useEffect(function(){if(location.state&&location.state.phone){var p=new AsYouType('UZ').input(location.state.phone);setPhone(p);}},[location.state]);var onFinish=function onFinish(){setShowResend(true);};var resend=function resend(){if(location.state.phone){auth.resendCode({phone:\"+\".concat(location.state.phone)}).then(function(){setDeadline(Date.now()+1000*60);setShowResend(false);});}};return{phone:phone,formik:formik,resend:resend,deadline:deadline,onFinish:onFinish,showResend:showResend};};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/auth/use-phone-verify.js"],"names":["Yup","Cookies","useFormik","jwtDecode","auth","useEffect","useState","useHistory","AsYouType","tokenMount","useTranslation","getCurrentAccount","usePhoneVerify","Date","now","deadline","setDeadline","showResend","setShowResend","phone","setPhone","location","push","t","validationSchema","object","shape","activation_code","string","required","test","value","match","formik","initialValues","onSubmit","activateCode","replace","then","res","users","get","oldUsers","JSON","parse","data","access","username","set","stringify","refresh","state","p","input","onFinish","resend","resendCode"],"mappings":"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","sourcesContent":["import * as Yup from 'yup'\r\nimport Cookies from 'js-cookie'\r\nimport {useFormik} from 'formik'\r\nimport jwtDecode from 'jwt-decode'\r\nimport auth from '../../Service/auth'\r\nimport {useEffect, useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {AsYouType} from 'libphonenumber-js'\r\nimport {tokenMount} from '../../Models/app'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {getCurrentAccount} from '../../Models/account-model'\r\n\r\nexport const usePhoneVerify = () => {\r\n    const [deadline, setDeadline] = useState(Date.now() + 1000 * 60)\r\n    const [showResend, setShowResend] = useState(false)\r\n    const [phone, setPhone] = useState(null)\r\n    const {location, push} = useHistory()\r\n    const {t} = useTranslation()\r\n    \r\n    const validationSchema = Yup.object().shape({\r\n        activation_code: Yup.string()\r\n            .required(t('required_field'))\r\n            .test('regexTest', t('required_field'), (value) => {\r\n                return value && value.match(/^(\\d\\s*){6}$/)\r\n            })\r\n    })\r\n    \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            activation_code: ''\r\n        },\r\n        validationSchema,\r\n        onSubmit: ({activation_code}) => {\r\n            auth.activateCode({activation_code: activation_code.replace(/\\s/g, '')})\r\n                .then((res) => {\r\n                    if (res) {\r\n                        let users = {}\r\n                        if (Cookies.get('users')) {\r\n                            const oldUsers = JSON.parse(Cookies.get('users'))\r\n                            users = {...oldUsers}\r\n                        }\r\n                        users[jwtDecode(res.data.access).username] = res.data\r\n                        tokenMount(res.data.access)\r\n                        Cookies.set('users', JSON.stringify(users))\r\n                        Cookies.set('token', res.data.access)\r\n                        Cookies.set('refresh-token', res.data.refresh)\r\n                        getCurrentAccount()\r\n                        push('/')\r\n                    }\r\n                })\r\n        }\r\n    })\r\n    \r\n    useEffect(() => {\r\n        if (location.state && location.state.phone) {\r\n            const p = new AsYouType('UZ').input(location.state.phone)\r\n            setPhone(p)\r\n        }\r\n    }, [location.state])\r\n    \r\n    const onFinish = () => {\r\n        setShowResend(true)\r\n    }\r\n    \r\n    const resend = () => {\r\n        if (location.state.phone) {\r\n            auth.resendCode({phone: `+${location.state.phone}`})\r\n                .then(() => {\r\n                    setDeadline(Date.now() + 1000 * 60)\r\n                    setShowResend(false)\r\n                })\r\n        }\r\n    }\r\n    \r\n    return {\r\n        phone,\r\n        formik,\r\n        resend,\r\n        deadline,\r\n        onFinish,\r\n        showResend\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}