{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useCallback}from'react';import{useStore}from'effector-react';import{URL_KEYS}from'../../../../Constants';import{$appModel}from'../../../../Models/app';import{useUrlParams}from'../../../../Hooks/app';import{INFO_MAT}from'../../../../Constants/app';import{useHistory,useParams}from'react-router-dom';import{CategoryItemWrap,CatItemNavLink,DataWrapper}from'../style';import{$orgModel,orgSpecialistCatMount}from'../../../../Models/org-model';var initialParams={limit:20,offset:0};export var OrgSpecCatList=function OrgSpecCatList(){var _useUrlParams=useUrlParams(),urlData=_useUrlParams.urlData;var _useParams=useParams(),organization=_useParams.organization;var _useStore=useStore($appModel),$device=_useStore.$device;var _useHistory=useHistory(),pathname=_useHistory.location.pathname;var _useStore2=useStore($orgModel),_useStore2$$orgSpecia=_useStore2.$orgSpecialistCat,data=_useStore2$$orgSpecia.data,loading=_useStore2$$orgSpecia.loading,result=_useStore2$$orgSpecia.result;var generateUrl=useCallback(function(url_keys,id){var url=[];if(!urlData[url_keys]||urlData[url_keys]!==String(id)){url.push(\"\".concat(url_keys,\"=\").concat(id));}return{pathname:pathname,search:url.join('&')};},[pathname,urlData]);var getActive=useCallback(function(url_keys,id){return urlData[url_keys]&&urlData[url_keys]===String(id);},[urlData]);var handleScroll=useCallback(function(e){if(e.target.scrollLeft+e.target.offsetWidth===e.target.scrollWidth&&!loading&&!!result.next){if(result.next){var _data={organization:organization,params:_objectSpread(_objectSpread({},initialParams),{},{offset:result.nextOffset})};orgSpecialistCatMount(_data);}}},[result,organization,loading]);return/*#__PURE__*/React.createElement(DataWrapper,{onScroll:function onScroll(e){return handleScroll(e);}},/*#__PURE__*/React.createElement(CategoryItemWrap,null,data&&data.map(function(item,idx){return/*#__PURE__*/React.createElement(CatItemNavLink,{key:\"\".concat(idx+1),fontSize:$device&&$device===INFO_MAT?'20px':'',marginright:$device&&$device===INFO_MAT?'24px':'',to:generateUrl(URL_KEYS.SPECIALIST_CATEGORY_ID,item.id),isActive:function isActive(){return getActive(URL_KEYS.SPECIALIST_CATEGORY_ID,item.id);}},item.name);})));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OrgSpecCatList/index.jsx"],"names":["React","useCallback","useStore","URL_KEYS","$appModel","useUrlParams","INFO_MAT","useHistory","useParams","CategoryItemWrap","CatItemNavLink","DataWrapper","$orgModel","orgSpecialistCatMount","initialParams","limit","offset","OrgSpecCatList","urlData","organization","$device","pathname","location","$orgSpecialistCat","data","loading","result","generateUrl","url_keys","id","url","String","push","search","join","getActive","handleScroll","e","target","scrollLeft","offsetWidth","scrollWidth","next","params","nextOffset","map","item","idx","SPECIALIST_CATEGORY_ID","name"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {useStore} from 'effector-react'\r\nimport {URL_KEYS} from '../../../../Constants'\r\nimport {$appModel} from '../../../../Models/app'\r\nimport {useUrlParams} from '../../../../Hooks/app'\r\nimport {INFO_MAT} from '../../../../Constants/app'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {CategoryItemWrap, CatItemNavLink, DataWrapper} from '../style'\r\nimport {$orgModel, orgSpecialistCatMount} from '../../../../Models/org-model'\r\n\r\n\r\nconst initialParams = {\r\n    limit: 20,\r\n    offset: 0\r\n}\r\nexport const OrgSpecCatList = () => {\r\n    const {urlData} = useUrlParams()\r\n    const {organization} = useParams()\r\n    const {$device} = useStore($appModel)\r\n    const {location: {pathname}} = useHistory()\r\n    const {$orgSpecialistCat: {data, loading, result}} = useStore($orgModel)\r\n    const generateUrl = useCallback((url_keys, id) => {\r\n        const url = []\r\n        \r\n        if (!urlData[url_keys] || urlData[url_keys] !== String(id)) {\r\n            url.push(`${url_keys}=${id}`)\r\n        }\r\n        \r\n        return {\r\n            pathname,\r\n            search: url.join('&')\r\n        }\r\n        \r\n    }, [pathname, urlData])\r\n    \r\n    const getActive = useCallback((url_keys, id) => {\r\n        return urlData[url_keys] && urlData[url_keys] === String(id)\r\n    }, [urlData])\r\n    \r\n    const handleScroll = useCallback((e) => {\r\n        if (e.target.scrollLeft + e.target.offsetWidth === e.target.scrollWidth && !loading && !!result.next) {\r\n            if (result.next) {\r\n                const data = {\r\n                    organization: organization,\r\n                    params: {\r\n                        ...initialParams,\r\n                        offset: result.nextOffset\r\n                    }\r\n                }\r\n                orgSpecialistCatMount(data)\r\n            }\r\n        }\r\n    }, [result, organization, loading])\r\n    \r\n    return (\r\n        <DataWrapper onScroll={(e) => handleScroll(e)}>\r\n            <CategoryItemWrap>\r\n                {\r\n                    data && data.map((item, idx) => (\r\n                        <CatItemNavLink\r\n                            key={`${idx + 1}`}\r\n                            fontSize={$device && $device === INFO_MAT ? '20px' : ''}\r\n                            marginright={$device && $device === INFO_MAT ? '24px' : ''}\r\n                            to={generateUrl(URL_KEYS.SPECIALIST_CATEGORY_ID, item.id)}\r\n                            isActive={() => getActive(URL_KEYS.SPECIALIST_CATEGORY_ID, item.id)}\r\n                        >\r\n                            {item.name}\r\n                        </CatItemNavLink>\r\n                    ))\r\n                }\r\n            </CategoryItemWrap>\r\n        </DataWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}