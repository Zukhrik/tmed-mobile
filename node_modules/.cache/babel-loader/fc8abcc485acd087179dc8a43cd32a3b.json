{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OverlayOfferingGroup/index.jsx\";\nimport React, { useCallback, useState } from 'react';\nimport { OfferGroupWrapper, OfferingGroupSearchForm } from '../style';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { OfferingGroupItem } from '../OfferingGroupItem';\nimport { URL_KEYS } from '../../../../Constants';\nimport { useUrlParams } from '../../../../Hooks/app';\nimport { useLocation } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { $offeringsModel } from '../../../../Models/offerings-model';\nimport { SearchSvg } from '../../../../Icons/Search';\nimport { useTranslation } from 'react-i18next';\nexport const OverlayOfferingGroup = ({\n  loadMore\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    urlData\n  } = useUrlParams();\n  const {\n    pathname\n  } = useLocation();\n  const [searchText, setSearchText] = useState('');\n  const groupId = urlData[URL_KEYS.OFFERING_GROUP_ID];\n  const {\n    $offeringGroupList: {\n      data,\n      loading,\n      result\n    }\n  } = useStore($offeringsModel);\n  const generateUrl = useCallback(id => {\n    const url = [];\n\n    if (urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]) {\n      url.push(`${URL_KEYS.SPECIALIST_CATEGORY_ID}=${urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]}`);\n    }\n\n    if (urlData[URL_KEYS.SPECIALIST_ID]) {\n      url.push(`${URL_KEYS.SPECIALIST_ID}=${urlData[URL_KEYS.SPECIALIST_ID]}`);\n    }\n\n    if (!groupId || groupId !== String(id)) {\n      url.push(`${URL_KEYS.OFFERING_GROUP_ID}=${id}`);\n    }\n\n    return {\n      pathname,\n      search: url.join('&')\n    };\n  }, [pathname, groupId, urlData]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchText.length > 2) {\n      console.log(searchText);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    next: loadMore,\n    dataLength: (result === null || result === void 0 ? void 0 : result.nextOffset) || 20,\n    hasMore: !loading && !!(result === null || result === void 0 ? void 0 : result.next),\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OfferGroupWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [12, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(OfferingGroupSearchForm, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: `${t('search')}...`,\n    value: searchText,\n    onChange: e => setSearchText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(SearchSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }))), data && data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    className: \"centered\",\n    key: `${idx + 1}`,\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(OfferingGroupItem, {\n    name: item.name,\n    imgUrl: item.image,\n    path: generateUrl(item.id),\n    isActive: () => groupId && groupId === String(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OverlayOfferingGroup/index.jsx"],"names":["React","useCallback","useState","OfferGroupWrapper","OfferingGroupSearchForm","Col","Row","useStore","OfferingGroupItem","URL_KEYS","useUrlParams","useLocation","InfiniteScroll","$offeringsModel","SearchSvg","useTranslation","OverlayOfferingGroup","loadMore","t","urlData","pathname","searchText","setSearchText","groupId","OFFERING_GROUP_ID","$offeringGroupList","data","loading","result","generateUrl","id","url","SPECIALIST_CATEGORY_ID","push","SPECIALIST_ID","String","search","join","handleSubmit","e","preventDefault","length","console","log","nextOffset","next","target","value","map","item","idx","name","image"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react'\nimport {OfferGroupWrapper, OfferingGroupSearchForm} from '../style'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {OfferingGroupItem} from '../OfferingGroupItem'\nimport {URL_KEYS} from '../../../../Constants'\nimport {useUrlParams} from '../../../../Hooks/app'\nimport {useLocation} from 'react-router-dom'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport {$offeringsModel} from '../../../../Models/offerings-model'\nimport {SearchSvg} from '../../../../Icons/Search'\nimport {useTranslation} from 'react-i18next'\n\nexport const OverlayOfferingGroup = ({loadMore}) => {\n    const {t} = useTranslation()\n    const {urlData} = useUrlParams()\n    const {pathname} = useLocation()\n    const [searchText, setSearchText] = useState('')\n    const groupId = urlData[URL_KEYS.OFFERING_GROUP_ID]\n    const {$offeringGroupList: {data, loading, result}} = useStore($offeringsModel)\n    \n    const generateUrl = useCallback((id) => {\n        const url = []\n        if (urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]) {\n            url.push(`${URL_KEYS.SPECIALIST_CATEGORY_ID}=${urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]}`)\n        }\n        \n        if (urlData[URL_KEYS.SPECIALIST_ID]) {\n            url.push(`${URL_KEYS.SPECIALIST_ID}=${urlData[URL_KEYS.SPECIALIST_ID]}`)\n        }\n        \n        if (!groupId || groupId !== String(id)) {\n            url.push(`${URL_KEYS.OFFERING_GROUP_ID}=${id}`)\n        }\n        \n        return {\n            pathname,\n            search: url.join('&')\n        }\n    }, [pathname, groupId, urlData])\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (searchText.length > 2) {\n            console.log(searchText)\n        }\n    }\n    \n    \n    return (\n        <InfiniteScroll\n            next={loadMore}\n            dataLength={result?.nextOffset || 20}\n            hasMore={!loading && !!result?.next}\n            loader={<>...loading</>}\n        >\n            <OfferGroupWrapper>\n                <Row gutter={[12, 12]}>\n                    <Col span={24}>\n                        <OfferingGroupSearchForm onSubmit={handleSubmit}>\n                            <input\n                                placeholder={`${t('search')}...`}\n                                value={searchText}\n                                onChange={(e) => setSearchText(e.target.value)}\n                            />\n                            <SearchSvg/>\n                        </OfferingGroupSearchForm>\n                    </Col>\n                    {\n                        data && data.map((item, idx) => (\n                            <Col\n                                className='centered'\n                                key={`${idx + 1}`} span={8}\n                            >\n                                <OfferingGroupItem\n                                    name={item.name}\n                                    imgUrl={item.image}\n                                    path={generateUrl(item.id)}\n                                    isActive={() => groupId && groupId === String(item.id)}\n                                />\n                            </Col>\n                        ))\n                    }\n                </Row>\n            </OfferGroupWrapper>\n        </InfiniteScroll>\n    )\n}"]},"metadata":{},"sourceType":"module"}