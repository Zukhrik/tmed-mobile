{"ast":null,"code":"import { useCallback, useState } from 'react';\nimport { useUrlParams } from '../app';\nimport order from '../../Service/order';\nimport { URL_KEYS } from '../../Constants';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { getMeasurement } from '../../utils/get-measurement';\nimport { getOrgOrderCartsMount } from '../../Models/order-model';\nimport { showMessage } from '../../UIComponents/MessageNotification';\nexport function useManageCount() {\n  const {\n    t\n  } = useTranslation();\n  const {\n    urlData\n  } = useUrlParams();\n  const {\n    organization\n  } = useParams();\n  const specId = urlData[URL_KEYS.SPECIALIST_ID];\n  const [values, setValues] = useState({});\n  const initialParams = {\n    limit: 10,\n    offset: 0\n  };\n  const handleDecrement = useCallback(item => {\n    if (item.qty !== item.offering.min_qty) {\n      const params = {\n        offering_id: item.offering.id,\n        data: {\n          qty: item.qty - item.offering.min_qty\n        }\n      };\n      order.updateOrgOrderCart(params).then(res => {\n        if (res) {\n          const data = {\n            clear: true,\n            org_slug_name: organization,\n            params: { ...initialParams,\n              responsible: specId\n            }\n          };\n          getOrgOrderCartsMount(data);\n        }\n      });\n    }\n  }, [initialParams, organization, specId]);\n  const handleIncrement = useCallback(item => {\n    if (item.offering.qty > item.qty || !item.offering.qty) {\n      const params = {\n        offering_id: item.offering.id,\n        data: {\n          qty: item.qty + item.offering.min_qty\n        }\n      };\n      order.updateOrgOrderCart(params).then(res => {\n        if (res) {\n          const data = {\n            clear: true,\n            org_slug_name: organization,\n            params: { ...initialParams,\n              responsible: specId\n            }\n          };\n          getOrgOrderCartsMount(data);\n        }\n      });\n    }\n  }, [organization, initialParams, specId]);\n  const handleChange = useCallback((value, {\n    offering\n  }) => {\n    setValues({ ...values,\n      [offering.id]: value.replace(/\\D/g, '')\n    });\n  }, [values]);\n  const handleBlur = useCallback((offering, qty) => {\n    const value = values[offering.id] !== undefined && values[offering.id] !== '' && Number(values[offering.id]);\n\n    if (value) {\n      if (offering.qty && value > offering.qty) {\n        showMessage(t('in_stock_var', {\n          q: offering.qty,\n          m: t(getMeasurement(offering.measurement, 'label'))\n        }), 'danger', false);\n        setValues({ ...values,\n          [offering.id]: qty\n        });\n        return false;\n      } else if (offering.max_qty && value > offering.max_qty) {\n        showMessage(t('max_count_purchases_var', {\n          q: offering.max_qty,\n          m: t(getMeasurement(offering.measurement, 'label'))\n        }), 'danger', false);\n        setValues({ ...values,\n          [offering.id]: offering.max_qty\n        });\n        return false;\n      } else if (value > offering.min_qty && offering.max_qty) {\n        showMessage(t('min_count_purchases_var', {\n          q: offering.min_qty,\n          m: t(getMeasurement(offering.measurement, 'label'))\n        }), 'danger', false);\n        setValues({ ...values,\n          [offering.id]: offering.min_qty\n        });\n        return false;\n      }\n    } else {\n      showMessage(t('min_count_purchases_var', {\n        q: offering.min_qty,\n        m: t(getMeasurement(offering.measurement, 'label'))\n      }), 'danger', false);\n      setValues({ ...values,\n        [offering.id]: offering.min_qty\n      });\n      return false;\n    }\n  }, [values, t]);\n  return {\n    handleIncrement,\n    handleDecrement,\n    handleChange,\n    handleBlur,\n    values,\n    setValues\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Hooks/order/use-manage-count.js"],"names":["useCallback","useState","useUrlParams","order","URL_KEYS","useParams","useTranslation","getMeasurement","getOrgOrderCartsMount","showMessage","useManageCount","t","urlData","organization","specId","SPECIALIST_ID","values","setValues","initialParams","limit","offset","handleDecrement","item","qty","offering","min_qty","params","offering_id","id","data","updateOrgOrderCart","then","res","clear","org_slug_name","responsible","handleIncrement","handleChange","value","replace","handleBlur","undefined","Number","q","m","measurement","max_qty"],"mappings":"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","sourcesContent":["import {useCallback, useState} from 'react'\nimport {useUrlParams} from '../app'\nimport order from '../../Service/order'\nimport {URL_KEYS} from '../../Constants'\nimport {useParams} from 'react-router-dom'\nimport {useTranslation} from 'react-i18next'\nimport {getMeasurement} from '../../utils/get-measurement'\nimport {getOrgOrderCartsMount} from '../../Models/order-model'\nimport {showMessage} from '../../UIComponents/MessageNotification'\n\n\nexport function useManageCount() {\n    const {t} = useTranslation()\n    const {urlData} = useUrlParams()\n    const {organization} = useParams()\n    const specId = urlData[URL_KEYS.SPECIALIST_ID]\n    const [values, setValues] = useState({})\n    \n    const initialParams = {\n        limit: 10,\n        offset: 0\n    }\n    \n    \n    const handleDecrement = useCallback((item) => {\n        if (item.qty !== item.offering.min_qty) {\n            const params = {\n                offering_id: item.offering.id,\n                data: {\n                    qty: item.qty - item.offering.min_qty\n                }\n            }\n            \n            order.updateOrgOrderCart(params)\n                .then(res => {\n                    if (res) {\n                        const data = {\n                            clear: true,\n                            org_slug_name: organization,\n                            params: {\n                                ...initialParams,\n                                responsible: specId\n                            }\n                        }\n                        getOrgOrderCartsMount(data)\n                    }\n                })\n        }\n    }, [initialParams, organization, specId])\n    \n    const handleIncrement = useCallback((item) => {\n        if (item.offering.qty > item.qty || !item.offering.qty) {\n            const params = {\n                offering_id: item.offering.id,\n                data: {\n                    qty: item.qty + item.offering.min_qty\n                }\n            }\n            order.updateOrgOrderCart(params)\n                .then(res => {\n                    if (res) {\n                        const data = {\n                            clear: true,\n                            org_slug_name: organization,\n                            params: {\n                                ...initialParams,\n                                responsible: specId\n                            }\n                        }\n                        getOrgOrderCartsMount(data)\n                    }\n                })\n        }\n    }, [organization, initialParams, specId])\n    \n    const handleChange = useCallback((value, {offering}) => {\n        setValues({...values, [offering.id]: value.replace(/\\D/g, '')})\n    }, [values])\n    \n    const handleBlur = useCallback((offering, qty) => {\n        const value = values[offering.id] !== undefined && values[offering.id] !== '' && Number(values[offering.id])\n        \n        if (value) {\n            if (offering.qty && value > offering.qty) {\n                showMessage(\n                    t('in_stock_var', {q: offering.qty, m: t(getMeasurement(offering.measurement, 'label'))}),\n                    'danger',\n                    false\n                )\n                setValues({...values, [offering.id]: qty})\n                return false\n            } else if (offering.max_qty && value > offering.max_qty) {\n                showMessage(\n                    t('max_count_purchases_var', {\n                        q: offering.max_qty,\n                        m: t(getMeasurement(offering.measurement, 'label'))\n                    }),\n                    'danger',\n                    false\n                )\n                setValues({...values, [offering.id]: offering.max_qty})\n                return false\n            } else if (value > offering.min_qty && offering.max_qty) {\n                showMessage(\n                    t('min_count_purchases_var', {\n                        q: offering.min_qty,\n                        m: t(getMeasurement(offering.measurement, 'label'))\n                    }),\n                    'danger',\n                    false\n                )\n                setValues({...values, [offering.id]: offering.min_qty})\n                \n                return false\n            }\n        } else {\n            showMessage(\n                t('min_count_purchases_var', {\n                    q: offering.min_qty,\n                    m: t(getMeasurement(offering.measurement, 'label'))\n                }),\n                'danger',\n                false\n            )\n            setValues({...values, [offering.id]: offering.min_qty})\n            return false\n        }\n        \n    }, [values, t])\n    \n    return {handleIncrement, handleDecrement, handleChange, handleBlur, values, setValues}\n}"]},"metadata":{},"sourceType":"module"}