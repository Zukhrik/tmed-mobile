{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Components/Cards/CommentCard/index.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { HeartSvg } from '../../../Icons/Heart';\nimport { Avatar } from '../../../UIComponents/Avatar';\nimport { MessageCircleSvg } from '../../../Icons/Message';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { IconBox } from '../../../UIComponents/GlobalStyles';\nimport { CommentActionsWrapper, CommentCardWrapper, CommentDataWrapper, CommentOwnerNameWrapper, CommentTimeAndMoreWrapper, ViewReplyWrapper } from './style';\nimport { DeleteSvg } from '../../../Icons/Trash';\nimport { useTranslation } from 'react-i18next';\nimport { useStore } from 'effector-react';\nimport { $accountModel } from '../../../Models/account-model';\nimport { LineSvg } from '../../../Icons/Line';\nexport const CommentCard = ({\n  id,\n  size,\n  name,\n  item,\n  text,\n  date,\n  likes,\n  imgUrl,\n  isLiked,\n  category,\n  slug_name,\n  handleLike,\n  handleReply,\n  handleDelete,\n  repliesCount,\n  handleReplyList,\n  commentReplyLis\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  return /*#__PURE__*/React.createElement(CommentCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    wrap: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    shape: \"circle\",\n    size: 40,\n    imgUrl: imgUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    flex: 1,\n    className: \"comment-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CommentDataWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CommentOwnerNameWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, name), /*#__PURE__*/React.createElement(CommentTimeAndMoreWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    className: \"account-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, date))), /*#__PURE__*/React.createElement(Text, {\n    className: \"account-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, category), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, text)), /*#__PURE__*/React.createElement(CommentActionsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconBox, {\n    onClick: () => handleLike(item),\n    color: isLiked ? 'var(--danger-dwed)' : 'var(--grey-dwed)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(HeartSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, t('like'))), /*#__PURE__*/React.createElement(IconBox, {\n    color: \"var(--grey-dwed)\",\n    onClick: () => handleReply(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MessageCircleSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, t('reply'))), (currentProfile === null || currentProfile === void 0 ? void 0 : currentProfile.slug_name) === slug_name && /*#__PURE__*/React.createElement(IconBox, {\n    color: \"var(--grey-dwed)\",\n    onClick: () => handleDelete(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DeleteSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }, t('delete'))), /*#__PURE__*/React.createElement(IconBox, {\n    className: \"likes-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, `${likes} ${t('likes')}`))), commentReplyLis.map((item, idx) => item.reply_to === id && /*#__PURE__*/React.createElement(Row, {\n    wrap: false,\n    key: `${idx + 1}`,\n    className: \"reply-comment-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    shape: \"circle\",\n    size: 32,\n    imgUrl: item.author.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CommentDataWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CommentOwnerNameWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 45\n    }\n  }, item.author.name), /*#__PURE__*/React.createElement(CommentTimeAndMoreWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    className: \"account-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 49\n    }\n  }, date))), /*#__PURE__*/React.createElement(Text, {\n    className: \"account-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 41\n    }\n  }, category || 'user category'), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 41\n    }\n  }, item.text)), /*#__PURE__*/React.createElement(CommentActionsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(IconBox, {\n    color: item.is_liked ? 'var(--danger-dwed)' : 'var(--grey-dwed)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(HeartSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 45\n    }\n  }, t('like'))), /*#__PURE__*/React.createElement(IconBox, {\n    className: \"likes-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 45\n    }\n  }, `${item.likes_count} ${t('likes')}`)))))), repliesCount > 0 && commentReplyLis.length === 0 && /*#__PURE__*/React.createElement(ViewReplyWrapper, {\n    onClick: () => handleReplyList(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(LineSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }), t('view_reply', {\n    count: repliesCount\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Components/Cards/CommentCard/index.jsx"],"names":["React","Col","Row","HeartSvg","Avatar","MessageCircleSvg","Text","IconBox","CommentActionsWrapper","CommentCardWrapper","CommentDataWrapper","CommentOwnerNameWrapper","CommentTimeAndMoreWrapper","ViewReplyWrapper","DeleteSvg","useTranslation","useStore","$accountModel","LineSvg","CommentCard","id","size","name","item","text","date","likes","imgUrl","isLiked","category","slug_name","handleLike","handleReply","handleDelete","repliesCount","handleReplyList","commentReplyLis","t","$profiles","currentProfile","map","idx","reply_to","author","avatar","is_liked","likes_count","length","count"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {HeartSvg} from '../../../Icons/Heart'\nimport {Avatar} from '../../../UIComponents/Avatar'\nimport {MessageCircleSvg} from '../../../Icons/Message'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {IconBox} from '../../../UIComponents/GlobalStyles'\nimport {\n    CommentActionsWrapper,\n    CommentCardWrapper,\n    CommentDataWrapper,\n    CommentOwnerNameWrapper,\n    CommentTimeAndMoreWrapper,\n    ViewReplyWrapper\n} from './style'\nimport {DeleteSvg} from '../../../Icons/Trash'\nimport {useTranslation} from 'react-i18next'\nimport {useStore} from 'effector-react'\nimport {$accountModel} from '../../../Models/account-model'\nimport {LineSvg} from '../../../Icons/Line'\n\nexport const CommentCard = (\n    {\n        id,\n        size,\n        name,\n        item,\n        text,\n        date,\n        likes,\n        imgUrl,\n        isLiked,\n        category,\n        slug_name,\n        handleLike,\n        handleReply,\n        handleDelete,\n        repliesCount,\n        handleReplyList,\n        commentReplyLis\n    }\n) => {\n    const {t} = useTranslation()\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    \n    \n    return (\n        <CommentCardWrapper>\n            <Row wrap={false}>\n                <Col>\n                    <Avatar\n                        shape='circle'\n                        size={40}\n                        imgUrl={imgUrl}\n                    />\n                </Col>\n                <Col flex={1} className='comment-data'>\n                    <CommentDataWrapper>\n                        <CommentOwnerNameWrapper>\n                            <Text>{name}</Text>\n                            <CommentTimeAndMoreWrapper>\n                                <Text className='account-category'>{date}</Text>\n                            </CommentTimeAndMoreWrapper>\n                        </CommentOwnerNameWrapper>\n                        <Text className='account-category'>\n                            {category}\n                        </Text>\n                        <Text>{text}</Text>\n                    </CommentDataWrapper>\n                    <CommentActionsWrapper>\n                        <IconBox\n                            onClick={() => handleLike(item)}\n                            color={\n                                isLiked\n                                    ? 'var(--danger-dwed)'\n                                    : 'var(--grey-dwed)'\n                            }\n                        >\n                            <HeartSvg/>\n                            <Text>{t('like')}</Text>\n                        </IconBox>\n                        <IconBox\n                            color='var(--grey-dwed)'\n                            onClick={() => handleReply(item)}\n                        >\n                            <MessageCircleSvg/>\n                            <Text>{t('reply')}</Text>\n                        </IconBox>\n                        {\n                            currentProfile?.slug_name === slug_name && (\n                                <IconBox\n                                    color='var(--grey-dwed)'\n                                    onClick={() => handleDelete(item)}\n                                >\n                                    <DeleteSvg/>\n                                    <Text>{t('delete')}</Text>\n                                </IconBox>\n                            )\n                        }\n                        <IconBox className='likes-count'>\n                            <Text>{`${likes} ${t('likes')}`}</Text>\n                        </IconBox>\n                    </CommentActionsWrapper>\n                    {\n                        commentReplyLis.map((item, idx) => item.reply_to === id && (\n                            <Row\n                                wrap={false}\n                                key={`${idx + 1}`}\n                                className='reply-comment-wrapper'\n                            >\n                                <Col>\n                                    <Avatar\n                                        shape='circle'\n                                        size={32}\n                                        imgUrl={item.author.avatar}\n                                    />\n                                </Col>\n                                <Col flex={1}>\n                                    <CommentDataWrapper>\n                                        <CommentOwnerNameWrapper>\n                                            <Text>{item.author.name}</Text>\n                                            <CommentTimeAndMoreWrapper>\n                                                <Text className='account-category'>{date}</Text>\n                                            </CommentTimeAndMoreWrapper>\n                                        </CommentOwnerNameWrapper>\n                                        <Text className='account-category'>\n                                            {category || 'user category'}\n                                        </Text>\n                                        <Text>{item.text}</Text>\n                                    </CommentDataWrapper>\n                                    <CommentActionsWrapper>\n                                        <IconBox\n                                            color={\n                                                item.is_liked\n                                                    ? 'var(--danger-dwed)'\n                                                    : 'var(--grey-dwed)'\n                                            }\n                                        >\n                                            <HeartSvg/>\n                                            <Text>{t('like')}</Text>\n                                        </IconBox>\n                                        <IconBox className='likes-count'>\n                                            <Text>{`${item.likes_count} ${t('likes')}`}</Text>\n                                        </IconBox>\n                                    </CommentActionsWrapper>\n                                </Col>\n                            </Row>\n                        ))\n                    }\n                    {\n                        repliesCount > 0 && commentReplyLis.length === 0 && (\n                            <ViewReplyWrapper onClick={() => handleReplyList(item)}>\n                                <LineSvg/>\n                                {t('view_reply', {count: repliesCount})}\n                            </ViewReplyWrapper>\n                        )\n                    }\n                </Col>\n            </Row>\n        </CommentCardWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}