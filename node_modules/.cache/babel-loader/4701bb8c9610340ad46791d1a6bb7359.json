{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Tape/organisms/feedback.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { useTranslation } from 'react-i18next';\nimport { $appModel } from '../../../Models/app';\nimport { useCreatePostComment } from '../../../Hooks/post';\nimport { FeedbackInput, LeaveFeedbackWrapper, ReplyItemWrapper } from '../atoms';\nimport { CloseSvg } from '../../../Icons/Close';\nimport { Button } from '../../../UIComponents/Button';\nimport { SendSvg } from '../../../Icons/Send';\nexport const Feedback = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    $app: {\n      onReplyCommentData\n    }\n  } = useStore($appModel);\n  const {\n    handleSubmit,\n    setComment,\n    comment,\n    handleCloseReply\n  } = useCreatePostComment();\n  return /*#__PURE__*/React.createElement(LeaveFeedbackWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, onReplyCommentData && /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    justify: \"space-between\",\n    style: {\n      fontSize: 8,\n      fontWeight: 300,\n      color: '#000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  }, `${t('reply')} ${onReplyCommentData.author.name}`), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }\n  }, onReplyCommentData.text))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ReplyItemWrapper, {\n    onClick: handleCloseReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CloseSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [12, 0],\n    justify: \"space-between\",\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FeedbackInput, {\n    type: \"text\",\n    value: comment,\n    placeholder: t('to_comment_on'),\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: \"arrow-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SendSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Tape/organisms/feedback.jsx"],"names":["React","Col","Row","useStore","useTranslation","$appModel","useCreatePostComment","FeedbackInput","LeaveFeedbackWrapper","ReplyItemWrapper","CloseSvg","Button","SendSvg","Feedback","t","$app","onReplyCommentData","handleSubmit","setComment","comment","handleCloseReply","fontSize","fontWeight","color","author","name","text","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAAQC,oBAAR,QAAmC,qBAAnC;AACA,SAAQC,aAAR,EAAuBC,oBAAvB,EAA6CC,gBAA7C,QAAoE,UAApE;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,SAAQC,MAAR,QAAqB,8BAArB;AACA,SAAQC,OAAR,QAAsB,qBAAtB;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAMV,cAAc,EAA1B;AACA,QAAM;AAACW,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAA+Bb,QAAQ,CAACE,SAAD,CAA7C;AACA,QAAM;AAACY,IAAAA,YAAD;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA,OAA3B;AAAoCC,IAAAA;AAApC,MAAwDd,oBAAoB,EAAlF;AAEA,sBACI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQU,kBAAkB,iBACd,oBAAC,GAAD;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,OAAO,EAAC,eAFZ;AAGI,IAAA,KAAK,EAAE;AAACK,MAAAA,QAAQ,EAAE,CAAX;AAAcC,MAAAA,UAAU,EAAE,GAA1B;AAA+BC,MAAAA,KAAK,EAAE;AAAtC,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,GAAET,CAAC,CAAC,OAAD,CAAU,IAAGE,kBAAkB,CAACQ,MAAnB,CAA0BC,IAAK,EADrD,CADJ,eAII,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,kBAAkB,CAACU,IADxB,CAJJ,CADJ,CALJ,eAeI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEN,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAfJ,CAHZ,eA0BI;AAAM,IAAA,QAAQ,EAAEH,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,CAAL,CAAb;AAAsB,IAAA,OAAO,EAAC,eAA9B;AAA8C,IAAA,KAAK,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAEE,OAFX;AAGI,IAAA,WAAW,EAAEL,CAAC,CAAC,eAAD,CAHlB;AAII,IAAA,QAAQ,EAAGa,CAAD,IAAOT,UAAU,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eASI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,SADZ;AAEI,IAAA,QAAQ,EAAC,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CATJ,CADJ,CA1BJ,CADJ;AAiDH,CAtDM","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {useTranslation} from 'react-i18next'\nimport {$appModel} from '../../../Models/app'\nimport {useCreatePostComment} from '../../../Hooks/post'\nimport {FeedbackInput, LeaveFeedbackWrapper, ReplyItemWrapper} from '../atoms'\nimport {CloseSvg} from '../../../Icons/Close'\nimport {Button} from '../../../UIComponents/Button'\nimport {SendSvg} from '../../../Icons/Send'\n\n\nexport const Feedback = () => {\n    const {t} = useTranslation()\n    const {$app: {onReplyCommentData}} = useStore($appModel)\n    const {handleSubmit, setComment, comment, handleCloseReply} = useCreatePostComment()\n    \n    return (\n        <LeaveFeedbackWrapper>\n            {\n                onReplyCommentData && (\n                    <Row\n                        align='middle'\n                        justify='space-between'\n                        style={{fontSize: 8, fontWeight: 300, color: '#000'}}\n                    >\n                        <Col flex={1}>\n                            <Row>\n                                <Col span={24}>\n                                    {`${t('reply')} ${onReplyCommentData.author.name}`}\n                                </Col>\n                                <Col span={24}>\n                                    {onReplyCommentData.text}\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col>\n                            <ReplyItemWrapper onClick={handleCloseReply}>\n                                <CloseSvg/>\n                            </ReplyItemWrapper>\n                        </Col>\n                    </Row>\n                )\n            }\n            <form onSubmit={handleSubmit}>\n                <Row gutter={[12, 0]} justify='space-between' align='middle'>\n                    <Col flex={1}>\n                        <FeedbackInput\n                            type='text'\n                            value={comment}\n                            placeholder={t('to_comment_on')}\n                            onChange={(e) => setComment(e.target.value)}\n                        />\n                    </Col>\n                    <Col className='arrow-wrapper'>\n                        <Button\n                            variant='primary'\n                            htmlType='submit'\n                        >\n                            <SendSvg/>\n                        </Button>\n                    </Col>\n                </Row>\n            </form>\n        </LeaveFeedbackWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}