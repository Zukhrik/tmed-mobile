{"ast":null,"code":"import React from'react';import{Col,Row}from'antd';import{Button}from'../../Button';import{InputUI}from'../../mu-inputs';import{Text}from'../../Typography/Text';import{useHistory}from'react-router-dom';import{Title}from'../../Typography/Title';import{useFastAuth}from'../../../Hooks/auth';import{RefreshSvg}from'../../../Icons/refresh';import{Trans,useTranslation}from'react-i18next';import{CountdownWrapper,StyledCountdown}from'../../../Views/Auth/style';export var LoginView=function LoginView(_ref){var onClose=_ref.onClose,action=_ref.action;var _useFastAuth=useFastAuth({onClose:onClose,action:action}),phone=_useFastAuth.phone,formik=_useFastAuth.formik,resend=_useFastAuth.resend,nextStep=_useFastAuth.nextStep,deadline=_useFastAuth.deadline,onFinish=_useFastAuth.onFinish,showResend=_useFastAuth.showResend,handleChange=_useFastAuth.handleChange,disabledButton=_useFastAuth.disabledButton;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useHistory=useHistory(),push=_useHistory.push;return/*#__PURE__*/React.createElement(React.Fragment,null,nextStep?/*#__PURE__*/React.createElement(\"form\",{onSubmit:formik.handleSubmit},/*#__PURE__*/React.createElement(Row,{gutter:[0,24]},/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Title,{weight:500},t('SMS_confirmation'))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Text,null,/*#__PURE__*/React.createElement(Trans,{i18nKey:\"verify_code_sentence\"},{phone:phone},/*#__PURE__*/React.createElement(\"br\",null)))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(InputUI,{type:\"tel\",pattern:\"[0-9]*\",mask:\"9 9 9 9 9 9\",inputType:\"masked\",name:\"activation_code\",onBlur:formik.handleBlur,onChange:formik.handleChange,label:t('verification_code'),values:formik.values.activation_code,error:formik.touched.activation_code&&formik.errors.activation_code})),showResend?/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return resend();},size:\"l\",style:{boxShadow:'unset',color:'var(--dark-dwed)'}},/*#__PURE__*/React.createElement(RefreshSvg,null),t('send_again')):/*#__PURE__*/React.createElement(CountdownWrapper,{padding:\"0\"},/*#__PURE__*/React.createElement(Trans,{i18nKey:\"get_code_sentence\"},/*#__PURE__*/React.createElement(StyledCountdown,{value:deadline,format:\"s\",onFinish:onFinish}))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Button,{size:\"l\",variant:\"primary\",htmlType:\"submit\",disabled:formik.touched.activation_code&&!!formik.errors.activation_code||!formik.values.activation_code.match(/^(\\d\\s*){6}$/)},t('enter'))))):/*#__PURE__*/React.createElement(\"form\",{onSubmit:formik.handleSubmit},/*#__PURE__*/React.createElement(Row,{gutter:[0,24]},/*#__PURE__*/React.createElement(Col,{span:24},t('enter_ur_phone_number')),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(InputUI,{name:\"phone\",pattern:\"[0-9]*\",inputType:\"phone\",value:formik.values.phone?formik.values.phone.value:'',onBlur:formik.handleBlur,onChange:function onChange(value,_ref2){var countryCode=_ref2.countryCode;return handleChange('phone',{value:value,countryCode:countryCode});},error:formik.touched.phone&&formik.errors.phone})),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Button,{size:\"l\",variant:\"primary\",htmlType:\"submit\",disabled:disabledButton(),loading:formik.isSubmitting},t('get_code'))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Text,{level:4,alignType:\"center\",onClick:function onClick(){return push('/sign-in');}},t('enter_by_login'))))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/UIComponents/OverlayAuth/organisms/login-view.jsx"],"names":["React","Col","Row","Button","InputUI","Text","useHistory","Title","useFastAuth","RefreshSvg","Trans","useTranslation","CountdownWrapper","StyledCountdown","LoginView","onClose","action","phone","formik","resend","nextStep","deadline","onFinish","showResend","handleChange","disabledButton","t","push","handleSubmit","handleBlur","values","activation_code","touched","errors","boxShadow","color","match","value","countryCode","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {Button} from '../../Button'\nimport {InputUI} from '../../mu-inputs'\nimport {Text} from '../../Typography/Text'\nimport {useHistory} from 'react-router-dom'\nimport {Title} from '../../Typography/Title'\nimport {useFastAuth} from '../../../Hooks/auth'\nimport {RefreshSvg} from '../../../Icons/refresh'\nimport {Trans, useTranslation} from 'react-i18next'\nimport {CountdownWrapper, StyledCountdown} from '../../../Views/Auth/style'\n\nexport const LoginView = ({onClose, action}) => {\n    const {\n        phone,\n        formik,\n        resend,\n        nextStep,\n        deadline,\n        onFinish,\n        showResend,\n        handleChange,\n        disabledButton\n    } = useFastAuth({onClose, action})\n    const {t} = useTranslation()\n    const {push} = useHistory()\n    \n    return (\n        <>\n            {\n                nextStep\n                    ? <form onSubmit={formik.handleSubmit}>\n                        <Row gutter={[0, 24]}>\n                            <Col span={24}>\n                                <Title weight={500}>{t('SMS_confirmation')}</Title>\n                            </Col>\n                            <Col span={24}>\n                                <Text>\n                                    <Trans i18nKey='verify_code_sentence'>\n                                        {{phone}}\n                                        <br/>\n                                    </Trans>\n                                </Text>\n                            </Col>\n                            <Col span={24}>\n                                <InputUI\n                                    type='tel'\n                                    pattern='[0-9]*'\n                                    mask='9 9 9 9 9 9'\n                                    inputType='masked'\n                                    name='activation_code'\n                                    onBlur={formik.handleBlur}\n                                    onChange={formik.handleChange}\n                                    label={t('verification_code')}\n                                    values={formik.values.activation_code}\n                                    error={formik.touched.activation_code && formik.errors.activation_code}\n                                />\n                            </Col>\n                            {\n                                showResend\n                                    ? <Button\n                                        onClick={() => resend()}\n                                        size='l'\n                                        style={{boxShadow: 'unset', color: 'var(--dark-dwed)'}}\n                                    >\n                                        <RefreshSvg/>\n                                        {t('send_again')}\n                                    </Button>\n                                    : <CountdownWrapper padding='0'>\n                                        <Trans i18nKey='get_code_sentence'>\n                                            <StyledCountdown value={deadline} format='s' onFinish={onFinish}/>\n                                        </Trans>\n                                    </CountdownWrapper>\n                            }\n                            <Col span={24}>\n                                <Button\n                                    size='l'\n                                    variant='primary'\n                                    htmlType='submit'\n                                    disabled={\n                                        (formik.touched.activation_code && !!formik.errors.activation_code)\n                                        || !formik.values.activation_code.match(/^(\\d\\s*){6}$/)\n                                    }\n                                >\n                                    {t('enter')}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                    \n                    : <form onSubmit={formik.handleSubmit}>\n                        <Row gutter={[0, 24]}>\n                            <Col span={24}>\n                                {t('enter_ur_phone_number')}\n                            </Col>\n                            <Col span={24}>\n                                <InputUI\n                                    name='phone'\n                                    pattern='[0-9]*'\n                                    inputType='phone'\n                                    value={formik.values.phone ? formik.values.phone.value : ''}\n                                    onBlur={formik.handleBlur}\n                                    onChange={(value, {countryCode}) => handleChange('phone', {value, countryCode})}\n                                    error={formik.touched.phone && formik.errors.phone}\n                                />\n                            </Col>\n                            <Col span={24}>\n                                <Button\n                                    size='l'\n                                    variant='primary'\n                                    htmlType='submit'\n                                    disabled={disabledButton()}\n                                    loading={formik.isSubmitting}\n                                >\n                                    {t('get_code')}\n                                </Button>\n                            </Col>\n                            <Col span={24}>\n                                <Text\n                                    level={4}\n                                    alignType='center'\n                                    onClick={() => push('/sign-in')}\n                                >\n                                    {t('enter_by_login')}\n                                </Text>\n                            </Col>\n                        </Row>\n                    </form>\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}