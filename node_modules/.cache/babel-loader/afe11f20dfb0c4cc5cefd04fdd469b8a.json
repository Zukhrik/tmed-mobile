{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/organisms/followers-list.jsx\";\nimport React, { useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { FollsListWrapper } from '../atoms';\nimport { useStore } from 'effector-react';\nimport { $userModel, userSubsMeMount } from '../../../Models/user-model';\nimport { ShortCard, ShortCardSkeleton } from '../../../Components/Cards';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { AccountSearchInput } from '../molecules';\nimport { useParams } from 'react-router-dom';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nconst initialParams = {\n  limit: 2,\n  offset: 0\n};\nconst skeleton = generateSkeleton(5);\nexport const FollowersList = ({\n  loadMore\n}) => {\n  const {\n    username\n  } = useParams();\n  const {\n    $userSubsMe: {\n      data,\n      result,\n      loading,\n      forceLoading\n    }\n  } = useStore($userModel);\n  const [search, setSearch] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (search.trim().length > 2) {\n      const data = {\n        clear: true,\n        username: username,\n        params: { ...initialParams,\n          search: search\n        }\n      };\n      userSubsMeMount(data);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(FollsListWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    next: loadMore,\n    dataLength: (result === null || result === void 0 ? void 0 : result.nextOffset) || 10,\n    hasMore: !loading && !!(result === null || result === void 0 ? void 0 : result.next),\n    style: {\n      overflow: 'hidden'\n    },\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AccountSearchInput, {\n    search: search,\n    setSearch: setSearch,\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  })), forceLoading === 2 ? /*#__PURE__*/React.createElement(React.Fragment, null, data && data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"space-between\",\n    align: \"middle\",\n    wrap: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(ShortCard, {\n    imgSize: 48,\n    imgUrl: item.follower_user.avatar,\n    name: item.follower_user.full_name,\n    text: item.follower_user.main_cat.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 53\n    }\n  })))))) : /*#__PURE__*/React.createElement(React.Fragment, null, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(ShortCardSkeleton, {\n    size: 48,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 45\n    }\n  })))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/organisms/followers-list.jsx"],"names":["React","useState","Col","Row","FollsListWrapper","useStore","$userModel","userSubsMeMount","ShortCard","ShortCardSkeleton","InfiniteScroll","AccountSearchInput","useParams","generateSkeleton","initialParams","limit","offset","skeleton","FollowersList","loadMore","username","$userSubsMe","data","result","loading","forceLoading","search","setSearch","handleSubmit","e","preventDefault","trim","length","clear","params","nextOffset","next","overflow","map","item","idx","follower_user","avatar","full_name","main_cat","name"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Col, Row} from 'antd'\nimport {FollsListWrapper} from '../atoms'\nimport {useStore} from 'effector-react'\nimport {$userModel, userSubsMeMount} from '../../../Models/user-model'\nimport {ShortCard, ShortCardSkeleton} from '../../../Components/Cards'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport {AccountSearchInput} from '../molecules'\nimport {useParams} from 'react-router-dom'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\n\nconst initialParams = {\n    limit: 2,\n    offset: 0\n}\nconst skeleton = generateSkeleton(5)\nexport const FollowersList = ({loadMore}) => {\n    const {username} = useParams()\n    const {$userSubsMe: {data, result, loading, forceLoading}} = useStore($userModel)\n    const [search, setSearch] = useState('')\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (search.trim().length > 2) {\n            const data = {\n                clear: true,\n                username: username,\n                params: {\n                    ...initialParams,\n                    search: search\n                }\n            }\n            userSubsMeMount(data)\n        }\n    }\n    \n    \n    return (\n        <FollsListWrapper>\n            <InfiniteScroll\n                next={loadMore}\n                dataLength={result?.nextOffset || 10}\n                hasMore={!loading && !!result?.next}\n                style={{overflow: 'hidden'}}\n                loader={<>...loading</>}\n            >\n                <Row gutter={[0, 12]}>\n                    <Col span={24}>\n                        <AccountSearchInput search={search} setSearch={setSearch} handleSubmit={handleSubmit}/>\n                    </Col>\n                    {\n                        forceLoading === 2\n                            ? <>\n                                {\n                                    data && data.map((item, idx) => (\n                                        <Col\n                                            span={24}\n                                            key={`${idx + 1}`}\n                                        >\n                                            <Row justify='space-between' align='middle' wrap={false}>\n                                                <Col>\n                                                    <ShortCard\n                                                        imgSize={48}\n                                                        imgUrl={item.follower_user.avatar}\n                                                        name={item.follower_user.full_name}\n                                                        text={item.follower_user.main_cat.name}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                    ))\n                                }\n                            </>\n                            : <>\n                                {\n                                    skeleton.map((item, idx) => (\n                                        <Col\n                                            span={24}\n                                            key={`${idx + 1}`}\n                                        >\n                                            <ShortCardSkeleton\n                                                size={48}\n                                            />\n                                        </Col>\n                                    ))\n                                }\n                            </>\n                    }\n                </Row>\n            </InfiniteScroll>\n        </FollsListWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}