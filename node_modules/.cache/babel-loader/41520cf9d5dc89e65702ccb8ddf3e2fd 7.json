{"ast":null,"code":"import React,{useCallback}from'react';import{MainProgress,ProgressBack,ProgressItemWrapper}from'../style';export var Progress=function Progress(_ref){var item=_ref.item;var color=item.color,level=item.level,score=item.score,remaining_score=item.remaining_score,shadow_color=item.shadow_color;var getWidth=useCallback(function(){var tmp;if(remaining_score!==0||score!==0){tmp=score*100/(score+remaining_score);}else{tmp=0;}return tmp;},[remaining_score,score]);return/*#__PURE__*/React.createElement(ProgressItemWrapper,{color:color},level,/*#__PURE__*/React.createElement(ProgressBack,null,/*#__PURE__*/React.createElement(MainProgress,{color:color,width:getWidth(),className:\"animate\",shadowColor:shadow_color})));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Progress/ProgressItem/index.jsx"],"names":["React","useCallback","MainProgress","ProgressBack","ProgressItemWrapper","Progress","item","color","level","score","remaining_score","shadow_color","getWidth","tmp"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,WAAf,KAAiC,OAAjC,CACA,OAAQC,YAAR,CAAsBC,YAAtB,CAAoCC,mBAApC,KAA8D,UAA9D,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAY,IAAVC,CAAAA,IAAU,MAAVA,IAAU,CAChC,GAAOC,CAAAA,KAAP,CAA6DD,IAA7D,CAAOC,KAAP,CAAcC,KAAd,CAA6DF,IAA7D,CAAcE,KAAd,CAAqBC,KAArB,CAA6DH,IAA7D,CAAqBG,KAArB,CAA4BC,eAA5B,CAA6DJ,IAA7D,CAA4BI,eAA5B,CAA6CC,YAA7C,CAA6DL,IAA7D,CAA6CK,YAA7C,CAEA,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,CAAC,UAAM,CAC/B,GAAIY,CAAAA,GAAJ,CACA,GAAIH,eAAe,GAAK,CAApB,EAAyBD,KAAK,GAAK,CAAvC,CAA0C,CACtCI,GAAG,CAAIJ,KAAK,CAAG,GAAT,EAAiBA,KAAK,CAAGC,eAAzB,CAAN,CACH,CAFD,IAEO,CACHG,GAAG,CAAG,CAAN,CACH,CACD,MAAOA,CAAAA,GAAP,CACH,CAR2B,CAQzB,CAACH,eAAD,CAAkBD,KAAlB,CARyB,CAA5B,CAUA,mBACI,oBAAC,mBAAD,EAAqB,KAAK,CAAEF,KAA5B,EACKC,KADL,cAEI,oBAAC,YAAD,mBACI,oBAAC,YAAD,EACI,KAAK,CAAED,KADX,CAEI,KAAK,CAAEK,QAAQ,EAFnB,CAGI,SAAS,CAAC,SAHd,CAII,WAAW,CAAED,YAJjB,EADJ,CAFJ,CADJ,CAcH,CA3BM","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {MainProgress, ProgressBack, ProgressItemWrapper} from '../style'\r\n\r\nexport const Progress = ({item}) => {\r\n    const {color, level, score, remaining_score, shadow_color} = item\r\n\r\n    const getWidth = useCallback(() => {\r\n        let tmp\r\n        if (remaining_score !== 0 || score !== 0) {\r\n            tmp = (score * 100) / (score + remaining_score)\r\n        } else {\r\n            tmp = 0\r\n        }\r\n        return tmp\r\n    }, [remaining_score, score])\r\n\r\n    return (\r\n        <ProgressItemWrapper color={color}>\r\n            {level}\r\n            <ProgressBack>\r\n                <MainProgress\r\n                    color={color}\r\n                    width={getWidth()}\r\n                    className='animate'\r\n                    shadowColor={shadow_color}\r\n                />\r\n                {/*{icon ? <IconWrapper>{icon}</IconWrapper> : ''}*/}\r\n            </ProgressBack>\r\n        </ProgressItemWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}