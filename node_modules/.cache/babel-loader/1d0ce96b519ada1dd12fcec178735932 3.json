{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/pages/account-information-page.jsx\";\nimport React, { useCallback, useState } from 'react';\nimport { IconBox, RootContent } from '../../../UIComponents/GlobalStyles';\nimport { FixedHeader } from '../../../Components/FixedHeader';\nimport { useGoBack } from '../../../Hooks/app';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Row } from 'antd';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { AboutAccountWrapper } from '../atoms';\nimport { ProfileSvg } from '../../../Icons/People';\nimport { InputUI } from '../../../UIComponents/mu-inputs';\nimport { useProfileInfo } from '../../../Hooks/account';\nimport { ArrowIosBottomSvg } from '../../../Icons/Arrow';\nimport { LISTS } from '../../../Constants';\nimport { Modal } from '../../../UIComponents/Modal';\nimport { SelectionList } from '../../../Components/SelectionList';\nimport { langData } from '../../../data';\nexport const AccountInformationPage = () => {\n  var _formik$values, _formik$values2, _formik$values3, _formik$values4, _formik$values5, _formik$values5$categ, _formik$values6, _formik$values6$regio;\n\n  const {\n    formik\n  } = useProfileInfo();\n  const {\n    t\n  } = useTranslation();\n  const {\n    username\n  } = useParams();\n  const [listType, setListType] = useState(LISTS.USER_CATEGORY);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const {\n    goBack\n  } = useGoBack({\n    pathname: `/@${username}`\n  });\n  const getTitle = useCallback(() => {\n    let tmp = '';\n\n    if (listType === LISTS.USER_CATEGORY) {\n      tmp = 'category';\n    }\n\n    if (listType === LISTS.REGION) {\n      tmp = 'region';\n    }\n\n    return tmp;\n  }, [listType]);\n\n  const handleClick = listType => {\n    setListType(listType);\n    setModalIsOpen(true);\n  };\n\n  return /*#__PURE__*/React.createElement(RootContent, {\n    paddingTop: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    centered: true,\n    modalIsOpen: modalIsOpen,\n    title: t(`${getTitle()}`),\n    setModalIsOpen: setModalIsOpen,\n    component: /*#__PURE__*/React.createElement(SelectionList, {\n      listType: listType,\n      onClose: () => setModalIsOpen(false),\n      onChange: value => formik.setFieldValue(getTitle(), value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FixedHeader, {\n    goBack: goBack,\n    title: t('about_me'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AboutAccountWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"change-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconBox, {\n    color: \"var(--grey-dwed)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ProfileSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Text, {\n    color: \"var(--primary-dwed)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, t('change_profile_photo'))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    name: \"name\",\n    label: t('name'),\n    value: formik === null || formik === void 0 ? void 0 : (_formik$values = formik.values) === null || _formik$values === void 0 ? void 0 : _formik$values.name,\n    onChange: e => formik.setFieldValue('name', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    name: \"lastname\",\n    label: t('lastname'),\n    value: formik === null || formik === void 0 ? void 0 : (_formik$values2 = formik.values) === null || _formik$values2 === void 0 ? void 0 : _formik$values2.lastname,\n    onChange: e => /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 46\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    name: \"email\",\n    inputType: \"text\",\n    label: t('email'),\n    value: formik === null || formik === void 0 ? void 0 : (_formik$values3 = formik.values) === null || _formik$values3 === void 0 ? void 0 : _formik$values3.email,\n    onChange: e => formik.setFieldValue('email', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    name: \"date\",\n    inputType: \"date\",\n    value: formik === null || formik === void 0 ? void 0 : (_formik$values4 = formik.values) === null || _formik$values4 === void 0 ? void 0 : _formik$values4.birthday,\n    label: t('birthday'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    name: \"language\",\n    inputType: \"select\",\n    value: formik.values.user_lang,\n    label: t('language'),\n    options: langData,\n    onChange: e => formik.setFieldValue('user_lang', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    name: \"category\",\n    label: t('category'),\n    icon: /*#__PURE__*/React.createElement(ArrowIosBottomSvg, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 35\n      }\n    }),\n    value: (formik === null || formik === void 0 ? void 0 : (_formik$values5 = formik.values) === null || _formik$values5 === void 0 ? void 0 : (_formik$values5$categ = _formik$values5.category) === null || _formik$values5$categ === void 0 ? void 0 : _formik$values5$categ.name) || '',\n    onClick: () => handleClick(LISTS.USER_CATEGORY),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    name: \"region\",\n    label: t('region'),\n    icon: /*#__PURE__*/React.createElement(ArrowIosBottomSvg, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 35\n      }\n    }),\n    value: (formik === null || formik === void 0 ? void 0 : (_formik$values6 = formik.values) === null || _formik$values6 === void 0 ? void 0 : (_formik$values6$regio = _formik$values6.region) === null || _formik$values6$regio === void 0 ? void 0 : _formik$values6$regio.name) || '',\n    onClick: () => handleClick(LISTS.REGION),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/pages/account-information-page.jsx"],"names":["React","useCallback","useState","IconBox","RootContent","FixedHeader","useGoBack","useParams","useTranslation","Col","Row","Text","AboutAccountWrapper","ProfileSvg","InputUI","useProfileInfo","ArrowIosBottomSvg","LISTS","Modal","SelectionList","langData","AccountInformationPage","formik","t","username","listType","setListType","USER_CATEGORY","modalIsOpen","setModalIsOpen","goBack","pathname","getTitle","tmp","REGION","handleClick","value","setFieldValue","values","name","e","target","lastname","email","birthday","user_lang","category","region"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,oCAAnC;AACA,SAAQC,WAAR,QAA0B,iCAA1B;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,IAAR,QAAmB,uCAAnB;AACA,SAAQC,mBAAR,QAAkC,UAAlC;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAAQC,OAAR,QAAsB,iCAAtB;AACA,SAAQC,cAAR,QAA6B,wBAA7B;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;AACA,SAAQC,KAAR,QAAoB,oBAApB;AACA,SAAQC,KAAR,QAAoB,6BAApB;AACA,SAAQC,aAAR,QAA4B,mCAA5B;AACA,SAAQC,QAAR,QAAuB,eAAvB;AAEA,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAAA;;AACxC,QAAM;AAACC,IAAAA;AAAD,MAAWP,cAAc,EAA/B;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAMf,cAAc,EAA1B;AACA,QAAM;AAACgB,IAAAA;AAAD,MAAajB,SAAS,EAA5B;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAACe,KAAK,CAACU,aAAP,CAAxC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAC4B,IAAAA;AAAD,MAAWxB,SAAS,CAAC;AAACyB,IAAAA,QAAQ,EAAG,KAAIP,QAAS;AAAzB,GAAD,CAA1B;AAEA,QAAMQ,QAAQ,GAAG/B,WAAW,CAAC,MAAM;AAC/B,QAAIgC,GAAG,GAAG,EAAV;;AACA,QAAIR,QAAQ,KAAKR,KAAK,CAACU,aAAvB,EAAsC;AAClCM,MAAAA,GAAG,GAAG,UAAN;AACH;;AAED,QAAIR,QAAQ,KAAKR,KAAK,CAACiB,MAAvB,EAA+B;AAC3BD,MAAAA,GAAG,GAAG,QAAN;AACH;;AAED,WAAOA,GAAP;AACH,GAX2B,EAWzB,CAACR,QAAD,CAXyB,CAA5B;;AAaA,QAAMU,WAAW,GAAIV,QAAD,IAAc;AAC9BC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAI,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAHD;;AAKA,sBACI,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,WAAW,EAAED,WAFjB;AAGI,IAAA,KAAK,EAAEL,CAAC,CAAE,GAAES,QAAQ,EAAG,EAAf,CAHZ;AAII,IAAA,cAAc,EAAEH,cAJpB;AAKI,IAAA,SAAS,eACL,oBAAC,aAAD;AACI,MAAA,QAAQ,EAAEJ,QADd;AAEI,MAAA,OAAO,EAAE,MAAMI,cAAc,CAAC,KAAD,CAFjC;AAGI,MAAA,QAAQ,EAAGO,KAAD,IAAWd,MAAM,CAACe,aAAP,CAAqBL,QAAQ,EAA7B,EAAiCI,KAAjC,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAcI,oBAAC,WAAD;AACI,IAAA,MAAM,EAAEN,MADZ;AAEI,IAAA,KAAK,EAAEP,CAAC,CAAC,UAAD,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,eAkBI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,SAAS,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,qBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,CAAC,CAAC,sBAAD,CAApC,CAJJ,CADJ,eAOI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAEA,CAAC,CAAC,MAAD,CAFZ;AAGI,IAAA,KAAK,EAAED,MAAF,aAAEA,MAAF,yCAAEA,MAAM,CAAEgB,MAAV,mDAAE,eAAgBC,IAH3B;AAII,IAAA,QAAQ,EAAGC,CAAD,IAAOlB,MAAM,CAACe,aAAP,CAAqB,MAArB,EAA6BG,CAAC,CAACC,MAAF,CAASL,KAAtC,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,eAeI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAEb,CAAC,CAAC,UAAD,CAFZ;AAGI,IAAA,KAAK,EAAED,MAAF,aAAEA,MAAF,0CAAEA,MAAM,CAAEgB,MAAV,oDAAE,gBAAgBI,QAH3B;AAII,IAAA,QAAQ,EAAGF,CAAD,iBAAO;AAAM,MAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfJ,eAuBI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,SAAS,EAAC,MAFd;AAGI,IAAA,KAAK,EAAEjB,CAAC,CAAC,OAAD,CAHZ;AAII,IAAA,KAAK,EAAED,MAAF,aAAEA,MAAF,0CAAEA,MAAM,CAAEgB,MAAV,oDAAE,gBAAgBK,KAJ3B;AAKI,IAAA,QAAQ,EAAGH,CAAD,IAAOlB,MAAM,CAACe,aAAP,CAAqB,OAArB,EAA8BG,CAAC,CAACC,MAAF,CAASL,KAAvC,CALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvBJ,eAgCI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,MAFd;AAGI,IAAA,KAAK,EAAEd,MAAF,aAAEA,MAAF,0CAAEA,MAAM,CAAEgB,MAAV,oDAAE,gBAAgBM,QAH3B;AAII,IAAA,KAAK,EAAErB,CAAC,CAAC,UAAD,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAhCJ,eAwCI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAC,QAFd;AAGI,IAAA,KAAK,EAAED,MAAM,CAACgB,MAAP,CAAcO,SAHzB;AAII,IAAA,KAAK,EAAEtB,CAAC,CAAC,UAAD,CAJZ;AAKI,IAAA,OAAO,EAAEH,QALb;AAMI,IAAA,QAAQ,EAAGoB,CAAD,IAAOlB,MAAM,CAACe,aAAP,CAAqB,WAArB,EAAkCG,CAAC,CAACC,MAAF,CAASL,KAA3C,CANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAxCJ,eAkDI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAEb,CAAC,CAAC,UAAD,CAFZ;AAGI,IAAA,IAAI,eAAE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHV;AAII,IAAA,KAAK,EAAE,CAAAD,MAAM,SAAN,IAAAA,MAAM,WAAN,+BAAAA,MAAM,CAAEgB,MAAR,6FAAgBQ,QAAhB,gFAA0BP,IAA1B,KAAkC,EAJ7C;AAKI,IAAA,OAAO,EAAE,MAAMJ,WAAW,CAAClB,KAAK,CAACU,aAAP,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAlDJ,eA2DI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAEJ,CAAC,CAAC,QAAD,CAFZ;AAGI,IAAA,IAAI,eAAE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHV;AAII,IAAA,KAAK,EAAE,CAAAD,MAAM,SAAN,IAAAA,MAAM,WAAN,+BAAAA,MAAM,CAAEgB,MAAR,6FAAgBS,MAAhB,gFAAwBR,IAAxB,KAAgC,EAJ3C;AAKI,IAAA,OAAO,EAAE,MAAMJ,WAAW,CAAClB,KAAK,CAACiB,MAAP,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA3DJ,CADJ,CAlBJ,CADJ;AA4FH,CAtHM","sourcesContent":["import React, {useCallback, useState} from 'react'\nimport {IconBox, RootContent} from '../../../UIComponents/GlobalStyles'\nimport {FixedHeader} from '../../../Components/FixedHeader'\nimport {useGoBack} from '../../../Hooks/app'\nimport {useParams} from 'react-router-dom'\nimport {useTranslation} from 'react-i18next'\nimport {Col, Row} from 'antd'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {AboutAccountWrapper} from '../atoms'\nimport {ProfileSvg} from '../../../Icons/People'\nimport {InputUI} from '../../../UIComponents/mu-inputs'\nimport {useProfileInfo} from '../../../Hooks/account'\nimport {ArrowIosBottomSvg} from '../../../Icons/Arrow'\nimport {LISTS} from '../../../Constants'\nimport {Modal} from '../../../UIComponents/Modal'\nimport {SelectionList} from '../../../Components/SelectionList'\nimport {langData} from '../../../data'\n\nexport const AccountInformationPage = () => {\n    const {formik} = useProfileInfo()\n    const {t} = useTranslation()\n    const {username} = useParams()\n    const [listType, setListType] = useState(LISTS.USER_CATEGORY)\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    const {goBack} = useGoBack({pathname: `/@${username}`})\n    \n    const getTitle = useCallback(() => {\n        let tmp = ''\n        if (listType === LISTS.USER_CATEGORY) {\n            tmp = 'category'\n        }\n        \n        if (listType === LISTS.REGION) {\n            tmp = 'region'\n        }\n        \n        return tmp\n    }, [listType])\n    \n    const handleClick = (listType) => {\n        setListType(listType)\n        setModalIsOpen(true)\n    }\n    \n    return (\n        <RootContent paddingTop={50}>\n            <Modal\n                centered\n                modalIsOpen={modalIsOpen}\n                title={t(`${getTitle()}`)}\n                setModalIsOpen={setModalIsOpen}\n                component={\n                    <SelectionList\n                        listType={listType}\n                        onClose={() => setModalIsOpen(false)}\n                        onChange={(value) => formik.setFieldValue(getTitle(), value)}\n                    />\n                }\n            />\n            <FixedHeader\n                goBack={goBack}\n                title={t('about_me')}\n            />\n            <AboutAccountWrapper>\n                <Row gutter={[0, 12]}>\n                    <Col span={24} className='change-photo'>\n                        <IconBox color='var(--grey-dwed)'>\n                            <ProfileSvg/>\n                        </IconBox>\n                        <Text color='var(--primary-dwed)'>{t('change_profile_photo')}</Text>\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            name='name'\n                            label={t('name')}\n                            value={formik?.values?.name}\n                            onChange={(e) => formik.setFieldValue('name', e.target.value)}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            name='lastname'\n                            label={t('lastname')}\n                            value={formik?.values?.lastname}\n                            onChange={(e) => <form action=''></form>}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            name='email'\n                            inputType='text'\n                            label={t('email')}\n                            value={formik?.values?.email}\n                            onChange={(e) => formik.setFieldValue('email', e.target.value)}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            name='date'\n                            inputType='date'\n                            value={formik?.values?.birthday}\n                            label={t('birthday')}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            name='language'\n                            inputType='select'\n                            value={formik.values.user_lang}\n                            label={t('language')}\n                            options={langData}\n                            onChange={(e) => formik.setFieldValue('user_lang', e.target.value)}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            name='category'\n                            label={t('category')}\n                            icon={<ArrowIosBottomSvg/>}\n                            value={formik?.values?.category?.name || ''}\n                            onClick={() => handleClick(LISTS.USER_CATEGORY)}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            name='region'\n                            label={t('region')}\n                            icon={<ArrowIosBottomSvg/>}\n                            value={formik?.values?.region?.name || ''}\n                            onClick={() => handleClick(LISTS.REGION)}\n                        />\n                    </Col>\n                </Row>\n            </AboutAccountWrapper>\n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}