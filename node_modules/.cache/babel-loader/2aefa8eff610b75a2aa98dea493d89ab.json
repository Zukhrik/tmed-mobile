{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Home/OrganizationList/index.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { $appModel } from '../../../Models/app';\nimport { INFO_MAT } from '../../../Constants/app';\nimport { useSubscription } from '../../../Hooks/user';\nimport { $orgModel } from '../../../Models/org-model';\nimport { OrganizationCard } from '../../../Components/Cards';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { RootContent } from '../../../UIComponents/GlobalStyles';\nimport { OrganizationCardSkeleton } from '../../../Components/Cards/OrganizationCard';\nconst skeleton = generateSkeleton(30);\nexport const OrganizationList = ({\n  loadMore\n}) => {\n  const {\n    $device\n  } = useStore($appModel);\n  const {\n    subscribeToAccount\n  } = useSubscription({\n    from: 'org_list'\n  });\n  const {\n    $allOrgList: {\n      data,\n      forceLoading,\n      loading,\n      result\n    }\n  } = useStore($orgModel);\n  return /*#__PURE__*/React.createElement(RootContent, {\n    paddingBottom: \"60px\",\n    paddingTop: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, data && /*#__PURE__*/React.createElement(InfiniteScroll, {\n    style: {\n      overflow: 'visible'\n    },\n    next: loadMore,\n    dataLength: result.nextOffset || 20,\n    hasMore: !loading && !!result.next,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [12, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, forceLoading === 2 ? /*#__PURE__*/React.createElement(React.Fragment, null, data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    key: `${idx + 1}`,\n    span: $device && $device === INFO_MAT ? 12 : 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(OrganizationCard, {\n    imgUrl: item.logo,\n    name: item.name,\n    category: item.category.name,\n    aesthetics: item.rating.aesthetics.level,\n    ethics: item.rating.ethics.level,\n    professional: item.rating.professional.level,\n    slug_name: item.slug_name // subscribed={item.subs.subscribed}\n    ,\n    path: `/${item.slug_name}/offerings`,\n    subscribe: subscribeToAccount,\n    containerPath: `/${item.slug_name}/offerings`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 53\n    }\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    key: `${idx + 1}`,\n    span: $device && $device === INFO_MAT ? 12 : 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(OrganizationCardSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 53\n    }\n  })))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Home/OrganizationList/index.jsx"],"names":["React","Col","Row","useStore","$appModel","INFO_MAT","useSubscription","$orgModel","OrganizationCard","InfiniteScroll","generateSkeleton","RootContent","OrganizationCardSkeleton","skeleton","OrganizationList","loadMore","$device","subscribeToAccount","from","$allOrgList","data","forceLoading","loading","result","overflow","nextOffset","next","map","item","idx","logo","name","category","rating","aesthetics","level","ethics","professional","slug_name"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Col, Row} from 'antd'\r\nimport {useStore} from 'effector-react'\r\nimport {$appModel} from '../../../Models/app'\r\nimport {INFO_MAT} from '../../../Constants/app'\r\nimport {useSubscription} from '../../../Hooks/user'\r\nimport {$orgModel} from '../../../Models/org-model'\r\nimport {OrganizationCard} from '../../../Components/Cards'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\r\nimport {RootContent} from '../../../UIComponents/GlobalStyles'\r\nimport {OrganizationCardSkeleton} from '../../../Components/Cards/OrganizationCard'\r\n\r\nconst skeleton = generateSkeleton(30)\r\nexport const OrganizationList = ({loadMore}) => {\r\n    const {$device} = useStore($appModel)\r\n    const {subscribeToAccount} = useSubscription({from: 'org_list'})\r\n    const {$allOrgList: {data, forceLoading, loading, result}} = useStore($orgModel)\r\n    \r\n    return (\r\n        <RootContent\r\n            paddingBottom='60px'\r\n            paddingTop='12px'\r\n        >\r\n            {\r\n                data && (\r\n                    <InfiniteScroll\r\n                        style={{overflow: 'visible'}}\r\n                        next={loadMore}\r\n                        dataLength={result.nextOffset || 20}\r\n                        hasMore={!loading && !!result.next}\r\n                        loader={<>...loading</>}\r\n                        className='container'\r\n                    >\r\n                        <Row gutter={[12, 12]}>\r\n                            {\r\n                                forceLoading === 2\r\n                                    ? <>\r\n                                        {\r\n                                            data.map((item, idx) => (\r\n                                                <Col\r\n                                                    key={`${idx + 1}`}\r\n                                                    span={$device && $device === INFO_MAT ? 12 : 24}\r\n                                                >\r\n                                                    <OrganizationCard\r\n                                                        imgUrl={item.logo}\r\n                                                        name={item.name}\r\n                                                        category={item.category.name}\r\n                                                        aesthetics={item.rating.aesthetics.level}\r\n                                                        ethics={item.rating.ethics.level}\r\n                                                        professional={item.rating.professional.level}\r\n                                                        slug_name={item.slug_name}\r\n                                                        // subscribed={item.subs.subscribed}\r\n                                                        path={`/${item.slug_name}/offerings`}\r\n                                                        subscribe={subscribeToAccount}\r\n                                                        containerPath={`/${item.slug_name}/offerings`}\r\n                                                    />\r\n                                                </Col>\r\n                                            ))\r\n                                        }\r\n                                    </>\r\n                                    : <>\r\n                                        {\r\n                                            skeleton.map((item, idx) => (\r\n                                                <Col\r\n                                                    key={`${idx + 1}`}\r\n                                                    span={$device && $device === INFO_MAT ? 12 : 24}\r\n                                                >\r\n                                                    <OrganizationCardSkeleton/>\r\n                                                </Col>\r\n                                            ))\r\n                                        }\r\n                                    </>\r\n                            }\r\n                        </Row>\r\n                    </InfiniteScroll>\r\n                )\r\n            }\r\n        </RootContent>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}