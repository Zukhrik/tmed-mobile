{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport order from '../../../Service/order';\nconst initialParams = {\n  limit: 10,\n  offset: 0\n};\nexport const AccountRecordsDetail = () => {\n  // useOrder()\n  // useOrderIdOffers()\n  const {\n    responsible_id\n  } = useParams();\n  useEffect(() => {\n    const params = {\n      responsible_id: responsible_id,\n      params: { ...initialParams\n      }\n    };\n    order.getOrgOrderResponsible(params).then(res => {\n      if (res) {\n        console.log(res);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"Account Records\");\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/organisms/account-records-detail.jsx"],"names":["React","useEffect","useParams","order","initialParams","limit","offset","AccountRecordsDetail","responsible_id","params","getOrgOrderResponsible","then","res","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,MAAM,EAAE;AAFU,CAAtB;AAIA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACtC;AACA;AACA,QAAM;AAACC,IAAAA;AAAD,MAAmBN,SAAS,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,MAAM,GAAG;AACXD,MAAAA,cAAc,EAAEA,cADL;AAEXC,MAAAA,MAAM,EAAE,EACJ,GAAGL;AADC;AAFG,KAAf;AAMAD,IAAAA,KAAK,CAACO,sBAAN,CAA6BD,MAA7B,EACKE,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAJ,EAAS;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KALL;AAMH,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACI,4DADJ;AAKH,CAzBM","sourcesContent":["import React, {useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\nimport order from '../../../Service/order'\n\nconst initialParams = {\n    limit: 10,\n    offset: 0\n}\nexport const AccountRecordsDetail = () => {\n    // useOrder()\n    // useOrderIdOffers()\n    const {responsible_id} = useParams()\n    \n    useEffect(() => {\n        const params = {\n            responsible_id: responsible_id,\n            params: {\n                ...initialParams\n            }\n        }\n        order.getOrgOrderResponsible(params)\n            .then(res => {\n                if (res) {\n                    console.log(res)\n                }\n            })\n    }, [])\n    \n    return (\n        <>\n            Account Records\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}