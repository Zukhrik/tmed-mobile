{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useWebSocket from 'react-use-websocket';\nimport { streamLiveWatchersMount } from '../../Models/stream-model';\nexport function useStreamViewerCountWs() {\n  const {\n    slug_name\n  } = useParams();\n  const [streamURL, setStreamURL] = useState(null);\n  useWebSocket(streamURL, {\n    onMessage: evt => {\n      const data = JSON.parse(evt.data);\n\n      if (data.action === 'live_watchers') {\n        streamLiveWatchersMount(data);\n      }\n    }\n  });\n  useEffect(() => {\n    if (slug_name) {\n      setStreamURL(`wss://py.dwed.biz/ws/v1.0/stream/${slug_name}/`);\n    }\n  }, [slug_name]);\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/stream/use-stream-viewer-count-ws.js"],"names":["useEffect","useState","useParams","useWebSocket","streamLiveWatchersMount","useStreamViewerCountWs","slug_name","streamURL","setStreamURL","onMessage","evt","data","JSON","parse","action"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAAQC,uBAAR,QAAsC,2BAAtC;AAEA,OAAO,SAASC,sBAAT,GAAkC;AACrC,QAAM;AAACC,IAAAA;AAAD,MAAcJ,SAAS,EAA7B;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AAEAE,EAAAA,YAAY,CAACI,SAAD,EAAY;AACpBE,IAAAA,SAAS,EAAGC,GAAD,IAAS;AAChB,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACC,IAAf,CAAb;;AACA,UAAIA,IAAI,CAACG,MAAL,KAAgB,eAApB,EAAqC;AACjCV,QAAAA,uBAAuB,CAACO,IAAD,CAAvB;AACH;AACJ;AANmB,GAAZ,CAAZ;AASAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,SAAJ,EAAe;AACXE,MAAAA,YAAY,CAAE,oCAAmCF,SAAU,GAA/C,CAAZ;AACH;AACJ,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;AAKH","sourcesContent":["import {useEffect, useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport useWebSocket from 'react-use-websocket'\nimport {streamLiveWatchersMount} from '../../Models/stream-model'\n\nexport function useStreamViewerCountWs() {\n    const {slug_name} = useParams()\n    const [streamURL, setStreamURL] = useState(null)\n    \n    useWebSocket(streamURL, {\n        onMessage: (evt) => {\n            const data = JSON.parse(evt.data)\n            if (data.action === 'live_watchers') {\n                streamLiveWatchersMount(data)\n            }\n        }\n    })\n    \n    useEffect(() => {\n        if (slug_name) {\n            setStreamURL(`wss://py.dwed.biz/ws/v1.0/stream/${slug_name}/`)\n        }\n    }, [slug_name])\n}"]},"metadata":{},"sourceType":"module"}