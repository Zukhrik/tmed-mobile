{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/App.jsx\";\nimport React, { useEffect } from 'react';\nimport { Root } from './Root';\nimport { useStore } from 'effector-react';\nimport { Records } from './Views/Records';\nimport { useTranslation } from 'react-i18next';\nimport { SignInPage, SignUpPage } from './Views/Auth';\nimport { BottomNavBar } from './Components/BottomNavBar';\nimport { accountInfoMount } from './Models/account-model';\nimport { $appModel, detectLocationMount } from './Models/app';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport { useAppDb, useChatWs, useCommonWs, useIsMobile } from './Hooks/app';\nexport const App = () => {\n  const {\n    pathname\n  } = useLocation();\n  const generateBottomNavbar = pathname.indexOf('sign-in') === -1 && pathname.indexOf('sign-up') === -1 && pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'offerings' && pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'unregistered' && pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'checkout';\n  useAppDb();\n  useChatWs();\n  useCommonWs();\n  useIsMobile();\n  const {\n    i18n\n  } = useTranslation();\n  const {\n    $app: {\n      token\n    },\n    $appLang: lang\n  } = useStore($appModel);\n  useEffect(() => {\n    if (token) {\n      accountInfoMount();\n    } else {\n      detectLocationMount();\n    }\n  }, [token]);\n  useEffect(() => {\n    if (lang) {\n      i18n.changeLanguage(lang);\n    }\n  }, [i18n, lang]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/sign-in\",\n    component: SignInPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/sign-up\",\n    component: SignUpPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/records\",\n    component: Records,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    component: Root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), generateBottomNavbar && /*#__PURE__*/React.createElement(BottomNavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 38\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/App.jsx"],"names":["React","useEffect","Root","useStore","Records","useTranslation","SignInPage","SignUpPage","BottomNavBar","accountInfoMount","$appModel","detectLocationMount","Route","Switch","useLocation","useAppDb","useChatWs","useCommonWs","useIsMobile","App","pathname","generateBottomNavbar","indexOf","match","i18n","$app","token","$appLang","lang","changeLanguage"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,cAArC;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AACA,SAAQC,gBAAR,QAA+B,wBAA/B;AACA,SAAQC,SAAR,EAAmBC,mBAAnB,QAA6C,cAA7C;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,WAAvB,QAAyC,kBAAzC;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,WAA7B,EAA0CC,WAA1C,QAA4D,aAA5D;AAGA,OAAO,MAAMC,GAAG,GAAG,MAAM;AACrB,QAAM;AAACC,IAAAA;AAAD,MAAaN,WAAW,EAA9B;AAEA,QAAMO,oBAAoB,GACtBD,QAAQ,CAACE,OAAT,CAAiB,SAAjB,MAAgC,CAAC,CAAjC,IACAF,QAAQ,CAACE,OAAT,CAAiB,SAAjB,MAAgC,CAAC,CADjC,IAEAF,QAAQ,CAACG,KAAT,CAAe,iBAAf,EAAkC,CAAlC,MAAyC,WAFzC,IAGAH,QAAQ,CAACG,KAAT,CAAe,iBAAf,EAAkC,CAAlC,MAAyC,cAHzC,IAIAH,QAAQ,CAACG,KAAT,CAAe,iBAAf,EAAkC,CAAlC,MAAyC,UAL7C;AAQAR,EAAAA,QAAQ;AACRC,EAAAA,SAAS;AACTC,EAAAA,WAAW;AACXC,EAAAA,WAAW;AAEX,QAAM;AAACM,IAAAA;AAAD,MAASnB,cAAc,EAA7B;AACA,QAAM;AAACoB,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD,KAAP;AAAgBC,IAAAA,QAAQ,EAAEC;AAA1B,MAAkCzB,QAAQ,CAACO,SAAD,CAAhD;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIyB,KAAJ,EAAW;AACPjB,MAAAA,gBAAgB;AACnB,KAFD,MAEO;AACHE,MAAAA,mBAAmB;AACtB;AACJ,GANQ,EAMN,CAACe,KAAD,CANM,CAAT;AASAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI2B,IAAJ,EAAU;AACNJ,MAAAA,IAAI,CAACK,cAAL,CAAoBD,IAApB;AACH;AACJ,GAJQ,EAIN,CAACJ,IAAD,EAAOI,IAAP,CAJM,CAAT;AAOA,sBACI,uDACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,UAAlB;AAA6B,IAAA,SAAS,EAAEtB,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,UAAlB;AAA6B,IAAA,SAAS,EAAEC,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEH,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAEF,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAOKmB,oBAAoB,iBAAI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAP7B,CADJ;AAWH,CA/CM","sourcesContent":["import React, {useEffect} from 'react'\nimport {Root} from './Root'\nimport {useStore} from 'effector-react'\nimport {Records} from './Views/Records'\nimport {useTranslation} from 'react-i18next'\nimport {SignInPage, SignUpPage} from './Views/Auth'\nimport {BottomNavBar} from './Components/BottomNavBar'\nimport {accountInfoMount} from './Models/account-model'\nimport {$appModel, detectLocationMount} from './Models/app'\nimport {Route, Switch, useLocation} from 'react-router-dom'\nimport {useAppDb, useChatWs, useCommonWs, useIsMobile} from './Hooks/app'\n\n\nexport const App = () => {\n    const {pathname} = useLocation()\n    \n    const generateBottomNavbar = (\n        pathname.indexOf('sign-in') === -1 &&\n        pathname.indexOf('sign-up') === -1 &&\n        pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'offerings' &&\n        pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'unregistered' &&\n        pathname.match(/([^/]*)\\/[^/]*$/)[1] !== 'checkout'\n    )\n    \n    useAppDb()\n    useChatWs()\n    useCommonWs()\n    useIsMobile()\n    \n    const {i18n} = useTranslation()\n    const {$app: {token}, $appLang: lang} = useStore($appModel)\n    \n    \n    useEffect(() => {\n        if (token) {\n            accountInfoMount()\n        } else {\n            detectLocationMount()\n        }\n    }, [token])\n    \n    \n    useEffect(() => {\n        if (lang) {\n            i18n.changeLanguage(lang)\n        }\n    }, [i18n, lang])\n    \n    \n    return (\n        <>\n            <Switch>\n                <Route exact path='/sign-in' component={SignInPage}/>\n                <Route exact path='/sign-up' component={SignUpPage}/>\n                <Route path='/records' component={Records}/>\n                <Route path='/' component={Root}/>\n            </Switch>\n            {generateBottomNavbar && <BottomNavBar/>}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}