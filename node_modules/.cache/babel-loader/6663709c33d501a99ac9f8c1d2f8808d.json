{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/StreamPage/organisms/schedule-list.jsx\";\nimport React from 'react';\nimport { useStore } from 'effector-react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { ScheduleCard } from '../../../Components/Cards';\nimport { $streamModel } from '../../../Models/stream-model';\nimport { truncateString } from '../../../utils/stringUtils';\nimport { $accountModel } from '../../../Models/account-model';\nimport { Title } from '../../../UIComponents/Typography/Title';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nexport const ScheduleList = ({\n  loadMore\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    slug_name\n  } = useParams();\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n  const {\n    $channelStreamScheduleList: {\n      data: schedule,\n      result,\n      loading\n    }\n  } = useStore($streamModel);\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    next: loadMore,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    style: {\n      overflow: 'visible',\n      paddingTop: 12\n    },\n    dataLength: result.nextOffset || 10,\n    hasMore: !loading && !!result[slug_name].next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, schedule[slug_name] && schedule[slug_name].length > 0 && /*#__PURE__*/React.createElement(Title, {\n    level: 5,\n    style: {\n      color: 'var(--grey-dwed)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, t('anons')), schedule[slug_name] && schedule[slug_name].map((item, idx) => /*#__PURE__*/React.createElement(ScheduleCard, {\n    key: `${idx + 1}`,\n    src: item.image,\n    alt: item.title,\n    date: item.date,\n    title: item.title,\n    scheduleId: item.id,\n    isWanting: item.is_wanting,\n    currentProfile: currentProfile,\n    description: truncateString(item.description, 95),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/StreamPage/organisms/schedule-list.jsx"],"names":["React","useStore","useParams","useTranslation","ScheduleCard","$streamModel","truncateString","$accountModel","Title","InfiniteScroll","ScheduleList","loadMore","t","slug_name","$profiles","currentProfile","$channelStreamScheduleList","data","schedule","result","loading","overflow","paddingTop","nextOffset","next","length","color","map","item","idx","image","title","date","id","is_wanting","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AACA,SAAQC,YAAR,QAA2B,8BAA3B;AACA,SAAQC,cAAR,QAA6B,4BAA7B;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AACA,SAAQC,KAAR,QAAoB,wCAApB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACxC,QAAM;AAACC,IAAAA;AAAD,MAAMT,cAAc,EAA1B;AACA,QAAM;AAACU,IAAAA;AAAD,MAAcX,SAAS,EAA7B;AACA,QAAM;AAACY,IAAAA,SAAS,EAAE;AAACC,MAAAA;AAAD;AAAZ,MAAgCd,QAAQ,CAACM,aAAD,CAA9C;AACA,QAAM;AAACS,IAAAA,0BAA0B,EAAE;AAACC,MAAAA,IAAI,EAAEC,QAAP;AAAiBC,MAAAA,MAAjB;AAAyBC,MAAAA;AAAzB;AAA7B,MAAkEnB,QAAQ,CAACI,YAAD,CAAhF;AAGA,sBACI,oBAAC,cAAD;AACI,IAAA,IAAI,EAAEM,QADV;AAEI,IAAA,MAAM,eAAE,uDAFZ;AAGI,IAAA,KAAK,EAAE;AAACU,MAAAA,QAAQ,EAAE,SAAX;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KAHX;AAII,IAAA,UAAU,EAAEH,MAAM,CAACI,UAAP,IAAqB,EAJrC;AAKI,IAAA,OAAO,EAAE,CAACH,OAAD,IAAY,CAAC,CAACD,MAAM,CAACN,SAAD,CAAN,CAAkBW,IAL7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQQN,QAAQ,CAACL,SAAD,CAAR,IAAuBK,QAAQ,CAACL,SAAD,CAAR,CAAoBY,MAApB,GAA6B,CAApD,iBACA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAiB,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDd,CAAC,CAAC,OAAD,CAAvD,CATR,EAYQM,QAAQ,CAACL,SAAD,CAAR,IAAuBK,QAAQ,CAACL,SAAD,CAAR,CAAoBc,GAApB,CAAwB,CAACC,IAAD,EAAOC,GAAP,kBAC3C,oBAAC,YAAD;AACI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EADpB;AAEI,IAAA,GAAG,EAAED,IAAI,CAACE,KAFd;AAGI,IAAA,GAAG,EAAEF,IAAI,CAACG,KAHd;AAII,IAAA,IAAI,EAAEH,IAAI,CAACI,IAJf;AAKI,IAAA,KAAK,EAAEJ,IAAI,CAACG,KALhB;AAMI,IAAA,UAAU,EAAEH,IAAI,CAACK,EANrB;AAOI,IAAA,SAAS,EAAEL,IAAI,CAACM,UAPpB;AAQI,IAAA,cAAc,EAAEnB,cARpB;AASI,IAAA,WAAW,EAAET,cAAc,CAACsB,IAAI,CAACO,WAAN,EAAmB,EAAnB,CAT/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADmB,CAZ/B,CADJ;AA6BH,CApCM","sourcesContent":["import React from 'react'\nimport {useStore} from 'effector-react'\nimport {useParams} from 'react-router-dom'\nimport {useTranslation} from 'react-i18next'\nimport {ScheduleCard} from '../../../Components/Cards'\nimport {$streamModel} from '../../../Models/stream-model'\nimport {truncateString} from '../../../utils/stringUtils'\nimport {$accountModel} from '../../../Models/account-model'\nimport {Title} from '../../../UIComponents/Typography/Title'\nimport InfiniteScroll from 'react-infinite-scroll-component'\n\nexport const ScheduleList = ({loadMore}) => {\n    const {t} = useTranslation()\n    const {slug_name} = useParams()\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    const {$channelStreamScheduleList: {data: schedule, result, loading}} = useStore($streamModel)\n    \n    \n    return (\n        <InfiniteScroll\n            next={loadMore}\n            loader={<>...loading</>}\n            style={{overflow: 'visible', paddingTop: 12}}\n            dataLength={result.nextOffset || 10}\n            hasMore={!loading && !!result[slug_name].next}\n        >\n            {\n                schedule[slug_name] && schedule[slug_name].length > 0 &&\n                <Title level={5} style={{color: 'var(--grey-dwed)'}}>{t('anons')}</Title>\n            }\n            {\n                schedule[slug_name] && schedule[slug_name].map((item, idx) => (\n                    <ScheduleCard\n                        key={`${idx + 1}`}\n                        src={item.image}\n                        alt={item.title}\n                        date={item.date}\n                        title={item.title}\n                        scheduleId={item.id}\n                        isWanting={item.is_wanting}\n                        currentProfile={currentProfile}\n                        description={truncateString(item.description, 95)}\n                    />\n                ))\n            }\n        </InfiniteScroll>\n    )\n}"]},"metadata":{},"sourceType":"module"}