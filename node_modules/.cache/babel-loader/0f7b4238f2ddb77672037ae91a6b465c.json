{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Header/organisms/org-categories.jsx\";\nimport React from 'react';\nimport { useStore } from 'effector-react';\nimport { useTranslation } from 'react-i18next';\nimport { $catsModel } from '../../../Models/cats-model';\nimport { ArrowIosBottomSvg } from '../../../Icons/Arrow';\nimport { AllCatsButton, CategoriesItem, CategoriesWrapper } from '../atoms';\nimport { IconBox } from '../../../UIComponents/GlobalStyles';\nexport const OrgCategories = ({\n  handleClick,\n  setOpenFilter,\n  openFilter\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    $catsOrgCats: {\n      data\n    }\n  } = useStore($catsModel);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, data.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CategoriesWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  }, data.map((item, idx) => /*#__PURE__*/React.createElement(CategoriesItem, {\n    key: `${idx + 1}`,\n    onClick: () => handleClick(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 37\n    }\n  }, item.name))), /*#__PURE__*/React.createElement(AllCatsButton, {\n    status: openFilter,\n    onClick: () => setOpenFilter(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, t('all'), /*#__PURE__*/React.createElement(IconBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ArrowIosBottomSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Header/organisms/org-categories.jsx"],"names":["React","useStore","useTranslation","$catsModel","ArrowIosBottomSvg","AllCatsButton","CategoriesItem","CategoriesWrapper","IconBox","OrgCategories","handleClick","setOpenFilter","openFilter","t","$catsOrgCats","data","length","map","item","idx","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,UAAR,QAAyB,4BAAzB;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;AACA,SAAQC,aAAR,EAAuBC,cAAvB,EAAuCC,iBAAvC,QAA+D,UAA/D;AACA,SAAQC,OAAR,QAAsB,oCAAtB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,aAAd;AAA6BC,EAAAA;AAA7B,CAAD,KAA8C;AACvE,QAAM;AAACC,IAAAA;AAAD,MAAMX,cAAc,EAA1B;AACA,QAAM;AAACY,IAAAA,YAAY,EAAE;AAACC,MAAAA;AAAD;AAAf,MAAyBd,QAAQ,CAACE,UAAD,CAAvC;AAEA,sBACI,0CAEQY,IAAI,CAACC,MAAL,GAAc,CAAd,iBACI,uDACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,IAAI,CAACE,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACL,oBAAC,cAAD;AACI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EADpB;AAEI,IAAA,OAAO,EAAE,MAAMT,WAAW,CAACQ,IAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKA,IAAI,CAACE,IAJV,CADJ,CAFR,CADJ,eAaI,oBAAC,aAAD;AACI,IAAA,MAAM,EAAER,UADZ;AAEI,IAAA,OAAO,EAAE,MAAMD,aAAa,CAAC,IAAD,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKE,CAAC,CAAC,KAAD,CAJN,eAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CAbJ,CAHZ,CADJ;AA+BH,CAnCM","sourcesContent":["import React from 'react'\nimport {useStore} from 'effector-react'\nimport {useTranslation} from 'react-i18next'\nimport {$catsModel} from '../../../Models/cats-model'\nimport {ArrowIosBottomSvg} from '../../../Icons/Arrow'\nimport {AllCatsButton, CategoriesItem, CategoriesWrapper} from '../atoms'\nimport {IconBox} from '../../../UIComponents/GlobalStyles'\n\nexport const OrgCategories = ({handleClick, setOpenFilter, openFilter}) => {\n    const {t} = useTranslation()\n    const {$catsOrgCats: {data}} = useStore($catsModel)\n    \n    return (\n        <>\n            {\n                data.length > 0 && (\n                    <>\n                        <CategoriesWrapper>\n                            {\n                                data.map((item, idx) => (\n                                    <CategoriesItem\n                                        key={`${idx + 1}`}\n                                        onClick={() => handleClick(item)}\n                                    >\n                                        {item.name}\n                                    </CategoriesItem>\n                                ))\n                            }\n                        </CategoriesWrapper>\n                        <AllCatsButton\n                            status={openFilter}\n                            onClick={() => setOpenFilter(true)}\n                        >\n                            {t('all')}\n                            <IconBox>\n                                <ArrowIosBottomSvg/>\n                            </IconBox>\n                        </AllCatsButton>\n                    </>\n                )\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}