{"ast":null,"code":"import React,{useCallback}from'react';import{useStore}from'effector-react';import{Col,Radio,Row,Space}from'antd';import{useTranslation}from'react-i18next';import payment from'../../../../../Service/payment';import{PlusFillSvg}from'../../../../../Icons/Plus';import{HUMOSvg,UZCARDSvg}from'../../../../../Icons/Cards';import{$paymentModel}from'../../../../../Models/payment-model';import{Title}from'../../../../../UIComponents/Typography/Title';import{CardInfoWrapper,PaymentMethodsWrapper,VerifyCardLink}from'../../style';import{PAYMENT_METHOD}from'../../../../../Constants/payment';import{$orgModel}from'../../../../../Models/org-model';export var PaymentMethod=function PaymentMethod(_ref){var onClose=_ref.onClose,setCardId=_ref.setCardId,setPayment=_ref.setPayment,handleAddCard=_ref.handleAddCard,setCardWrapper=_ref.setCardWrapper,paymentType=_ref.payment;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useStore=useStore($paymentModel),data=_useStore.$accountCard.data;var _useStore2=useStore($orgModel),orgPayments=_useStore2.$orgPaymentMethods.data;var cardStyle=useCallback(function(number){var tmp='';for(var i=0;i<number.length;i++){if(i%4===0){tmp+=' '+number[i];}else{tmp+=number[i];}}return tmp;},[]);var handleChange=function handleChange(value){var item=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;if(item){setPayment({id:item.id,title:\"\".concat(cardStyle(item.card_number),\" \").concat(item.name),extraId:value});}else{setPayment({id:PAYMENT_METHOD[value].title,title:PAYMENT_METHOD[value].title,extraId:value});}onClose();};var handleActivateCard=function handleActivateCard(item){var params={id:item.id};payment.resendPayMeCode(params).then(function(res){if(res){setCardWrapper(true);}}).finally(function(){setCardId(item.id);});};var generateCardType=function generateCardType(item){if(Number(item.card_number.substr(0,4))===8600){return/*#__PURE__*/React.createElement(UZCARDSvg,null);}else{return/*#__PURE__*/React.createElement(HUMOSvg,null);}};return/*#__PURE__*/React.createElement(Row,{gutter:[0,12],className:\"select-card-wrapper\"},/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Title,null,t('payment_method'))),data&&/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(PaymentMethodsWrapper,null,/*#__PURE__*/React.createElement(Radio.Group,{defaultValue:\"1\",value:paymentType.id},/*#__PURE__*/React.createElement(Space,{direction:\"vertical\"},orgPayments.find(function(item){return item.method===1&&item.status;})&&/*#__PURE__*/React.createElement(Radio,{value:\"cash\",onClick:function onClick(e){return handleChange(1);}},t('cash')),orgPayments.find(function(item){return item.method===2&&item.status;})&&/*#__PURE__*/React.createElement(Radio,{value:\"terminal\",onClick:function onClick(e){return handleChange(2);}},t('terminal')),data.map(function(item,idx){return/*#__PURE__*/React.createElement(Radio,{key:\"\".concat(idx+1),disabled:!item.verified,value:item.id,onClick:function onClick(e){return handleChange(3,item);}},generateCardType(item),/*#__PURE__*/React.createElement(CardInfoWrapper,null,\"\".concat(item.card_number.replace(/\\d{4}(?=.)/g,'$& '),\" \").concat(item.name&&item.name),!item.verified&&/*#__PURE__*/React.createElement(VerifyCardLink,{onClick:function onClick(){return handleActivateCard(item);}},t('activate'))));}))))),/*#__PURE__*/React.createElement(Col,{span:24,onClick:handleAddCard,className:\"add-card-wrapper\"},/*#__PURE__*/React.createElement(Row,{gutter:[12,0],align:\"middle\"},/*#__PURE__*/React.createElement(Col,{className:\"plus-svg\"},/*#__PURE__*/React.createElement(PlusFillSvg,null)),/*#__PURE__*/React.createElement(Col,null,t('add_card')))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Checkout/InfoCard/CheckoutDetail/CreditCardDetail/PaymentMethod.jsx"],"names":["React","useCallback","useStore","Col","Radio","Row","Space","useTranslation","payment","PlusFillSvg","HUMOSvg","UZCARDSvg","$paymentModel","Title","CardInfoWrapper","PaymentMethodsWrapper","VerifyCardLink","PAYMENT_METHOD","$orgModel","PaymentMethod","onClose","setCardId","setPayment","handleAddCard","setCardWrapper","paymentType","t","data","$accountCard","orgPayments","$orgPaymentMethods","cardStyle","number","tmp","i","length","handleChange","value","item","undefined","id","title","card_number","name","extraId","handleActivateCard","params","resendPayMeCode","then","res","finally","generateCardType","Number","substr","find","method","status","e","map","idx","verified","replace"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react'\nimport {useStore} from 'effector-react'\nimport {Col, Radio, Row, Space} from 'antd'\nimport {useTranslation} from 'react-i18next'\nimport payment from '../../../../../Service/payment'\nimport {PlusFillSvg} from '../../../../../Icons/Plus'\nimport {HUMOSvg, UZCARDSvg} from '../../../../../Icons/Cards'\nimport {$paymentModel} from '../../../../../Models/payment-model'\nimport {Title} from '../../../../../UIComponents/Typography/Title'\nimport {CardInfoWrapper, PaymentMethodsWrapper, VerifyCardLink} from '../../style'\nimport {PAYMENT_METHOD} from '../../../../../Constants/payment'\nimport {$orgModel} from '../../../../../Models/org-model'\n\nexport const PaymentMethod = (\n    {\n        onClose,\n        setCardId,\n        setPayment,\n        handleAddCard,\n        setCardWrapper,\n        payment: paymentType\n    }\n) => {\n    const {t} = useTranslation()\n    const {$accountCard: {data}} = useStore($paymentModel)\n    const {$orgPaymentMethods: {data: orgPayments}} = useStore($orgModel)\n    \n    const cardStyle = useCallback((number) => {\n        let tmp = ''\n        for (let i = 0; i < number.length; i++) {\n            if (i % 4 === 0) {\n                tmp += ' ' + number[i]\n            } else {\n                tmp += number[i]\n            }\n        }\n        return tmp\n    }, [])\n    \n    const handleChange = (value, item = undefined) => {\n        if (item) {\n            setPayment({\n                id: item.id,\n                title: `${cardStyle(item.card_number)} ${item.name}`,\n                extraId: value\n            })\n        } else {\n            setPayment({\n                id: PAYMENT_METHOD[value].title,\n                title: PAYMENT_METHOD[value].title,\n                extraId: value\n            })\n        }\n        \n        onClose()\n    }\n    \n    \n    const handleActivateCard = (item) => {\n        const params = {\n            id: item.id\n        }\n        \n        payment.resendPayMeCode(params)\n            .then(res => {\n                if (res) {\n                    setCardWrapper(true)\n                }\n            })\n            .finally(() => {\n                setCardId(item.id)\n            })\n    }\n    \n    const generateCardType = (item) => {\n        if (Number(item.card_number.substr(0, 4)) === 8600) {\n            return <UZCARDSvg/>\n        } else {\n            return <HUMOSvg/>\n        }\n    }\n    \n    \n    return (\n        <Row gutter={[0, 12]} className='select-card-wrapper'>\n            <Col span={24}>\n                <Title>{t('payment_method')}</Title>\n            </Col>\n            {\n                data && (\n                    <Col span={24}>\n                        <PaymentMethodsWrapper>\n                            <Radio.Group\n                                defaultValue='1'\n                                value={paymentType.id}\n                            >\n                                <Space direction='vertical'>\n                                    {\n                                        orgPayments.find(item => item.method === 1 && item.status) && (\n                                            <Radio\n                                                value='cash'\n                                                onClick={(e) => handleChange(1)}\n                                            >\n                                                {t('cash')}\n                                            </Radio>\n                                        )\n                                    }\n                                    {\n                                        orgPayments.find(item => item.method === 2 && item.status) && (\n                                            <Radio\n                                                value='terminal'\n                                                onClick={(e) => handleChange(2)}\n                                            >\n                                                {t('terminal')}\n                                            </Radio>\n                                        )\n                                    }\n                                    {\n                                        data.map((item, idx) => (\n                                            <Radio\n                                                key={`${idx + 1}`}\n                                                disabled={!item.verified}\n                                                value={item.id}\n                                                onClick={(e) => handleChange(3, item)}\n                                            >\n                                                {generateCardType(item)}\n                                                <CardInfoWrapper>\n                                                    {`${item.card_number.replace(/\\d{4}(?=.)/g, '$& ')} ${item.name && item.name}`}\n                                                    {\n                                                        !item.verified && (\n                                                            <VerifyCardLink onClick={() => handleActivateCard(item)}>\n                                                                {t('activate')}\n                                                            </VerifyCardLink>\n                                                        )\n                                                    }\n                                                </CardInfoWrapper>\n                                            </Radio>\n                                        ))\n                                    }\n                                </Space>\n                            </Radio.Group>\n                        </PaymentMethodsWrapper>\n                    </Col>\n                )\n            }\n            <Col span={24} onClick={handleAddCard} className='add-card-wrapper'>\n                <Row gutter={[12, 0]} align='middle'>\n                    <Col className='plus-svg'>\n                        <PlusFillSvg/>\n                    </Col>\n                    <Col>\n                        {t('add_card')}\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}"]},"metadata":{},"sourceType":"module"}