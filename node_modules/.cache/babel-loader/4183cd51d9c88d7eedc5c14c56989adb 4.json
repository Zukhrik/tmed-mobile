{"ast":null,"code":"import React from'react';import{useStore}from'effector-react';import{useTranslation}from'react-i18next';import{$appModel}from'../../../../Models/app';import{OvalBgSvg}from'../../../../Icons/OvalBg';import{Avatar}from'../../../../UIComponents/Avatar';import defaultImage from'../../../../Assets/cards/9.png';import{Text}from'../../../../UIComponents/Typography/Text';import{$accountModel}from'../../../../Models/account-model';import{Title}from'../../../../UIComponents/Typography/Title';import{AvatarContainerWrapper,BackgroundImage,OrganizationCardWrapper,OrganizationInfoWrapper,SubscribeButton}from'../atoms';export var OrganizationCard=function OrganizationCard(_ref){var backgroundImage=_ref.backgroundImage,imgUrl=_ref.imgUrl,name=_ref.name,category=_ref.category,subscribed=_ref.subscribed,subscribe=_ref.subscribe,slug_name=_ref.slug_name,containerPath=_ref.containerPath;var _useStore=useStore($accountModel),currentProfile=_useStore.$profiles.currentProfile;var _useStore2=useStore($appModel),token=_useStore2.$app.token;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/React.createElement(OrganizationCardWrapper,{onClick:containerPath},currentProfile&&currentProfile.slug_name!==slug_name&&token&&subscribed&&/*#__PURE__*/React.createElement(SubscribeButton,null,!subscribed?/*#__PURE__*/React.createElement(Text,{onClick:function onClick(){return subscribe({slug_name:slug_name,name:name});}},t('subscribe')):/*#__PURE__*/React.createElement(Text,{style:{color:'#000'}},t('subscribed'))),/*#__PURE__*/React.createElement(BackgroundImage,{src:backgroundImage?backgroundImage:defaultImage,alt:backgroundImage}),/*#__PURE__*/React.createElement(OrganizationInfoWrapper,null,/*#__PURE__*/React.createElement(AvatarContainerWrapper,null,/*#__PURE__*/React.createElement(OvalBgSvg,null),/*#__PURE__*/React.createElement(Avatar,{size:32,shape:\"circle\",imgUrl:imgUrl})),/*#__PURE__*/React.createElement(Title,null,name),/*#__PURE__*/React.createElement(Text,{color:\"var(--grey-dwed)\"},category)));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Cards/OrganizationCard/molecules/organization-card.jsx"],"names":["React","useStore","useTranslation","$appModel","OvalBgSvg","Avatar","defaultImage","Text","$accountModel","Title","AvatarContainerWrapper","BackgroundImage","OrganizationCardWrapper","OrganizationInfoWrapper","SubscribeButton","OrganizationCard","backgroundImage","imgUrl","name","category","subscribed","subscribe","slug_name","containerPath","currentProfile","$profiles","token","$app","t","color"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CACA,OAAQC,cAAR,KAA6B,eAA7B,CACA,OAAQC,SAAR,KAAwB,wBAAxB,CACA,OAAQC,SAAR,KAAwB,0BAAxB,CACA,OAAQC,MAAR,KAAqB,iCAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,OAAQC,IAAR,KAAmB,0CAAnB,CACA,OAAQC,aAAR,KAA4B,kCAA5B,CACA,OAAQC,KAAR,KAAoB,2CAApB,CACA,OACIC,sBADJ,CAEIC,eAFJ,CAGIC,uBAHJ,CAIIC,uBAJJ,CAKIC,eALJ,KAMO,UANP,CAQA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAW3B,IATGC,CAAAA,eASH,MATGA,eASH,CARGC,MAQH,MARGA,MAQH,CAPGC,IAOH,MAPGA,IAOH,CANGC,QAMH,MANGA,QAMH,CALGC,UAKH,MALGA,UAKH,CAJGC,SAIH,MAJGA,SAIH,CAHGC,SAGH,MAHGA,SAGH,CAFGC,aAEH,MAFGA,aAEH,CACD,cAAsCtB,QAAQ,CAACO,aAAD,CAA9C,CAAmBgB,cAAnB,WAAOC,SAAP,CAAmBD,cAAnB,CACA,eAAwBvB,QAAQ,CAACE,SAAD,CAAhC,CAAcuB,KAAd,YAAOC,IAAP,CAAcD,KAAd,CACA,oBAAYxB,cAAc,EAA1B,CAAO0B,CAAP,iBAAOA,CAAP,CAEA,mBACI,oBAAC,uBAAD,EAAyB,OAAO,CAAEL,aAAlC,EAEQC,cAAc,EAAIA,cAAc,CAACF,SAAf,GAA6BA,SAA/C,EAA4DI,KAA5D,EAAqEN,UAArE,eACA,oBAAC,eAAD,MAEQ,CAACA,UAAD,cACM,oBAAC,IAAD,EAAM,OAAO,CAAE,yBAAMC,CAAAA,SAAS,CAAC,CAACC,SAAS,CAATA,SAAD,CAAYJ,IAAI,CAAJA,IAAZ,CAAD,CAAf,EAAf,EAAoDU,CAAC,CAAC,WAAD,CAArD,CADN,cAEM,oBAAC,IAAD,EAAM,KAAK,CAAE,CAACC,KAAK,CAAE,MAAR,CAAb,EAA+BD,CAAC,CAAC,YAAD,CAAhC,CAJd,CAHR,cAWI,oBAAC,eAAD,EACI,GAAG,CAAEZ,eAAe,CAAGA,eAAH,CAAqBV,YAD7C,CAEI,GAAG,CAAEU,eAFT,EAXJ,cAeI,oBAAC,uBAAD,mBACI,oBAAC,sBAAD,mBACI,oBAAC,SAAD,MADJ,cAEI,oBAAC,MAAD,EACI,IAAI,CAAE,EADV,CAEI,KAAK,CAAC,QAFV,CAGI,MAAM,CAAEC,MAHZ,EAFJ,CADJ,cASI,oBAAC,KAAD,MAAQC,IAAR,CATJ,cAUI,oBAAC,IAAD,EAAM,KAAK,CAAC,kBAAZ,EAAgCC,QAAhC,CAVJ,CAfJ,CADJ,CA8BH,CA9CM","sourcesContent":["import React from 'react'\nimport {useStore} from 'effector-react'\nimport {useTranslation} from 'react-i18next'\nimport {$appModel} from '../../../../Models/app'\nimport {OvalBgSvg} from '../../../../Icons/OvalBg'\nimport {Avatar} from '../../../../UIComponents/Avatar'\nimport defaultImage from '../../../../Assets/cards/9.png'\nimport {Text} from '../../../../UIComponents/Typography/Text'\nimport {$accountModel} from '../../../../Models/account-model'\nimport {Title} from '../../../../UIComponents/Typography/Title'\nimport {\n    AvatarContainerWrapper,\n    BackgroundImage,\n    OrganizationCardWrapper,\n    OrganizationInfoWrapper,\n    SubscribeButton\n} from '../atoms'\n\nexport const OrganizationCard = (\n    {\n        backgroundImage,\n        imgUrl,\n        name,\n        category,\n        subscribed,\n        subscribe,\n        slug_name,\n        containerPath\n    }\n) => {\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    const {$app: {token}} = useStore($appModel)\n    const {t} = useTranslation()\n    \n    return (\n        <OrganizationCardWrapper onClick={containerPath}>\n            {\n                currentProfile && currentProfile.slug_name !== slug_name && token && subscribed &&\n                <SubscribeButton>\n                    {\n                        !subscribed\n                            ? <Text onClick={() => subscribe({slug_name, name})}>{t('subscribe')}</Text>\n                            : <Text style={{color: '#000'}}>{t('subscribed')}</Text>\n                    }\n                </SubscribeButton>\n            }\n            <BackgroundImage\n                src={backgroundImage ? backgroundImage : defaultImage}\n                alt={backgroundImage}\n            />\n            <OrganizationInfoWrapper>\n                <AvatarContainerWrapper>\n                    <OvalBgSvg/>\n                    <Avatar\n                        size={32}\n                        shape='circle'\n                        imgUrl={imgUrl}\n                    />\n                </AvatarContainerWrapper>\n                <Title>{name}</Title>\n                <Text color='var(--grey-dwed)'>{category}</Text>\n            </OrganizationInfoWrapper>\n        </OrganizationCardWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}