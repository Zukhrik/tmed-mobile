{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useCallback}from'react';import{Col,Row}from'antd';import{useStore}from'effector-react';import{useParams}from'react-router-dom';import{URL_KEYS}from'../../../../Constants';import{$appModel}from'../../../../Models/app';import{INFO_MAT}from'../../../../Constants/app';import{useUrlGenerate}from'../../../../Hooks/org';import{DataWrapper,SpecialistNavLink}from'../style';import{ShortCard,ShortCardSkeleton}from'../../../Cards';import{truncateString}from'../../../../utils/stringUtils';import{generateSkeleton}from'../../../../utils/skeleton-utils';import{$orgModel,orgSpecialistsMount}from'../../../../Models/org-model';var skeleton=generateSkeleton(10);var initialParams={limit:20,offset:0};export var OrgSpecialistList=function OrgSpecialistList(){var _useParams=useParams(),organization=_useParams.organization;var _useStore=useStore($appModel),$device=_useStore.$device;var _useUrlGenerate=useUrlGenerate(),getActive=_useUrlGenerate.getActive,generateUrl=_useUrlGenerate.generateUrl;var _useStore2=useStore($orgModel),_useStore2$$orgSpecia=_useStore2.$orgSpecialistsList,data=_useStore2$$orgSpecia.data,forceLoading=_useStore2$$orgSpecia.forceLoading,result=_useStore2$$orgSpecia.result,loading=_useStore2$$orgSpecia.loading;var handleScroll=useCallback(function(e){if(e.target.scrollLeft+e.target.offsetWidth===e.target.scrollWidth&&!loading&&!!result.next){if(result.next){var _data={organization:organization,params:_objectSpread(_objectSpread({},initialParams),{},{offset:result.nextOffset})};orgSpecialistsMount(_data);}}},[loading,result,organization]);return/*#__PURE__*/React.createElement(DataWrapper,{onScroll:function onScroll(e){return handleScroll(e);}},forceLoading===2&&data.length>0&&data.map(function(item,idx){return/*#__PURE__*/React.createElement(SpecialistNavLink,{key:\"\".concat(idx+1),to:generateUrl(URL_KEYS.SPECIALIST_ID,item.id),isActive:function isActive(){return getActive(URL_KEYS.SPECIALIST_ID,item.id);}},/*#__PURE__*/React.createElement(ShortCard,{textLineClamp:2,direction:\"vertical\",imgUrl:item.user.avatar,name:item.user.full_name,text:truncateString(item.job.name,22),nameSize:$device&&$device===INFO_MAT?3:5,textSize:$device&&$device===INFO_MAT?4:'',imgSize:$device&&$device===INFO_MAT?80:60,active:getActive(URL_KEYS.SPECIALIST_ID,item.id)}));}),$device&&$device===INFO_MAT&&(forceLoading===1||forceLoading===0)&&/*#__PURE__*/React.createElement(Row,{wrap:false,gutter:[24,0]},skeleton.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(ShortCardSkeleton,{size:80,nameSize:24,textSize:32,direction:\"vertical\"}));})));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OrgSpecialistList/index.jsx"],"names":["React","useCallback","Col","Row","useStore","useParams","URL_KEYS","$appModel","INFO_MAT","useUrlGenerate","DataWrapper","SpecialistNavLink","ShortCard","ShortCardSkeleton","truncateString","generateSkeleton","$orgModel","orgSpecialistsMount","skeleton","initialParams","limit","offset","OrgSpecialistList","organization","$device","getActive","generateUrl","$orgSpecialistsList","data","forceLoading","result","loading","handleScroll","e","target","scrollLeft","offsetWidth","scrollWidth","next","params","nextOffset","length","map","item","idx","SPECIALIST_ID","id","user","avatar","full_name","job","name"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {Col, Row} from 'antd'\r\nimport {useStore} from 'effector-react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {URL_KEYS} from '../../../../Constants'\r\nimport {$appModel} from '../../../../Models/app'\r\nimport {INFO_MAT} from '../../../../Constants/app'\r\nimport {useUrlGenerate} from '../../../../Hooks/org'\r\nimport {DataWrapper, SpecialistNavLink} from '../style'\r\nimport {ShortCard, ShortCardSkeleton} from '../../../Cards'\r\nimport {truncateString} from '../../../../utils/stringUtils'\r\nimport {generateSkeleton} from '../../../../utils/skeleton-utils'\r\nimport {$orgModel, orgSpecialistsMount} from '../../../../Models/org-model'\r\n\r\nconst skeleton = generateSkeleton(10)\r\nconst initialParams = {\r\n    limit: 20,\r\n    offset: 0\r\n}\r\nexport const OrgSpecialistList = () => {\r\n    const {organization} = useParams()\r\n    const {$device} = useStore($appModel)\r\n    const {getActive, generateUrl} = useUrlGenerate()\r\n    const {$orgSpecialistsList: {data, forceLoading, result, loading}} = useStore($orgModel)\r\n    \r\n    const handleScroll = useCallback((e) => {\r\n        if (e.target.scrollLeft + e.target.offsetWidth === e.target.scrollWidth && !loading && !!result.next) {\r\n            if (result.next) {\r\n                const data = {\r\n                    organization: organization,\r\n                    params: {\r\n                        ...initialParams,\r\n                        offset: result.nextOffset\r\n                    }\r\n                }\r\n                \r\n                orgSpecialistsMount(data)\r\n            }\r\n        }\r\n    }, [loading, result, organization])\r\n    \r\n    \r\n    return (\r\n        <DataWrapper onScroll={(e) => handleScroll(e)}>\r\n            {\r\n                forceLoading === 2 && data.length > 0 && data.map((item, idx) => (\r\n                    <SpecialistNavLink\r\n                        key={`${idx + 1}`}\r\n                        to={generateUrl(URL_KEYS.SPECIALIST_ID, item.id)}\r\n                        isActive={() => getActive(URL_KEYS.SPECIALIST_ID, item.id)}\r\n                    >\r\n                        <ShortCard\r\n                            textLineClamp={2}\r\n                            direction='vertical'\r\n                            imgUrl={item.user.avatar}\r\n                            name={item.user.full_name}\r\n                            text={truncateString(item.job.name, 22)}\r\n                            nameSize={$device && $device === INFO_MAT ? 3 : 5}\r\n                            textSize={$device && $device === INFO_MAT ? 4 : ''}\r\n                            imgSize={$device && $device === INFO_MAT ? 80 : 60}\r\n                            active={getActive(URL_KEYS.SPECIALIST_ID, item.id)}\r\n                        />\r\n                    </SpecialistNavLink>\r\n                ))\r\n            }\r\n            {\r\n                $device && $device === INFO_MAT && (forceLoading === 1 || forceLoading === 0) && (\r\n                    <Row wrap={false} gutter={[24, 0]}>\r\n                        {\r\n                            skeleton.map((item, idx) => (\r\n                                <Col\r\n                                    key={`${idx + 1}`}\r\n                                >\r\n                                    <ShortCardSkeleton\r\n                                        size={80}\r\n                                        nameSize={24}\r\n                                        textSize={32}\r\n                                        direction='vertical'\r\n                                    />\r\n                                </Col>\r\n                            ))\r\n                        }\r\n                    </Row>\r\n                )\r\n            }\r\n        </DataWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}