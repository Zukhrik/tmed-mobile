{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Chat/MessagesHeader/index.jsx\";\nimport React, { useCallback } from 'react';\nimport { MessagesHeaderContainer, MessagesHeaderRow } from '../style';\nimport { Col } from 'antd';\nimport { IconBox } from '../../../UIComponents/GlobalStyles';\nimport { ArrowIosLeftSvg } from '../../../Icons/Arrow';\nimport { ShortCard } from '../../Cards';\nimport { $chatModel, allChatsMount, chatForceLoading } from '../../../Models/chat-model';\nimport { URL_VALUES } from '../../../Constants';\nimport { useStore } from 'effector-react';\nimport { useHistory } from 'react-router-dom';\nexport const MessagesHeader = ({\n  avatar,\n  name,\n  text\n}) => {\n  const {\n    push\n  } = useHistory();\n  const {\n    $allChatList: {\n      userChatForceLoading\n    }\n  } = useStore($chatModel);\n  const onBack = useCallback(() => {\n    if (!userChatForceLoading) {\n      chatForceLoading(URL_VALUES.ALL_CHATS);\n      const data = {\n        clear: true,\n        params: {\n          limit: 10,\n          offset: 0,\n          rtype: 'user'\n        }\n      };\n      allChatsMount(data);\n    }\n\n    push('/chat');\n  }, [push, userChatForceLoading]);\n  return /*#__PURE__*/React.createElement(MessagesHeaderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MessagesHeaderRow, {\n    gutter: 6,\n    wrap: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconBox, {\n    onClick: onBack,\n    color: \"var(--dark-dwed)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ArrowIosLeftSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ShortCard, {\n    name: name,\n    imgUrl: avatar,\n    text: text,\n    truncateLength: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Chat/MessagesHeader/index.jsx"],"names":["React","useCallback","MessagesHeaderContainer","MessagesHeaderRow","Col","IconBox","ArrowIosLeftSvg","ShortCard","$chatModel","allChatsMount","chatForceLoading","URL_VALUES","useStore","useHistory","MessagesHeader","avatar","name","text","push","$allChatList","userChatForceLoading","onBack","ALL_CHATS","data","clear","params","limit","offset","rtype"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,uBAAR,EAAiCC,iBAAjC,QAAyD,UAAzD;AACA,SAAQC,GAAR,QAAkB,MAAlB;AACA,SAAQC,OAAR,QAAsB,oCAAtB;AACA,SAAQC,eAAR,QAA8B,sBAA9B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,UAAR,EAAoBC,aAApB,EAAmCC,gBAAnC,QAA0D,4BAA1D;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,CAAD,KAA0B;AACpD,QAAM;AAACC,IAAAA;AAAD,MAASL,UAAU,EAAzB;AACA,QAAM;AAACM,IAAAA,YAAY,EAAE;AAACC,MAAAA;AAAD;AAAf,MAAyCR,QAAQ,CAACJ,UAAD,CAAvD;AACA,QAAMa,MAAM,GAAGpB,WAAW,CAAC,MAAM;AAC7B,QAAI,CAACmB,oBAAL,EAA2B;AACvBV,MAAAA,gBAAgB,CAACC,UAAU,CAACW,SAAZ,CAAhB;AACA,YAAMC,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAE,IADE;AAETC,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,EADH;AAEJC,UAAAA,MAAM,EAAE,CAFJ;AAGJC,UAAAA,KAAK,EAAE;AAHH;AAFC,OAAb;AAQAnB,MAAAA,aAAa,CAACc,IAAD,CAAb;AACH;;AAEDL,IAAAA,IAAI,CAAC,OAAD,CAAJ;AACH,GAfyB,EAevB,CAACA,IAAD,EAAOE,oBAAP,CAfuB,CAA1B;AAiBA,sBACI,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AAAmB,IAAA,MAAM,EAAE,CAA3B;AAA8B,IAAA,IAAI,EAAE,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEC,MAAlB;AAA0B,IAAA,KAAK,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,eAMI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAEL,IADV;AAEI,IAAA,MAAM,EAAED,MAFZ;AAGI,IAAA,IAAI,EAAEE,IAHV;AAII,IAAA,cAAc,EAAE,EAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CADJ,CADJ;AAmBH,CAvCM","sourcesContent":["import React, {useCallback} from 'react'\nimport {MessagesHeaderContainer, MessagesHeaderRow} from '../style'\nimport {Col} from 'antd'\nimport {IconBox} from '../../../UIComponents/GlobalStyles'\nimport {ArrowIosLeftSvg} from '../../../Icons/Arrow'\nimport {ShortCard} from '../../Cards'\nimport {$chatModel, allChatsMount, chatForceLoading} from '../../../Models/chat-model'\nimport {URL_VALUES} from '../../../Constants'\nimport {useStore} from 'effector-react'\nimport {useHistory} from 'react-router-dom'\n\nexport const MessagesHeader = ({avatar, name, text}) => {\n    const {push} = useHistory()\n    const {$allChatList: {userChatForceLoading}} = useStore($chatModel)\n    const onBack = useCallback(() => {\n        if (!userChatForceLoading) {\n            chatForceLoading(URL_VALUES.ALL_CHATS)\n            const data = {\n                clear: true,\n                params: {\n                    limit: 10,\n                    offset: 0,\n                    rtype: 'user'\n                }\n            }\n            allChatsMount(data)\n        }\n\n        push('/chat')\n    }, [push, userChatForceLoading])\n\n    return (\n        <MessagesHeaderContainer>\n            <MessagesHeaderRow gutter={6} wrap={false}>\n                <Col span='auto'>\n                    <IconBox onClick={onBack} color='var(--dark-dwed)'>\n                        <ArrowIosLeftSvg/>\n                    </IconBox>\n                </Col>\n                <Col span='auto'>\n                    <ShortCard\n                        name={name}\n                        imgUrl={avatar}\n                        text={text}\n                        truncateLength={24}\n                    />\n                </Col>\n            </MessagesHeaderRow>\n        </MessagesHeaderContainer>\n    )\n}"]},"metadata":{},"sourceType":"module"}