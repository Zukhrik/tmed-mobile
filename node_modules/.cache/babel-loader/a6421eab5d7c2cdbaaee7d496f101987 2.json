{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OverlaySpecialists/index.jsx\";\nimport React, { useState } from 'react';\nimport { OfferGroupWrapper, OfferingGroupSearchForm, SpecialistNavLink } from '../style';\nimport { SearchSvg } from '../../../../Icons/Search';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { Col, Row } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { useStore } from 'effector-react';\nimport { $orgModel } from '../../../../Models/org-model';\nimport { OrgSpecialistCard } from '../../../Cards';\nimport { URL_KEYS } from '../../../../Constants';\nimport { useUrlGenerate } from '../../../../Hooks/org';\nexport const OverlaySpecialists = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    getActive,\n    generateUrl\n  } = useUrlGenerate();\n  const [search, setSearch] = useState('');\n  const {\n    $orgSpecialistsList: {\n      data,\n      result,\n      loading\n    }\n  } = useStore($orgModel);\n  return /*#__PURE__*/React.createElement(OfferGroupWrapper, {\n    id: \"scrollableDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OfferingGroupSearchForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: `${t('search')}...`,\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SearchSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(InfiniteScroll // next={loadMore}\n  , {\n    dataLength: (result === null || result === void 0 ? void 0 : result.nextOffset) || 20,\n    hasMore: !loading && !!(result === null || result === void 0 ? void 0 : result.next),\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    style: {\n      overflow: 'hidden',\n      padding: '50px 0'\n    },\n    scrollableTarget: \"scrollableDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [12, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, data && data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    className: \"centered\",\n    key: `${idx + 1}`,\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SpecialistNavLink, {\n    key: `${idx + 1}`,\n    to: generateUrl(URL_KEYS.SPECIALIST_ID, item.id),\n    isActive: () => getActive(URL_KEYS.SPECIALIST_ID, item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(OrgSpecialistCard, {\n    name: item.user.full_name,\n    src: item.user.avatar,\n    category: item.job.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 37\n    }\n  })))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OverlaySpecialists/index.jsx"],"names":["React","useState","OfferGroupWrapper","OfferingGroupSearchForm","SpecialistNavLink","SearchSvg","InfiniteScroll","Col","Row","useTranslation","useStore","$orgModel","OrgSpecialistCard","URL_KEYS","useUrlGenerate","OverlaySpecialists","t","getActive","generateUrl","search","setSearch","$orgSpecialistsList","data","result","loading","e","target","value","nextOffset","next","overflow","padding","map","item","idx","SPECIALIST_ID","id","user","full_name","avatar","job","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,iBAAR,EAA2BC,uBAA3B,EAAoDC,iBAApD,QAA4E,UAA5E;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,MAAvB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,SAAR,QAAwB,8BAAxB;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,QAAR,QAAuB,uBAAvB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACpC,QAAM;AAACC,IAAAA;AAAD,MAAMP,cAAc,EAA1B;AACA,QAAM;AAACQ,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA2BJ,cAAc,EAA/C;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAACoB,IAAAA,mBAAmB,EAAE;AAACC,MAAAA,IAAD;AAAOC,MAAAA,MAAP;AAAeC,MAAAA;AAAf;AAAtB,MAAiDd,QAAQ,CAACC,SAAD,CAA/D;AAEA,sBACI,oBAAC,iBAAD;AAAmB,IAAA,EAAE,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,WAAW,EAAG,GAAEK,CAAC,CAAC,QAAD,CAAW,KADhC;AAEI,IAAA,KAAK,EAAEG,MAFX;AAGI,IAAA,QAAQ,EAAGM,CAAD,IAAOL,SAAS,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,eASI,oBAAC,cAAD,CACI;AADJ;AAEI,IAAA,UAAU,EAAE,CAAAJ,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEK,UAAR,KAAsB,EAFtC;AAGI,IAAA,OAAO,EAAE,CAACJ,OAAD,IAAY,CAAC,EAACD,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEM,IAAT,CAH1B;AAII,IAAA,MAAM,eAAE,uDAJZ;AAKI,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,QAAX;AAAqBC,MAAAA,OAAO,EAAE;AAA9B,KALX;AAMI,IAAA,gBAAgB,EAAC,eANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQT,IAAI,IAAIA,IAAI,CAACU,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACb,oBAAC,GAAD;AACI,IAAA,SAAS,EAAC,UADd;AAEI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EAFpB;AAEuB,IAAA,IAAI,EAAE,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,iBAAD;AACI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EADpB;AAEI,IAAA,EAAE,EAAEhB,WAAW,CAACL,QAAQ,CAACsB,aAAV,EAAyBF,IAAI,CAACG,EAA9B,CAFnB;AAGI,IAAA,QAAQ,EAAE,MAAMnB,SAAS,CAACJ,QAAQ,CAACsB,aAAV,EAAyBF,IAAI,CAACG,EAA9B,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,iBAAD;AACI,IAAA,IAAI,EAAEH,IAAI,CAACI,IAAL,CAAUC,SADpB;AAEI,IAAA,GAAG,EAAEL,IAAI,CAACI,IAAL,CAAUE,MAFnB;AAGI,IAAA,QAAQ,EAAEN,IAAI,CAACO,GAAL,CAASC,IAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAJJ,CADI,CAFhB,CARJ,CATJ,CADJ;AA2CH,CAjDM","sourcesContent":["import React, {useState} from 'react'\nimport {OfferGroupWrapper, OfferingGroupSearchForm, SpecialistNavLink} from '../style'\nimport {SearchSvg} from '../../../../Icons/Search'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport {Col, Row} from 'antd'\nimport {useTranslation} from 'react-i18next'\nimport {useStore} from 'effector-react'\nimport {$orgModel} from '../../../../Models/org-model'\nimport {OrgSpecialistCard} from '../../../Cards'\nimport {URL_KEYS} from '../../../../Constants'\nimport {useUrlGenerate} from '../../../../Hooks/org'\n\nexport const OverlaySpecialists = () => {\n    const {t} = useTranslation()\n    const {getActive, generateUrl} = useUrlGenerate()\n    const [search, setSearch] = useState('')\n    const {$orgSpecialistsList: {data, result, loading}} = useStore($orgModel)\n    \n    return (\n        <OfferGroupWrapper id='scrollableDiv'>\n            <OfferingGroupSearchForm>\n                <input\n                    placeholder={`${t('search')}...`}\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n                <SearchSvg/>\n            </OfferingGroupSearchForm>\n            <InfiniteScroll\n                // next={loadMore}\n                dataLength={result?.nextOffset || 20}\n                hasMore={!loading && !!result?.next}\n                loader={<>...loading</>}\n                style={{overflow: 'hidden', padding: '50px 0'}}\n                scrollableTarget='scrollableDiv'\n            >\n                <Row gutter={[12, 12]}>\n                    {\n                        data && data.map((item, idx) => (\n                            <Col\n                                className='centered'\n                                key={`${idx + 1}`} span={8}\n                            >\n                                <SpecialistNavLink\n                                    key={`${idx + 1}`}\n                                    to={generateUrl(URL_KEYS.SPECIALIST_ID, item.id)}\n                                    isActive={() => getActive(URL_KEYS.SPECIALIST_ID, item.id)}\n                                >\n                                    <OrgSpecialistCard\n                                        name={item.user.full_name}\n                                        src={item.user.avatar}\n                                        category={item.job.name}\n                                    />\n                                </SpecialistNavLink>\n                            </Col>\n                        ))\n                    }\n                </Row>\n            </InfiniteScroll>\n        </OfferGroupWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}