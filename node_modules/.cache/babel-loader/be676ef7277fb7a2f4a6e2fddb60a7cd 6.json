{"ast":null,"code":"import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState}from'react';import{Col,Row}from'antd';import{langData}from'../../../data';import{LISTS}from'../../../Constants';import{useParams}from'react-router-dom';import{useGoBack}from'../../../Hooks/app';import{useTranslation}from'react-i18next';import{AboutAccountWrapper}from'../atoms';import{ProfileSvg}from'../../../Icons/People';import{Modal}from'../../../UIComponents/Modal';import{Button}from'../../../UIComponents/Button';import{Avatar}from'../../../UIComponents/Avatar';import{useProfileInfo}from'../../../Hooks/account';import{ArrowIosBottomSvg}from'../../../Icons/Arrow';import{InputUI}from'../../../UIComponents/mu-inputs';import{FixedHeader}from'../../../Components/FixedHeader';import{SelectionList}from'../../../Components/SelectionList';import{IconBox,RootContent}from'../../../UIComponents/GlobalStyles';export var AccountInformationPage=function AccountInformationPage(){var _formik$values,_formik$values2,_formik$values3,_formik$values4,_formik$values5,_formik$values6,_formik$values7,_formik$values7$categ,_formik$values8,_formik$values8$regio;var _useProfileInfo=useProfileInfo(),formik=_useProfileInfo.formik;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useParams=useParams(),username=_useParams.username;var _useState=useState(LISTS.USER_CATEGORY),_useState2=_slicedToArray(_useState,2),listType=_useState2[0],setListType=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),modalIsOpen=_useState4[0],setModalIsOpen=_useState4[1];var _useGoBack=useGoBack({pathname:\"/@\".concat(username)}),goBack=_useGoBack.goBack;var getTitle=useCallback(function(){var tmp='';if(listType===LISTS.USER_CATEGORY){tmp='category';}if(listType===LISTS.REGION){tmp='region';}return tmp;},[listType]);var handleClick=function handleClick(listType){setListType(listType);setModalIsOpen(true);};return/*#__PURE__*/React.createElement(RootContent,{paddingTop:50},/*#__PURE__*/React.createElement(Modal,{centered:true,modalIsOpen:modalIsOpen,title:t(\"\".concat(getTitle())),setModalIsOpen:setModalIsOpen,component:/*#__PURE__*/React.createElement(SelectionList,{listType:listType,onClose:function onClose(){return setModalIsOpen(false);},onChange:function onChange(value){return formik.setFieldValue(getTitle(),value);}})}),/*#__PURE__*/React.createElement(FixedHeader,{goBack:goBack,title:t('about_me')}),/*#__PURE__*/React.createElement(AboutAccountWrapper,{onSubmit:formik.handleSubmit},/*#__PURE__*/React.createElement(Row,{gutter:[0,12]},/*#__PURE__*/React.createElement(Col,{span:24,className:\"change-photo\"},(formik===null||formik===void 0?void 0:(_formik$values=formik.values)===null||_formik$values===void 0?void 0:_formik$values.avatar)?/*#__PURE__*/React.createElement(Avatar,{size:96,imgUrl:formik===null||formik===void 0?void 0:(_formik$values2=formik.values)===null||_formik$values2===void 0?void 0:_formik$values2.avatar}):/*#__PURE__*/React.createElement(IconBox,{color:\"var(--grey-dwed)\"},/*#__PURE__*/React.createElement(ProfileSvg,null))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(InputUI,{name:\"name\",disabled:true,label:t('name'),value:formik===null||formik===void 0?void 0:(_formik$values3=formik.values)===null||_formik$values3===void 0?void 0:_formik$values3.name,onChange:function onChange(e){return formik.setFieldValue('name',e.target.value);}})),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(InputUI,{disabled:true,name:\"lastname\",label:t('lastname'),value:formik===null||formik===void 0?void 0:(_formik$values4=formik.values)===null||_formik$values4===void 0?void 0:_formik$values4.lastname,onChange:function onChange(e){return formik.setFieldValue('lastname',e.target.value);}})),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(InputUI,{disabled:true,name:\"surname\",inputType:\"text\",label:t('surname'),value:formik===null||formik===void 0?void 0:(_formik$values5=formik.values)===null||_formik$values5===void 0?void 0:_formik$values5.surname,onChange:function onChange(e){return formik.setFieldValue('surname',e.target.value);}})),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(InputUI,{disabled:true,name:\"date\",inputType:\"date\",value:formik===null||formik===void 0?void 0:(_formik$values6=formik.values)===null||_formik$values6===void 0?void 0:_formik$values6.birthday,label:t('birthday')})),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(InputUI,{name:\"language\",inputType:\"select\",value:formik.values.user_lang,label:t('language'),options:langData,onChange:function onChange(e){return formik.setFieldValue('user_lang',e.target.value);}})),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(InputUI,{name:\"category\",label:t('category'),icon:/*#__PURE__*/React.createElement(ArrowIosBottomSvg,null),value:(formik===null||formik===void 0?void 0:(_formik$values7=formik.values)===null||_formik$values7===void 0?void 0:(_formik$values7$categ=_formik$values7.category)===null||_formik$values7$categ===void 0?void 0:_formik$values7$categ.name)||'',onClick:function onClick(){return handleClick(LISTS.USER_CATEGORY);}})),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(InputUI,{name:\"region\",label:t('region'),icon:/*#__PURE__*/React.createElement(ArrowIosBottomSvg,null),value:(formik===null||formik===void 0?void 0:(_formik$values8=formik.values)===null||_formik$values8===void 0?void 0:(_formik$values8$regio=_formik$values8.region)===null||_formik$values8$regio===void 0?void 0:_formik$values8$regio.name)||'',onClick:function onClick(){return handleClick(LISTS.REGION);}})),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Button,{variant:\"primary\",htmlType:\"submit\"},t('save'))))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/pages/account-information-page.jsx"],"names":["React","useCallback","useState","Col","Row","langData","LISTS","useParams","useGoBack","useTranslation","AboutAccountWrapper","ProfileSvg","Modal","Button","Avatar","useProfileInfo","ArrowIosBottomSvg","InputUI","FixedHeader","SelectionList","IconBox","RootContent","AccountInformationPage","formik","t","username","USER_CATEGORY","listType","setListType","modalIsOpen","setModalIsOpen","pathname","goBack","getTitle","tmp","REGION","handleClick","value","setFieldValue","handleSubmit","values","avatar","name","e","target","lastname","surname","birthday","user_lang","category","region"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react'\nimport {Col, Row} from 'antd'\nimport {langData} from '../../../data'\nimport {LISTS} from '../../../Constants'\nimport {useParams} from 'react-router-dom'\nimport {useGoBack} from '../../../Hooks/app'\nimport {useTranslation} from 'react-i18next'\nimport {AboutAccountWrapper} from '../atoms'\nimport {ProfileSvg} from '../../../Icons/People'\nimport {Modal} from '../../../UIComponents/Modal'\nimport {Button} from '../../../UIComponents/Button'\nimport {Avatar} from '../../../UIComponents/Avatar'\nimport {useProfileInfo} from '../../../Hooks/account'\nimport {ArrowIosBottomSvg} from '../../../Icons/Arrow'\nimport {InputUI} from '../../../UIComponents/mu-inputs'\nimport {FixedHeader} from '../../../Components/FixedHeader'\nimport {SelectionList} from '../../../Components/SelectionList'\nimport {IconBox, RootContent} from '../../../UIComponents/GlobalStyles'\n\n\nexport const AccountInformationPage = () => {\n    const {formik} = useProfileInfo()\n    const {t} = useTranslation()\n    const {username} = useParams()\n    const [listType, setListType] = useState(LISTS.USER_CATEGORY)\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    const {goBack} = useGoBack({pathname: `/@${username}`})\n    \n    const getTitle = useCallback(() => {\n        let tmp = ''\n        if (listType === LISTS.USER_CATEGORY) {\n            tmp = 'category'\n        }\n        \n        if (listType === LISTS.REGION) {\n            tmp = 'region'\n        }\n        \n        return tmp\n    }, [listType])\n    \n    const handleClick = (listType) => {\n        setListType(listType)\n        setModalIsOpen(true)\n    }\n    \n    \n    return (\n        <RootContent paddingTop={50}>\n            <Modal\n                centered\n                modalIsOpen={modalIsOpen}\n                title={t(`${getTitle()}`)}\n                setModalIsOpen={setModalIsOpen}\n                component={\n                    <SelectionList\n                        listType={listType}\n                        onClose={() => setModalIsOpen(false)}\n                        onChange={(value) => formik.setFieldValue(getTitle(), value)}\n                    />\n                }\n            />\n            <FixedHeader\n                goBack={goBack}\n                title={t('about_me')}\n            />\n            <AboutAccountWrapper onSubmit={formik.handleSubmit}>\n                <Row gutter={[0, 12]}>\n                    <Col span={24} className='change-photo'>\n                        {\n                            formik?.values?.avatar\n                                ? (\n                                    <Avatar\n                                        size={96}\n                                        imgUrl={formik?.values?.avatar}\n                                    />\n                                ) : (\n                                    <IconBox color='var(--grey-dwed)'>\n                                        <ProfileSvg/>\n                                    </IconBox>\n                                )\n                        }\n                        {/*<Text color='var(--primary-dwed)'>*/}\n                        {/*    {t('change_profile_photo')}*/}\n                        {/*</Text>*/}\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            name='name'\n                            disabled\n                            label={t('name')}\n                            value={formik?.values?.name}\n                            onChange={(e) => formik.setFieldValue('name', e.target.value)}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            disabled\n                            name='lastname'\n                            label={t('lastname')}\n                            value={formik?.values?.lastname}\n                            onChange={(e) => formik.setFieldValue('lastname', e.target.value)}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            disabled\n                            name='surname'\n                            inputType='text'\n                            label={t('surname')}\n                            value={formik?.values?.surname}\n                            onChange={(e) => formik.setFieldValue('surname', e.target.value)}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            disabled\n                            name='date'\n                            inputType='date'\n                            value={formik?.values?.birthday}\n                            label={t('birthday')}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            name='language'\n                            inputType='select'\n                            value={formik.values.user_lang}\n                            label={t('language')}\n                            options={langData}\n                            onChange={(e) => formik.setFieldValue('user_lang', e.target.value)}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            name='category'\n                            label={t('category')}\n                            icon={<ArrowIosBottomSvg/>}\n                            value={formik?.values?.category?.name || ''}\n                            onClick={() => handleClick(LISTS.USER_CATEGORY)}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <InputUI\n                            name='region'\n                            label={t('region')}\n                            icon={<ArrowIosBottomSvg/>}\n                            value={formik?.values?.region?.name || ''}\n                            onClick={() => handleClick(LISTS.REGION)}\n                        />\n                    </Col>\n                    <Col span={24}>\n                        <Button\n                            variant='primary'\n                            htmlType='submit'\n                        >\n                            {t('save')}\n                        </Button>\n                    </Col>\n                </Row>\n            </AboutAccountWrapper>\n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}