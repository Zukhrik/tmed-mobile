{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _createForOfIteratorHelper from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import{PERMISSIONS}from'../../Constants';export var getAccountInfo=function getAccountInfo(data,slug_name){return{slug_name:slug_name,type:'user',avatar:data.avatar,region:data.region,status:data.status,url:\"/@\".concat(slug_name),currency:data.currency,category:data.main_cat,perms:[PERMISSIONS.GRAND],isOfficial:data.is_official,name:\"\".concat(data.lastname,\" \").concat(data.name)};};export var getLinkedUsers=function getLinkedUsers(data){var tmp=[];if(data){var _iterator=_createForOfIteratorHelper(data),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var user=_step.value;tmp.push({type:'user',region:user.region,avatar:user.avatar,status:user.status,name:user.full_name,category:user.main_cat,currency:user.currency,slug_name:user.username,isOfficial:user.is_official,url:\"/@\".concat(user.username),perms:[PERMISSIONS.GRAND]});}}catch(err){_iterator.e(err);}finally{_iterator.f();}}return tmp;};export var getSpecOrganizations=function getSpecOrganizations(data,accountInfo){var tmp=[];if(data){var orgSpecs=data.filter(function(item){return item.perms.length>0;});var _iterator2=_createForOfIteratorHelper(orgSpecs),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var orgSpec=_step2.value;tmp.push({type:'organization',name:orgSpec.org.name,avatar:orgSpec.org.logo,region:orgSpec.org.region,status:orgSpec.org.status,category:orgSpec.org.category,currency:orgSpec.org.currency,url:\"/\".concat(orgSpec.org.slug_name),slug_name:orgSpec.org.slug_name,isOfficial:orgSpec.org.is_official,perms:orgSpec.perms.map(function(item){return item.permission;})});}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}return tmp;};export var getOrganizations=function getOrganizations(data,accountInfo){var tmp=[];if(data){var organizations=data.filter(function(item){return item.status===5;});var _iterator3=_createForOfIteratorHelper(organizations),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var org=_step3.value;tmp.push({name:org.name,avatar:org.logo,region:org.region,status:org.status,type:'organization',category:org.category,url:\"/\".concat(org.slug_name),slug_name:org.slug_name,perms:[PERMISSIONS.GRAND],isOfficial:org.is_official,currency:accountInfo.currency});}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}return tmp;};export var getSpecialisms=function getSpecialisms(data,slug_name){var tmp=[];if(data){var _iterator4=_createForOfIteratorHelper(data),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var spec=_step4.value;tmp.push({id:spec.id,name:spec.org.name,url:\"/@\".concat(slug_name),avatar:spec.org.logo,category:spec.job.name});}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}}return tmp;};export var getUpdated=function getUpdated(data,slug_name,newData){var idx=data.findIndex(function(item){return item.slug_name===slug_name;});var item=data.find(function(item){return item.slug_name===slug_name;});return[].concat(_toConsumableArray(data.slice(0,idx)),[_objectSpread(_objectSpread({},item),newData)],_toConsumableArray(data.slice(idx+1)));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Models/account-model/helper.js"],"names":["PERMISSIONS","getAccountInfo","data","slug_name","type","avatar","region","status","url","currency","category","main_cat","perms","GRAND","isOfficial","is_official","name","lastname","getLinkedUsers","tmp","user","push","full_name","username","getSpecOrganizations","accountInfo","orgSpecs","filter","item","length","orgSpec","org","logo","map","permission","getOrganizations","organizations","getSpecialisms","spec","id","job","getUpdated","newData","idx","findIndex","find","slice"],"mappings":"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","sourcesContent":["import {PERMISSIONS} from '../../Constants';\r\n\r\nexport const getAccountInfo = (data, slug_name) => ({\r\n  slug_name,\r\n  type: 'user',\r\n  avatar: data.avatar,\r\n  region: data.region,\r\n  status: data.status,\r\n  url: `/@${slug_name}`,\r\n  currency: data.currency,\r\n  category: data.main_cat,\r\n  perms: [PERMISSIONS.GRAND],\r\n  isOfficial: data.is_official,\r\n  name: `${data.lastname} ${data.name}`,\r\n})\r\n\r\nexport const getLinkedUsers = (data) => {\r\n  const tmp = []\r\n  if (data) {\r\n    for (let user of data) {\r\n      tmp.push({\r\n        type: 'user',\r\n        region: user.region,\r\n        avatar: user.avatar,\r\n        status: user.status,\r\n        name: user.full_name,\r\n        category: user.main_cat,\r\n        currency: user.currency,\r\n        slug_name: user.username,\r\n        isOfficial: user.is_official,\r\n        url: `/@${user.username}`,\r\n        perms: [PERMISSIONS.GRAND],\r\n      })\r\n    }\r\n  }\r\n  return tmp\r\n}\r\n\r\nexport const getSpecOrganizations = (data, accountInfo) => {\r\n  const tmp = []\r\n\r\n  if (data) {\r\n    const orgSpecs = data.filter(item => item.perms.length > 0)\r\n    for (let orgSpec of orgSpecs) {\r\n      tmp.push({\r\n        type: 'organization',\r\n        name: orgSpec.org.name,\r\n        avatar: orgSpec.org.logo,\r\n        region: orgSpec.org.region,\r\n        status: orgSpec.org.status,\r\n        category: orgSpec.org.category,\r\n        currency: orgSpec.org.currency,\r\n        url: `/${orgSpec.org.slug_name}`,\r\n        slug_name: orgSpec.org.slug_name,\r\n        isOfficial: orgSpec.org.is_official,\r\n        perms: orgSpec.perms.map(item => item.permission),\r\n      })\r\n    }\r\n  }\r\n\r\n  return tmp\r\n}\r\n\r\nexport const getOrganizations = (data, accountInfo) => {\r\n  const tmp = []\r\n  if (data) {\r\n    const organizations = data.filter(item => item.status === 5)\r\n    for (let org of organizations) {\r\n      tmp.push({\r\n        name: org.name,\r\n        avatar: org.logo,\r\n        region: org.region,\r\n        status: org.status,\r\n        type: 'organization',\r\n        category: org.category,\r\n        url: `/${org.slug_name}`,\r\n        slug_name: org.slug_name,\r\n        perms: [PERMISSIONS.GRAND],\r\n        isOfficial: org.is_official,\r\n        currency: accountInfo.currency,\r\n      })\r\n    }\r\n  }\r\n  return tmp\r\n}\r\n\r\nexport const getSpecialisms = (data, slug_name) => {\r\n  const tmp = []\r\n  if (data) {\r\n    for (let spec of data) {\r\n      tmp.push({\r\n        id: spec.id,\r\n        name: spec.org.name,\r\n        url: `/@${slug_name}`,\r\n        avatar: spec.org.logo,\r\n        category: spec.job.name,\r\n      })\r\n    }\r\n  }\r\n\r\n  return tmp\r\n}\r\n\r\nexport const getUpdated = (data, slug_name, newData) => {\r\n  const idx = data.findIndex(item => item.slug_name === slug_name)\r\n  const item = data.find(item => item.slug_name === slug_name)\r\n\r\n  return [...data.slice(0, idx), {...item, ...newData}, ...data.slice(idx + 1)]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}