{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/Checkout/InfoCard/MeetTimeInfo.jsx\";\nimport React, { useCallback } from 'react';\nimport moment from 'moment';\nimport { Tooltip } from 'antd';\nimport { URL_KEYS } from '../../../Constants';\nimport { useLocation } from 'react-router-dom';\nimport { useUrlParams } from '../../../Hooks/app';\nimport { MeetTimeItem, MeetTimeUIBox } from './style';\nimport { Title } from '../../../UIComponents/Typography/Title';\nexport const MeetTimeInfo = ({\n  requestData,\n  dateItem,\n  meetDate,\n  activeDay\n}) => {\n  var _requestData$dateItem, _requestData$dateItem2, _requestData$dateItem3, _requestData$dateItem4;\n\n  const {\n    pathname\n  } = useLocation();\n  const time = moment(dateItem.dateTime).format('HH:mm');\n  const {\n    urlData\n  } = useUrlParams();\n  const specId = urlData[URL_KEYS.SPECIALIST_ID];\n  const generateMeetTimeLink = useCallback(time => {\n    const url = [];\n\n    if (specId) {\n      url.push(`${URL_KEYS.SPECIALIST_ID}=${specId}`);\n    }\n\n    url.push(`${URL_KEYS.DATE}=${activeDay}`);\n    url.push(`${URL_KEYS.TIME}=${time}`);\n    return {\n      pathname,\n      search: url.join('&')\n    };\n  }, [activeDay, pathname, specId]);\n  const currentTime = new Date().getTime();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, requestData[dateItem.dateTime] ? /*#__PURE__*/React.createElement(React.Fragment, null, dateItem.dateTime > currentTime && /*#__PURE__*/React.createElement(Tooltip, {\n    title: `${(_requestData$dateItem = requestData[dateItem.dateTime]) === null || _requestData$dateItem === void 0 ? void 0 : (_requestData$dateItem2 = _requestData$dateItem.user) === null || _requestData$dateItem2 === void 0 ? void 0 : _requestData$dateItem2.full_name} ${dateItem.strDate}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MeetTimeUIBox, {\n    imgUrl: (_requestData$dateItem3 = requestData[dateItem.dateTime]) === null || _requestData$dateItem3 === void 0 ? void 0 : (_requestData$dateItem4 = _requestData$dateItem3.user) === null || _requestData$dateItem4 === void 0 ? void 0 : _requestData$dateItem4.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 41\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, dateItem.dateTime > currentTime && /*#__PURE__*/React.createElement(MeetTimeItem, {\n    to: generateMeetTimeLink(time),\n    isActive: () => meetDate && meetDate === dateItem.dateTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    weight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 41\n    }\n  }, time))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Views/Checkout/InfoCard/MeetTimeInfo.jsx"],"names":["React","useCallback","moment","Tooltip","URL_KEYS","useLocation","useUrlParams","MeetTimeItem","MeetTimeUIBox","Title","MeetTimeInfo","requestData","dateItem","meetDate","activeDay","pathname","time","dateTime","format","urlData","specId","SPECIALIST_ID","generateMeetTimeLink","url","push","DATE","TIME","search","join","currentTime","Date","getTime","user","full_name","strDate","avatar"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,OAAR,QAAsB,MAAtB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AACA,SAAQC,YAAR,EAAsBC,aAAtB,QAA0C,SAA1C;AACA,SAAQC,KAAR,QAAoB,wCAApB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA;AAAlC,CAAD,KAAkD;AAAA;;AAC1E,QAAM;AAACC,IAAAA;AAAD,MAAaV,WAAW,EAA9B;AACA,QAAMW,IAAI,GAAGd,MAAM,CAACU,QAAQ,CAACK,QAAV,CAAN,CAA0BC,MAA1B,CAAiC,OAAjC,CAAb;AACA,QAAM;AAACC,IAAAA;AAAD,MAAYb,YAAY,EAA9B;AACA,QAAMc,MAAM,GAAGD,OAAO,CAACf,QAAQ,CAACiB,aAAV,CAAtB;AAEA,QAAMC,oBAAoB,GAAGrB,WAAW,CAAEe,IAAD,IAAU;AAC/C,UAAMO,GAAG,GAAG,EAAZ;;AACA,QAAIH,MAAJ,EAAY;AACRG,MAAAA,GAAG,CAACC,IAAJ,CAAU,GAAEpB,QAAQ,CAACiB,aAAc,IAAGD,MAAO,EAA7C;AACH;;AACDG,IAAAA,GAAG,CAACC,IAAJ,CAAU,GAAEpB,QAAQ,CAACqB,IAAK,IAAGX,SAAU,EAAvC;AACAS,IAAAA,GAAG,CAACC,IAAJ,CAAU,GAAEpB,QAAQ,CAACsB,IAAK,IAAGV,IAAK,EAAlC;AACA,WAAO;AACHD,MAAAA,QADG;AAEHY,MAAAA,MAAM,EAAEJ,GAAG,CAACK,IAAJ,CAAS,GAAT;AAFL,KAAP;AAIH,GAXuC,EAWrC,CAACd,SAAD,EAAYC,QAAZ,EAAsBK,MAAtB,CAXqC,CAAxC;AAaA,QAAMS,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AAEA,sBACI,0CAEQpB,WAAW,CAACC,QAAQ,CAACK,QAAV,CAAX,gBAEQ,0CAEQL,QAAQ,CAACK,QAAT,GAAoBY,WAApB,iBAEI,oBAAC,OAAD;AACI,IAAA,KAAK,EAAG,GAAD,yBAAGlB,WAAW,CAACC,QAAQ,CAACK,QAAV,CAAd,oFAAG,sBAAgCe,IAAnC,2DAAG,uBAAsCC,SAAU,IAAGrB,QAAQ,CAACsB,OAAQ,EADlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,aAAD;AAAe,IAAA,MAAM,4BAAEvB,WAAW,CAACC,QAAQ,CAACK,QAAV,CAAb,qFAAE,uBAAgCe,IAAlC,2DAAE,uBAAsCG,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAJZ,CAFR,gBAeQ,0CAEQvB,QAAQ,CAACK,QAAT,GAAoBY,WAApB,iBAEI,oBAAC,YAAD;AACI,IAAA,EAAE,EAAEP,oBAAoB,CAACN,IAAD,CAD5B;AAEI,IAAA,QAAQ,EAAE,MAAMH,QAAQ,IAAIA,QAAQ,KAAKD,QAAQ,CAACK,QAFtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IADL,CAJJ,CAJZ,CAjBhB,CADJ;AAsCH,CA3DM","sourcesContent":["import React, {useCallback} from 'react'\nimport moment from 'moment'\nimport {Tooltip} from 'antd'\nimport {URL_KEYS} from '../../../Constants'\nimport {useLocation} from 'react-router-dom'\nimport {useUrlParams} from '../../../Hooks/app'\nimport {MeetTimeItem, MeetTimeUIBox} from './style'\nimport {Title} from '../../../UIComponents/Typography/Title'\n\nexport const MeetTimeInfo = ({requestData, dateItem, meetDate, activeDay}) => {\n    const {pathname} = useLocation()\n    const time = moment(dateItem.dateTime).format('HH:mm')\n    const {urlData} = useUrlParams()\n    const specId = urlData[URL_KEYS.SPECIALIST_ID]\n    \n    const generateMeetTimeLink = useCallback((time) => {\n        const url = []\n        if (specId) {\n            url.push(`${URL_KEYS.SPECIALIST_ID}=${specId}`)\n        }\n        url.push(`${URL_KEYS.DATE}=${activeDay}`)\n        url.push(`${URL_KEYS.TIME}=${time}`)\n        return {\n            pathname,\n            search: url.join('&')\n        }\n    }, [activeDay, pathname, specId])\n    \n    const currentTime = new Date().getTime()\n    \n    return (\n        <>\n            {\n                requestData[dateItem.dateTime]\n                    ? (\n                        <>\n                            {\n                                dateItem.dateTime > currentTime\n                                && (\n                                    <Tooltip\n                                        title={`${requestData[dateItem.dateTime]?.user?.full_name} ${dateItem.strDate}`}>\n                                        <MeetTimeUIBox imgUrl={requestData[dateItem.dateTime]?.user?.avatar}/>\n                                    </Tooltip>\n                                )\n                            }\n                        </>\n                    )\n                    : (\n                        <>\n                            {\n                                dateItem.dateTime > currentTime\n                                && (\n                                    <MeetTimeItem\n                                        to={generateMeetTimeLink(time)}\n                                        isActive={() => meetDate && meetDate === dateItem.dateTime}\n                                    >\n                                        <Title weight={500}>\n                                            {time}\n                                        </Title>\n                                    </MeetTimeItem>\n                                )\n                                \n                            }\n                        </>\n                    )\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}