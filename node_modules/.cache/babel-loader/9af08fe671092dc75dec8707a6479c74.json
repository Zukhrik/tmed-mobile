{"ast":null,"code":"import { useStore } from 'effector-react';\nimport { useParams } from 'react-router-dom';\nimport { $appModel, commentIdMount, onReplyCommentDataMount } from '../../Models/app';\nimport { commentLikeMount, commentReplyListMount, deleteLikeMount, deletePostCommentMount } from '../../Models/post-model';\nexport function useCommentItem() {\n  const {\n    post_id\n  } = useParams();\n  const {\n    $app: {\n      token\n    }\n  } = useStore($appModel);\n\n  const handleLike = event => {\n    if (token) {\n      if (!event.is_liked) {\n        const params = {\n          post_id: post_id,\n          comment_id: event.id\n        };\n        commentLikeMount(params);\n      } else {\n        const params = {\n          post_id: post_id,\n          comment_id: event.id\n        };\n        deleteLikeMount(params);\n      }\n    }\n  };\n\n  const handleDelete = event => {\n    if (token) {\n      const params = {\n        post_id: post_id,\n        comment_id: event.id\n      };\n      deletePostCommentMount(params);\n    }\n  };\n\n  const handleReply = event => {\n    if (token) {\n      onReplyCommentDataMount(event);\n    }\n  };\n\n  const handleReplyList = event => {\n    const params = {\n      post_id: post_id,\n      comment_id: event.id\n    };\n    commentReplyListMount(params);\n    commentIdMount(event.id);\n  };\n\n  return {\n    handleDelete,\n    handleLike,\n    handleReply,\n    post_id,\n    handleReplyList\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Hooks/post/use-comment-item.js"],"names":["useStore","useParams","$appModel","commentIdMount","onReplyCommentDataMount","commentLikeMount","commentReplyListMount","deleteLikeMount","deletePostCommentMount","useCommentItem","post_id","$app","token","handleLike","event","is_liked","params","comment_id","id","handleDelete","handleReply","handleReplyList"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,gBAAvB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,SAAR,EAAmBC,cAAnB,EAAmCC,uBAAnC,QAAiE,kBAAjE;AACA,SAAQC,gBAAR,EAA0BC,qBAA1B,EAAiDC,eAAjD,EAAkEC,sBAAlE,QAA+F,yBAA/F;AAGA,OAAO,SAASC,cAAT,GAA0B;AAC7B,QAAM;AAACC,IAAAA;AAAD,MAAYT,SAAS,EAA3B;AACA,QAAM;AAACU,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAAkBZ,QAAQ,CAACE,SAAD,CAAhC;;AAEA,QAAMW,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAIF,KAAJ,EAAW;AACP,UAAI,CAACE,KAAK,CAACC,QAAX,EAAqB;AACjB,cAAMC,MAAM,GAAG;AACXN,UAAAA,OAAO,EAAEA,OADE;AAEXO,UAAAA,UAAU,EAAEH,KAAK,CAACI;AAFP,SAAf;AAIAb,QAAAA,gBAAgB,CAACW,MAAD,CAAhB;AACH,OAND,MAMO;AACH,cAAMA,MAAM,GAAG;AACXN,UAAAA,OAAO,EAAEA,OADE;AAEXO,UAAAA,UAAU,EAAEH,KAAK,CAACI;AAFP,SAAf;AAIAX,QAAAA,eAAe,CAACS,MAAD,CAAf;AACH;AACJ;AACJ,GAhBD;;AAkBA,QAAMG,YAAY,GAAIL,KAAD,IAAW;AAC5B,QAAIF,KAAJ,EAAW;AACP,YAAMI,MAAM,GAAG;AACXN,QAAAA,OAAO,EAAEA,OADE;AAEXO,QAAAA,UAAU,EAAEH,KAAK,CAACI;AAFP,OAAf;AAIAV,MAAAA,sBAAsB,CAACQ,MAAD,CAAtB;AACH;AACJ,GARD;;AAUA,QAAMI,WAAW,GAAIN,KAAD,IAAW;AAC3B,QAAIF,KAAJ,EAAW;AACPR,MAAAA,uBAAuB,CAACU,KAAD,CAAvB;AACH;AACJ,GAJD;;AAMA,QAAMO,eAAe,GAAIP,KAAD,IAAW;AAC/B,UAAME,MAAM,GAAG;AACXN,MAAAA,OAAO,EAAEA,OADE;AAEXO,MAAAA,UAAU,EAAEH,KAAK,CAACI;AAFP,KAAf;AAIAZ,IAAAA,qBAAqB,CAACU,MAAD,CAArB;AACAb,IAAAA,cAAc,CAACW,KAAK,CAACI,EAAP,CAAd;AACH,GAPD;;AASA,SAAO;AAACC,IAAAA,YAAD;AAAeN,IAAAA,UAAf;AAA2BO,IAAAA,WAA3B;AAAwCV,IAAAA,OAAxC;AAAiDW,IAAAA;AAAjD,GAAP;AACH","sourcesContent":["import {useStore} from 'effector-react'\nimport {useParams} from 'react-router-dom'\nimport {$appModel, commentIdMount, onReplyCommentDataMount} from '../../Models/app'\nimport {commentLikeMount, commentReplyListMount, deleteLikeMount, deletePostCommentMount} from '../../Models/post-model'\n\n\nexport function useCommentItem() {\n    const {post_id} = useParams()\n    const {$app: {token}} = useStore($appModel)\n    \n    const handleLike = (event) => {\n        if (token) {\n            if (!event.is_liked) {\n                const params = {\n                    post_id: post_id,\n                    comment_id: event.id\n                }\n                commentLikeMount(params)\n            } else {\n                const params = {\n                    post_id: post_id,\n                    comment_id: event.id\n                }\n                deleteLikeMount(params)\n            }\n        }\n    }\n    \n    const handleDelete = (event) => {\n        if (token) {\n            const params = {\n                post_id: post_id,\n                comment_id: event.id\n            }\n            deletePostCommentMount(params)\n        }\n    }\n    \n    const handleReply = (event) => {\n        if (token) {\n            onReplyCommentDataMount(event)\n        }\n    }\n    \n    const handleReplyList = (event) => {\n        const params = {\n            post_id: post_id,\n            comment_id: event.id\n        }\n        commentReplyListMount(params)\n        commentIdMount(event.id)\n    }\n    \n    return {handleDelete, handleLike, handleReply, post_id, handleReplyList}\n}"]},"metadata":{},"sourceType":"module"}