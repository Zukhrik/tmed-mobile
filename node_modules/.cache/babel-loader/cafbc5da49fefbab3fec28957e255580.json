{"ast":null,"code":"import { combine, createStore } from 'effector';\nimport { fetchOfferingGallery, fetchOfferingInfo, fetchOfferings, fetchOfferingsCharacs, fetchOrgOfferGroupList, fetchOrgOfferings, fetchPeopleOfferings, fetchUserOfferGroupList } from './effects';\nimport i18next from 'i18next';\nimport * as moment from 'moment';\nimport { PARAMS_CHARACTER_TYPE } from '../../Constants';\nimport { commonStoreList } from '../../utils/store-utils';\nimport { changeLoadingStatusOffering, changeOrgOfferingStatus, offeringForceLoading, resetOfferingModelStoreList, resetOrgOfferingList } from './events';\nconst $offeringsList = createStore({\n  loading: false,\n  data: [],\n  result: {},\n  forceLoading: 0,\n  error: false\n}).on(fetchOfferings.pending, (state, loading) => ({ ...state,\n  loading\n})).on(fetchOfferings.fail, (state, {\n  error\n}) => ({ ...state,\n  error,\n  data: [],\n  result: {},\n  forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\n})).on(fetchOfferings.done, (state, {\n  params,\n  result\n}) => {\n  const processed = commonStoreList({\n    response: result.data,\n    state,\n    clear: params.clear,\n    ...params.params\n  });\n  return { ...state,\n    ...processed,\n    forceLoading: 2\n  };\n}).on(fetchOrgOfferings.pending, (state, loading) => ({ ...state,\n  loading\n})).on(fetchOrgOfferings.fail, (state, {\n  error\n}) => ({ ...state,\n  error,\n  data: [],\n  result: {}\n})).on(fetchOrgOfferings.done, (state, {\n  result,\n  params\n}) => {\n  const processed = commonStoreList({\n    response: result.data,\n    state,\n    clear: params.clear,\n    ...params.params\n  });\n  return { ...state,\n    ...processed,\n    forceLoading: 2\n  };\n}).on(changeOrgOfferingStatus, (state, {\n  offering_id,\n  status,\n  loadingStatus\n}) => {\n  const idx = state.data.findIndex(item => item.id === offering_id);\n  const newItem = { ...state.data[idx],\n    is_in_cart: status,\n    loading: loadingStatus\n  };\n  const newData = [...state.data.slice(0, idx), { ...newItem\n  }, ...state.data.slice(idx + 1)];\n  return { ...state,\n    data: newData\n  };\n}).on(fetchPeopleOfferings.pending, (state, loading) => ({ ...state,\n  loading\n})).on(fetchPeopleOfferings.fail, (state, {\n  error\n}) => ({ ...state,\n  error,\n  data: [],\n  result: {}\n})).on(fetchPeopleOfferings.done, (state, res) => {\n  const {\n    params: {\n      clear\n    }\n  } = res;\n  const newData = clear ? res.result.data.results : [...state.data, ...res.result.data.results];\n  return { ...state,\n    result: res.result.data,\n    data: newData,\n    forceLoading: false\n  };\n}).on(offeringForceLoading, state => ({ ...state,\n  forceLoading: true\n})).on(changeLoadingStatusOffering, (state, payload) => {\n  const {\n    id,\n    status\n  } = payload;\n  const idx = state.data.findIndex(item => item.id === id);\n  const newItem = { ...state.data[idx],\n    loading: status\n  };\n  const newData = [...state.data.slice(0, idx), { ...newItem\n  }, ...state.data.slice(idx + 1)];\n  return { ...state,\n    data: newData\n  };\n}) // .on(changeOfferIdLoading, (state) => {\n//     console.log(state)\n//     return {...state}\n// })\n.reset(resetOrgOfferingList);\nconst $offeringGroupList = createStore({\n  loading: false,\n  data: [],\n  result: {},\n  forceLoading: 0,\n  error: false\n}).on(fetchOrgOfferGroupList.pending, (state, loading) => ({ ...state,\n  loading\n})).on(fetchOrgOfferGroupList.fail, (state, {\n  error\n}) => ({ ...state,\n  error,\n  data: [],\n  result: {},\n  forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\n})).on(fetchOrgOfferGroupList.done, (state, {\n  result,\n  params\n}) => {\n  // const {params: {clear}} = res\n  // const newData = clear ? res.result.data.results : [...state.data, ...res.result.data.results]\n  const processed = commonStoreList({\n    response: result.data,\n    state,\n    clear: params.clear,\n    ...params.params\n  });\n  return { ...state,\n    ...processed,\n    forceLoading: 2\n  };\n}).on(fetchUserOfferGroupList.pending, (state, loading) => ({ ...state,\n  loading\n})).on(fetchUserOfferGroupList.fail, (state, {\n  error\n}) => ({ ...state,\n  error,\n  data: [],\n  result: {}\n})).on(fetchUserOfferGroupList.done, (state, res) => ({ ...state,\n  result: res.result.data,\n  data: res.result.data.results\n})).reset(resetOfferingModelStoreList);\nconst $offeringInfo = createStore({\n  loading: false,\n  data: {},\n  error: false,\n  forceLoading: 0,\n  result: {}\n}).on(fetchOfferingInfo.pending, (state, loading) => ({ ...state,\n  loading\n})).on(fetchOfferingInfo.fail, (state, {\n  error\n}) => ({ ...state,\n  error,\n  data: {},\n  result: {},\n  forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\n})).on(fetchOfferingInfo.done, (state, res) => {\n  return { ...state,\n    data: res.result.data,\n    result: res.result.data,\n    forceLoading: 2\n  };\n});\nconst $offeringsCharacs = createStore({\n  loading: false,\n  data: [],\n  error: false\n}).on(fetchOfferingsCharacs.pending, (state, loading) => ({ ...state,\n  loading\n})).on(fetchOfferingsCharacs.fail, (state, {\n  error\n}) => ({ ...state,\n  error,\n  data: []\n})).on(fetchOfferingsCharacs.done, (state, res) => {\n  const data = res.result.data.filter(item => item.value);\n  const tmp1 = {};\n\n  for (let i = 0; i < data.length; i++) {\n    let param_value = null;\n    const type = data[i].character.character_type;\n\n    if (type === PARAMS_CHARACTER_TYPE.YEAR_FIELD) {\n      param_value = i18next.t('year_n', {\n        n: moment(data[i].value).format('YYYY')\n      });\n    } else {\n      param_value = data[i].value;\n    }\n\n    if (tmp1[`param_${data[i].character.id}`]) {\n      let value = null;\n\n      if (type === PARAMS_CHARACTER_TYPE.COLOUR_FIELD) {\n        value = [...tmp1[`param_${data[i].character.id}`].value, param_value];\n      } else {\n        value = `${tmp1[`param_${data[i].character.id}`].value}, ${param_value}`;\n      }\n\n      tmp1[`param_${data[i].character.id}`] = { ...data[i],\n        value\n      };\n    } else {\n      let value = null;\n\n      if (type === PARAMS_CHARACTER_TYPE.COLOUR_FIELD) {\n        value = [param_value];\n      } else {\n        value = param_value;\n      }\n\n      tmp1[`param_${data[i].character.id}`] = { ...data[i],\n        value\n      };\n    }\n  }\n\n  return { ...state,\n    data: Object.values(tmp1)\n  };\n});\nconst $offeringGallery = createStore({\n  loading: false,\n  data: [],\n  forceLoading: 0,\n  error: false\n}).on(fetchOfferingGallery.pending, (state, loading) => ({ ...state,\n  loading\n})).on(fetchOfferingGallery.fail, (state, {\n  error\n}) => ({ ...state,\n  error,\n  data: [],\n  forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\n})).on(fetchOfferingGallery.done, (state, res) => {\n  let tmp = [];\n\n  if (res.result.data.length > 0) {\n    const main = res.result.data.find(item => item.main);\n\n    if (main) {\n      tmp = [{ ...main\n      }, ...res.result.data.filter(item => !item.main)];\n    } else {\n      tmp = res.result.data;\n    }\n  }\n\n  return { ...state,\n    data: tmp,\n    forceLoading: 2\n  };\n});\nexport const $offeringsModel = combine({\n  $offeringInfo,\n  $offeringsList,\n  $offeringGallery,\n  $offeringsCharacs,\n  $offeringGroupList\n});","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Models/offerings-model/stores.js"],"names":["combine","createStore","fetchOfferingGallery","fetchOfferingInfo","fetchOfferings","fetchOfferingsCharacs","fetchOrgOfferGroupList","fetchOrgOfferings","fetchPeopleOfferings","fetchUserOfferGroupList","i18next","moment","PARAMS_CHARACTER_TYPE","commonStoreList","changeLoadingStatusOffering","changeOrgOfferingStatus","offeringForceLoading","resetOfferingModelStoreList","resetOrgOfferingList","$offeringsList","loading","data","result","forceLoading","error","on","pending","state","fail","done","params","processed","response","clear","offering_id","status","loadingStatus","idx","findIndex","item","id","newItem","is_in_cart","newData","slice","res","results","payload","reset","$offeringGroupList","$offeringInfo","$offeringsCharacs","filter","value","tmp1","i","length","param_value","type","character","character_type","YEAR_FIELD","t","n","format","COLOUR_FIELD","Object","values","$offeringGallery","tmp","main","find","$offeringsModel"],"mappings":"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","sourcesContent":["import {combine, createStore} from 'effector'\r\nimport {\r\n    fetchOfferingGallery,\r\n    fetchOfferingInfo,\r\n    fetchOfferings,\r\n    fetchOfferingsCharacs,\r\n    fetchOrgOfferGroupList,\r\n    fetchOrgOfferings,\r\n    fetchPeopleOfferings,\r\n    fetchUserOfferGroupList\r\n} from './effects'\r\nimport i18next from 'i18next'\r\nimport * as moment from 'moment'\r\nimport {PARAMS_CHARACTER_TYPE} from '../../Constants'\r\nimport {commonStoreList} from '../../utils/store-utils'\r\nimport {\r\n    changeLoadingStatusOffering,\r\n    changeOrgOfferingStatus,\r\n    offeringForceLoading,\r\n    resetOfferingModelStoreList,\r\n    resetOrgOfferingList\r\n} from './events'\r\n\r\nconst $offeringsList = createStore({loading: false, data: [], result: {}, forceLoading: 0, error: false})\r\n    .on(fetchOfferings.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchOfferings.fail, (state, {error}) => ({\r\n        ...state, error, data: [], result: {}, forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\r\n    }))\r\n    .on(fetchOfferings.done, (state, {params, result}) => {\r\n        const processed = commonStoreList({\r\n            response: result.data, state, clear: params.clear, ...params.params\r\n        })\r\n        \r\n        return {...state, ...processed, forceLoading: 2}\r\n    })\r\n    .on(fetchOrgOfferings.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchOrgOfferings.fail, (state, {error}) => ({\r\n        ...state, error, data: [], result: {}\r\n    }))\r\n    .on(fetchOrgOfferings.done, (state, {result, params}) => {\r\n        const processed = commonStoreList({\r\n            response: result.data, state, clear: params.clear, ...params.params\r\n        })\r\n        return {...state, ...processed, forceLoading: 2}\r\n    })\r\n    .on(changeOrgOfferingStatus, (state, {offering_id, status, loadingStatus}) => {\r\n        const idx = state.data.findIndex(item => item.id === offering_id)\r\n        const newItem = {...state.data[idx], is_in_cart: status, loading: loadingStatus}\r\n        const newData = [...state.data.slice(0, idx), {...newItem}, ...state.data.slice(idx + 1)]\r\n        return {...state, data: newData}\r\n    })\r\n    .on(fetchPeopleOfferings.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchPeopleOfferings.fail, (state, {error}) => ({\r\n        ...state, error, data: [], result: {}\r\n    }))\r\n    .on(fetchPeopleOfferings.done, (state, res) => {\r\n        const {params: {clear}} = res\r\n        const newData = clear ? res.result.data.results : [...state.data, ...res.result.data.results]\r\n        return {\r\n            ...state, result: res.result.data, data: newData, forceLoading: false\r\n        }\r\n    })\r\n    .on(offeringForceLoading, (state) => ({...state, forceLoading: true}))\r\n    .on(changeLoadingStatusOffering, (state, payload) => {\r\n        const {id, status} = payload\r\n        const idx = state.data.findIndex(item => item.id === id)\r\n        const newItem = {...state.data[idx], loading: status}\r\n        const newData = [...state.data.slice(0, idx), {...newItem}, ...state.data.slice(idx + 1)]\r\n        return {...state, data: newData}\r\n    })\r\n    // .on(changeOfferIdLoading, (state) => {\r\n    //     console.log(state)\r\n    //     return {...state}\r\n    // })\r\n    .reset(resetOrgOfferingList)\r\n\r\n\r\nconst $offeringGroupList = createStore({loading: false, data: [], result: {}, forceLoading: 0, error: false})\r\n    .on(fetchOrgOfferGroupList.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchOrgOfferGroupList.fail, (state, {error}) => ({\r\n        ...state, error, data: [], result: {}, forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\r\n    }))\r\n    .on(fetchOrgOfferGroupList.done, (state, {result, params}) => {\r\n        // const {params: {clear}} = res\r\n        // const newData = clear ? res.result.data.results : [...state.data, ...res.result.data.results]\r\n        const processed = commonStoreList({\r\n            response: result.data, state, clear: params.clear, ...params.params\r\n        })\r\n        \r\n        return {...state, ...processed, forceLoading: 2}\r\n    })\r\n    .on(fetchUserOfferGroupList.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchUserOfferGroupList.fail, (state, {error}) => ({\r\n        ...state, error, data: [], result: {}\r\n    }))\r\n    .on(fetchUserOfferGroupList.done, (state, res) => ({\r\n        ...state, result: res.result.data, data: res.result.data.results\r\n    }))\r\n    .reset(resetOfferingModelStoreList)\r\n\r\nconst $offeringInfo = createStore({loading: false, data: {}, error: false, forceLoading: 0, result: {}})\r\n    .on(fetchOfferingInfo.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchOfferingInfo.fail, (state, {error}) => ({\r\n        ...state, error, data: {}, result: {}, forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\r\n    }))\r\n    .on(fetchOfferingInfo.done, (state, res) => {\r\n        return {\r\n            ...state, data: res.result.data, result: res.result.data, forceLoading: 2\r\n        }\r\n    })\r\n\r\nconst $offeringsCharacs = createStore({loading: false, data: [], error: false})\r\n    .on(fetchOfferingsCharacs.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchOfferingsCharacs.fail, (state, {error}) => ({\r\n        ...state, error, data: []\r\n    }))\r\n    .on(fetchOfferingsCharacs.done, (state, res) => {\r\n        const data = res.result.data.filter(item => item.value)\r\n        const tmp1 = {}\r\n        for (let i = 0; i < data.length; i++) {\r\n            let param_value = null\r\n            \r\n            const type = data[i].character.character_type\r\n            if (type === PARAMS_CHARACTER_TYPE.YEAR_FIELD) {\r\n                param_value = i18next.t('year_n', {n: moment(data[i].value).format('YYYY')})\r\n            } else {\r\n                param_value = data[i].value\r\n            }\r\n            \r\n            if (tmp1[`param_${data[i].character.id}`]) {\r\n                let value = null\r\n                if (type === PARAMS_CHARACTER_TYPE.COLOUR_FIELD) {\r\n                    value = [...tmp1[`param_${data[i].character.id}`].value, param_value]\r\n                } else {\r\n                    value = `${tmp1[`param_${data[i].character.id}`].value}, ${param_value}`\r\n                }\r\n                \r\n                tmp1[`param_${data[i].character.id}`] = {\r\n                    ...data[i],\r\n                    value\r\n                }\r\n            } else {\r\n                let value = null\r\n                if (type === PARAMS_CHARACTER_TYPE.COLOUR_FIELD) {\r\n                    value = [param_value]\r\n                } else {\r\n                    value = param_value\r\n                }\r\n                tmp1[`param_${data[i].character.id}`] = {...data[i], value}\r\n            }\r\n        }\r\n        \r\n        return {\r\n            ...state, data: Object.values(tmp1)\r\n        }\r\n    })\r\n\r\nconst $offeringGallery = createStore({loading: false, data: [], forceLoading: 0, error: false})\r\n    .on(fetchOfferingGallery.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchOfferingGallery.fail, (state, {error}) => ({\r\n        ...state, error, data: [], forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\r\n    }))\r\n    .on(fetchOfferingGallery.done, (state, res) => {\r\n        let tmp = []\r\n        if (res.result.data.length > 0) {\r\n            const main = res.result.data.find(item => item.main)\r\n            if (main) {\r\n                tmp = [{...main}, ...res.result.data.filter(item => !item.main)]\r\n            } else {\r\n                tmp = res.result.data\r\n            }\r\n        }\r\n        return {\r\n            ...state, data: tmp, forceLoading: 2\r\n        }\r\n    })\r\n\r\nexport const $offeringsModel = combine({\r\n    $offeringInfo,\r\n    $offeringsList,\r\n    $offeringGallery,\r\n    $offeringsCharacs,\r\n    $offeringGroupList\r\n})\r\n"]},"metadata":{},"sourceType":"module"}