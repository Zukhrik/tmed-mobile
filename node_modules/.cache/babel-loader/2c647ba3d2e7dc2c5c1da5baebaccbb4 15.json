{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/organisms/account-records.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { useGoBack } from '../../../Hooks/app';\nimport { useTranslation } from 'react-i18next';\nimport { useOrderList } from '../../../Hooks/org';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { $orderModel } from '../../../Models/order-model';\nimport { FixedHeader } from '../../../Components/FixedHeader';\nimport { RootContent } from '../../../UIComponents/GlobalStyles';\nimport { QRCodeCartCard } from '../../../Components/Cards/QRCodeCartCard';\nimport { EmptyOrderContainer } from '../../Records/organisms';\nimport { QRCodeCartCardSkeleton } from '../../../Components/Cards';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nconst skeleton = generateSkeleton(10);\nexport const AccountRecords = () => {\n  useOrderList(5);\n  const {\n    push\n  } = useHistory();\n  const {\n    t\n  } = useTranslation();\n  const {\n    username\n  } = useParams();\n  const {\n    $orderList: {\n      data,\n      forceLoading,\n      result\n    }\n  } = useStore($orderModel);\n  const {\n    goBack\n  } = useGoBack({\n    pathname: `/@${username}`\n  });\n\n  const handlePush = item => {\n    const responsible = item.responsible.id;\n    const status = item.status;\n\n    if (responsible && status === 5) {\n      push(`/@${username}/records/${item.id}`);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(RootContent, {\n    height: \"100vh\",\n    paddingTop: 62,\n    paddingBottom: 65,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FixedHeader, {\n    goBack: goBack,\n    title: t('records'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 12],\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, forceLoading === 2 ? /*#__PURE__*/React.createElement(React.Fragment, null, data && data.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(QRCodeCartCard, {\n    src: item.responsible.org.logo,\n    time: item.meet_date,\n    cost: item.total_cost,\n    url: () => handlePush(item),\n    count: result && result.count,\n    title: item.responsible.org.name,\n    text: item.responsible.org.category.name,\n    specialistImg: item.responsible.user.avatar,\n    specialistName: item.responsible.user.full_name,\n    specialistCat: item.responsible.user.main_cat.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 57\n    }\n  })))) : /*#__PURE__*/React.createElement(EmptyOrderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 41\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(QRCodeCartCardSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 41\n    }\n  }))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/organisms/account-records.jsx"],"names":["React","Col","Row","useStore","useGoBack","useTranslation","useOrderList","useHistory","useParams","$orderModel","FixedHeader","RootContent","QRCodeCartCard","EmptyOrderContainer","QRCodeCartCardSkeleton","generateSkeleton","skeleton","AccountRecords","push","t","username","$orderList","data","forceLoading","result","goBack","pathname","handlePush","item","responsible","id","status","length","map","idx","org","logo","meet_date","total_cost","count","name","category","user","avatar","full_name","main_cat"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {useGoBack} from '../../../Hooks/app'\nimport {useTranslation} from 'react-i18next'\nimport {useOrderList} from '../../../Hooks/org'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {$orderModel} from '../../../Models/order-model'\nimport {FixedHeader} from '../../../Components/FixedHeader'\nimport {RootContent} from '../../../UIComponents/GlobalStyles'\nimport {QRCodeCartCard} from '../../../Components/Cards/QRCodeCartCard'\nimport {EmptyOrderContainer} from '../../Records/organisms'\nimport {QRCodeCartCardSkeleton} from '../../../Components/Cards'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\n\nconst skeleton = generateSkeleton(10)\nexport const AccountRecords = () => {\n    useOrderList(5)\n    const {push} = useHistory()\n    const {t} = useTranslation()\n    const {username} = useParams()\n    const {$orderList: {data, forceLoading, result}} = useStore($orderModel)\n    const {goBack} = useGoBack({pathname: `/@${username}`})\n    \n    const handlePush = (item) => {\n        const responsible = item.responsible.id\n        const status = item.status\n        \n        if (responsible && status === 5) {\n            push(`/@${username}/records/${item.id}`)\n        }\n    }\n    \n    return (\n        <RootContent\n            height='100vh'\n            paddingTop={62}\n            paddingBottom={65}\n        >\n            <FixedHeader\n                goBack={goBack}\n                title={t('records')}\n            />\n            <Row gutter={[0, 12]} className='container'>\n                {\n                    forceLoading === 2\n                        ? <>\n                            {\n                                data && data.length > 0\n                                    ? (\n                                        <>\n                                            {\n                                                data.map((item, idx) => (\n                                                    <Col\n                                                        span={24}\n                                                        key={`${idx + 1}`}\n                                                    >\n                                                        <QRCodeCartCard\n                                                            src={item.responsible.org.logo}\n                                                            time={item.meet_date}\n                                                            cost={item.total_cost}\n                                                            url={() => handlePush(item)}\n                                                            count={result && result.count}\n                                                            title={item.responsible.org.name}\n                                                            text={item.responsible.org.category.name}\n                                                            specialistImg={item.responsible.user.avatar}\n                                                            specialistName={item.responsible.user.full_name}\n                                                            specialistCat={item.responsible.user.main_cat.name}\n                                                        />\n                                                    </Col>\n                                                ))\n                                            }\n                                        </>\n                                    ) : (\n                                        <EmptyOrderContainer/>\n                                    )\n                            }\n                        </>\n                        : <>\n                            {\n                                skeleton.map((item, idx) => (\n                                    <Col span={24} key={`${idx + 1}`}>\n                                        <QRCodeCartCardSkeleton/>\n                                    </Col>\n                                ))\n                            }\n                        </>\n                }\n            </Row>\n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}