{"ast":null,"code":"import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"label\",\"value\",\"error\",\"onChange\",\"helperText\",\"views\",\"hideErrorText\",\"staticError\"];import moment from'moment';import{TextField}from'@material-ui/core';import React,{useEffect,useRef}from'react';import{DatePicker}from'@material-ui/pickers';import{StyledFormControl,StyledHelperText,StyledInputError}from'../atoms';export var DateInput=function DateInput(_ref){var label=_ref.label,value=_ref.value,error=_ref.error,_onChange=_ref.onChange,helperText=_ref.helperText,views=_ref.views,hideErrorText=_ref.hideErrorText,staticError=_ref.staticError,props=_objectWithoutProperties(_ref,_excluded);var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),anchorEl=_React$useState2[0],setAnchorEl=_React$useState2[1];var divRef=useRef();useEffect(function(){setAnchorEl(divRef.current);},[divRef]);var generateDateFormat=function generateDateFormat(){switch(views){case'year':return'YYYY';default:return'YYYY-MM-DD';}};return/*#__PURE__*/React.createElement(StyledFormControl,{ref:divRef},/*#__PURE__*/React.createElement(DatePicker,Object.assign({},props,{autoOk:true,label:label,error:!!error,variant:\"inline\",value:moment(value),format:generateDateFormat(),onChange:function onChange(e){return _onChange(moment(e._d));},views:views?[views]:['year','month','date'],PopoverProps:{anchorEl:anchorEl,anchorOrigin:{vertical:'bottom',horizontal:'left'},transformOrigin:{vertical:'top',horizontal:'left'},classes:{paper:'select-dropdown'}},inputVariant:\"outlined\",TextFieldComponent:function TextFieldComponent(inputProps){return/*#__PURE__*/React.createElement(TextField,inputProps);}})),helperText&&/*#__PURE__*/React.createElement(StyledHelperText,null,helperText),!hideErrorText&&error&&/*#__PURE__*/React.createElement(StyledInputError,{staticError:staticError},error));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/UIComponents/mu-inputs/maleculas/date-input.js"],"names":["moment","TextField","React","useEffect","useRef","DatePicker","StyledFormControl","StyledHelperText","StyledInputError","DateInput","label","value","error","onChange","helperText","views","hideErrorText","staticError","props","useState","anchorEl","setAnchorEl","divRef","current","generateDateFormat","e","_d","anchorOrigin","vertical","horizontal","transformOrigin","classes","paper","inputProps"],"mappings":"ocAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAAQC,SAAR,KAAwB,mBAAxB,CACA,MAAOC,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,MAA1B,KAAuC,OAAvC,CACA,OAAQC,UAAR,KAAyB,sBAAzB,CACA,OAAQC,iBAAR,CAA2BC,gBAA3B,CAA6CC,gBAA7C,KAAoE,UAApE,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA8F,IAA5FC,CAAAA,KAA4F,MAA5FA,KAA4F,CAArFC,KAAqF,MAArFA,KAAqF,CAA9EC,KAA8E,MAA9EA,KAA8E,CAAvEC,SAAuE,MAAvEA,QAAuE,CAA7DC,UAA6D,MAA7DA,UAA6D,CAAjDC,KAAiD,MAAjDA,KAAiD,CAA1CC,aAA0C,MAA1CA,aAA0C,CAA3BC,WAA2B,MAA3BA,WAA2B,CAAXC,KAAW,0CACrH,oBAAgChB,KAAK,CAACiB,QAAN,CAAe,IAAf,CAAhC,oDAAOC,QAAP,qBAAiBC,WAAjB,qBACA,GAAMC,CAAAA,MAAM,CAAGlB,MAAM,EAArB,CAEAD,SAAS,CAAC,UAAM,CACdkB,WAAW,CAACC,MAAM,CAACC,OAAR,CAAX,CACD,CAFQ,CAEN,CAACD,MAAD,CAFM,CAAT,CAIA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,OAAQT,KAAR,EACE,IAAK,MAAL,CACE,MAAO,MAAP,CACF,QACE,MAAO,YAAP,CAJJ,CAMD,CAPD,CASE,mBACC,oBAAC,iBAAD,EAAmB,GAAG,CAAEO,MAAxB,eACE,oBAAC,UAAD,kBACOJ,KADP,EAEG,MAAM,KAFT,CAGG,KAAK,CAAER,KAHV,CAIG,KAAK,CAAE,CAAC,CAACE,KAJZ,CAKG,OAAO,CAAC,QALX,CAMG,KAAK,CAAEZ,MAAM,CAACW,KAAD,CANhB,CAOG,MAAM,CAAEa,kBAAkB,EAP7B,CAQG,QAAQ,CAAE,kBAACC,CAAD,QAAOZ,CAAAA,SAAQ,CAACb,MAAM,CAACyB,CAAC,CAACC,EAAH,CAAP,CAAf,EARb,CASG,KAAK,CAAEX,KAAK,CAAG,CAACA,KAAD,CAAH,CAAa,CAAC,MAAD,CAAS,OAAT,CAAkB,MAAlB,CAT5B,CAUG,YAAY,CAAE,CACZK,QAAQ,CAARA,QADY,CAEZO,YAAY,CAAE,CACZC,QAAQ,CAAE,QADE,CAEZC,UAAU,CAAE,MAFA,CAFF,CAMZC,eAAe,CAAE,CACfF,QAAQ,CAAE,KADK,CAEfC,UAAU,CAAE,MAFG,CANL,CAUZE,OAAO,CAAE,CAACC,KAAK,CAAE,iBAAR,CAVG,CAVjB,CAsBG,YAAY,CAAC,UAtBhB,CAuBG,kBAAkB,CAAE,4BAACC,UAAD,qBAAgB,oBAAC,SAAD,CAAeA,UAAf,CAAhB,EAvBvB,GADF,CA0BGnB,UAAU,eAAI,oBAAC,gBAAD,MAAmBA,UAAnB,CA1BjB,CA2BG,CAACE,aAAD,EAAkBJ,KAAlB,eAA2B,oBAAC,gBAAD,EAAkB,WAAW,CAAEK,WAA/B,EAA6CL,KAA7C,CA3B9B,CADD,CA+BH,CAhDM","sourcesContent":["import moment from 'moment';\r\nimport {TextField} from '@material-ui/core';\r\nimport React, {useEffect, useRef} from 'react';\r\nimport {DatePicker} from '@material-ui/pickers';\r\nimport {StyledFormControl, StyledHelperText, StyledInputError} from '../atoms';\r\n\r\nexport const DateInput = ({label, value, error, onChange, helperText, views, hideErrorText, staticError, ...props}) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const divRef = useRef();\r\n\r\n  useEffect(() => {\r\n    setAnchorEl(divRef.current);\r\n  }, [divRef]);\r\n\r\n  const generateDateFormat = () => {\r\n    switch (views) {\r\n      case 'year':\r\n        return 'YYYY';\r\n      default:\r\n        return 'YYYY-MM-DD';\r\n    }\r\n  };\r\n\r\n    return (\r\n     <StyledFormControl ref={divRef}>\r\n       <DatePicker\r\n          {...props}\r\n          autoOk\r\n          label={label}\r\n          error={!!error}\r\n          variant=\"inline\"\r\n          value={moment(value)}\r\n          format={generateDateFormat()}\r\n          onChange={(e) => onChange(moment(e._d))}\r\n          views={views ? [views] : ['year', 'month', 'date']}\r\n          PopoverProps={{\r\n            anchorEl,\r\n            anchorOrigin: {\r\n              vertical: 'bottom',\r\n              horizontal: 'left'\r\n            },\r\n            transformOrigin: {\r\n              vertical: 'top',\r\n              horizontal: 'left'\r\n            },\r\n            classes: {paper: 'select-dropdown'}\r\n          }}\r\n          inputVariant='outlined'\r\n          TextFieldComponent={(inputProps) => <TextField {...inputProps} />}\r\n       />\r\n       {helperText && <StyledHelperText>{helperText}</StyledHelperText>}\r\n       {!hideErrorText && error && <StyledInputError staticError={staticError}>{error}</StyledInputError>}\r\n     </StyledFormControl>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}