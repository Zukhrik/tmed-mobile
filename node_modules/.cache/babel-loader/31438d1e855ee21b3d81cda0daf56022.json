{"ast":null,"code":"import { combine, createStore } from 'effector';\nimport { fetchAccountCard, fetchDeleteAccountCard } from './effects';\nconst $accountCard = createStore({\n  loading: false,\n  data: [],\n  result: {},\n  error: false\n}).on(fetchAccountCard.pending, (state, loading) => ({ ...state,\n  loading\n})).on(fetchAccountCard.fail, (state, {\n  error\n}) => ({ ...state,\n  error,\n  data: []\n})).on(fetchAccountCard.done, (state, res) => {\n  return { ...state,\n    data: res.result.data.results,\n    result: res.result.data\n  };\n}).on(fetchDeleteAccountCard.done, (state, params) => {\n  const cardId = params.id;\n  const idx = state.data.findIndex(item => item.id === cardId);\n  const deletingCardItem = state.data[idx];\n  console.log(deletingCardItem, idx);\n\n  if (cardId) {}\n\n  return { ...state\n  };\n});\nexport const $paymentModel = combine({\n  $accountCard\n});","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Models/payment-model/stores.js"],"names":["combine","createStore","fetchAccountCard","fetchDeleteAccountCard","$accountCard","loading","data","result","error","on","pending","state","fail","done","res","results","params","cardId","id","idx","findIndex","item","deletingCardItem","console","log","$paymentModel"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,WAAjB,QAAmC,UAAnC;AACA,SAAQC,gBAAR,EAA0BC,sBAA1B,QAAuD,WAAvD;AAGA,MAAMC,YAAY,GAAGH,WAAW,CAAC;AAACI,EAAAA,OAAO,EAAE,KAAV;AAAiBC,EAAAA,IAAI,EAAE,EAAvB;AAA2BC,EAAAA,MAAM,EAAE,EAAnC;AAAuCC,EAAAA,KAAK,EAAE;AAA9C,CAAD,CAAX,CAChBC,EADgB,CACbP,gBAAgB,CAACQ,OADJ,EACa,CAACC,KAAD,EAAQN,OAAR,MAAqB,EAAC,GAAGM,KAAJ;AAAWN,EAAAA;AAAX,CAArB,CADb,EAEhBI,EAFgB,CAEbP,gBAAgB,CAACU,IAFJ,EAEU,CAACD,KAAD,EAAQ;AAACH,EAAAA;AAAD,CAAR,MAAqB,EAAC,GAAGG,KAAJ;AAAWH,EAAAA,KAAX;AAAkBF,EAAAA,IAAI,EAAE;AAAxB,CAArB,CAFV,EAGhBG,EAHgB,CAGbP,gBAAgB,CAACW,IAHJ,EAGU,CAACF,KAAD,EAAQG,GAAR,KAAgB;AACvC,SAAO,EAAC,GAAGH,KAAJ;AAAWL,IAAAA,IAAI,EAAEQ,GAAG,CAACP,MAAJ,CAAWD,IAAX,CAAgBS,OAAjC;AAA0CR,IAAAA,MAAM,EAAEO,GAAG,CAACP,MAAJ,CAAWD;AAA7D,GAAP;AACH,CALgB,EAMhBG,EANgB,CAMbN,sBAAsB,CAACU,IANV,EAMgB,CAACF,KAAD,EAAQK,MAAR,KAAmB;AAChD,QAAMC,MAAM,GAAGD,MAAM,CAACE,EAAtB;AACA,QAAMC,GAAG,GAAGR,KAAK,CAACL,IAAN,CAAWc,SAAX,CAAqBC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYD,MAAzC,CAAZ;AACA,QAAMK,gBAAgB,GAAGX,KAAK,CAACL,IAAN,CAAWa,GAAX,CAAzB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ,EAA8BH,GAA9B;;AAEA,MAAIF,MAAJ,EAAY,CAEX;;AAED,SAAO,EAAC,GAAGN;AAAJ,GAAP;AACH,CAjBgB,CAArB;AAoBA,OAAO,MAAMc,aAAa,GAAGzB,OAAO,CAAC;AACjCI,EAAAA;AADiC,CAAD,CAA7B","sourcesContent":["import {combine, createStore} from 'effector'\nimport {fetchAccountCard, fetchDeleteAccountCard} from './effects'\n\n\nconst $accountCard = createStore({loading: false, data: [], result: {}, error: false})\n    .on(fetchAccountCard.pending, (state, loading) => ({...state, loading}))\n    .on(fetchAccountCard.fail, (state, {error}) => ({...state, error, data: []}))\n    .on(fetchAccountCard.done, (state, res) => {\n        return {...state, data: res.result.data.results, result: res.result.data}\n    })\n    .on(fetchDeleteAccountCard.done, (state, params) => {\n        const cardId = params.id\n        const idx = state.data.findIndex(item => item.id === cardId)\n        const deletingCardItem = state.data[idx]\n        console.log(deletingCardItem, idx)\n        \n        if (cardId) {\n        \n        }\n        \n        return {...state}\n    })\n\n\nexport const $paymentModel = combine({\n    $accountCard\n})"]},"metadata":{},"sourceType":"module"}