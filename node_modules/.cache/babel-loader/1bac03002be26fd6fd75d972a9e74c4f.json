{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Post/organisms/comment-list.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { useCommentItem } from '../../../Hooks/post';\nimport { $postModel } from '../../../Models/post-model';\nimport { CommentCard } from '../../../Components/Cards';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { RootContent } from '../../../UIComponents/GlobalStyles';\nimport { useChangeDateLang } from '../../../Hooks/app';\nexport const CommentList = ({\n  loadMore\n}) => {\n  const {\n    $getPostComments: {\n      data,\n      result,\n      loading\n    },\n    $commentReplyList: {\n      data: replyList\n    }\n  } = useStore($postModel);\n  const {\n    changeDateLang\n  } = useChangeDateLang();\n  const {\n    post_id,\n    handleDelete,\n    handleLike,\n    handleReply,\n    handleReplyList\n  } = useCommentItem();\n  return /*#__PURE__*/React.createElement(RootContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, data && post_id && data[post_id] && /*#__PURE__*/React.createElement(InfiniteScroll, {\n    style: {\n      overflow: 'hidden'\n    },\n    next: loadMore,\n    dataLength: result[post_id].nextOffset || 10,\n    hasMore: !loading && !!result[post_id].next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 16],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, data[post_id].map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CommentCard, {\n    handleReplyList: handleReplyList,\n    slug_name: item.author.slug_name,\n    imgUrl: item.author.avatar,\n    handleDelete: handleDelete,\n    handleReply: handleReply,\n    likes: item.likes_count,\n    name: item.author.name,\n    isLiked: item.is_liked,\n    handleLike: handleLike,\n    text: item.text,\n    id: item.id,\n    date: changeDateLang(item.date),\n    item: item,\n    repliesCount: item.replies_count,\n    commentReplyLis: replyList,\n    category: item.author.sub_text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 41\n    }\n  }))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Post/organisms/comment-list.jsx"],"names":["React","Col","Row","useStore","useCommentItem","$postModel","CommentCard","InfiniteScroll","RootContent","useChangeDateLang","CommentList","loadMore","$getPostComments","data","result","loading","$commentReplyList","replyList","changeDateLang","post_id","handleDelete","handleLike","handleReply","handleReplyList","overflow","nextOffset","next","map","item","idx","author","slug_name","avatar","likes_count","name","is_liked","text","id","date","replies_count","sub_text"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {useCommentItem} from '../../../Hooks/post'\nimport {$postModel} from '../../../Models/post-model'\nimport {CommentCard} from '../../../Components/Cards'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport {RootContent} from '../../../UIComponents/GlobalStyles'\nimport {useChangeDateLang} from '../../../Hooks/app'\n\n\nexport const CommentList = ({loadMore}) => {\n    const {\n        $getPostComments: {data, result, loading},\n        $commentReplyList: {data: replyList}\n    } = useStore($postModel)\n    const {changeDateLang} = useChangeDateLang()\n    const {post_id, handleDelete, handleLike, handleReply, handleReplyList} = useCommentItem()\n    \n    return (\n        <RootContent>\n            {\n                data && post_id && data[post_id] && (\n                    <InfiniteScroll\n                        style={{overflow: 'hidden'}}\n                        next={loadMore}\n                        dataLength={result[post_id].nextOffset || 10}\n                        hasMore={!loading && !!result[post_id].next}\n                    >\n                        <Row gutter={[0, 16]}>\n                            {\n                                data[post_id].map((item, idx) => (\n                                    <Col\n                                        span={24}\n                                        key={`${idx + 1}`}\n                                    >\n                                        <CommentCard\n                                            handleReplyList={handleReplyList}\n                                            slug_name={item.author.slug_name}\n                                            imgUrl={item.author.avatar}\n                                            handleDelete={handleDelete}\n                                            handleReply={handleReply}\n                                            likes={item.likes_count}\n                                            name={item.author.name}\n                                            isLiked={item.is_liked}\n                                            handleLike={handleLike}\n                                            text={item.text}\n                                            id={item.id}\n                                            date={changeDateLang(item.date)}\n                                            item={item}\n                                            repliesCount={item.replies_count}\n                                            commentReplyLis={replyList}\n                                            category={item.author.sub_text}\n                                        />\n                                    </Col>\n                                ))\n                            }\n                        </Row>\n                    </InfiniteScroll>\n                )\n            }\n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}