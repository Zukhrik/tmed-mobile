{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OrgSpecCatList/index.jsx\";\nimport React, { useCallback } from 'react';\nimport { useStore } from 'effector-react';\nimport { URL_KEYS } from '../../../../Constants';\nimport { $appModel } from '../../../../Models/app';\nimport { useUrlParams } from '../../../../Hooks/app';\nimport { INFO_MAT } from '../../../../Constants/app';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { CategoryItemWrap, CatItemNavLink, DataWrapper } from '../style';\nimport { $orgModel, orgSpecialistCatMount } from '../../../../Models/org-model';\nconst initialParams = {\n  limit: 20,\n  offset: 0\n};\nexport const OrgSpecCatList = () => {\n  const {\n    urlData\n  } = useUrlParams();\n  const {\n    organization\n  } = useParams();\n  const {\n    $device\n  } = useStore($appModel);\n  const {\n    location: {\n      pathname\n    }\n  } = useHistory();\n  const {\n    $orgSpecialistCat: {\n      data,\n      loading,\n      result\n    }\n  } = useStore($orgModel);\n  const generateUrl = useCallback((url_keys, id) => {\n    const url = [];\n\n    if (!urlData[url_keys] || urlData[url_keys] !== String(id)) {\n      url.push(`${url_keys}=${id}`);\n    }\n\n    return {\n      pathname,\n      search: url.join('&')\n    };\n  }, [pathname, urlData]);\n  const getActive = useCallback((url_keys, id) => {\n    return urlData[url_keys] && urlData[url_keys] === String(id);\n  }, [urlData]);\n  const handleScroll = useCallback(e => {\n    console.log(e.target.offsetWidth);\n\n    if (e.target.scrollLeft + e.target.offsetWidth === e.target.scrollWidth && !loading && !!result.next) {\n      if (result.next) {\n        const data = {\n          organization: organization,\n          params: { ...initialParams,\n            offset: result.nextOffset\n          }\n        };\n        orgSpecialistCatMount(data);\n      }\n    }\n  }, [result, organization, loading]);\n  return /*#__PURE__*/React.createElement(DataWrapper, {\n    onScroll: e => handleScroll(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CategoryItemWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, data && data.map((item, idx) => /*#__PURE__*/React.createElement(CatItemNavLink, {\n    key: `${idx + 1}`,\n    fontSize: $device && $device === INFO_MAT ? '20px' : '',\n    marginright: $device && $device === INFO_MAT ? '24px' : '',\n    to: generateUrl(URL_KEYS.SPECIALIST_CATEGORY_ID, item.id),\n    isActive: () => getActive(URL_KEYS.SPECIALIST_CATEGORY_ID, item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, item.name))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OrgSpecCatList/index.jsx"],"names":["React","useCallback","useStore","URL_KEYS","$appModel","useUrlParams","INFO_MAT","useHistory","useParams","CategoryItemWrap","CatItemNavLink","DataWrapper","$orgModel","orgSpecialistCatMount","initialParams","limit","offset","OrgSpecCatList","urlData","organization","$device","location","pathname","$orgSpecialistCat","data","loading","result","generateUrl","url_keys","id","url","String","push","search","join","getActive","handleScroll","e","console","log","target","offsetWidth","scrollLeft","scrollWidth","next","params","nextOffset","map","item","idx","SPECIALIST_CATEGORY_ID","name"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {useStore} from 'effector-react'\r\nimport {URL_KEYS} from '../../../../Constants'\r\nimport {$appModel} from '../../../../Models/app'\r\nimport {useUrlParams} from '../../../../Hooks/app'\r\nimport {INFO_MAT} from '../../../../Constants/app'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {CategoryItemWrap, CatItemNavLink, DataWrapper} from '../style'\r\nimport {$orgModel, orgSpecialistCatMount} from '../../../../Models/org-model'\r\n\r\n\r\nconst initialParams = {\r\n    limit: 20,\r\n    offset: 0\r\n}\r\nexport const OrgSpecCatList = () => {\r\n    const {urlData} = useUrlParams()\r\n    const {organization} = useParams()\r\n    const {$device} = useStore($appModel)\r\n    const {location: {pathname}} = useHistory()\r\n    const {$orgSpecialistCat: {data, loading, result}} = useStore($orgModel)\r\n    const generateUrl = useCallback((url_keys, id) => {\r\n        const url = []\r\n        \r\n        if (!urlData[url_keys] || urlData[url_keys] !== String(id)) {\r\n            url.push(`${url_keys}=${id}`)\r\n        }\r\n        \r\n        return {\r\n            pathname,\r\n            search: url.join('&')\r\n        }\r\n        \r\n    }, [pathname, urlData])\r\n    \r\n    const getActive = useCallback((url_keys, id) => {\r\n        return urlData[url_keys] && urlData[url_keys] === String(id)\r\n    }, [urlData])\r\n    \r\n    const handleScroll = useCallback((e) => {\r\n        console.log(e.target.offsetWidth)\r\n        if (e.target.scrollLeft + e.target.offsetWidth === e.target.scrollWidth && !loading && !!result.next) {\r\n            if (result.next) {\r\n                const data = {\r\n                    organization: organization,\r\n                    params: {\r\n                        ...initialParams,\r\n                        offset: result.nextOffset\r\n                    }\r\n                }\r\n                orgSpecialistCatMount(data)\r\n            }\r\n        }\r\n    }, [result, organization, loading])\r\n    \r\n    return (\r\n        <DataWrapper onScroll={(e) => handleScroll(e)}>\r\n            <CategoryItemWrap>\r\n                {\r\n                    data && data.map((item, idx) => (\r\n                        <CatItemNavLink\r\n                            key={`${idx + 1}`}\r\n                            fontSize={$device && $device === INFO_MAT ? '20px' : ''}\r\n                            marginright={$device && $device === INFO_MAT ? '24px' : ''}\r\n                            to={generateUrl(URL_KEYS.SPECIALIST_CATEGORY_ID, item.id)}\r\n                            isActive={() => getActive(URL_KEYS.SPECIALIST_CATEGORY_ID, item.id)}\r\n                        >\r\n                            {item.name}\r\n                        </CatItemNavLink>\r\n                    ))\r\n                }\r\n            </CategoryItemWrap>\r\n        </DataWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}