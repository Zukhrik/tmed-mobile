{"ast":null,"code":"import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{ActionArrowWrapper,BetweenWrapper,CharacsTitleWrapper,CharacteristicsList,OfferInfoItemWrapper}from'../atoms';import{Col,Row}from'antd';import SlideDown from'react-slidedown';import{useStore}from'effector-react';import{useTranslation}from'react-i18next';import{$appModel}from'../../../Models/app';import{INFO_MAT}from'../../../Constants/app';import{ArrowIosTopSvg}from'../../../Icons/Arrow';import{PARAMS_CHARACTER_TYPE}from'../../../Constants';import{Text}from'../../../UIComponents/Typography/Text';import{Container}from'../../../UIComponents/GlobalStyles';import{Title}from'../../../UIComponents/Typography/Title';import{$offeringsModel}from'../../../Models/offerings-model';import moment from'moment';export var OfferingCharacteristics=function OfferingCharacteristics(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useStore=useStore($appModel),$device=_useStore.$device;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useStore2=useStore($offeringsModel),data=_useStore2.$offeringsCharacs.data;var params=data.filter(function(item){return item.character.character_type!==PARAMS_CHARACTER_TYPE.COLOUR_FIELD;});return/*#__PURE__*/React.createElement(React.Fragment,null,params.length>0&&/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Row,{gutter:[0,12]},/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(CharacsTitleWrapper,{onClick:function onClick(){return setShow(!show);}},/*#__PURE__*/React.createElement(Text,null,t('product_characteristics')),$device&&$device===INFO_MAT?'':/*#__PURE__*/React.createElement(ActionArrowWrapper,{status:!show},/*#__PURE__*/React.createElement(ArrowIosTopSvg,null)))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(CharacteristicsList,null,$device&&$device===INFO_MAT?/*#__PURE__*/React.createElement(React.Fragment,null,params.map(function(item,idx){return/*#__PURE__*/React.createElement(OfferInfoItemWrapper,{key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(Text,null,item.character.name),/*#__PURE__*/React.createElement(BetweenWrapper,null),/*#__PURE__*/React.createElement(Title,{style:{fontWeight:400},level:5},item.value));})):/*#__PURE__*/React.createElement(SlideDown,{transitionOnAppear:false,closed:!show},params.map(function(item,idx){return/*#__PURE__*/React.createElement(OfferInfoItemWrapper,{key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(Text,{alignType:\"left\"},item.character.name),/*#__PURE__*/React.createElement(BetweenWrapper,null),/*#__PURE__*/React.createElement(Title,{level:5,alignType:\"right\",style:{fontWeight:400}},item.character.character_type===10?moment(item.value).format('DD-MM-YYYY'):item.value));})))))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/OfferingPage/organisms/offering-characteristics.jsx"],"names":["React","useState","ActionArrowWrapper","BetweenWrapper","CharacsTitleWrapper","CharacteristicsList","OfferInfoItemWrapper","Col","Row","SlideDown","useStore","useTranslation","$appModel","INFO_MAT","ArrowIosTopSvg","PARAMS_CHARACTER_TYPE","Text","Container","Title","$offeringsModel","moment","OfferingCharacteristics","t","$device","show","setShow","data","$offeringsCharacs","params","filter","item","character","character_type","COLOUR_FIELD","length","map","idx","name","fontWeight","value","format"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {\n    ActionArrowWrapper,\n    BetweenWrapper,\n    CharacsTitleWrapper,\n    CharacteristicsList,\n    OfferInfoItemWrapper\n} from '../atoms'\nimport {Col, Row} from 'antd'\nimport SlideDown from 'react-slidedown'\nimport {useStore} from 'effector-react'\nimport {useTranslation} from 'react-i18next'\nimport {$appModel} from '../../../Models/app'\nimport {INFO_MAT} from '../../../Constants/app'\nimport {ArrowIosTopSvg} from '../../../Icons/Arrow'\nimport {PARAMS_CHARACTER_TYPE} from '../../../Constants'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {Container} from '../../../UIComponents/GlobalStyles'\nimport {Title} from '../../../UIComponents/Typography/Title'\nimport {$offeringsModel} from '../../../Models/offerings-model'\nimport moment from 'moment'\n\n\nexport const OfferingCharacteristics = () => {\n    const {t} = useTranslation()\n    const {$device} = useStore($appModel)\n    const [show, setShow] = useState(false)\n    const {$offeringsCharacs: {data}} = useStore($offeringsModel)\n    const params = data.filter(item => item.character.character_type !== PARAMS_CHARACTER_TYPE.COLOUR_FIELD)\n    \n    return (\n        <>\n            {\n                params.length > 0 && (\n                    <Container>\n                        <Row gutter={[0, 12]}>\n                            <Col span={24}>\n                                <CharacsTitleWrapper onClick={() => setShow(!show)}>\n                                    <Text>{t('product_characteristics')}</Text>\n                                    {\n                                        $device && $device === INFO_MAT\n                                            ? ''\n                                            : <ActionArrowWrapper status={!show}>\n                                                <ArrowIosTopSvg/>\n                                            </ActionArrowWrapper>\n                                    }\n                                </CharacsTitleWrapper>\n                            </Col>\n                            <Col span={24}>\n                                <CharacteristicsList>\n                                    {\n                                        $device && $device === INFO_MAT\n                                            ? <>\n                                                {\n                                                    params.map((item, idx) => (\n                                                        <OfferInfoItemWrapper key={`${idx + 1}`}>\n                                                            <Text>{item.character.name}</Text>\n                                                            <BetweenWrapper/>\n                                                            <Title style={{fontWeight: 400}} level={5}>{item.value}</Title>\n                                                        </OfferInfoItemWrapper>\n                                                    ))\n                                                }\n                                            </>\n                                            : <SlideDown transitionOnAppear={false} closed={!show}>\n                                                {\n                                                    params.map((item, idx) => (\n                                                        <OfferInfoItemWrapper key={`${idx + 1}`}>\n                                                            <Text alignType='left'>{item.character.name}</Text>\n                                                            <BetweenWrapper/>\n                                                            <Title\n                                                                level={5}\n                                                                alignType='right'\n                                                                style={{fontWeight: 400}}\n                                                            >\n                                                                {item.character.character_type === 10\n                                                                    ? moment(item.value).format('DD-MM-YYYY')\n                                                                    : item.value\n                                                                }\n                                                            </Title>\n                                                        </OfferInfoItemWrapper>\n                                                    ))\n                                                }\n                                            </SlideDown>\n                                    }\n                                </CharacteristicsList>\n                            </Col>\n                        </Row>\n                    </Container>\n                )\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}