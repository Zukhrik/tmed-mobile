{"ast":null,"code":"import { PERMISSIONS } from '../../Constants';\nexport const getAccountInfo = (data, slug_name) => ({\n  slug_name,\n  type: 'user',\n  avatar: data.avatar,\n  region: data.region,\n  status: data.status,\n  url: `/@${slug_name}`,\n  currency: data.currency,\n  category: data.main_cat,\n  perms: [PERMISSIONS.GRAND],\n  isOfficial: data.is_official,\n  name: `${data.lastname} ${data.name}`\n});\nexport const getLinkedUsers = data => {\n  const tmp = [];\n\n  if (data) {\n    for (let user of data) {\n      tmp.push({\n        type: 'user',\n        region: user.region,\n        avatar: user.avatar,\n        status: user.status,\n        name: user.full_name,\n        category: user.main_cat,\n        currency: user.currency,\n        slug_name: user.username,\n        isOfficial: user.is_official,\n        url: `/@${user.username}`,\n        perms: [PERMISSIONS.GRAND]\n      });\n    }\n  }\n\n  return tmp;\n};\nexport const getSpecOrganizations = (data, accountInfo) => {\n  const tmp = [];\n\n  if (data) {\n    const orgSpecs = data.filter(item => item.perms.length > 0);\n\n    for (let orgSpec of orgSpecs) {\n      tmp.push({\n        type: 'organization',\n        name: orgSpec.org.name,\n        avatar: orgSpec.org.logo,\n        region: orgSpec.org.region,\n        status: orgSpec.org.status,\n        category: orgSpec.org.category,\n        currency: orgSpec.org.currency,\n        url: `/${orgSpec.org.slug_name}`,\n        slug_name: orgSpec.org.slug_name,\n        isOfficial: orgSpec.org.is_official,\n        perms: orgSpec.perms.map(item => item.permission)\n      });\n    }\n  }\n\n  return tmp;\n};\nexport const getOrganizations = (data, accountInfo) => {\n  const tmp = [];\n\n  if (data) {\n    const organizations = data.filter(item => item.status === 5);\n\n    for (let org of organizations) {\n      tmp.push({\n        name: org.name,\n        avatar: org.logo,\n        region: org.region,\n        status: org.status,\n        type: 'organization',\n        category: org.category,\n        url: `/${org.slug_name}`,\n        slug_name: org.slug_name,\n        perms: [PERMISSIONS.GRAND],\n        isOfficial: org.is_official,\n        currency: accountInfo.currency\n      });\n    }\n  }\n\n  return tmp;\n};\nexport const getSpecialisms = (data, slug_name) => {\n  const tmp = [];\n\n  if (data) {\n    for (let spec of data) {\n      tmp.push({\n        id: spec.id,\n        name: spec.org.name,\n        url: `/@${slug_name}`,\n        avatar: spec.org.logo,\n        category: spec.job.name\n      });\n    }\n  }\n\n  return tmp;\n};\nexport const getUpdated = (data, slug_name, newData) => {\n  const idx = data.findIndex(item => item.slug_name === slug_name);\n  const item = data.find(item => item.slug_name === slug_name);\n  return [...data.slice(0, idx), { ...item,\n    ...newData\n  }, ...data.slice(idx + 1)];\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Models/account-model/helper.js"],"names":["PERMISSIONS","getAccountInfo","data","slug_name","type","avatar","region","status","url","currency","category","main_cat","perms","GRAND","isOfficial","is_official","name","lastname","getLinkedUsers","tmp","user","push","full_name","username","getSpecOrganizations","accountInfo","orgSpecs","filter","item","length","orgSpec","org","logo","map","permission","getOrganizations","organizations","getSpecialisms","spec","id","job","getUpdated","newData","idx","findIndex","find","slice"],"mappings":"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","sourcesContent":["import {PERMISSIONS} from '../../Constants';\r\n\r\nexport const getAccountInfo = (data, slug_name) => ({\r\n  slug_name,\r\n  type: 'user',\r\n  avatar: data.avatar,\r\n  region: data.region,\r\n  status: data.status,\r\n  url: `/@${slug_name}`,\r\n  currency: data.currency,\r\n  category: data.main_cat,\r\n  perms: [PERMISSIONS.GRAND],\r\n  isOfficial: data.is_official,\r\n  name: `${data.lastname} ${data.name}`,\r\n})\r\n\r\nexport const getLinkedUsers = (data) => {\r\n  const tmp = []\r\n  if (data) {\r\n    for (let user of data) {\r\n      tmp.push({\r\n        type: 'user',\r\n        region: user.region,\r\n        avatar: user.avatar,\r\n        status: user.status,\r\n        name: user.full_name,\r\n        category: user.main_cat,\r\n        currency: user.currency,\r\n        slug_name: user.username,\r\n        isOfficial: user.is_official,\r\n        url: `/@${user.username}`,\r\n        perms: [PERMISSIONS.GRAND],\r\n      })\r\n    }\r\n  }\r\n  return tmp\r\n}\r\n\r\nexport const getSpecOrganizations = (data, accountInfo) => {\r\n  const tmp = []\r\n\r\n  if (data) {\r\n    const orgSpecs = data.filter(item => item.perms.length > 0)\r\n    for (let orgSpec of orgSpecs) {\r\n      tmp.push({\r\n        type: 'organization',\r\n        name: orgSpec.org.name,\r\n        avatar: orgSpec.org.logo,\r\n        region: orgSpec.org.region,\r\n        status: orgSpec.org.status,\r\n        category: orgSpec.org.category,\r\n        currency: orgSpec.org.currency,\r\n        url: `/${orgSpec.org.slug_name}`,\r\n        slug_name: orgSpec.org.slug_name,\r\n        isOfficial: orgSpec.org.is_official,\r\n        perms: orgSpec.perms.map(item => item.permission),\r\n      })\r\n    }\r\n  }\r\n\r\n  return tmp\r\n}\r\n\r\nexport const getOrganizations = (data, accountInfo) => {\r\n  const tmp = []\r\n  if (data) {\r\n    const organizations = data.filter(item => item.status === 5)\r\n    for (let org of organizations) {\r\n      tmp.push({\r\n        name: org.name,\r\n        avatar: org.logo,\r\n        region: org.region,\r\n        status: org.status,\r\n        type: 'organization',\r\n        category: org.category,\r\n        url: `/${org.slug_name}`,\r\n        slug_name: org.slug_name,\r\n        perms: [PERMISSIONS.GRAND],\r\n        isOfficial: org.is_official,\r\n        currency: accountInfo.currency,\r\n      })\r\n    }\r\n  }\r\n  return tmp\r\n}\r\n\r\nexport const getSpecialisms = (data, slug_name) => {\r\n  const tmp = []\r\n  if (data) {\r\n    for (let spec of data) {\r\n      tmp.push({\r\n        id: spec.id,\r\n        name: spec.org.name,\r\n        url: `/@${slug_name}`,\r\n        avatar: spec.org.logo,\r\n        category: spec.job.name,\r\n      })\r\n    }\r\n  }\r\n\r\n  return tmp\r\n}\r\n\r\nexport const getUpdated = (data, slug_name, newData) => {\r\n  const idx = data.findIndex(item => item.slug_name === slug_name)\r\n  const item = data.find(item => item.slug_name === slug_name)\r\n\r\n  return [...data.slice(0, idx), {...item, ...newData}, ...data.slice(idx + 1)]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}