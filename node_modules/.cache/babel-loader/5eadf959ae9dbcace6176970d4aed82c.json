{"ast":null,"code":"import { useCallback, useEffect } from 'react';\nimport { deviceMount } from '../../Models/app';\nimport { DESKTOP, INFO_MAT, MOBILE, TABLET } from '../../Constants/app';\nexport function useIsMobile() {\n  const getDevice = useCallback(() => {\n    let device = null;\n    const width = window.innerWidth;\n\n    if (width > 1200) {\n      device = DESKTOP;\n    } else if (width > 1050 && width < 1090) {\n      device = INFO_MAT;\n    } else if (width < 1200 && width > 768) {\n      device = TABLET;\n    } else if (width < 768) {\n      device = MOBILE;\n    }\n\n    deviceMount(device);\n  }, []);\n  useEffect(() => {\n    getDevice();\n    window.addEventListener('resize', getDevice);\n    return () => {\n      window.removeEventListener('resize', getDevice);\n    };\n  }, [getDevice]);\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/app/use-is-mobile.js"],"names":["useCallback","useEffect","deviceMount","DESKTOP","INFO_MAT","MOBILE","TABLET","useIsMobile","getDevice","device","width","window","innerWidth","addEventListener","removeEventListener"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,QAAqC,OAArC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,OAAR,EAAiBC,QAAjB,EAA2BC,MAA3B,EAAmCC,MAAnC,QAAgD,qBAAhD;AAEA,OAAO,SAASC,WAAT,GAAuB;AAE1B,QAAMC,SAAS,GAAGR,WAAW,CAAC,MAAM;AAChC,QAAIS,MAAM,GAAG,IAAb;AACA,UAAMC,KAAK,GAAGC,MAAM,CAACC,UAArB;;AACA,QAAIF,KAAK,GAAG,IAAZ,EAAkB;AACdD,MAAAA,MAAM,GAAGN,OAAT;AACH,KAFD,MAEM,IAAGO,KAAK,GAAG,IAAR,IAAgBA,KAAK,GAAG,IAA3B,EAAgC;AAClCD,MAAAA,MAAM,GAAGL,QAAT;AACH,KAFK,MAEC,IAAIM,KAAK,GAAG,IAAR,IAAgBA,KAAK,GAAG,GAA5B,EAAiC;AACpCD,MAAAA,MAAM,GAAGH,MAAT;AACH,KAFM,MAEA,IAAII,KAAK,GAAG,GAAZ,EAAiB;AACpBD,MAAAA,MAAM,GAAGJ,MAAT;AACH;;AACDH,IAAAA,WAAW,CAACO,MAAD,CAAX;AACH,GAb4B,EAa1B,EAb0B,CAA7B;AAeAR,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,SAAS;AACTG,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCL,SAAlC;AAEA,WAAO,MAAM;AACTG,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCN,SAArC;AACH,KAFD;AAGH,GAPQ,EAON,CAACA,SAAD,CAPM,CAAT;AAQH","sourcesContent":["import {useCallback, useEffect} from 'react'\nimport {deviceMount} from '../../Models/app'\nimport {DESKTOP, INFO_MAT, MOBILE, TABLET} from '../../Constants/app'\n\nexport function useIsMobile() {\n    \n    const getDevice = useCallback(() => {\n        let device = null\n        const width = window.innerWidth\n        if (width > 1200) {\n            device = DESKTOP\n        }else if(width > 1050 && width < 1090){\n            device = INFO_MAT\n        } else if (width < 1200 && width > 768) {\n            device = TABLET\n        } else if (width < 768) {\n            device = MOBILE\n        }\n        deviceMount(device)\n    }, [])\n    \n    useEffect(() => {\n        getDevice()\n        window.addEventListener('resize', getDevice)\n        \n        return () => {\n            window.removeEventListener('resize', getDevice)\n        }\n    }, [getDevice])\n}"]},"metadata":{},"sourceType":"module"}