{"ast":null,"code":"import{useUrlParams}from'../app';import{useCallback}from'react';import{URL_KEYS}from'../../Constants';import{useHistory}from'react-router-dom';export function useUrlGenerate(){var _useUrlParams=useUrlParams(),urlData=_useUrlParams.urlData;var _useHistory=useHistory(),pathname=_useHistory.location.pathname;var generateUrl=useCallback(function(url_keys,id){var url=[];if(urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]){url.push(\"\".concat(URL_KEYS.SPECIALIST_CATEGORY_ID,\"=\").concat(urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]));}if(!urlData[url_keys]||urlData[url_keys]!==String(id)){url.push(\"\".concat(url_keys,\"=\").concat(id));}return{pathname:pathname,search:url.join('&')};},[pathname,urlData]);var getActive=useCallback(function(url_keys,id){return urlData[url_keys]&&urlData[url_keys]===String(id);},[urlData]);return{generateUrl:generateUrl,getActive:getActive};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/org/use-url-generate.js"],"names":["useUrlParams","useCallback","URL_KEYS","useHistory","useUrlGenerate","urlData","pathname","location","generateUrl","url_keys","id","url","SPECIALIST_CATEGORY_ID","push","String","search","join","getActive"],"mappings":"AAAA,OAAQA,YAAR,KAA2B,QAA3B,CACA,OAAQC,WAAR,KAA0B,OAA1B,CACA,OAAQC,QAAR,KAAuB,iBAAvB,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CAEA,MAAO,SAASC,CAAAA,cAAT,EAA0B,CAC7B,kBAAkBJ,YAAY,EAA9B,CAAOK,OAAP,eAAOA,OAAP,CACA,gBAA+BF,UAAU,EAAzC,CAAkBG,QAAlB,aAAOC,QAAP,CAAkBD,QAAlB,CAEA,GAAME,CAAAA,WAAW,CAAGP,WAAW,CAAC,SAACQ,QAAD,CAAWC,EAAX,CAAkB,CAC9C,GAAMC,CAAAA,GAAG,CAAG,EAAZ,CAEA,GAAIN,OAAO,CAACH,QAAQ,CAACU,sBAAV,CAAX,CAA8C,CAC1CD,GAAG,CAACE,IAAJ,WAAYX,QAAQ,CAACU,sBAArB,aAA+CP,OAAO,CAACH,QAAQ,CAACU,sBAAV,CAAtD,GACH,CAED,GAAI,CAACP,OAAO,CAACI,QAAD,CAAR,EAAsBJ,OAAO,CAACI,QAAD,CAAP,GAAsBK,MAAM,CAACJ,EAAD,CAAtD,CAA4D,CACxDC,GAAG,CAACE,IAAJ,WAAYJ,QAAZ,aAAwBC,EAAxB,GACH,CAED,MAAO,CACHJ,QAAQ,CAARA,QADG,CAEHS,MAAM,CAAEJ,GAAG,CAACK,IAAJ,CAAS,GAAT,CAFL,CAAP,CAKH,CAhB8B,CAgB5B,CAACV,QAAD,CAAWD,OAAX,CAhB4B,CAA/B,CAkBA,GAAMY,CAAAA,SAAS,CAAGhB,WAAW,CAAC,SAACQ,QAAD,CAAWC,EAAX,CAAkB,CAC5C,MAAOL,CAAAA,OAAO,CAACI,QAAD,CAAP,EAAqBJ,OAAO,CAACI,QAAD,CAAP,GAAsBK,MAAM,CAACJ,EAAD,CAAxD,CACH,CAF4B,CAE1B,CAACL,OAAD,CAF0B,CAA7B,CAIA,MAAO,CAACG,WAAW,CAAXA,WAAD,CAAcS,SAAS,CAATA,SAAd,CAAP,CACH","sourcesContent":["import {useUrlParams} from '../app'\nimport {useCallback} from 'react'\nimport {URL_KEYS} from '../../Constants'\nimport {useHistory} from 'react-router-dom'\n\nexport function useUrlGenerate() {\n    const {urlData} = useUrlParams()\n    const {location: {pathname}} = useHistory()\n    \n    const generateUrl = useCallback((url_keys, id) => {\n        const url = []\n        \n        if (urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]) {\n            url.push(`${URL_KEYS.SPECIALIST_CATEGORY_ID}=${urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]}`)\n        }\n        \n        if (!urlData[url_keys] || urlData[url_keys] !== String(id)) {\n            url.push(`${url_keys}=${id}`)\n        }\n        \n        return {\n            pathname,\n            search: url.join('&')\n        }\n        \n    }, [pathname, urlData])\n    \n    const getActive = useCallback((url_keys, id) => {\n        return urlData[url_keys] && urlData[url_keys] === String(id)\n    }, [urlData])\n    \n    return {generateUrl, getActive}\n}"]},"metadata":{},"sourceType":"module"}