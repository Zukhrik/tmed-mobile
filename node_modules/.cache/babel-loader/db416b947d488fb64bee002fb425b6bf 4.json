{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _excluded=[\"checkbox\",\"confirmPassword\"];import*as Yup from'yup';import{useFormik}from'formik';import debounce from'lodash.debounce';import account from'../../Service/account';import{useTranslation}from'react-i18next';import{slugify}from'../../utils/stringUtils';import{URL_KEYS,URL_VALUES}from'../../Constants';import{useCallback,useEffect,useState}from'react';import{useHistory,useLocation}from'react-router-dom';var errors_by_field={phone:'',username:'',password:''};var values={name:'',phone:'',lastname:'',username:'',password:'',checkbox:false,confirmPassword:''};export function useCreateAccount(){var _useHistory=useHistory(),push=_useHistory.push;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useLocation=useLocation(),state=_useLocation.state;var _useState=useState(values),_useState2=_slicedToArray(_useState,2),initialValues=_useState2[0],setInitialValues=_useState2[1];var _useState3=useState(-1),_useState4=_slicedToArray(_useState3,2),usernameStatus=_useState4[0],setUsernameStatus=_useState4[1];var _useState5=useState(errors_by_field),_useState6=_slicedToArray(_useState5,2),fetchedErrors=_useState6[0],setFetchedError=_useState6[1];var validationSchema=Yup.object().shape({name:Yup.string().required(t('required_field')),lastname:Yup.string().required(t('required_field')),username:Yup.string().required(t('required_field')).test('usernameValidation',t(fetchedErrors.username),function(){return fetchedErrors.username.length===0;}),phone:Yup.string().required(t('required_field')).test('phoneError',t(fetchedErrors.phone),function(){return fetchedErrors['phone'].length===0;}),password:Yup.string().min(8,t('at_least_eight_symbols')).required(t('required_field')).test('passwordError',t(fetchedErrors.password),function(){return fetchedErrors['password'].length===0;}),confirmPassword:Yup.string().oneOf([Yup.ref('password'),null],t('password_mismatch')).required(t('required_field'))});var formik=useFormik({initialValues:initialValues,validationSchema:validationSchema,enableReinitialize:true,onSubmit:function onSubmit(values,_ref){var setSubmitting=_ref.setSubmitting;setSubmitting(true);var checkbox=values.checkbox,confirmPassword=values.confirmPassword,data=_objectWithoutProperties(values,_excluded);push({pathname:'/sign-up',search:\"\".concat(URL_KEYS.STEP,\"=\").concat(URL_VALUES.PHONE_VERIFY),state:formik.values});account.createAccount(_objectSpread(_objectSpread({},data),{},{phone:\"+\".concat(data.phone)})).then(function(){push({pathname:'/sign-up',search:\"\".concat(URL_KEYS.STEP,\"=\").concat(URL_VALUES.PHONE_VERIFY),state:formik.values});}).catch(function(error){var errorData=error.response.data.errors||[];var touched={};var data={};if(errorData){for(var i=0;i<errorData.length;i++){touched[errorData[i].field]=true;data[errorData[i].field]=errorData[i].message.replace(/[[\\]']+/g,'');}formik.setTouched(_objectSpread({},touched));formik.setErrors(_objectSpread({},data));setFetchedError(_objectSpread(_objectSpread({},errors_by_field),data));}}).finally(function(){return setSubmitting(false);});}});var validateUsername=function validateUsername(data){var value=data.toLowerCase();formik.setFieldValue('username',slugify(value.toLowerCase()));var touched=formik.touched;var errors=formik.errors;if(value.trim().length>2){account.validateUsername({username:slugify(value.toLowerCase())}).then(function(res){if(res.data.status){setUsernameStatus(1);setFetchedError(errors_by_field);delete touched['username'];delete errors['username'];formik.setErrors(errors);formik.setTouched(touched);}else{formik.setTouched(_objectSpread(_objectSpread({},touched),{},{username:true}));formik.setErrors(_objectSpread(_objectSpread({},errors),{},{username:res.data.error.message}));setUsernameStatus(0);setFetchedError(_objectSpread(_objectSpread({},errors_by_field),{},{username:res.data.error.message}));}});}else{setUsernameStatus(-1);}};var disabledButton=useCallback(function(){return formik.isSubmitting||formik.values.name.trim().length===0||formik.values.lastname.trim().length===0||formik.values.username.trim().length===0||formik.touched.username&&!!formik.errors.username||formik.values.phone.trim().length===0||formik.values.password.trim().length===0||formik.values.confirmPassword.trim().length===0||formik.touched.confirmPassword&&!!formik.errors.confirmPassword||!formik.values.checkbox||fetchedErrors['phone'].length>0;},[formik,fetchedErrors]);var handleUsernameChange=debounce(validateUsername,50);var handleChange=function handleChange(key,value){setFetchedError(errors_by_field);formik.setFieldValue(key,value);};useEffect(function(){if(state){setInitialValues(state);}},[state]);return{formik:formik,handleChange:handleChange,usernameStatus:usernameStatus,disabledButton:disabledButton,handleUsernameChange:handleUsernameChange};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/auth/use-create-account.js"],"names":["Yup","useFormik","debounce","account","useTranslation","slugify","URL_KEYS","URL_VALUES","useCallback","useEffect","useState","useHistory","useLocation","errors_by_field","phone","username","password","values","name","lastname","checkbox","confirmPassword","useCreateAccount","push","t","state","initialValues","setInitialValues","usernameStatus","setUsernameStatus","fetchedErrors","setFetchedError","validationSchema","object","shape","string","required","test","length","min","oneOf","ref","formik","enableReinitialize","onSubmit","setSubmitting","data","pathname","search","STEP","PHONE_VERIFY","createAccount","then","catch","error","errorData","response","errors","touched","i","field","message","replace","setTouched","setErrors","finally","validateUsername","value","toLowerCase","setFieldValue","trim","res","status","disabledButton","isSubmitting","handleUsernameChange","handleChange","key"],"mappings":"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","sourcesContent":["import * as Yup from 'yup'\r\nimport {useFormik} from 'formik'\r\nimport debounce from 'lodash.debounce'\r\nimport account from '../../Service/account'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {slugify} from '../../utils/stringUtils'\r\nimport {URL_KEYS, URL_VALUES} from '../../Constants'\r\nimport {useCallback, useEffect, useState} from 'react'\r\nimport {useHistory, useLocation} from 'react-router-dom'\r\n\r\nconst errors_by_field = {\r\n    phone: '',\r\n    username: '',\r\n    password: ''\r\n}\r\n\r\nconst values = {\r\n    name: '',\r\n    phone: '',\r\n    lastname: '',\r\n    username: '',\r\n    password: '',\r\n    checkbox: false,\r\n    confirmPassword: ''\r\n}\r\n\r\nexport function useCreateAccount() {\r\n    const {push} = useHistory()\r\n    const {t} = useTranslation()\r\n    const {state} = useLocation()\r\n    const [initialValues, setInitialValues] = useState(values)\r\n    const [usernameStatus, setUsernameStatus] = useState(-1)\r\n    const [fetchedErrors, setFetchedError] = useState(errors_by_field)\r\n    \r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string()\r\n            .required(t('required_field')),\r\n        lastname: Yup.string()\r\n            .required(t('required_field')),\r\n        username: Yup.string()\r\n            .required(t('required_field'))\r\n            .test('usernameValidation', t(fetchedErrors.username), () => fetchedErrors.username.length === 0),\r\n        phone: Yup.string()\r\n            .required(t('required_field'))\r\n            .test('phoneError', t(fetchedErrors.phone), () => fetchedErrors['phone'].length === 0),\r\n        password: Yup.string()\r\n            .min(8, t('at_least_eight_symbols'))\r\n            .required(t('required_field'))\r\n            .test('passwordError', t(fetchedErrors.password), () => fetchedErrors['password'].length === 0),\r\n        confirmPassword: Yup.string()\r\n            .oneOf([Yup.ref('password'), null], t('password_mismatch'))\r\n            .required(t('required_field'))\r\n    })\r\n    \r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        enableReinitialize: true,\r\n        onSubmit(values, {setSubmitting}) {\r\n            setSubmitting(true)\r\n            const {checkbox, confirmPassword, ...data} = values\r\n    \r\n            push({\r\n                pathname: '/sign-up',\r\n                search: `${URL_KEYS.STEP}=${URL_VALUES.PHONE_VERIFY}`,\r\n                state: formik.values\r\n            })\r\n    \r\n            account.createAccount({...data, phone: `+${data.phone}`})\r\n                .then(() => {\r\n                    push({\r\n                        pathname: '/sign-up',\r\n                        search: `${URL_KEYS.STEP}=${URL_VALUES.PHONE_VERIFY}`,\r\n                        state: formik.values\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    const errorData = error.response.data.errors || []\r\n                    const touched = {}\r\n                    const data = {}\r\n                    if (errorData) {\r\n                        for (let i = 0; i < errorData.length; i++) {\r\n                            touched[errorData[i].field] = true\r\n                            data[errorData[i].field] = errorData[i].message.replace(/[[\\]']+/g, '')\r\n                    \r\n                        }\r\n                        formik.setTouched({...touched})\r\n                        formik.setErrors({...data})\r\n                        setFetchedError({...errors_by_field, ...data})\r\n                    }\r\n                })\r\n                .finally(() => setSubmitting(false))\r\n        }\r\n    })\r\n    \r\n    const validateUsername = (data) => {\r\n        const value = data.toLowerCase()\r\n        formik.setFieldValue('username', slugify(value.toLowerCase()))\r\n        const touched = formik.touched\r\n        const errors = formik.errors\r\n        if (value.trim().length > 2) {\r\n            account.validateUsername({username: slugify(value.toLowerCase())})\r\n                .then(res => {\r\n                    if (res.data.status) {\r\n                        setUsernameStatus(1)\r\n                        setFetchedError(errors_by_field)\r\n                        delete touched['username']\r\n                        delete errors['username']\r\n                        formik.setErrors(errors)\r\n                        formik.setTouched(touched)\r\n                    } else {\r\n                        formik.setTouched({...touched, username: true})\r\n                        formik.setErrors({...errors, username: res.data.error.message})\r\n                        setUsernameStatus(0)\r\n                        setFetchedError({...errors_by_field, username: res.data.error.message})\r\n                    }\r\n                })\r\n        } else {\r\n            setUsernameStatus(-1)\r\n        }\r\n    }\r\n    \r\n    const disabledButton = useCallback(() => {\r\n        return (\r\n            formik.isSubmitting\r\n            || (formik.values.name.trim().length === 0)\r\n            || (formik.values.lastname.trim().length === 0)\r\n            || (formik.values.username.trim().length === 0)\r\n            || (formik.touched.username && !!formik.errors.username)\r\n            || (formik.values.phone.trim().length === 0)\r\n            || (formik.values.password.trim().length === 0)\r\n            || (formik.values.confirmPassword.trim().length === 0)\r\n            || (formik.touched.confirmPassword && !!formik.errors.confirmPassword)\r\n            || (!formik.values.checkbox)\r\n            || (fetchedErrors['phone'].length > 0)\r\n        )\r\n    }, [formik, fetchedErrors])\r\n    \r\n    const handleUsernameChange = debounce(validateUsername, 50)\r\n    \r\n    const handleChange = (key, value) => {\r\n        setFetchedError(errors_by_field)\r\n        formik.setFieldValue(key, value)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (state) {\r\n            setInitialValues(state)\r\n        }\r\n    }, [state])\r\n    \r\n    return {formik, handleChange, usernameStatus, disabledButton, handleUsernameChange}\r\n}"]},"metadata":{},"sourceType":"module"}