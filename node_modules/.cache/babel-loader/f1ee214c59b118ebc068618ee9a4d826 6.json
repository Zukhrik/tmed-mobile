{"ast":null,"code":"import _objectWithoutProperties from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"label\",\"name\",\"error\",\"hideErrorText\",\"helperText\",\"loading\",\"multiple\",\"options\",\"staticError\"];import React,{useCallback}from'react';import{MultipleSelectedWrap,OptionLoading,StyledChip,StyledFormControl,StyledHelperText,StyledInputError,StyledOptionItem,StyledSelected}from'../atoms';import{TextField}from'@material-ui/core';import{Avatar}from'../../Avatar';export var SelectInput=function SelectInput(_ref){var label=_ref.label,name=_ref.name,error=_ref.error,hideErrorText=_ref.hideErrorText,helperText=_ref.helperText,loading=_ref.loading,multiple=_ref.multiple,options=_ref.options,staticError=_ref.staticError,props=_objectWithoutProperties(_ref,_excluded);var _renderValue=useCallback(function(selected){var data=options.find(function(item){return item.value===selected;});return/*#__PURE__*/React.createElement(StyledSelected,null,data&&data.label);},[options]);var multipleRenderValue=useCallback(function(selected){var data=[];for(var i=0;i<selected.length;i++){for(var j=0;j<options.length;j++){if(selected[i]===options[j].value){data.push(options[j]);}}}return/*#__PURE__*/React.createElement(MultipleSelectedWrap,null,data.map(function(item){return/*#__PURE__*/React.createElement(StyledChip,{key:item.value,label:item.label});}));},[options]);return/*#__PURE__*/React.createElement(StyledFormControl,null,/*#__PURE__*/React.createElement(TextField,Object.assign({},props,{label:label,error:!!error,select:true,variant:\"filled\",SelectProps:{renderValue:function renderValue(selected){return multiple?multipleRenderValue(selected):_renderValue(selected);},multiple:multiple||false,MenuProps:{PaperProps:{style:{maxHeight:30*8+8}},anchorOrigin:{vertical:'bottom',horizontal:'left'},transformOrigin:{vertical:'top',horizontal:'left'},classes:{paper:'select-dropdown'},getContentAnchorEl:null}}}),!loading&&options&&options.length>0&&options.map(function(option,idx){return/*#__PURE__*/React.createElement(StyledOptionItem,{key:\"\".concat(idx+1),value:option.value,disableRipple:true},option.image&&/*#__PURE__*/React.createElement(Avatar,{imgUrl:option.image,size:24}),option.label);}),(options===undefined||options.length===0)&&/*#__PURE__*/React.createElement(OptionLoading,null,\"no data\")),helperText&&/*#__PURE__*/React.createElement(StyledHelperText,null,helperText),!hideErrorText&&error&&/*#__PURE__*/React.createElement(StyledInputError,{staticError:staticError},error));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/UIComponents/mu-inputs/maleculas/select-input.js"],"names":["React","useCallback","MultipleSelectedWrap","OptionLoading","StyledChip","StyledFormControl","StyledHelperText","StyledInputError","StyledOptionItem","StyledSelected","TextField","Avatar","SelectInput","label","name","error","hideErrorText","helperText","loading","multiple","options","staticError","props","renderValue","selected","data","find","item","value","multipleRenderValue","i","length","j","push","map","MenuProps","PaperProps","style","maxHeight","anchorOrigin","vertical","horizontal","transformOrigin","classes","paper","getContentAnchorEl","option","idx","image","undefined"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {\r\n    MultipleSelectedWrap,\r\n    OptionLoading,\r\n    StyledChip,\r\n    StyledFormControl,\r\n    StyledHelperText,\r\n    StyledInputError,\r\n    StyledOptionItem,\r\n    StyledSelected\r\n} from '../atoms'\r\nimport {TextField} from '@material-ui/core'\r\nimport {Avatar} from '../../Avatar'\r\n\r\nexport const SelectInput = (\r\n    {\r\n        label,\r\n        name,\r\n        error,\r\n        hideErrorText,\r\n        helperText,\r\n        loading,\r\n        multiple,\r\n        options,\r\n        staticError,\r\n        ...props\r\n    }\r\n) => {\r\n    const renderValue = useCallback((selected) => {\r\n        const data = options.find((item) => item.value === selected)\r\n        return (\r\n            <StyledSelected>\r\n                {\r\n                    data && data.label\r\n                }\r\n            </StyledSelected>\r\n        )\r\n    }, [options])\r\n    \r\n    const multipleRenderValue = useCallback((selected) => {\r\n        const data = []\r\n        for (let i = 0; i < selected.length; i++) {\r\n            for (let j = 0; j < options.length; j++) {\r\n                if (selected[i] === options[j].value) {\r\n                    data.push(options[j])\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <MultipleSelectedWrap>\r\n                {\r\n                    data.map((item) => (\r\n                        <StyledChip\r\n                            key={item.value}\r\n                            label={item.label}\r\n                        />\r\n                    ))\r\n                }\r\n            </MultipleSelectedWrap>\r\n        )\r\n    }, [options])\r\n    return (\r\n        <StyledFormControl>\r\n            <TextField\r\n                {...props}\r\n                label={label}\r\n                error={!!error}\r\n                select\r\n                variant='filled'\r\n                SelectProps={\r\n                    {\r\n                        renderValue: (selected) => (\r\n                            multiple ? multipleRenderValue(selected) : renderValue(selected)\r\n                        ),\r\n                        multiple: multiple || false,\r\n                        MenuProps: {\r\n                            PaperProps: {\r\n                                style: {\r\n                                    maxHeight: 30 * 8 + 8\r\n                                }\r\n                            },\r\n                            anchorOrigin: {\r\n                                vertical: 'bottom',\r\n                                horizontal: 'left'\r\n                            },\r\n                            transformOrigin: {\r\n                                vertical: 'top',\r\n                                horizontal: 'left'\r\n                            },\r\n                            classes: {paper: 'select-dropdown'},\r\n                            getContentAnchorEl: null\r\n                        }\r\n                    }\r\n                }\r\n            >\r\n                {\r\n                    !loading && options && options.length > 0 && options.map((option, idx) => (\r\n                        <StyledOptionItem\r\n                            key={`${idx + 1}`}\r\n                            value={option.value}\r\n                            disableRipple\r\n                        >\r\n                            {option.image && <Avatar imgUrl={option.image} size={24}/>}\r\n                            {option.label}\r\n                        </StyledOptionItem>\r\n                    ))\r\n                }\r\n                {\r\n                    (options === undefined || options.length === 0)\r\n                    && (\r\n                        <OptionLoading>\r\n                            {/*{*/}\r\n                            {/*    loading && <CircularProgress size={16} />*/}\r\n                            {/*}*/}\r\n                            {/*<img src={noData} alt=\"noData\" />*/}\r\n                            no data\r\n                        </OptionLoading>\r\n                    )\r\n                }\r\n            </TextField>\r\n            {helperText && <StyledHelperText>{helperText}</StyledHelperText>}\r\n            {!hideErrorText && error && <StyledInputError staticError={staticError}>{error}</StyledInputError>}\r\n        </StyledFormControl>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}