{"ast":null,"code":"import _toConsumableArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{combine,createStore}from'effector';import{postWantingScheduleIdMount,streamChannelWSChatMount,streamLiveWatchersMount}from'./events';import{commonStoreList,storeListWithKey,storeWithKey}from'../../utils/store-utils';import{fetchAllStreamList,fetchChannelStreamSchedule,fetchStream,fetchStreamChannelChat,fetchStreamScheduleId}from'./effects';var $allStreamList=createStore({loading:false,data:[],forceLoading:0,result:{},error:false}).on(fetchAllStreamList.pending,function(state,loading){return _objectSpread(_objectSpread({},state),{},{loading:loading});}).on(fetchAllStreamList.fail,function(state,_ref){var error=_ref.error;return _objectSpread(_objectSpread({},state),{},{error:error,data:[],result:{},forceLoading:state.forceLoading===2?state.forceLoading:1});}).on(fetchAllStreamList.done,function(state,_ref2){var result=_ref2.result,params=_ref2.params;var processed=commonStoreList(_objectSpread({response:result.data,state:state,clear:params.clear},params.params));return _objectSpread(_objectSpread(_objectSpread({},state),processed),{},{forceLoading:2});});var $stream=createStore({loading:false,data:{},error:false,forceLoading:0}).on(fetchStream.pending,function(state,loading){return _objectSpread(_objectSpread({},state),{},{loading:loading});}).on(fetchStream.fail,function(state,_ref3){var error=_ref3.error;return _objectSpread(_objectSpread({},state),{},{error:error,data:{},forceLoading:state.forceLoading===2?state.forceLoading:1});}).on(fetchStream.done,function(state,_ref4){var result=_ref4.result,params=_ref4.params;return _objectSpread(_objectSpread({},state),{},{data:result.data,forceLoading:2});}).on(streamLiveWatchersMount,function(state,payload){var _state$data;var watchers=state===null||state===void 0?void 0:(_state$data=state.data)===null||_state$data===void 0?void 0:_state$data.live_watchers;if(payload.count){watchers=Number(payload.count);if(state.data){state.data.live_watchers=watchers;}}return _objectSpread(_objectSpread({},state),{},{data:state.data});});var $channelStreamScheduleList=createStore({loading:false,data:{},result:{},error:false,forceLoading:0}).on(fetchChannelStreamSchedule.pending,function(state,loading){return _objectSpread(_objectSpread({},state),{},{loading:loading});}).on(fetchChannelStreamSchedule.fail,function(state,_ref5){var error=_ref5.error;return _objectSpread(_objectSpread({},state),{},{error:error,data:{},result:{},forceLoading:state.forceLoading===2?state.forceLoading:1});}).on(fetchChannelStreamSchedule.done,function(state,_ref6){var params=_ref6.params,result=_ref6.result;var processed=storeListWithKey(_objectSpread({response:result.data,state:state,key:params.slug_name,clear:params.clear},params.params));return _objectSpread(_objectSpread(_objectSpread({},state),processed),{},{forceLoading:2});}).on(postWantingScheduleIdMount,function(state,params){var slug_name=params.slug_name;var schedule_id=params.schedule_id;var data=_objectSpread({},state.data);if(data[schedule_id]){var oldData=data[slug_name];data[slug_name]=_objectSpread(_objectSpread({},oldData),{},{is_wanting:true});}return _objectSpread(_objectSpread({},state),{},{data:data});});// $channelStreamScheduleList.watch(console.log)\nvar $streamScheduleId=createStore({loading:false,data:{},result:{},error:false}).on(fetchStreamScheduleId.pending,function(state,loading){return _objectSpread(_objectSpread({},state),{},{loading:loading});}).on(fetchStreamScheduleId.fail,function(state,_ref7){var error=_ref7.error;return _objectSpread(_objectSpread({},state),{},{error:error,data:{},result:{}});}).on(fetchStreamScheduleId.done,function(state,_ref8){var result=_ref8.result,params=_ref8.params;var processed=storeWithKey(_objectSpread({response:result.data,state:state,key:params.schedule_id,clear:params.clear},params.params));return _objectSpread(_objectSpread({},state),processed);}).on(postWantingScheduleIdMount,function(state,params){var schedule_id=params.schedule_id;var slug_name=params.slug_name;var data=_objectSpread({},state.data);if(data[schedule_id]){var idx=data[slug_name].findIndex(function(item){return!Array.isArray(item.id)===schedule_id;});var oldData=data[schedule_id][idx];data[slug_name]=[].concat(_toConsumableArray(data[slug_name].slice(0,idx)),[_objectSpread(_objectSpread({},oldData),{},{is_wanting:true})],_toConsumableArray(data[slug_name].slice(idx+1)));}return _objectSpread(_objectSpread({},state),{},{data:data});});var $streamChannelChat=createStore({loading:false,error:false,data:[]}).on(fetchStreamChannelChat.pending,function(state,loading){return _objectSpread(_objectSpread({},state),{},{loading:loading});}).on(fetchStreamChannelChat.fail,function(state,_ref9){var error=_ref9.error;return _objectSpread(_objectSpread({},state),{},{error:error,data:[]});}).on(fetchStreamChannelChat.done,function(state,_ref10){var result=_ref10.result,params=_ref10.params;var processed=commonStoreList(_objectSpread({response:result.data,state:state,clear:params.clear},params.params));return _objectSpread(_objectSpread({},state),processed);}).on(streamChannelWSChatMount,function(state,payload){return _objectSpread(_objectSpread({},state),{},{data:[payload].concat(_toConsumableArray(state.data))});});export var $streamModel=combine({$stream:$stream,$allStreamList:$allStreamList,$streamScheduleId:$streamScheduleId,$streamChannelChat:$streamChannelChat,$channelStreamScheduleList:$channelStreamScheduleList});","map":null,"metadata":{},"sourceType":"module"}