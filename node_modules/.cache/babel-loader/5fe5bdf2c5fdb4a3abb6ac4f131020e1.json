{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OverlayOfferingGroup/index.jsx\";\nimport React, { useCallback, useState } from 'react';\nimport { OfferGroupWrapper, OfferingGroupSearchForm } from '../style';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { OfferingGroupItem } from '../OfferingGroupItem';\nimport { URL_KEYS } from '../../../../Constants';\nimport { useUrlParams } from '../../../../Hooks/app';\nimport { useLocation, useParams } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { $offeringsModel, orgOfferGroupListMount } from '../../../../Models/offerings-model';\nimport { SearchSvg } from '../../../../Icons/Search';\nimport { useTranslation } from 'react-i18next';\nexport const OverlayOfferingGroup = ({\n  loadMore\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    urlData\n  } = useUrlParams();\n  const {\n    pathname\n  } = useLocation();\n  const {\n    organization\n  } = useParams();\n  const [searchText, setSearchText] = useState('');\n  const groupId = urlData[URL_KEYS.OFFERING_GROUP_ID];\n  const {\n    $offeringGroupList: {\n      data,\n      loading,\n      result\n    }\n  } = useStore($offeringsModel);\n  const generateUrl = useCallback(id => {\n    const url = [];\n\n    if (urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]) {\n      url.push(`${URL_KEYS.SPECIALIST_CATEGORY_ID}=${urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]}`);\n    }\n\n    if (urlData[URL_KEYS.SPECIALIST_ID]) {\n      url.push(`${URL_KEYS.SPECIALIST_ID}=${urlData[URL_KEYS.SPECIALIST_ID]}`);\n    }\n\n    if (!groupId || groupId !== String(id)) {\n      url.push(`${URL_KEYS.OFFERING_GROUP_ID}=${id}`);\n    }\n\n    return {\n      pathname,\n      search: url.join('&')\n    };\n  }, [pathname, groupId, urlData]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchText.length > 2) {\n      const params = {\n        clear: true,\n        organization: organization,\n        params: {\n          search: searchText\n        }\n      };\n      orgOfferGroupListMount(params);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(OfferGroupWrapper, {\n    id: \"scrollableDiv\",\n    style: {\n      height: 400,\n      overflow: 'auto',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    next: loadMore,\n    dataLength: (result === null || result === void 0 ? void 0 : result.nextOffset) || 20,\n    hasMore: !loading && !!(result === null || result === void 0 ? void 0 : result.next),\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, \"...loading\"),\n    style: {\n      overflow: 'hide',\n      width: '100%'\n    },\n    scrollableTarget: \"scrollableDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(OfferingGroupSearchForm, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: `${t('search')}...`,\n    value: searchText,\n    onChange: e => setSearchText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(SearchSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    gutter: [12, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, data && data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    className: \"centered\",\n    key: `${idx + 1}`,\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(OfferingGroupItem, {\n    name: item.name,\n    imgUrl: item.image,\n    path: generateUrl(item.id),\n    isActive: () => groupId && groupId === String(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Offering/OrgOfferings/OverlayOfferingGroup/index.jsx"],"names":["React","useCallback","useState","OfferGroupWrapper","OfferingGroupSearchForm","Col","Row","useStore","OfferingGroupItem","URL_KEYS","useUrlParams","useLocation","useParams","InfiniteScroll","$offeringsModel","orgOfferGroupListMount","SearchSvg","useTranslation","OverlayOfferingGroup","loadMore","t","urlData","pathname","organization","searchText","setSearchText","groupId","OFFERING_GROUP_ID","$offeringGroupList","data","loading","result","generateUrl","id","url","SPECIALIST_CATEGORY_ID","push","SPECIALIST_ID","String","search","join","handleSubmit","e","preventDefault","length","params","clear","height","overflow","width","nextOffset","next","target","value","map","item","idx","name","image"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react'\nimport {OfferGroupWrapper, OfferingGroupSearchForm} from '../style'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {OfferingGroupItem} from '../OfferingGroupItem'\nimport {URL_KEYS} from '../../../../Constants'\nimport {useUrlParams} from '../../../../Hooks/app'\nimport {useLocation, useParams} from 'react-router-dom'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport {$offeringsModel, orgOfferGroupListMount} from '../../../../Models/offerings-model'\nimport {SearchSvg} from '../../../../Icons/Search'\nimport {useTranslation} from 'react-i18next'\n\nexport const OverlayOfferingGroup = ({loadMore}) => {\n    const {t} = useTranslation()\n    const {urlData} = useUrlParams()\n    const {pathname} = useLocation()\n    const {organization} = useParams()\n    const [searchText, setSearchText] = useState('')\n    const groupId = urlData[URL_KEYS.OFFERING_GROUP_ID]\n    const {$offeringGroupList: {data, loading, result}} = useStore($offeringsModel)\n    \n    const generateUrl = useCallback((id) => {\n        const url = []\n        if (urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]) {\n            url.push(`${URL_KEYS.SPECIALIST_CATEGORY_ID}=${urlData[URL_KEYS.SPECIALIST_CATEGORY_ID]}`)\n        }\n        \n        if (urlData[URL_KEYS.SPECIALIST_ID]) {\n            url.push(`${URL_KEYS.SPECIALIST_ID}=${urlData[URL_KEYS.SPECIALIST_ID]}`)\n        }\n        \n        if (!groupId || groupId !== String(id)) {\n            url.push(`${URL_KEYS.OFFERING_GROUP_ID}=${id}`)\n        }\n        \n        return {\n            pathname,\n            search: url.join('&')\n        }\n    }, [pathname, groupId, urlData])\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (searchText.length > 2) {\n            const params = {\n                clear: true,\n                organization: organization,\n                params: {\n                    search: searchText\n                }\n            }\n            orgOfferGroupListMount(params)\n        }\n    }\n    \n    \n    return (\n        <OfferGroupWrapper id='scrollableDiv' style={{height: 400, overflow: 'auto', width: '100%'}}>\n            <InfiniteScroll\n                next={loadMore}\n                dataLength={result?.nextOffset || 20}\n                hasMore={!loading && !!result?.next}\n                loader={<>...loading</>}\n                style={{overflow: 'hide', width: '100%'}}\n                scrollableTarget='scrollableDiv'\n            >\n                <OfferingGroupSearchForm onSubmit={handleSubmit}>\n                    <input\n                        placeholder={`${t('search')}...`}\n                        value={searchText}\n                        onChange={(e) => setSearchText(e.target.value)}\n                    />\n                    <SearchSvg/>\n                </OfferingGroupSearchForm>\n                <Row gutter={[12, 12]}>\n                    {\n                        data && data.map((item, idx) => (\n                            <Col\n                                className='centered'\n                                key={`${idx + 1}`} span={8}\n                            >\n                                <OfferingGroupItem\n                                    name={item.name}\n                                    imgUrl={item.image}\n                                    path={generateUrl(item.id)}\n                                    isActive={() => groupId && groupId === String(item.id)}\n                                />\n                            </Col>\n                        ))\n                    }\n                </Row>\n            </InfiniteScroll>\n        </OfferGroupWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}