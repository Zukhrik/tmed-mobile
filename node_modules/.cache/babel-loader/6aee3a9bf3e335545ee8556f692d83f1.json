{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as Yup from'yup';import moment from'moment';import{useFormik}from'formik';import{useStore}from'effector-react';import{$appModel}from'../../Models/app';import{useCallback,useState}from'react';import payment from'../../Service/payment';import{useTranslation}from'react-i18next';import{accountCardMount}from'../../Models/payment-model';var defaultValue={name:'',number:'',expire_date:null};var defaultCodeValue={activate_code:''};export function useCreateAccountCard(_ref){var onClose=_ref.onClose,setPayment=_ref.setPayment,paymentState=_ref.payment;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showResend=_useState2[0],setShowResend=_useState2[1];var _useState3=useState(Date.now()+1000*60),_useState4=_slicedToArray(_useState3,2),deadline=_useState4[0],setDeadline=_useState4[1];var _useStore=useStore($appModel),creditCardId=_useStore.$app.cardId;var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),cardId=_useState6[0],setCardId=_useState6[1];var getCard=useCallback(function(number){var tmp='';for(var i=0;i<number.length;i++){if(i%4===0){tmp+=' '+number[i];}else{tmp+=number[i];}}return tmp;},[]);var validationSchema=Yup.object().shape({number:Yup.string().required(t('required_field')).test('regexTest',t('required_field'),function(value){return value&&value.match(/^(\\d\\s*){16}$/);}),expire_date:Yup.mixed().required(t('required_field')).test('regexTest',t('required_field'),function(value){return value&&moment(value).format('MM/YY').replace(/\\//g,'').match(/^(\\d\\s*){4}$/);})});var codeValidationSchema=Yup.object().shape({activate_code:Yup.string().required(t('required_field')).test('regexTest',t('required_field'),function(value){return value&&value.match(/^(\\d\\s*){6}$/);})});var formik=useFormik({validationSchema:validationSchema,initialValues:_objectSpread({},defaultValue),onSubmit:function onSubmit(values,_ref2){var setSubmitting=_ref2.setSubmitting;setSubmitting(true);var number=values.number,expire_date=values.expire_date,name=values.name;var data={name:name,card_number:number.replace(/\\s/g,''),expire:expire_date.add(moment,'MM/YY').format('MM/YY')};payment.crateAccountCard(data).then(function(res){if(res){setCardId(res.data.id);}}).catch(function(error){console.log(error);}).finally(function(){setSubmitting(false);});}});var codeFormik=useFormik({validationSchema:codeValidationSchema,initialValues:_objectSpread({},defaultCodeValue),onSubmit:function onSubmit(values,_ref3){var setSubmitting=_ref3.setSubmitting;setSubmitting(true);var activate_code=values.activate_code;if(activate_code.replace(/\\s/g,'').length>0){var params={id:cardId?cardId:creditCardId,data:{code:activate_code.replace(/\\s/g,'')}};console.log(activate_code);payment.verifyAccountCard(params).then(function(res){if(res){onClose();accountCardMount();if(paymentState){setPayment({id:res.data.id,title:\"\".concat(getCard(res.data.card_number),\" \").concat(res.data.name),extraId:3});}setCardId(null);}}).catch(function(error){console.log(error);}).finally(function(){setSubmitting(false);});}}});var disabledButtonCode=useCallback(function(){return codeFormik.isSubmitting||codeFormik.touched.activate_code&&!!codeFormik.errors.activate_code;},[codeFormik]);var disabledButton=useCallback(function(){return formik.isSubmitting||formik.touched.number&&!!formik.errors.number||formik.touched.expire_date&&!!formik.errors.expire_date;},[formik]);var handleChangeCode=function handleChangeCode(key,value){codeFormik.setFieldValue(key,value);};var handleChange=function handleChange(key,value){formik.setFieldValue(key,value);};var resendCode=useCallback(function(){payment.resendPayMeCode({id:cardId?cardId:creditCardId}).then(function(res){if(res){setDeadline(Date.now()+1000*60);setShowResend(false);}});},[cardId,creditCardId]);return{formik:formik,cardId:cardId,deadline:deadline,setCardId:setCardId,showResend:showResend,codeFormik:codeFormik,resendCode:resendCode,handleChange:handleChange,setShowResend:setShowResend,disabledButton:disabledButton,handleChangeCode:handleChangeCode,disabledButtonCode:disabledButtonCode};}","map":null,"metadata":{},"sourceType":"module"}