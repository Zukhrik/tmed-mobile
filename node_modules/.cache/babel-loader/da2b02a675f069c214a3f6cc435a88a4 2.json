{"ast":null,"code":"import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState}from'react';import{EmptyContainerWrapper,RootContent}from'../../../UIComponents/GlobalStyles';import{FixedHeader}from'../../../Components/FixedHeader';import{HomeFixedHeaderComponent}from'../organisms';import{useHomeList}from'../../../Hooks/home';import InfiniteScroll from'react-infinite-scroll-component';import{Col,Row}from'antd';import{useStore}from'effector-react';import{$orgModel}from'../../../Models/org-model';import{useHistory}from'react-router-dom';import{generateSkeleton}from'../../../utils/skeleton-utils';import{OrganizationCard,OrganizationCardSkeleton}from'../../../Components/Cards/OrganizationCard';import{NoSearchResultSvg}from'../../../Icons/NoSearchResult';import{Title}from'../../../UIComponents/Typography/Title';import{useTranslation}from'react-i18next';import{OrgsSearchInput}from'../molecules';import org from'../../../Service/org';var skeleton=generateSkeleton(10);export var Home=function Home(){var _useHistory=useHistory(),push=_useHistory.push;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useHomeList=useHomeList(),loadMore=_useHomeList.loadMore;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modal=_useState2[0],setModal=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),orgList=_useState4[0],setOrgList=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),orgSearch=_useState6[0],setOrgSearch=_useState6[1];var _useStore=useStore($orgModel),_useStore$$allOrgList=_useStore.$allOrgList,data=_useStore$$allOrgList.data,result=_useStore$$allOrgList.result,loading=_useStore$$allOrgList.loading,forceLoading=_useStore$$allOrgList.forceLoading;var handleOrgItemClick=function handleOrgItemClick(item){push(\"/\".concat(item.slug_name,\"/offerings\"));};var handleSubmit=useCallback(function(e){e.preventDefault();if(orgSearch.length>3){var _data={clear:true,params:{search:orgSearch}};org.getAllOrg(_data).then(function(res){if(res){setOrgList(res.data.results);}});}},[orgSearch]);var onClose=function onClose(){setModal(false);setOrgList([]);setOrgSearch('');};return/*#__PURE__*/React.createElement(RootContent,{paddingTop:62},/*#__PURE__*/React.createElement(OrgsSearchInput,{visible:modal,onCancel:onClose,setModal:setModal,setOrgSearch:setOrgSearch,orgSearch:orgSearch,handleSubmit:handleSubmit,orgList:orgList}),/*#__PURE__*/React.createElement(FixedHeader,{component:/*#__PURE__*/React.createElement(HomeFixedHeaderComponent,{setModal:setModal})}),/*#__PURE__*/React.createElement(InfiniteScroll,{next:loadMore,hasMore:!loading&&!!result.next,dataLength:result.nextOffset||10,loader:/*#__PURE__*/React.createElement(React.Fragment,null,\"...loading\")},forceLoading===2&&data?/*#__PURE__*/React.createElement(React.Fragment,null,data.length>0?/*#__PURE__*/React.createElement(Row,{className:\"container\",gutter:[0,12]},data.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{span:24,key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(OrganizationCard,{name:item.name,imgUrl:item.logo,containerPath:function containerPath(){return handleOrgItemClick(item);},category:item.category.name,ethics:item.rating.ethics.level,aesthetics:item.rating.aesthetics.level,professional:item.rating.professional.level}));})):/*#__PURE__*/React.createElement(EmptyContainerWrapper,{style:{height:'80vh'}},/*#__PURE__*/React.createElement(NoSearchResultSvg,null),/*#__PURE__*/React.createElement(Title,{level:4},t('no_search_result')))):/*#__PURE__*/React.createElement(Row,{className:\"container\",gutter:[0,12]},skeleton.map(function(item,idx){return/*#__PURE__*/React.createElement(Col,{span:24,key:\"\".concat(idx+1)},/*#__PURE__*/React.createElement(OrganizationCardSkeleton,null));}))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Home/pages/home.jsx"],"names":["React","useCallback","useState","EmptyContainerWrapper","RootContent","FixedHeader","HomeFixedHeaderComponent","useHomeList","InfiniteScroll","Col","Row","useStore","$orgModel","useHistory","generateSkeleton","OrganizationCard","OrganizationCardSkeleton","NoSearchResultSvg","Title","useTranslation","OrgsSearchInput","org","skeleton","Home","push","t","loadMore","modal","setModal","orgList","setOrgList","orgSearch","setOrgSearch","$allOrgList","data","result","loading","forceLoading","handleOrgItemClick","item","slug_name","handleSubmit","e","preventDefault","length","clear","params","search","getAllOrg","then","res","results","onClose","next","nextOffset","map","idx","name","logo","category","rating","ethics","level","aesthetics","professional","height"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react'\nimport {EmptyContainerWrapper, RootContent} from '../../../UIComponents/GlobalStyles'\nimport {FixedHeader} from '../../../Components/FixedHeader'\nimport {HomeFixedHeaderComponent} from '../organisms'\nimport {useHomeList} from '../../../Hooks/home'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {$orgModel} from '../../../Models/org-model'\nimport {useHistory} from 'react-router-dom'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {OrganizationCard, OrganizationCardSkeleton} from '../../../Components/Cards/OrganizationCard'\nimport {NoSearchResultSvg} from '../../../Icons/NoSearchResult'\nimport {Title} from '../../../UIComponents/Typography/Title'\nimport {useTranslation} from 'react-i18next'\nimport {OrgsSearchInput} from '../molecules'\nimport org from '../../../Service/org'\n\nconst skeleton = generateSkeleton(10)\nexport const Home = () => {\n    const {push} = useHistory()\n    const {t} = useTranslation()\n    const {loadMore} = useHomeList()\n    const [modal, setModal] = useState(false)\n    const [orgList, setOrgList] = useState([])\n    const [orgSearch, setOrgSearch] = useState('')\n    const {$allOrgList: {data, result, loading, forceLoading}} = useStore($orgModel)\n    \n    const handleOrgItemClick = (item) => {\n        push(`/${item.slug_name}/offerings`)\n    }\n    \n    const handleSubmit = useCallback((e) => {\n        e.preventDefault()\n        if (orgSearch.length > 3) {\n            const data = {\n                clear: true,\n                params: {\n                    search: orgSearch\n                }\n            }\n            org.getAllOrg(data)\n                .then(res => {\n                    if (res) {\n                        setOrgList(res.data.results)\n                    }\n                })\n        }\n    }, [orgSearch])\n    \n    const onClose = () => {\n        setModal(false)\n        setOrgList([])\n        setOrgSearch('')\n    }\n    \n    return (\n        <RootContent paddingTop={62}>\n            <OrgsSearchInput\n                visible={modal}\n                onCancel={onClose}\n                setModal={setModal}\n                setOrgSearch={setOrgSearch}\n                orgSearch={orgSearch}\n                handleSubmit={handleSubmit}\n                orgList={orgList}\n            />\n            <FixedHeader component={<HomeFixedHeaderComponent setModal={setModal}/>}/>\n            <InfiniteScroll\n                next={loadMore}\n                hasMore={!loading && !!result.next}\n                dataLength={result.nextOffset || 10}\n                loader={<>...loading</>}\n            >\n                {\n                    forceLoading === 2 && data\n                        ? (\n                            <>\n                                {\n                                    data.length > 0\n                                        ? (\n                                            <Row className='container' gutter={[0, 12]}>\n                                                {\n                                                    data.map((item, idx) => (\n                                                        <Col span={24} key={`${idx + 1}`}>\n                                                            <OrganizationCard\n                                                                name={item.name}\n                                                                imgUrl={item.logo}\n                                                                containerPath={() => handleOrgItemClick(item)}\n                                                                category={item.category.name}\n                                                                ethics={item.rating.ethics.level}\n                                                                aesthetics={item.rating.aesthetics.level}\n                                                                professional={item.rating.professional.level}\n                                                            />\n                                                        </Col>\n                                                    ))\n                                                }\n                                            </Row>\n                                        ) : (\n                                            <EmptyContainerWrapper style={{height: '80vh'}}>\n                                                <NoSearchResultSvg/>\n                                                <Title level={4}>{t('no_search_result')}</Title>\n                                            </EmptyContainerWrapper>\n                                        )\n                                }\n                            </>\n                        )\n                        : (\n                            <Row className='container' gutter={[0, 12]}>\n                                {\n                                    skeleton.map((item, idx) => (\n                                        <Col span={24} key={`${idx + 1}`}>\n                                            <OrganizationCardSkeleton/>\n                                        </Col>\n                                    ))\n                                }\n                            </Row>\n                        )\n                }\n            </InfiniteScroll>\n        \n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}