{"ast":null,"code":"import _toConsumableArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{combine,createStore}from'effector';import{postWantingScheduleIdMount,streamChannelWSChatMount,streamLiveWatchersMount}from'./events';import{commonStoreList,storeListWithKey,storeWithKey}from'../../utils/store-utils';import{fetchAllStreamList,fetchChannelStreamSchedule,fetchStream,fetchStreamChannelChat,fetchStreamScheduleId}from'./effects';var $allStreamList=createStore({loading:false,data:[],forceLoading:0,result:{},error:false}).on(fetchAllStreamList.pending,function(state,loading){return _objectSpread(_objectSpread({},state),{},{loading:loading});}).on(fetchAllStreamList.fail,function(state,_ref){var error=_ref.error;return _objectSpread(_objectSpread({},state),{},{error:error,data:[],result:{},forceLoading:state.forceLoading===2?state.forceLoading:1});}).on(fetchAllStreamList.done,function(state,_ref2){var result=_ref2.result,params=_ref2.params;var processed=commonStoreList(_objectSpread({response:result.data,state:state,clear:params.clear},params.params));return _objectSpread(_objectSpread(_objectSpread({},state),processed),{},{forceLoading:2});});var $stream=createStore({loading:false,data:{},error:false,forceLoading:0}).on(fetchStream.pending,function(state,loading){return _objectSpread(_objectSpread({},state),{},{loading:loading});}).on(fetchStream.fail,function(state,_ref3){var error=_ref3.error;return _objectSpread(_objectSpread({},state),{},{error:error,data:{},forceLoading:state.forceLoading===2?state.forceLoading:1});}).on(fetchStream.done,function(state,_ref4){var result=_ref4.result,params=_ref4.params;return _objectSpread(_objectSpread({},state),{},{data:result.data,forceLoading:2});}).on(streamLiveWatchersMount,function(state,payload){var _state$data;var watchers=state===null||state===void 0?void 0:(_state$data=state.data)===null||_state$data===void 0?void 0:_state$data.live_watchers;if(payload.count){watchers=Number(payload.count);if(state.data){state.data.live_watchers=watchers;}}return _objectSpread(_objectSpread({},state),{},{data:state.data});});var $channelStreamScheduleList=createStore({loading:false,data:{},result:{},error:false,forceLoading:0}).on(fetchChannelStreamSchedule.pending,function(state,loading){return _objectSpread(_objectSpread({},state),{},{loading:loading});}).on(fetchChannelStreamSchedule.fail,function(state,_ref5){var error=_ref5.error;return _objectSpread(_objectSpread({},state),{},{error:error,data:{},result:{},forceLoading:state.forceLoading===2?state.forceLoading:1});}).on(fetchChannelStreamSchedule.done,function(state,_ref6){var params=_ref6.params,result=_ref6.result;var processed=storeListWithKey(_objectSpread({response:result.data,state:state,key:params.slug_name,clear:params.clear},params.params));return _objectSpread(_objectSpread(_objectSpread({},state),processed),{},{forceLoading:2});}).on(postWantingScheduleIdMount,function(state,params){var slug_name=params.slug_name;var schedule_id=params.schedule_id;var data=_objectSpread({},state.data);if(data[schedule_id]){var oldData=data[slug_name];data[slug_name]=_objectSpread(_objectSpread({},oldData),{},{is_wanting:true});}return _objectSpread(_objectSpread({},state),{},{data:data});});// $channelStreamScheduleList.watch(console.log)\nvar $streamScheduleId=createStore({loading:false,data:{},result:{},error:false}).on(fetchStreamScheduleId.pending,function(state,loading){return _objectSpread(_objectSpread({},state),{},{loading:loading});}).on(fetchStreamScheduleId.fail,function(state,_ref7){var error=_ref7.error;return _objectSpread(_objectSpread({},state),{},{error:error,data:{},result:{}});}).on(fetchStreamScheduleId.done,function(state,_ref8){var result=_ref8.result,params=_ref8.params;var processed=storeWithKey(_objectSpread({response:result.data,state:state,key:params.schedule_id,clear:params.clear},params.params));return _objectSpread(_objectSpread({},state),processed);}).on(postWantingScheduleIdMount,function(state,params){var schedule_id=params.schedule_id;var slug_name=params.slug_name;var data=_objectSpread({},state.data);if(data[schedule_id]){var idx=data[slug_name].findIndex(function(item){return!Array.isArray(item.id)===schedule_id;});var oldData=data[schedule_id][idx];data[slug_name]=[].concat(_toConsumableArray(data[slug_name].slice(0,idx)),[_objectSpread(_objectSpread({},oldData),{},{is_wanting:true})],_toConsumableArray(data[slug_name].slice(idx+1)));}return _objectSpread(_objectSpread({},state),{},{data:data});});var $streamChannelChat=createStore({loading:false,error:false,data:[]}).on(fetchStreamChannelChat.pending,function(state,loading){return _objectSpread(_objectSpread({},state),{},{loading:loading});}).on(fetchStreamChannelChat.fail,function(state,_ref9){var error=_ref9.error;return _objectSpread(_objectSpread({},state),{},{error:error,data:[]});}).on(fetchStreamChannelChat.done,function(state,_ref10){var result=_ref10.result,params=_ref10.params;var processed=commonStoreList(_objectSpread({response:result.data,state:state,clear:params.clear},params.params));return _objectSpread(_objectSpread({},state),processed);}).on(streamChannelWSChatMount,function(state,payload){return _objectSpread(_objectSpread({},state),{},{data:[payload].concat(_toConsumableArray(state.data))});});export var $streamModel=combine({$stream:$stream,$allStreamList:$allStreamList,$streamScheduleId:$streamScheduleId,$streamChannelChat:$streamChannelChat,$channelStreamScheduleList:$channelStreamScheduleList});","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Models/stream-model/stores.js"],"names":["combine","createStore","postWantingScheduleIdMount","streamChannelWSChatMount","streamLiveWatchersMount","commonStoreList","storeListWithKey","storeWithKey","fetchAllStreamList","fetchChannelStreamSchedule","fetchStream","fetchStreamChannelChat","fetchStreamScheduleId","$allStreamList","loading","data","forceLoading","result","error","on","pending","state","fail","done","params","processed","response","clear","$stream","payload","watchers","live_watchers","count","Number","$channelStreamScheduleList","key","slug_name","schedule_id","oldData","is_wanting","$streamScheduleId","idx","findIndex","item","Array","isArray","id","slice","$streamChannelChat","$streamModel"],"mappings":"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","sourcesContent":["import {combine, createStore} from 'effector'\r\nimport {postWantingScheduleIdMount, streamChannelWSChatMount, streamLiveWatchersMount} from './events'\r\nimport {commonStoreList, storeListWithKey, storeWithKey} from '../../utils/store-utils'\r\nimport {\r\n    fetchAllStreamList,\r\n    fetchChannelStreamSchedule,\r\n    fetchStream,\r\n    fetchStreamChannelChat,\r\n    fetchStreamScheduleId\r\n} from './effects'\r\n\r\nconst $allStreamList = createStore({loading: false, data: [], forceLoading: 0, result: {}, error: false})\r\n    .on(fetchAllStreamList.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchAllStreamList.fail, (state, {error}) => ({\r\n        ...state, error, data: [], result: {}, forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\r\n    }))\r\n    .on(fetchAllStreamList.done, (state, {result, params}) => {\r\n        const processed = commonStoreList({\r\n            response: result.data, state, clear: params.clear, ...params.params\r\n        })\r\n        return {...state, ...processed, forceLoading: 2}\r\n    })\r\n\r\nconst $stream = createStore({loading: false, data: {}, error: false, forceLoading: 0})\r\n    .on(fetchStream.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchStream.fail, (state, {error}) => ({\r\n        ...state, error, data: {}, forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\r\n    }))\r\n    .on(fetchStream.done, (state, {result, params}) => {\r\n        return {...state, data: result.data, forceLoading: 2}\r\n    })\r\n    .on(streamLiveWatchersMount, (state, payload) => {\r\n        let watchers = state?.data?.live_watchers\r\n        if (payload.count) {\r\n            watchers = Number(payload.count)\r\n            if(state.data){\r\n                state.data.live_watchers = watchers\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...state,\r\n            data: state.data\r\n        }\r\n    })\r\n\r\nconst $channelStreamScheduleList = createStore({loading: false, data: {}, result: {}, error: false, forceLoading: 0})\r\n    .on(fetchChannelStreamSchedule.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchChannelStreamSchedule.fail, (state, {error}) => ({\r\n        ...state, error, data: {}, result: {}, forceLoading: state.forceLoading === 2 ? state.forceLoading : 1\r\n    }))\r\n    .on(fetchChannelStreamSchedule.done, (state, {params, result}) => {\r\n        const processed = storeListWithKey({\r\n            response: result.data, state, key: params.slug_name, clear: params.clear, ...params.params\r\n        })\r\n        return {...state, ...processed, forceLoading: 2}\r\n    })\r\n    .on(postWantingScheduleIdMount, (state, params) => {\r\n        const slug_name = params.slug_name\r\n        const schedule_id = params.schedule_id\r\n        const data = {...state.data}\r\n        \r\n        if (data[schedule_id]) {\r\n            const oldData = data[slug_name]\r\n            data[slug_name] = {...oldData, is_wanting: true}\r\n        }\r\n        return {...state, data}\r\n    })\r\n\r\n// $channelStreamScheduleList.watch(console.log)\r\n\r\nconst $streamScheduleId = createStore({loading: false, data: {}, result: {}, error: false})\r\n    .on(fetchStreamScheduleId.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchStreamScheduleId.fail, (state, {error}) => ({\r\n        ...state, error, data: {}, result: {}\r\n    }))\r\n    .on(fetchStreamScheduleId.done, (state, {result, params}) => {\r\n        const processed = storeWithKey({\r\n            response: result.data, state, key: params.schedule_id, clear: params.clear, ...params.params\r\n        })\r\n        return {...state, ...processed}\r\n    })\r\n    .on(postWantingScheduleIdMount, (state, params) => {\r\n        const schedule_id = params.schedule_id\r\n        const slug_name = params.slug_name\r\n        const data = {...state.data}\r\n        \r\n        if (data[schedule_id]) {\r\n            const idx = data[slug_name].findIndex(item => !Array.isArray(item.id) === schedule_id)\r\n            const oldData = data[schedule_id][idx]\r\n            data[slug_name] = [...data[slug_name].slice(0, idx), {\r\n                ...oldData, is_wanting: true\r\n            }, ...data[slug_name].slice(idx + 1)]\r\n        }\r\n        return {...state, data}\r\n    })\r\n\r\nconst $streamChannelChat = createStore({loading: false, error: false, data: []})\r\n    .on(fetchStreamChannelChat.pending, (state, loading) => ({...state, loading}))\r\n    .on(fetchStreamChannelChat.fail, (state, {error}) => ({\r\n        ...state, error, data: []\r\n    }))\r\n    .on(fetchStreamChannelChat.done, (state, {result, params}) => {\r\n        const processed = commonStoreList({\r\n            response: result.data, state, clear: params.clear, ...params.params\r\n        })\r\n        return {...state, ...processed}\r\n    })\r\n    .on(streamChannelWSChatMount, (state, payload) => {\r\n        \r\n        return {\r\n            ...state,\r\n            data: [payload, ...state.data]\r\n        }\r\n    })\r\n\r\n\r\nexport const $streamModel = combine({\r\n    $stream,\r\n    $allStreamList,\r\n    $streamScheduleId,\r\n    $streamChannelChat,\r\n    $channelStreamScheduleList\r\n})"]},"metadata":{},"sourceType":"module"}