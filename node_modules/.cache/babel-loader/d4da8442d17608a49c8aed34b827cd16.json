{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import Cookies from'js-cookie';import{useCallback}from'react';import{useStore}from'effector-react';import{tokenMount}from'../../Models/app';import{useHistory}from'react-router-dom';import{$accountModel,getCurrentAccount}from'../../Models/account-model';import{resetOrderCartList,resetOrgOrderCart}from'../../Models/order-model';import account from'../../Service/account';export function useAccountActions(setProfiles){var _useHistory=useHistory(),push=_useHistory.push;var _useStore=useStore($accountModel),currentProfile=_useStore.$profiles.currentProfile;var handleClickItem=useCallback(function(e){if(e.name==='change_account'){setProfiles(true);}if(e.name==='settings'){push('/settings');}if(e.name==='order_records'){push('/records/order_records');}if(e.name==='logout'){Cookies.remove('token');Cookies.remove('users');Cookies.remove('refresh-token');getCurrentAccount();localStorage.removeItem('currentProfile');tokenMount(null);push('/');resetOrgOrderCart();resetOrderCartList();}},[push,setProfiles]);var handleClickLinkedUsers=useCallback(function(item){if(currentProfile.slug_name!==item.slug_name){if(Cookies.get('users')){var users=JSON.parse(Cookies.get('users'));var result=null;for(var i in users){if(users.hasOwnProperty(i)){if(i===item.slug_name){result=users[i];break;}else{push('/sign-in');}}}var data={refresh:result.refresh};account.refreshToken(data).then(function(res){if(res){var _users={};if(Cookies.get('users')){var oldUsers=JSON.parse(Cookies.get('users'));_users=oldUsers?_objectSpread({},oldUsers):{};}_users[item.slug_name]=res.data;Cookies.set('users',JSON.stringify(_users));Cookies.set('token',res.data.access);Cookies.set('refresh-token',res.data.refresh);tokenMount(res.data.access);getCurrentAccount();}}).catch(function(error){console.log(error);});}else{push('/sign-in');}}},[currentProfile,push]);return{handleClickItem:handleClickItem,handleClickLinkedUsers:handleClickLinkedUsers};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/account/use-account-actions.js"],"names":["Cookies","useCallback","useStore","tokenMount","useHistory","$accountModel","getCurrentAccount","resetOrderCartList","resetOrgOrderCart","account","useAccountActions","setProfiles","push","currentProfile","$profiles","handleClickItem","e","name","remove","localStorage","removeItem","handleClickLinkedUsers","item","slug_name","get","users","JSON","parse","result","i","hasOwnProperty","data","refresh","refreshToken","then","res","oldUsers","set","stringify","access","catch","error","console","log"],"mappings":"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","sourcesContent":["import Cookies from 'js-cookie'\nimport {useCallback} from 'react'\nimport {useStore} from 'effector-react'\nimport {tokenMount} from '../../Models/app'\nimport {useHistory} from 'react-router-dom'\nimport {$accountModel, getCurrentAccount} from '../../Models/account-model'\nimport {resetOrderCartList, resetOrgOrderCart} from '../../Models/order-model'\nimport account from '../../Service/account'\n\nexport function useAccountActions(setProfiles) {\n    const {push} = useHistory()\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    \n    const handleClickItem = useCallback((e) => {\n        if (e.name === 'change_account') {\n            setProfiles(true)\n        }\n        \n        if (e.name === 'settings') {\n            push('/settings')\n        }\n        \n        if (e.name === 'order_records') {\n            push('/records/order_records')\n        }\n        \n        if (e.name === 'logout') {\n            Cookies.remove('token')\n            Cookies.remove('users')\n            Cookies.remove('refresh-token')\n            getCurrentAccount()\n            localStorage.removeItem('currentProfile')\n            tokenMount(null)\n            push('/')\n            resetOrgOrderCart()\n            resetOrderCartList()\n        }\n    }, [push, setProfiles])\n    \n    \n    const handleClickLinkedUsers = useCallback((item) => {\n        if (currentProfile.slug_name !== item.slug_name) {\n            if (Cookies.get('users')) {\n                let users = JSON.parse(Cookies.get('users'))\n                let result = null\n                \n                for (let i in users) {\n                    if (users.hasOwnProperty(i)) {\n                        if (i === item.slug_name) {\n                            result = users[i]\n                            break\n                        } else {\n                            push('/sign-in')\n                        }\n                    }\n                }\n                \n                const data = {\n                    refresh: result.refresh\n                }\n                \n                account.refreshToken(data)\n                    .then(res => {\n                        if (res) {\n                            let users = {}\n                            if (Cookies.get('users')) {\n                                const oldUsers = JSON.parse(Cookies.get('users'))\n                                users = oldUsers ? {...oldUsers} : {}\n                            }\n                            users[item.slug_name] = res.data\n                            Cookies.set('users', JSON.stringify(users))\n                            Cookies.set('token', res.data.access)\n                            Cookies.set('refresh-token', res.data.refresh)\n                            tokenMount(res.data.access)\n                            getCurrentAccount()\n                        }\n                    })\n                    .catch((error) => {\n                        console.log(error)\n                    })\n            } else {\n                push('/sign-in')\n            }\n        }\n    }, [currentProfile, push])\n    \n    return {handleClickItem, handleClickLinkedUsers}\n}"]},"metadata":{},"sourceType":"module"}