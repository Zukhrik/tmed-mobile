{"ast":null,"code":"import _objectSpread from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useEffect,useState}from'react';import{$chatModel,userChatDetailMount}from'../../Models/chat-model';import{useParams}from'react-router-dom';import{useStore}from'effector-react';var initialParams={limit:50,offset:0};export function useUserMessages(){var _useStore=useStore($chatModel),_useStore$$userMessag=_useStore.$userMessages,loading=_useStore$$userMessag.loading,result=_useStore$$userMessag.result;var _useParams=useParams(),partner_slug=_useParams.partner_slug;var _useState=useState(),_useState2=_slicedToArray(_useState,2),mounted=_useState2[0],setMounted=_useState2[1];var getList=useCallback(function(params){if(partner_slug){var data=_objectSpread({partner:partner_slug},params);userChatDetailMount(data);}},[partner_slug]);var loadMore=useCallback(function(e){var r=result[partner_slug];var target=e.target;if(target.offsetHeight-target.scrollTop>target.scrollHeight-300&&!loading&&!!r.next){getList({params:_objectSpread(_objectSpread({},initialParams),{},{offset:r.nextOffset})});}},[partner_slug,result,getList,loading]);useEffect(function(){if(!mounted){getList({clear:true,params:initialParams});setMounted(true);}},[getList,mounted]);return{loadMore:loadMore};}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/chat/use-user-messages.js"],"names":["useCallback","useEffect","useState","$chatModel","userChatDetailMount","useParams","useStore","initialParams","limit","offset","useUserMessages","$userMessages","loading","result","partner_slug","mounted","setMounted","getList","params","data","partner","loadMore","e","r","target","offsetHeight","scrollTop","scrollHeight","next","nextOffset","clear"],"mappings":"yUAAA,OAAQA,WAAR,CAAqBC,SAArB,CAAgCC,QAAhC,KAA+C,OAA/C,CACA,OAAQC,UAAR,CAAoBC,mBAApB,KAA8C,yBAA9C,CACA,OAAQC,SAAR,KAAwB,kBAAxB,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,KAAK,CAAE,EADW,CAElBC,MAAM,CAAE,CAFU,CAAtB,CAKA,MAAO,SAASC,CAAAA,eAAT,EAA2B,CAC9B,cAA2CJ,QAAQ,CAACH,UAAD,CAAnD,iCAAOQ,aAAP,CAAuBC,OAAvB,uBAAuBA,OAAvB,CAAgCC,MAAhC,uBAAgCA,MAAhC,CACA,eAAuBR,SAAS,EAAhC,CAAOS,YAAP,YAAOA,YAAP,CACA,cAA8BZ,QAAQ,EAAtC,wCAAOa,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,OAAO,CAAGjB,WAAW,CAAC,SAACkB,MAAD,CAAY,CACpC,GAAIJ,YAAJ,CAAkB,CACd,GAAMK,CAAAA,IAAI,gBACNC,OAAO,CAAEN,YADH,EAEHI,MAFG,CAAV,CAIAd,mBAAmB,CAACe,IAAD,CAAnB,CACH,CACJ,CAR0B,CAQxB,CAACL,YAAD,CARwB,CAA3B,CAUA,GAAMO,CAAAA,QAAQ,CAAGrB,WAAW,CAAC,SAACsB,CAAD,CAAO,CAChC,GAAMC,CAAAA,CAAC,CAAGV,MAAM,CAACC,YAAD,CAAhB,CACA,GAAOU,CAAAA,MAAP,CAAiBF,CAAjB,CAAOE,MAAP,CACA,GAAIA,MAAM,CAACC,YAAP,CAAsBD,MAAM,CAACE,SAA7B,CAAyCF,MAAM,CAACG,YAAP,CAAsB,GAA/D,EAAsE,CAACf,OAAvE,EAAkF,CAAC,CAACW,CAAC,CAACK,IAA1F,CAAgG,CAC5FX,OAAO,CAAC,CAACC,MAAM,gCAAMX,aAAN,MAAqBE,MAAM,CAAEc,CAAC,CAACM,UAA/B,EAAP,CAAD,CAAP,CACH,CACJ,CAN2B,CAMzB,CAACf,YAAD,CAAeD,MAAf,CAAuBI,OAAvB,CAAgCL,OAAhC,CANyB,CAA5B,CAQAX,SAAS,CAAC,UAAM,CACZ,GAAI,CAACc,OAAL,CAAc,CACVE,OAAO,CAAC,CAACa,KAAK,CAAE,IAAR,CAAcZ,MAAM,CAAEX,aAAtB,CAAD,CAAP,CACAS,UAAU,CAAC,IAAD,CAAV,CACH,CACJ,CALQ,CAKN,CAACC,OAAD,CAAUF,OAAV,CALM,CAAT,CAOA,MAAO,CAACM,QAAQ,CAARA,QAAD,CAAP,CACH","sourcesContent":["import {useCallback, useEffect, useState} from 'react'\nimport {$chatModel, userChatDetailMount} from '../../Models/chat-model'\nimport {useParams} from 'react-router-dom'\nimport {useStore} from 'effector-react'\n\nconst initialParams = {\n    limit: 50,\n    offset: 0\n}\n\nexport function useUserMessages() {\n    const {$userMessages: {loading, result}} = useStore($chatModel)\n    const {partner_slug} = useParams()\n    const [mounted, setMounted] = useState()\n    const getList = useCallback((params) => {\n        if (partner_slug) {\n            const data = {\n                partner: partner_slug,\n                ...params\n            }\n            userChatDetailMount(data)\n        }\n    }, [partner_slug])\n\n    const loadMore = useCallback((e) => {\n        const r = result[partner_slug]\n        const {target} = e\n        if (target.offsetHeight - target.scrollTop > target.scrollHeight - 300 && !loading && !!r.next) {\n            getList({params: {...initialParams, offset: r.nextOffset}})\n        }\n    }, [partner_slug, result, getList, loading])\n\n    useEffect(() => {\n        if (!mounted) {\n            getList({clear: true, params: initialParams})\n            setMounted(true)\n        }\n    }, [getList, mounted])\n\n    return {loadMore}\n}"]},"metadata":{},"sourceType":"module"}