{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Components/Post/PostContent/CommonPost/index.jsx\";\nimport React, { useState } from 'react';\nimport Carousel from 'react-multi-carousel';\nimport { useTranslation } from 'react-i18next';\nimport { truncateString } from '../../../../utils/stringUtils';\nimport { Text } from '../../../../UIComponents/Typography/Text';\nimport { ImageLazyLoad } from '../../../../UIComponents/ImageLazyLoad';\nimport { CommonPostWrapper, PostDescriptionWrapper, PostImagesWrapper } from '../../style';\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 1\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 1\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1\n  }\n};\nexport const CommonPost = ({\n  post,\n  mediaData,\n  repostText\n}) => {\n  var _mediaData$, _mediaData$2, _mediaData$3, _mediaData$4, _mediaData$5;\n\n  const [show, setShow] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(CommonPostWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, repostText && /*#__PURE__*/React.createElement(PostDescriptionWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, repostText)), (post === null || post === void 0 ? void 0 : post.trim().length) > 0 && /*#__PURE__*/React.createElement(PostDescriptionWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, !show ? /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }, truncateString(post, 150), post && post.length > 150 && /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 45\n    }\n  }, t('more'))) : /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 37\n    }\n  }, post, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 41\n    }\n  }, t('hide')))), /*#__PURE__*/React.createElement(PostImagesWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, mediaData && /*#__PURE__*/React.createElement(React.Fragment, null, mediaData.length === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, ((_mediaData$ = mediaData[0]) === null || _mediaData$ === void 0 ? void 0 : _mediaData$.thumbnail) && !((_mediaData$2 = mediaData[0]) === null || _mediaData$2 === void 0 ? void 0 : _mediaData$2.file) ? /*#__PURE__*/React.createElement(ImageLazyLoad, {\n    src: (_mediaData$3 = mediaData[0]) === null || _mediaData$3 === void 0 ? void 0 : _mediaData$3.thumbnail,\n    alt: (_mediaData$4 = mediaData[0]) === null || _mediaData$4 === void 0 ? void 0 : _mediaData$4.thumbnail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 55\n    }\n  }) : /*#__PURE__*/React.createElement(\"video\", {\n    controls: true,\n    autoPlay: true,\n    playsInline: true,\n    muted: true,\n    loop: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 55\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: (_mediaData$5 = mediaData[0]) === null || _mediaData$5 === void 0 ? void 0 : _mediaData$5.file,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 57\n    }\n  }))) : /*#__PURE__*/React.createElement(Carousel, {\n    arrows: false,\n    responsive: responsive,\n    renderButtonGroupOutside: true,\n    itemClass: \"offering-gallery-item\",\n    showDots: mediaData.length > 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 41\n    }\n  }, mediaData.map((item, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 53\n    }\n  }, item.thumbnail && !item.file && /*#__PURE__*/React.createElement(ImageLazyLoad, {\n    src: item.thumbnail,\n    alt: item.thumbnail,\n    height: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 65\n    }\n  }), item.file && !item.thumbnail && /*#__PURE__*/React.createElement(\"video\", {\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: item.file,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 69\n    }\n  }))))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Components/Post/PostContent/CommonPost/index.jsx"],"names":["React","useState","Carousel","useTranslation","truncateString","Text","ImageLazyLoad","CommonPostWrapper","PostDescriptionWrapper","PostImagesWrapper","responsive","desktop","breakpoint","max","min","items","tablet","mobile","CommonPost","post","mediaData","repostText","show","setShow","t","trim","length","thumbnail","file","map","item","idx"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport Carousel from 'react-multi-carousel'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {truncateString} from '../../../../utils/stringUtils'\r\nimport {Text} from '../../../../UIComponents/Typography/Text'\r\nimport {ImageLazyLoad} from '../../../../UIComponents/ImageLazyLoad'\r\nimport {CommonPostWrapper, PostDescriptionWrapper, PostImagesWrapper} from '../../style'\r\n\r\nconst responsive = {\r\n    desktop: {\r\n        breakpoint: {max: 3000, min: 1024},\r\n        items: 1\r\n    },\r\n    tablet: {\r\n        breakpoint: {max: 1024, min: 464},\r\n        items: 1\r\n    },\r\n    mobile: {\r\n        breakpoint: {max: 464, min: 0},\r\n        items: 1\r\n    }\r\n}\r\n\r\nexport const CommonPost = ({post, mediaData, repostText}) => {\r\n    const [show, setShow] = useState(false)\r\n    const {t} = useTranslation()\r\n    \r\n    return (\r\n        <CommonPostWrapper>\r\n            {\r\n                repostText && (\r\n                    <PostDescriptionWrapper>\r\n                        <Text>{repostText}</Text>\r\n                    </PostDescriptionWrapper>\r\n                )\r\n            }\r\n            {\r\n                post?.trim().length > 0 && (\r\n                    <PostDescriptionWrapper>\r\n                        {\r\n                            !show\r\n                                ? (\r\n                                    <Text>\r\n                                        {truncateString(post, 150)}\r\n                                        {post && post.length > 150 &&\r\n                                            <span onClick={() => setShow(!show)}>{t('more')}</span>}\r\n                                    </Text>\r\n                                )\r\n                                : (\r\n                                    <Text>\r\n                                        {post}\r\n                                        <span onClick={() => setShow(!show)}>{t('hide')}</span>\r\n                                    </Text>\r\n                                )\r\n                        }\r\n                    </PostDescriptionWrapper>\r\n                )\r\n            }\r\n            <PostImagesWrapper>\r\n                {\r\n                    mediaData && (\r\n                        <>\r\n                            {\r\n                                mediaData.length === 1\r\n                                    ? (\r\n                                        <>\r\n                                            {\r\n                                                mediaData[0]?.thumbnail && !mediaData[0]?.file\r\n                                                    ? <ImageLazyLoad\r\n                                                        src={mediaData[0]?.thumbnail}\r\n                                                        alt={mediaData[0]?.thumbnail}\r\n                                                    />\r\n                                                    : <video\r\n                                                        controls\r\n                                                        autoPlay\r\n                                                        playsInline\r\n                                                        muted\r\n                                                        loop\r\n                                                    >\r\n                                                        <source src={mediaData[0]?.file}/>\r\n                                                    </video>\r\n                                            }\r\n                                        </>\r\n                                    )\r\n                                    : (\r\n                                        <Carousel\r\n                                            arrows={false}\r\n                                            responsive={responsive}\r\n                                            renderButtonGroupOutside\r\n                                            itemClass='offering-gallery-item'\r\n                                            showDots={mediaData.length > 1}\r\n                                        >\r\n                                            {\r\n                                                mediaData.map((item, idx) => (\r\n                                                    <div key={`${idx + 1}`}>\r\n                                                        {\r\n                                                            item.thumbnail && !item.file && (\r\n                                                                <ImageLazyLoad\r\n                                                                    src={item.thumbnail}\r\n                                                                    alt={item.thumbnail}\r\n                                                                    height='auto'\r\n                                                                />\r\n                                                            )\r\n                                                        }\r\n                                                        {\r\n                                                            item.file && !item.thumbnail && (\r\n                                                                <video controls>\r\n                                                                    <source src={item.file}/>\r\n                                                                </video>\r\n                                                            )\r\n                                                        }\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </Carousel>\r\n                                    )\r\n                            }\r\n                        </>\r\n                    )\r\n                }\r\n            </PostImagesWrapper>\r\n        </CommonPostWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}