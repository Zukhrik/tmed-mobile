{"ast":null,"code":"import React,{useCallback}from'react';import{OfferCard}from'../../Cards';import{CommonPost}from'./CommonPost';import{StreamPost}from'./StreamPost';import{useStore}from'effector-react';import{ActionPost}from'./ActionPost';import{OfferingPost}from'./OfferingPost';import{$postModel}from'../../../Models/post-model';import{truncateString}from'../../../utils/stringUtils';import{CardPostWrapper,HasOfferingsCardWrapper}from'../style';export var PostContent=function PostContent(_ref){var data=_ref.data,author=_ref.author;var _useStore=useStore($postModel),postData=_useStore.$postOfferings.data;var renderPostType=useCallback(function(){var stream_schedule=data.stream_schedule,medias=data.medias,text=data.text,has_offerings=data.has_offerings,action=data.action,repost=data.repost;if(action){if(action.key==='new_duty'){return/*#__PURE__*/React.createElement(ActionPost,{size1:170,size2:130,type:action.key,imgUrl1:data.author.avatar,imgUrl2:data.action.data.new_specialism.org.logo});}if(action.key==='new_avatar'){return/*#__PURE__*/React.createElement(ActionPost,{imgUrl1:data.action.data.old,size1:150,imgUrl2:data.action.data.new,size2:170,type:action.key});}}else{if(stream_schedule){return/*#__PURE__*/React.createElement(StreamPost,{data:stream_schedule,author:author});}if(has_offerings){return/*#__PURE__*/React.createElement(OfferingPost,{data:data});}if(repost){return/*#__PURE__*/React.createElement(CommonPost,{mediaData:repost.medias,repostText:text,post:repost.text});}else{return/*#__PURE__*/React.createElement(CommonPost,{mediaData:medias,post:text});}}},[data,author]);var offerings=data.has_offerings&&postData[data.id];return/*#__PURE__*/React.createElement(CardPostWrapper,null,renderPostType(),/*#__PURE__*/React.createElement(HasOfferingsCardWrapper,null,offerings&&offerings.length>0&&offerings.map(function(item,idx){return/*#__PURE__*/React.createElement(OfferCard,{key:\"\".concat(idx+1),imgUrl:item.offering.image,offerName:truncateString(item.offering.name,16),cost:item.offering.cost.toLocaleString('fi-Fi')});})));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Post/PostContent/index.jsx"],"names":["React","useCallback","OfferCard","CommonPost","StreamPost","useStore","ActionPost","OfferingPost","$postModel","truncateString","CardPostWrapper","HasOfferingsCardWrapper","PostContent","data","author","postData","$postOfferings","renderPostType","stream_schedule","medias","text","has_offerings","action","repost","key","avatar","new_specialism","org","logo","old","new","offerings","id","length","map","item","idx","offering","image","name","cost","toLocaleString"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {OfferCard} from '../../Cards'\r\nimport {CommonPost} from './CommonPost'\r\nimport {StreamPost} from './StreamPost'\r\nimport {useStore} from 'effector-react'\r\nimport {ActionPost} from './ActionPost'\r\nimport {OfferingPost} from './OfferingPost'\r\nimport {$postModel} from '../../../Models/post-model'\r\nimport {truncateString} from '../../../utils/stringUtils'\r\nimport {CardPostWrapper, HasOfferingsCardWrapper} from '../style'\r\n\r\nexport const PostContent = ({data, author}) => {\r\n    const {$postOfferings: {data: postData}} = useStore($postModel)\r\n    \r\n    const renderPostType = useCallback(() => {\r\n        const {stream_schedule, medias, text, has_offerings, action, repost} = data\r\n        \r\n        if (action) {\r\n            if (action.key === 'new_duty') {\r\n                return <ActionPost\r\n                    size1={170}\r\n                    size2={130}\r\n                    type={action.key}\r\n                    imgUrl1={data.author.avatar}\r\n                    imgUrl2={data.action.data.new_specialism.org.logo}\r\n                />\r\n            }\r\n            \r\n            if (action.key === 'new_avatar') {\r\n                return <ActionPost\r\n                    imgUrl1={data.action.data.old}\r\n                    size1={150}\r\n                    imgUrl2={data.action.data.new}\r\n                    size2={170}\r\n                    type={action.key}\r\n                />\r\n            }\r\n        } else {\r\n            \r\n            if (stream_schedule) {\r\n                return <StreamPost data={stream_schedule} author={author}/>\r\n            }\r\n            \r\n            if (has_offerings) {\r\n                return <OfferingPost data={data}/>\r\n            }\r\n            \r\n            if (repost) {\r\n                return <CommonPost mediaData={repost.medias} repostText={text} post={repost.text}/>\r\n            } else {\r\n                return <CommonPost mediaData={medias} post={text}/>\r\n            }\r\n            \r\n        }\r\n        \r\n    }, [data, author])\r\n    \r\n    const offerings = data.has_offerings && postData[data.id]\r\n    \r\n    return (\r\n        <CardPostWrapper>\r\n            {renderPostType()}\r\n            <HasOfferingsCardWrapper>\r\n                {\r\n                    offerings && offerings.length > 0 && offerings.map((item, idx) => (\r\n                        <OfferCard\r\n                            key={`${idx + 1}`}\r\n                            imgUrl={item.offering.image}\r\n                            offerName={truncateString(item.offering.name, 16)}\r\n                            cost={item.offering.cost.toLocaleString('fi-Fi')}\r\n                        />\r\n                    ))\r\n                }\r\n            </HasOfferingsCardWrapper>\r\n        </CardPostWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}