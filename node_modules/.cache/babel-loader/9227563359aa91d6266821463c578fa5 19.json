{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/organisms/account-records-detail.jsx\";\nimport React from 'react';\nimport moment from 'moment';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { RecordsCard } from '../molecules';\nimport { useOrder } from '../../../Hooks/org';\nimport { useTranslation } from 'react-i18next';\nimport { useGoBack } from '../../../Hooks/app';\nimport { useOrderIdOffers } from '../../../Hooks/order';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { $orderModel } from '../../../Models/order-model';\nimport { FixedHeader } from '../../../Components/FixedHeader';\nimport { generateSkeleton } from '../../../utils/skeleton-utils';\nimport { RootContent } from '../../../UIComponents/GlobalStyles';\nimport { RecordsCardSkeleton } from '../molecules/records-card-skeleton';\nconst skeleton = generateSkeleton(3);\nexport const AccountRecordsDetail = () => {\n  var _detail$order_id, _detail$order_id2, _detail$order_id2$res, _detail$order_id2$res2;\n\n  useOrder();\n  useOrderIdOffers();\n  const {\n    push,\n    location: {\n      pathname\n    }\n  } = useHistory();\n  const {\n    t\n  } = useTranslation();\n  const {\n    order_id\n  } = useParams();\n  const {\n    username\n  } = useParams();\n  const {\n    $orderIdOffers: {\n      data,\n      forceLoading\n    },\n    $orderDetail: {\n      data: detail\n    }\n  } = useStore($orderModel);\n  const {\n    goBack\n  } = useGoBack({\n    pathname: `/@${username}/records`\n  });\n  const meetDate = detail && ((_detail$order_id = detail[order_id]) === null || _detail$order_id === void 0 ? void 0 : _detail$order_id.meet_date);\n  console.log((_detail$order_id2 = detail[order_id]) === null || _detail$order_id2 === void 0 ? void 0 : (_detail$order_id2$res = _detail$order_id2.responsible) === null || _detail$order_id2$res === void 0 ? void 0 : (_detail$order_id2$res2 = _detail$order_id2$res.org) === null || _detail$order_id2$res2 === void 0 ? void 0 : _detail$order_id2$res2.name);\n\n  const handleCardClick = item => {\n    if (item.offering.id) {\n      push(`${pathname}/${item.id}`);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(RootContent, {\n    paddingTop: 62,\n    paddingBottom: 65,\n    height: \"100vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FixedHeader, {\n    title: t('records'),\n    goBack: goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"container\",\n    gutter: [0, 12],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, forceLoading === 2 && data ? /*#__PURE__*/React.createElement(React.Fragment, null, data.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(RecordsCard, {\n    offeringName: item.offering.name,\n    offeringUrl: item.offering.image,\n    orgName: item.offering.org.name,\n    meetTime: moment(meetDate).format('DD.MM.YYYY HH:mm'),\n    containerPath: () => handleCardClick(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 45\n    }\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null, skeleton.map((item, idx) => /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    key: `${idx + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(RecordsCardSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 45\n    }\n  }))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/organisms/account-records-detail.jsx"],"names":["React","moment","Col","Row","useStore","RecordsCard","useOrder","useTranslation","useGoBack","useOrderIdOffers","useHistory","useParams","$orderModel","FixedHeader","generateSkeleton","RootContent","RecordsCardSkeleton","skeleton","AccountRecordsDetail","push","location","pathname","t","order_id","username","$orderIdOffers","data","forceLoading","$orderDetail","detail","goBack","meetDate","meet_date","console","log","responsible","org","name","handleCardClick","item","offering","id","map","idx","image","format"],"mappings":"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","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {RecordsCard} from '../molecules'\nimport {useOrder} from '../../../Hooks/org'\nimport {useTranslation} from 'react-i18next'\nimport {useGoBack} from '../../../Hooks/app'\nimport {useOrderIdOffers} from '../../../Hooks/order'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {$orderModel} from '../../../Models/order-model'\nimport {FixedHeader} from '../../../Components/FixedHeader'\nimport {generateSkeleton} from '../../../utils/skeleton-utils'\nimport {RootContent} from '../../../UIComponents/GlobalStyles'\nimport {RecordsCardSkeleton} from '../molecules/records-card-skeleton'\n\nconst skeleton = generateSkeleton(3)\nexport const AccountRecordsDetail = () => {\n    useOrder()\n    useOrderIdOffers()\n    const {push, location: {pathname}} = useHistory()\n    const {t} = useTranslation()\n    const {order_id} = useParams()\n    const {username} = useParams()\n    const {$orderIdOffers: {data, forceLoading}, $orderDetail: {data: detail}} = useStore($orderModel)\n    const {goBack} = useGoBack({pathname: `/@${username}/records`})\n    const meetDate = detail && detail[order_id]?.meet_date\n    console.log(detail[order_id]?.responsible?.org?.name)\n    \n    const handleCardClick = (item) => {\n        if (item.offering.id) {\n            push(`${pathname}/${item.id}`)\n        }\n    }\n    \n    return (\n        <RootContent\n            paddingTop={62}\n            paddingBottom={65}\n            height='100vh'\n        >\n            <FixedHeader\n                title={t('records')}\n                goBack={goBack}\n            />\n            <Row className='container' gutter={[0, 12]}>\n                {\n                    forceLoading === 2 && data\n                        ? (\n                            <>\n                                {\n                                    data.map((item, idx) => (\n                                        <Col span={24} key={`${idx + 1}`}>\n                                            <RecordsCard\n                                                offeringName={item.offering.name}\n                                                offeringUrl={item.offering.image}\n                                                orgName={item.offering.org.name}\n                                                meetTime={moment(meetDate).format('DD.MM.YYYY HH:mm')}\n                                                containerPath={() => handleCardClick(item)}\n                                            />\n                                        </Col>\n                                    ))\n                                }\n                            </>\n                        ) : (\n                            <>\n                                {\n                                    skeleton.map((item, idx) => (\n                                        <Col span={24} key={`${idx + 1}`}>\n                                            <RecordsCardSkeleton/>\n                                        </Col>\n                                    ))\n                                }\n                            </>\n                        )\n                }\n            </Row>\n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}