{"ast":null,"code":"import { v4 as uuidV4 } from 'uuid';\nimport { useState } from 'react';\nimport { useStore } from 'effector-react';\nimport { useParams } from 'react-router-dom';\nimport { $accountModel } from '../../Models/account-model';\nimport { $appModel, onReplyCommentDataMount } from '../../Models/app';\nimport { createCommentMount, replyCommentMount } from '../../Models/post-model';\nexport function useCreatePostComment() {\n  const {\n    post_id\n  } = useParams();\n  const [comment, setComment] = useState('');\n  const {\n    $app: {\n      onReplyCommentData\n    }\n  } = useStore($appModel);\n  const {\n    $profiles: {\n      currentProfile\n    }\n  } = useStore($accountModel);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const uuid = uuidV4();\n\n    if (comment.trim().length > 0 && currentProfile) {\n      const temp_data = {\n        id: uuid,\n        text: comment,\n        date: new Date(),\n        likes_count: 0,\n        is_liked: false,\n        sent: true,\n        reply_count: onReplyCommentData ? onReplyCommentData.reply_count + 1 : 0,\n        reply_to: onReplyCommentData ? onReplyCommentData.id : null,\n        author: {\n          slug_name: currentProfile.slug_name,\n          avatar: currentProfile.avatar,\n          name: currentProfile.name\n        }\n      };\n      const params = {\n        post_id: post_id,\n        data: {\n          text: comment\n        },\n        temp_data\n      };\n      const reply_params = {\n        temp_data,\n        post_id: post_id,\n        comment_id: onReplyCommentData.id,\n        data: {\n          text: comment,\n          reply_to: onReplyCommentData.id\n        }\n      };\n\n      if (onReplyCommentData) {\n        replyCommentMount(reply_params);\n        onReplyCommentDataMount('');\n      } else {\n        createCommentMount(params);\n      }\n    }\n\n    setComment('');\n  };\n\n  const handleCloseReply = () => {\n    onReplyCommentDataMount('');\n  };\n\n  return {\n    handleSubmit,\n    comment,\n    setComment,\n    handleCloseReply\n  };\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Hooks/post/use-create-post-comment.js"],"names":["v4","uuidV4","useState","useStore","useParams","$accountModel","$appModel","onReplyCommentDataMount","createCommentMount","replyCommentMount","useCreatePostComment","post_id","comment","setComment","$app","onReplyCommentData","$profiles","currentProfile","handleSubmit","e","preventDefault","uuid","trim","length","temp_data","id","text","date","Date","likes_count","is_liked","sent","reply_count","reply_to","author","slug_name","avatar","name","params","data","reply_params","comment_id","handleCloseReply"],"mappings":"AAAA,SAAQA,EAAE,IAAIC,MAAd,QAA2B,MAA3B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AACA,SAAQC,SAAR,EAAmBC,uBAAnB,QAAiD,kBAAjD;AACA,SAAQC,kBAAR,EAA4BC,iBAA5B,QAAoD,yBAApD;AAGA,OAAO,SAASC,oBAAT,GAAgC;AACnC,QAAM;AAACC,IAAAA;AAAD,MAAYP,SAAS,EAA3B;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAACY,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAA+BZ,QAAQ,CAACG,SAAD,CAA7C;AACA,QAAM;AAACU,IAAAA,SAAS,EAAE;AAACC,MAAAA;AAAD;AAAZ,MAAgCd,QAAQ,CAACE,aAAD,CAA9C;;AAEA,QAAMa,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAGpB,MAAM,EAAnB;;AAEA,QAAIW,OAAO,CAACU,IAAR,GAAeC,MAAf,GAAwB,CAAxB,IAA6BN,cAAjC,EAAiD;AAC7C,YAAMO,SAAS,GAAG;AACdC,QAAAA,EAAE,EAAEJ,IADU;AAEdK,QAAAA,IAAI,EAAEd,OAFQ;AAGde,QAAAA,IAAI,EAAE,IAAIC,IAAJ,EAHQ;AAIdC,QAAAA,WAAW,EAAE,CAJC;AAKdC,QAAAA,QAAQ,EAAE,KALI;AAMdC,QAAAA,IAAI,EAAE,IANQ;AAOdC,QAAAA,WAAW,EAAEjB,kBAAkB,GAAGA,kBAAkB,CAACiB,WAAnB,GAAiC,CAApC,GAAwC,CAPzD;AAQdC,QAAAA,QAAQ,EAAElB,kBAAkB,GAAGA,kBAAkB,CAACU,EAAtB,GAA2B,IARzC;AASdS,QAAAA,MAAM,EAAE;AACJC,UAAAA,SAAS,EAAElB,cAAc,CAACkB,SADtB;AAEJC,UAAAA,MAAM,EAAEnB,cAAc,CAACmB,MAFnB;AAGJC,UAAAA,IAAI,EAAEpB,cAAc,CAACoB;AAHjB;AATM,OAAlB;AAgBA,YAAMC,MAAM,GAAG;AACX3B,QAAAA,OAAO,EAAEA,OADE;AAEX4B,QAAAA,IAAI,EAAE;AACFb,UAAAA,IAAI,EAAEd;AADJ,SAFK;AAKXY,QAAAA;AALW,OAAf;AAQA,YAAMgB,YAAY,GAAG;AACjBhB,QAAAA,SADiB;AAEjBb,QAAAA,OAAO,EAAEA,OAFQ;AAGjB8B,QAAAA,UAAU,EAAE1B,kBAAkB,CAACU,EAHd;AAIjBc,QAAAA,IAAI,EAAE;AACFb,UAAAA,IAAI,EAAEd,OADJ;AAEFqB,UAAAA,QAAQ,EAAElB,kBAAkB,CAACU;AAF3B;AAJW,OAArB;;AAUA,UAAIV,kBAAJ,EAAwB;AACpBN,QAAAA,iBAAiB,CAAC+B,YAAD,CAAjB;AACAjC,QAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACH,OAHD,MAGO;AACHC,QAAAA,kBAAkB,CAAC8B,MAAD,CAAlB;AACH;AACJ;;AAEDzB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAhDD;;AAkDA,QAAM6B,gBAAgB,GAAG,MAAM;AAC3BnC,IAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACH,GAFD;;AAIA,SAAO;AAACW,IAAAA,YAAD;AAAeN,IAAAA,OAAf;AAAwBC,IAAAA,UAAxB;AAAoC6B,IAAAA;AAApC,GAAP;AACH","sourcesContent":["import {v4 as uuidV4} from 'uuid'\nimport {useState} from 'react'\nimport {useStore} from 'effector-react'\nimport {useParams} from 'react-router-dom'\nimport {$accountModel} from '../../Models/account-model'\nimport {$appModel, onReplyCommentDataMount} from '../../Models/app'\nimport {createCommentMount, replyCommentMount} from '../../Models/post-model'\n\n\nexport function useCreatePostComment() {\n    const {post_id} = useParams()\n    const [comment, setComment] = useState('')\n    const {$app: {onReplyCommentData}} = useStore($appModel)\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const uuid = uuidV4()\n        \n        if (comment.trim().length > 0 && currentProfile) {\n            const temp_data = {\n                id: uuid,\n                text: comment,\n                date: new Date(),\n                likes_count: 0,\n                is_liked: false,\n                sent: true,\n                reply_count: onReplyCommentData ? onReplyCommentData.reply_count + 1 : 0,\n                reply_to: onReplyCommentData ? onReplyCommentData.id : null,\n                author: {\n                    slug_name: currentProfile.slug_name,\n                    avatar: currentProfile.avatar,\n                    name: currentProfile.name\n                }\n            }\n            \n            const params = {\n                post_id: post_id,\n                data: {\n                    text: comment\n                },\n                temp_data\n            }\n            \n            const reply_params = {\n                temp_data,\n                post_id: post_id,\n                comment_id: onReplyCommentData.id,\n                data: {\n                    text: comment,\n                    reply_to: onReplyCommentData.id\n                }\n            }\n            \n            if (onReplyCommentData) {\n                replyCommentMount(reply_params)\n                onReplyCommentDataMount('')\n            } else {\n                createCommentMount(params)\n            }\n        }\n        \n        setComment('')\n    }\n    \n    const handleCloseReply = () => {\n        onReplyCommentDataMount('')\n    }\n    \n    return {handleSubmit, comment, setComment, handleCloseReply}\n}"]},"metadata":{},"sourceType":"module"}