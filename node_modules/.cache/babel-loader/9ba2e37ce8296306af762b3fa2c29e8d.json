{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/OfferingPage/organisms/offering-specialists.jsx\";\nimport React, { useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useStore } from 'effector-react';\nimport { DescriptionWrapper, OfferingCreateButton } from '../atoms';\nimport { URL_KEYS } from '../../../Constants';\nimport { useTranslation } from 'react-i18next';\nimport { $appModel } from '../../../Models/app';\nimport { useUrlGenerate } from '../../../Hooks/org';\nimport { Button } from '../../../UIComponents/Button';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { $offeringsModel } from '../../../Models/offerings-model';\nimport { useOfferingOrderInOfferPage } from '../../../Hooks/order';\nimport { ShortCard, ShortCardSkeleton } from '../../../Components/Cards';\nimport { DataWrapper, SpecialistNavLink } from '../../../Components/Offering/OrgOfferings/style';\nimport { OverlaySettings } from '../../../Components/Overlay';\nimport { OverlayAuth } from '../../../UIComponents/OverlayAuth';\nexport const OfferSpecialists = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    $app: {\n      token\n    }\n  } = useStore($appModel);\n  const {\n    getActive,\n    generateUrl\n  } = useUrlGenerate();\n  const [auth, setAuth] = useState(false);\n  const {\n    $offeringInfo: {\n      data,\n      forceLoading\n    }\n  } = useStore($offeringsModel);\n  const {\n    handleRequest,\n    setOpenModal,\n    openModal\n  } = useOfferingOrderInOfferPage();\n\n  const handleClose = () => {\n    if (auth) {\n      setAuth(false);\n    }\n\n    setOpenModal(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OverlaySettings, {\n    openSettings: openModal,\n    onClose: handleClose,\n    content: /*#__PURE__*/React.createElement(OverlayAuth, {\n      action: handleRequest,\n      auth: auth,\n      setAuth: setAuth,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DescriptionWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, `${t('select_specialist')}:`))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DataWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, forceLoading === 2 ? data && data.responsible.map((item, idx) => /*#__PURE__*/React.createElement(SpecialistNavLink, {\n    key: `${idx + 1}`,\n    to: generateUrl(URL_KEYS.SPECIALIST_ID, item.id),\n    isActive: () => getActive(URL_KEYS.SPECIALIST_ID, item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(ShortCard, {\n    imgSize: 56,\n    direction: \"vertical\",\n    text: item.job.name,\n    imgUrl: item.user.avatar,\n    name: item.user.full_name,\n    containerPath: `/@${item.user.username}`,\n    active: getActive(URL_KEYS.SPECIALIST_ID, item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 45\n    }\n  }))) : /*#__PURE__*/React.createElement(ShortCardSkeleton, {\n    size: 56,\n    nameWidth: 60,\n    nameHeight: 24,\n    textHeight: 16,\n    textWidth: 40,\n    nameSize: 12,\n    textSize: 12,\n    height: 96,\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(OfferingCreateButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    className: \"add-to-cart-button\",\n    onClick: () => token ? handleRequest() : setOpenModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, t('checkout'))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/OfferingPage/organisms/offering-specialists.jsx"],"names":["React","useState","Col","Row","useStore","DescriptionWrapper","OfferingCreateButton","URL_KEYS","useTranslation","$appModel","useUrlGenerate","Button","Text","$offeringsModel","useOfferingOrderInOfferPage","ShortCard","ShortCardSkeleton","DataWrapper","SpecialistNavLink","OverlaySettings","OverlayAuth","OfferSpecialists","t","$app","token","getActive","generateUrl","auth","setAuth","$offeringInfo","data","forceLoading","handleRequest","setOpenModal","openModal","handleClose","responsible","map","item","idx","SPECIALIST_ID","id","job","name","user","avatar","full_name","username"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {DescriptionWrapper, OfferingCreateButton} from '../atoms'\nimport {URL_KEYS} from '../../../Constants'\nimport {useTranslation} from 'react-i18next'\nimport {$appModel} from '../../../Models/app'\nimport {useUrlGenerate} from '../../../Hooks/org'\nimport {Button} from '../../../UIComponents/Button'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {$offeringsModel} from '../../../Models/offerings-model'\nimport {useOfferingOrderInOfferPage} from '../../../Hooks/order'\nimport {ShortCard, ShortCardSkeleton} from '../../../Components/Cards'\nimport {DataWrapper, SpecialistNavLink} from '../../../Components/Offering/OrgOfferings/style'\nimport {OverlaySettings} from '../../../Components/Overlay'\nimport {OverlayAuth} from '../../../UIComponents/OverlayAuth'\n\n\nexport const OfferSpecialists = () => {\n    const {t} = useTranslation()\n    const {$app: {token}} = useStore($appModel)\n    const {getActive, generateUrl} = useUrlGenerate()\n    const [auth, setAuth] = useState(false)\n    const {$offeringInfo: {data, forceLoading}} = useStore($offeringsModel)\n    const {handleRequest, setOpenModal, openModal} = useOfferingOrderInOfferPage()\n    \n    const handleClose = () => {\n        if (auth) {\n            setAuth(false)\n        }\n        setOpenModal(false)\n    }\n    \n    return (\n        <>\n            <OverlaySettings\n                openSettings={openModal}\n                onClose={handleClose}\n                content={<OverlayAuth\n                    action={handleRequest}\n                    auth={auth}\n                    setAuth={setAuth}\n                    onClose={handleClose}\n                />}\n            />\n            <Row className='padding'>\n                <Col span={24}>\n                    <DescriptionWrapper>\n                        <Text>{`${t('select_specialist')}:`}</Text>\n                    </DescriptionWrapper>\n                </Col>\n                <Col span={24}>\n                    <DataWrapper>\n                        {\n                            forceLoading === 2\n                                ? (\n                                    data && data.responsible.map((item, idx) => (\n                                        <SpecialistNavLink\n                                            key={`${idx + 1}`}\n                                            to={generateUrl(URL_KEYS.SPECIALIST_ID, item.id)}\n                                            isActive={() => getActive(URL_KEYS.SPECIALIST_ID, item.id)}\n                                        >\n                                            <ShortCard\n                                                imgSize={56}\n                                                direction='vertical'\n                                                text={item.job.name}\n                                                imgUrl={item.user.avatar}\n                                                name={item.user.full_name}\n                                                containerPath={`/@${item.user.username}`}\n                                                active={getActive(URL_KEYS.SPECIALIST_ID, item.id)}\n                                            />\n                                        </SpecialistNavLink>\n                                    ))\n                                ) : (\n                                    <ShortCardSkeleton\n                                        size={56}\n                                        nameWidth={60}\n                                        nameHeight={24}\n                                        textHeight={16}\n                                        textWidth={40}\n                                        nameSize={12}\n                                        textSize={12}\n                                        height={96}\n                                        direction='vertical'\n                                    />\n                                )\n                        }\n                    </DataWrapper>\n                </Col>\n            </Row>\n            <OfferingCreateButton>\n                <Button\n                    variant='primary'\n                    className='add-to-cart-button'\n                    onClick={() => token ? handleRequest() : setOpenModal(true)}\n                >\n                    {t('checkout')}\n                </Button>\n            </OfferingCreateButton>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}