{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Settings/organisms/language-items.jsx\";\nimport React from 'react';\nimport { languages } from '../../../data';\nimport { LanguagesWrapper } from '../atoms';\nimport { useTranslation } from 'react-i18next';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport { Text } from '../../../UIComponents/Typography/Text';\nimport { updateAccountMount } from '../../../Models/account-model';\nexport const LanguageItems = () => {\n  const {\n    t\n  } = useTranslation();\n\n  const handleClick = lang => {\n    const data = {\n      lang\n    };\n    updateAccountMount({\n      data\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonGroup, {\n    variant: \"text\",\n    orientation: \"vertical\",\n    \"aria-label\": \"vertical outlined button group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, languages.map((item, idx) => /*#__PURE__*/React.createElement(Button, {\n    key: `${idx + 1}`,\n    onClick: () => handleClick(item.code),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LanguagesWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, `${t(item.language)}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"current-lang\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }, `${t(item.text)}`))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Settings/organisms/language-items.jsx"],"names":["React","languages","LanguagesWrapper","useTranslation","Button","ButtonGroup","Text","updateAccountMount","LanguageItems","t","handleClick","lang","data","map","item","idx","code","language","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,eAAxB;AACA,SAAQC,gBAAR,QAA+B,UAA/B;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,mBAAlC;AACA,SAAQC,IAAR,QAAmB,uCAAnB;AACA,SAAQC,kBAAR,QAAiC,+BAAjC;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,QAAM;AAACC,IAAAA;AAAD,MAAMN,cAAc,EAA1B;;AAEA,QAAMO,WAAW,GAAIC,IAAD,IAAU;AAC1B,UAAMC,IAAI,GAAG;AAACD,MAAAA;AAAD,KAAb;AACAJ,IAAAA,kBAAkB,CAAC;AAACK,MAAAA;AAAD,KAAD,CAAlB;AACH,GAHD;;AAKA,sBACI,oBAAC,WAAD;AACI,IAAA,OAAO,EAAC,MADZ;AAEI,IAAA,WAAW,EAAC,UAFhB;AAGI,kBAAW,gCAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMQX,SAAS,CAACY,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,kBACV,oBAAC,MAAD;AACI,IAAA,GAAG,EAAG,GAAEA,GAAG,GAAG,CAAE,EADpB;AAEI,IAAA,OAAO,EAAE,MAAML,WAAW,CAACI,IAAI,CAACE,IAAN,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,GAAEP,CAAC,CAACK,IAAI,CAACG,QAAN,CAAgB,EADzB,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,GAAER,CAAC,CAACK,IAAI,CAACI,IAAN,CAAY,EADrB,CADJ,CAJJ,CAJJ,CADJ,CANR,CADJ;AA2BH,CAnCM","sourcesContent":["import React from 'react'\nimport {languages} from '../../../data'\nimport {LanguagesWrapper} from '../atoms'\nimport {useTranslation} from 'react-i18next'\nimport {Button, ButtonGroup} from '@material-ui/core'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {updateAccountMount} from '../../../Models/account-model'\n\nexport const LanguageItems = () => {\n    const {t} = useTranslation()\n    \n    const handleClick = (lang) => {\n        const data = {lang}\n        updateAccountMount({data})\n    }\n    \n    return (\n        <ButtonGroup\n            variant='text'\n            orientation='vertical'\n            aria-label='vertical outlined button group'\n        >\n            {\n                languages.map((item, idx) => (\n                    <Button\n                        key={`${idx + 1}`}\n                        onClick={() => handleClick(item.code)}\n                    >\n                        <LanguagesWrapper>\n                            <Text>\n                                {`${t(item.language)}`}\n                            </Text>\n                            <div className='current-lang'>\n                                <Text>\n                                    {`${t(item.text)}`}\n                                </Text>\n                            </div>\n                        </LanguagesWrapper>\n                    </Button>\n                ))\n            }\n        </ButtonGroup>\n    )\n}"]},"metadata":{},"sourceType":"module"}