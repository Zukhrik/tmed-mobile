{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Components/Offering/OrgOfferings/OfferingGroupItem/index.jsx\";\nimport React from 'react';\nimport { useStore } from 'effector-react';\nimport { GroupItemNavLink } from '../style';\nimport { $appModel } from '../../../../Models/app';\nimport { INFO_MAT } from '../../../../Constants/app';\nimport { Text } from '../../../../UIComponents/Typography/Text';\nexport const OfferingGroupItem = ({\n  imgUrl,\n  path,\n  isActive,\n  name\n}) => {\n  const {\n    $device\n  } = useStore($appModel);\n  return /*#__PURE__*/React.createElement(GroupItemNavLink, {\n    to: path,\n    isActive: () => isActive(),\n    maxwidth: $device && $device === INFO_MAT ? '120px' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: imgUrl,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    className: \"offering-group-name\",\n    level: $device && $device === INFO_MAT ? 3 : 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, name));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Components/Offering/OrgOfferings/OfferingGroupItem/index.jsx"],"names":["React","useStore","GroupItemNavLink","$appModel","INFO_MAT","Text","OfferingGroupItem","imgUrl","path","isActive","name","$device"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,SAAQC,gBAAR,QAA+B,UAA/B;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,SAAQC,IAAR,QAAmB,0CAAnB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,IAAT;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA;AAAzB,CAAD,KAAoC;AACjE,QAAM;AAACC,IAAAA;AAAD,MAAYV,QAAQ,CAACE,SAAD,CAA1B;AAEA,sBACI,oBAAC,gBAAD;AACI,IAAA,EAAE,EAAEK,IADR;AAEI,IAAA,QAAQ,EAAE,MAAMC,QAAQ,EAF5B;AAGI,IAAA,QAAQ,EAAEE,OAAO,IAAIA,OAAO,KAAKP,QAAvB,GAAkC,OAAlC,GAA4C,EAH1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAK,IAAA,GAAG,EAAEG,MAAV;AAAkB,IAAA,GAAG,EAAEG,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAC,qBADd;AAEI,IAAA,KAAK,EAAEC,OAAO,IAAIA,OAAO,KAAKP,QAAvB,GAAkC,CAAlC,GAAsC,CAFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKM,IAJL,CANJ,CADJ;AAgBH,CAnBM","sourcesContent":["import React from 'react'\r\nimport {useStore} from 'effector-react'\r\nimport {GroupItemNavLink} from '../style'\r\nimport {$appModel} from '../../../../Models/app'\r\nimport {INFO_MAT} from '../../../../Constants/app'\r\nimport {Text} from '../../../../UIComponents/Typography/Text'\r\n\r\nexport const OfferingGroupItem = ({imgUrl, path, isActive, name}) => {\r\n    const {$device} = useStore($appModel)\r\n    \r\n    return (\r\n        <GroupItemNavLink\r\n            to={path}\r\n            isActive={() => isActive()}\r\n            maxwidth={$device && $device === INFO_MAT ? '120px' : ''}\r\n        >\r\n            <img src={imgUrl} alt={name}/>\r\n            <Text\r\n                className='offering-group-name'\r\n                level={$device && $device === INFO_MAT ? 3 : 5}\r\n            >\r\n                {name}\r\n                {/*{truncateString(name, $device && $device === INFO_MAT ? 6 : 7)}*/}\r\n            </Text>\r\n        </GroupItemNavLink>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}