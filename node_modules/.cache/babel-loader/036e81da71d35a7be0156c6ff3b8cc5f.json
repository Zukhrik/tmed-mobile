{"ast":null,"code":"import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"label\",\"error\",\"helperText\",\"hideErrorText\",\"readOnly\",\"icon\",\"staticError\"];import React,{useState}from'react';import{IconBox}from'../../GlobalStyles';import{TextField}from'@material-ui/core';import{StyledFormControl,StyledHelperText,StyledInputError}from'../atoms';import{EyeOffSvg,RemoveEyeReadSvg}from'../../../Icons/Eye';export var PasswordInput=function PasswordInput(_ref){var label=_ref.label,error=_ref.error,helperText=_ref.helperText,hideErrorText=_ref.hideErrorText,readOnly=_ref.readOnly,icon=_ref.icon,staticError=_ref.staticError,props=_objectWithoutProperties(_ref,_excluded);var _useState=useState(true),_useState2=_slicedToArray(_useState,2),type=_useState2[0],setType=_useState2[1];return/*#__PURE__*/React.createElement(StyledFormControl,{error:!!error},/*#__PURE__*/React.createElement(TextField,Object.assign({},props,{label:label,error:!!error,variant:\"filled\",type:type?'password':'text',InputProps:{readOnly:readOnly||false,endAdornment:props.value&&props.value.length>0?/*#__PURE__*/React.createElement(IconBox,{onClick:function onClick(){return setType(!type);}},type?/*#__PURE__*/React.createElement(RemoveEyeReadSvg,null):/*#__PURE__*/React.createElement(EyeOffSvg,null)):/*#__PURE__*/React.createElement(React.Fragment,null)}})),helperText&&/*#__PURE__*/React.createElement(StyledHelperText,null,helperText),!hideErrorText&&error&&/*#__PURE__*/React.createElement(StyledInputError,{staticError:staticError},error));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/UIComponents/mu-inputs/maleculas/password-input.js"],"names":["React","useState","IconBox","TextField","StyledFormControl","StyledHelperText","StyledInputError","EyeOffSvg","RemoveEyeReadSvg","PasswordInput","label","error","helperText","hideErrorText","readOnly","icon","staticError","props","type","setType","endAdornment","value","length"],"mappings":"2bAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,OAAR,KAAsB,oBAAtB,CACA,OAAQC,SAAR,KAAwB,mBAAxB,CACA,OAAQC,iBAAR,CAA2BC,gBAA3B,CAA6CC,gBAA7C,KAAoE,UAApE,CACA,OAAQC,SAAR,CAAmBC,gBAAnB,KAA0C,oBAA1C,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAsF,IAApFC,CAAAA,KAAoF,MAApFA,KAAoF,CAA7EC,KAA6E,MAA7EA,KAA6E,CAAtEC,UAAsE,MAAtEA,UAAsE,CAA1DC,aAA0D,MAA1DA,aAA0D,CAA3CC,QAA2C,MAA3CA,QAA2C,CAAjCC,IAAiC,MAAjCA,IAAiC,CAA3BC,WAA2B,MAA3BA,WAA2B,CAAXC,KAAW,0CAC/G,cAAwBhB,QAAQ,CAAC,IAAD,CAAhC,wCAAOiB,IAAP,eAAaC,OAAb,eAEA,mBACI,oBAAC,iBAAD,EACI,KAAK,CAAE,CAAC,CAACR,KADb,eAGI,oBAAC,SAAD,kBACQM,KADR,EAEI,KAAK,CAAEP,KAFX,CAGI,KAAK,CAAE,CAAC,CAACC,KAHb,CAII,OAAO,CAAC,QAJZ,CAKI,IAAI,CAAEO,IAAI,CAAG,UAAH,CAAgB,MAL9B,CAMI,UAAU,CAAE,CACRJ,QAAQ,CAAEA,QAAQ,EAAI,KADd,CAERM,YAAY,CAAEH,KAAK,CAACI,KAAN,EAAeJ,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAqB,CAApC,cACV,oBAAC,OAAD,EAAS,OAAO,CAAE,yBAAMH,CAAAA,OAAO,CAAC,CAACD,IAAF,CAAb,EAAlB,EAAyCA,IAAI,cAAG,oBAAC,gBAAD,MAAH,cACzC,oBAAC,SAAD,MADJ,CADU,cAEoB,wCAJ1B,CANhB,GAHJ,CAgBKN,UAAU,eAAI,oBAAC,gBAAD,MAAmBA,UAAnB,CAhBnB,CAiBK,CAACC,aAAD,EAAkBF,KAAlB,eAA2B,oBAAC,gBAAD,EAAkB,WAAW,CAAEK,WAA/B,EAA6CL,KAA7C,CAjBhC,CADJ,CAqBH,CAxBM","sourcesContent":["import React, {useState} from 'react'\r\nimport {IconBox} from '../../GlobalStyles'\r\nimport {TextField} from '@material-ui/core'\r\nimport {StyledFormControl, StyledHelperText, StyledInputError} from '../atoms'\r\nimport {EyeOffSvg, RemoveEyeReadSvg} from '../../../Icons/Eye'\r\n\r\nexport const PasswordInput = ({label, error, helperText, hideErrorText, readOnly, icon, staticError, ...props}) => {\r\n    const [type, setType] = useState(true)\r\n    \r\n    return (\r\n        <StyledFormControl\r\n            error={!!error}\r\n        >\r\n            <TextField\r\n                {...props}\r\n                label={label}\r\n                error={!!error}\r\n                variant='filled'\r\n                type={type ? 'password' : 'text'}\r\n                InputProps={{\r\n                    readOnly: readOnly || false,\r\n                    endAdornment: props.value && props.value.length > 0 ?\r\n                        <IconBox onClick={() => setType(!type)}>{type ? <RemoveEyeReadSvg/> :\r\n                            <EyeOffSvg/>}</IconBox> : <></>\r\n                }}\r\n            />\r\n            {helperText && <StyledHelperText>{helperText}</StyledHelperText>}\r\n            {!hideErrorText && error && <StyledInputError staticError={staticError}>{error}</StyledInputError>}\r\n        </StyledFormControl>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}