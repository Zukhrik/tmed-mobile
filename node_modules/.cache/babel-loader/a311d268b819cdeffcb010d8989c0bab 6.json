{"ast":null,"code":"import _slicedToArray from\"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Carousel from'react-multi-carousel';import{useTranslation}from'react-i18next';import{truncateString}from'../../../../utils/stringUtils';import{Text}from'../../../../UIComponents/Typography/Text';import{ImageLazyLoad}from'../../../../UIComponents/ImageLazyLoad';import{CommonPostWrapper,PostDescriptionWrapper,PostImagesWrapper}from'../../style';var responsive={desktop:{breakpoint:{max:3000,min:1024},items:1},tablet:{breakpoint:{max:1024,min:464},items:1},mobile:{breakpoint:{max:464,min:0},items:1}};export var CommonPost=function CommonPost(_ref){var _mediaData$,_mediaData$2,_mediaData$3,_mediaData$4,_mediaData$5;var post=_ref.post,mediaData=_ref.mediaData,repostText=_ref.repostText;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/React.createElement(CommonPostWrapper,null,repostText&&/*#__PURE__*/React.createElement(PostDescriptionWrapper,null,/*#__PURE__*/React.createElement(Text,null,repostText)),(post===null||post===void 0?void 0:post.trim().length)>0&&/*#__PURE__*/React.createElement(PostDescriptionWrapper,null,!show?/*#__PURE__*/React.createElement(Text,null,truncateString(post,150),post&&post.length>150&&/*#__PURE__*/React.createElement(\"span\",{onClick:function onClick(){return setShow(!show);}},t('more'))):/*#__PURE__*/React.createElement(Text,null,post,/*#__PURE__*/React.createElement(\"span\",{onClick:function onClick(){return setShow(!show);}},t('hide')))),/*#__PURE__*/React.createElement(PostImagesWrapper,null,mediaData&&/*#__PURE__*/React.createElement(React.Fragment,null,mediaData.length===1?/*#__PURE__*/React.createElement(React.Fragment,null,((_mediaData$=mediaData[0])===null||_mediaData$===void 0?void 0:_mediaData$.thumbnail)&&!((_mediaData$2=mediaData[0])===null||_mediaData$2===void 0?void 0:_mediaData$2.file)?/*#__PURE__*/React.createElement(ImageLazyLoad,{src:(_mediaData$3=mediaData[0])===null||_mediaData$3===void 0?void 0:_mediaData$3.thumbnail,alt:(_mediaData$4=mediaData[0])===null||_mediaData$4===void 0?void 0:_mediaData$4.thumbnail}):/*#__PURE__*/React.createElement(\"video\",{controls:true,autoPlay:true,playsInline:true,muted:true,loop:true},/*#__PURE__*/React.createElement(\"source\",{src:(_mediaData$5=mediaData[0])===null||_mediaData$5===void 0?void 0:_mediaData$5.file}))):/*#__PURE__*/React.createElement(Carousel,{arrows:false,responsive:responsive,renderButtonGroupOutside:true,itemClass:\"offering-gallery-item\",showDots:mediaData.length>1},mediaData.map(function(item,idx){return/*#__PURE__*/React.createElement(\"div\",{key:\"\".concat(idx+1)},item.thumbnail&&!item.file&&/*#__PURE__*/React.createElement(ImageLazyLoad,{src:item.thumbnail,alt:item.thumbnail,height:\"auto\"}),item.file&&!item.thumbnail&&/*#__PURE__*/React.createElement(\"video\",{controls:true},/*#__PURE__*/React.createElement(\"source\",{src:item.file})));})))));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Post/PostContent/CommonPost/index.jsx"],"names":["React","useState","Carousel","useTranslation","truncateString","Text","ImageLazyLoad","CommonPostWrapper","PostDescriptionWrapper","PostImagesWrapper","responsive","desktop","breakpoint","max","min","items","tablet","mobile","CommonPost","post","mediaData","repostText","show","setShow","t","trim","length","thumbnail","file","map","item","idx"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport Carousel from 'react-multi-carousel'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {truncateString} from '../../../../utils/stringUtils'\r\nimport {Text} from '../../../../UIComponents/Typography/Text'\r\nimport {ImageLazyLoad} from '../../../../UIComponents/ImageLazyLoad'\r\nimport {CommonPostWrapper, PostDescriptionWrapper, PostImagesWrapper} from '../../style'\r\n\r\nconst responsive = {\r\n    desktop: {\r\n        breakpoint: {max: 3000, min: 1024},\r\n        items: 1\r\n    },\r\n    tablet: {\r\n        breakpoint: {max: 1024, min: 464},\r\n        items: 1\r\n    },\r\n    mobile: {\r\n        breakpoint: {max: 464, min: 0},\r\n        items: 1\r\n    }\r\n}\r\n\r\nexport const CommonPost = ({post, mediaData, repostText}) => {\r\n    const [show, setShow] = useState(false)\r\n    const {t} = useTranslation()\r\n    \r\n    return (\r\n        <CommonPostWrapper>\r\n            {\r\n                repostText && (\r\n                    <PostDescriptionWrapper>\r\n                        <Text>{repostText}</Text>\r\n                    </PostDescriptionWrapper>\r\n                )\r\n            }\r\n            {\r\n                post?.trim().length > 0 && (\r\n                    <PostDescriptionWrapper>\r\n                        {\r\n                            !show\r\n                                ? (\r\n                                    <Text>\r\n                                        {truncateString(post, 150)}\r\n                                        {post && post.length > 150 &&\r\n                                            <span onClick={() => setShow(!show)}>{t('more')}</span>}\r\n                                    </Text>\r\n                                )\r\n                                : (\r\n                                    <Text>\r\n                                        {post}\r\n                                        <span onClick={() => setShow(!show)}>{t('hide')}</span>\r\n                                    </Text>\r\n                                )\r\n                        }\r\n                    </PostDescriptionWrapper>\r\n                )\r\n            }\r\n            <PostImagesWrapper>\r\n                {\r\n                    mediaData && (\r\n                        <>\r\n                            {\r\n                                mediaData.length === 1\r\n                                    ? (\r\n                                        <>\r\n                                            {\r\n                                                mediaData[0]?.thumbnail && !mediaData[0]?.file\r\n                                                    ? <ImageLazyLoad\r\n                                                        src={mediaData[0]?.thumbnail}\r\n                                                        alt={mediaData[0]?.thumbnail}\r\n                                                    />\r\n                                                    : <video\r\n                                                        controls\r\n                                                        autoPlay\r\n                                                        playsInline\r\n                                                        muted\r\n                                                        loop\r\n                                                    >\r\n                                                        <source src={mediaData[0]?.file}/>\r\n                                                    </video>\r\n                                            }\r\n                                        </>\r\n                                    )\r\n                                    : (\r\n                                        <Carousel\r\n                                            arrows={false}\r\n                                            responsive={responsive}\r\n                                            renderButtonGroupOutside\r\n                                            itemClass='offering-gallery-item'\r\n                                            showDots={mediaData.length > 1}\r\n                                        >\r\n                                            {\r\n                                                mediaData.map((item, idx) => (\r\n                                                    <div key={`${idx + 1}`}>\r\n                                                        {\r\n                                                            item.thumbnail && !item.file && (\r\n                                                                <ImageLazyLoad\r\n                                                                    src={item.thumbnail}\r\n                                                                    alt={item.thumbnail}\r\n                                                                    height='auto'\r\n                                                                />\r\n                                                            )\r\n                                                        }\r\n                                                        {\r\n                                                            item.file && !item.thumbnail && (\r\n                                                                <video controls>\r\n                                                                    <source src={item.file}/>\r\n                                                                </video>\r\n                                                            )\r\n                                                        }\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </Carousel>\r\n                                    )\r\n                            }\r\n                        </>\r\n                    )\r\n                }\r\n            </PostImagesWrapper>\r\n        </CommonPostWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}