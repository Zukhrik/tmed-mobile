{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/pages/account.jsx\";\nimport React from 'react';\nimport { useUser } from '../../../Hooks/user';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useStore } from 'effector-react';\nimport { $userModel } from '../../../Models/user-model';\nimport { RootContent } from '../../../UIComponents/GlobalStyles';\nimport { FixedHeader } from '../../../Components/FixedHeader';\nimport { UserFixedHeaderComponent } from '../organisms/user-fixed-header-component';\nimport { Col, Row } from 'antd';\nimport { ShortCard, ShortCardSkeleton } from '../../../Components/Cards';\nimport Cookies from 'js-cookie';\nimport { getCurrentAccount } from '../../../Models/account-model';\nimport { tokenMount } from '../../../Models/app';\nimport { resetOrderCartList, resetOrgOrderCart } from '../../../Models/order-model';\nexport const Account = () => {\n  useUser();\n  const {\n    push\n  } = useHistory();\n  const {\n    username\n  } = useParams();\n  const {\n    $user: {\n      data,\n      forceLoading\n    }\n  } = useStore($userModel);\n  const userInfo = data && (data === null || data === void 0 ? void 0 : data[username]);\n\n  const handleClick = evt => {\n    if (evt === 'logo') {\n      push('/');\n    } else if (evt === 'logout') {\n      Cookies.remove('token');\n      Cookies.remove('users');\n      Cookies.remove('refresh-token');\n      getCurrentAccount();\n      localStorage.removeItem('currentProfile');\n      tokenMount(null);\n      push('/');\n      resetOrgOrderCart();\n      resetOrderCartList();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(RootContent, {\n    height: \"100vh\",\n    paddingTop: 62,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FixedHeader, {\n    component: /*#__PURE__*/React.createElement(UserFixedHeaderComponent, {\n      logoClick: () => handleClick('logo'),\n      cartClick: () => handleClick('logout'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, forceLoading === 2 && userInfo ? /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ShortCard, {\n    imgSize: 48,\n    imgUrl: userInfo.avatar,\n    name: `${userInfo.name} ${userInfo.lastname}`,\n    text: userInfo.main_cat.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  })) : /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ShortCardSkeleton, {\n    size: 48,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Account/pages/account.jsx"],"names":["React","useUser","useHistory","useParams","useStore","$userModel","RootContent","FixedHeader","UserFixedHeaderComponent","Col","Row","ShortCard","ShortCardSkeleton","Cookies","getCurrentAccount","tokenMount","resetOrderCartList","resetOrgOrderCart","Account","push","username","$user","data","forceLoading","userInfo","handleClick","evt","remove","localStorage","removeItem","avatar","name","lastname","main_cat"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useUser} from '../../../Hooks/user'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {useStore} from 'effector-react'\nimport {$userModel} from '../../../Models/user-model'\nimport {RootContent} from '../../../UIComponents/GlobalStyles'\nimport {FixedHeader} from '../../../Components/FixedHeader'\nimport {UserFixedHeaderComponent} from '../organisms/user-fixed-header-component'\nimport {Col, Row} from 'antd'\nimport {ShortCard, ShortCardSkeleton} from '../../../Components/Cards'\nimport Cookies from 'js-cookie'\nimport {getCurrentAccount} from '../../../Models/account-model'\nimport {tokenMount} from '../../../Models/app'\nimport {resetOrderCartList, resetOrgOrderCart} from '../../../Models/order-model'\n\n\nexport const Account = () => {\n    useUser()\n    const {push} = useHistory()\n    const {username} = useParams()\n    const {$user: {data, forceLoading}} = useStore($userModel)\n    const userInfo = data && data?.[username]\n    \n    const handleClick = (evt) => {\n        if (evt === 'logo') {\n            push('/')\n        } else if (evt === 'logout') {\n            Cookies.remove('token')\n            Cookies.remove('users')\n            Cookies.remove('refresh-token')\n            getCurrentAccount()\n            localStorage.removeItem('currentProfile')\n            tokenMount(null)\n            push('/')\n            resetOrgOrderCart()\n            resetOrderCartList()\n        }\n    }\n    \n    return (\n        <RootContent height='100vh' paddingTop={62}>\n            <FixedHeader\n                component={<UserFixedHeaderComponent\n                    logoClick={() => handleClick('logo')}\n                    cartClick={() => handleClick('logout')}\n                />}\n            />\n            <Row className='container'>\n                {\n                    forceLoading === 2 && userInfo\n                        ? (\n                            <Col span={24}>\n                                <ShortCard\n                                    imgSize={48}\n                                    imgUrl={userInfo.avatar}\n                                    name={`${userInfo.name} ${userInfo.lastname}`}\n                                    text={userInfo.main_cat.name}\n                                />\n                            </Col>\n                        )\n                        : (\n                            <Col span={24}>\n                                <ShortCardSkeleton size={48}/>\n                            </Col>\n                        )\n                }\n            </Row>\n        </RootContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}