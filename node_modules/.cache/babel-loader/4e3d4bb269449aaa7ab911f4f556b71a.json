{"ast":null,"code":"var _jsxFileName = \"/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Checkout/InfoCard/CheckoutDetail/CreditCardDetail/CreateCard.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'antd';\nimport { CreditCardDetailForm } from '../../style';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { PayMeSvg } from '../../../../../Icons/PayMe';\nimport { StyledCountdown } from '../../../../Auth/style';\nimport { RefreshSvg } from '../../../../../Icons/refresh';\nimport { Button } from '../../../../../UIComponents/Button';\nimport { InputUI } from '../../../../../UIComponents/mu-inputs';\nimport { Title } from '../../../../../UIComponents/Typography/Title';\nexport const CreateCard = ({\n  formik,\n  cardId,\n  deadline,\n  resendCode,\n  showResend,\n  codeFormik,\n  handleChange,\n  setShowResend,\n  disabledButton,\n  handleChangeCode,\n  disabledButtonCode\n}) => {\n  var _formik$values;\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, cardId ? /*#__PURE__*/React.createElement(CreditCardDetailForm, {\n    onSubmit: codeFormik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 37\n    }\n  }, t('enter_code_activation'))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(PayMeSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    inputType: \"masked\",\n    name: \"activate_code\",\n    mask: \"9 9 9 9 9 9\",\n    label: t('code_activation'),\n    maskChar: \"*\",\n    value: codeFormik.values.activate_code || '',\n    onBlur: codeFormik.handleBlur,\n    onChange: e => handleChangeCode('activate_code', e.target.value),\n    error: codeFormik.touched.activate_code && codeFormik.errors.activate_code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  })), showResend ? /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"l\",\n    onClick: () => resendCode(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(RefreshSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 53\n    }\n  }), t('send_again'))) : /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Trans, {\n    i18nKey: \"get_code_sentence\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(StyledCountdown, {\n    format: \"s\",\n    value: deadline,\n    onFinish: () => setShowResend(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"l\",\n    variant: \"primary\",\n    htmlType: \"submit\",\n    disabled: disabledButtonCode(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }\n  }, t('confirm'))))) : /*#__PURE__*/React.createElement(CreditCardDetailForm, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [0, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, t('enter_bank_card_details'))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(PayMeSvg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    inputType: \"masked\",\n    mask: \"9999 9999 9999 9999\",\n    name: \"number\",\n    maskChar: \"*\",\n    onBlur: formik.handleBlur,\n    label: t('enter_card_number'),\n    value: formik.values.number || '',\n    onChange: e => handleChange('number', e.target.value),\n    error: formik.touched.number && formik.errors.number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    name: \"expire_date\",\n    label: t('expiry_date'),\n    inputType: \"keyboardDate\",\n    placeholder: t('MM/YY'),\n    format: \"MM/YY\",\n    value: formik.values.expire_date || null,\n    onBlur: formik.handleBlur,\n    onChange: value => handleChange('expire_date', value),\n    error: formik.touched.expire_date && formik.errors.expire_date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputUI, {\n    name: \"name\",\n    label: t('card_name'),\n    value: ((_formik$values = formik.values) === null || _formik$values === void 0 ? void 0 : _formik$values.name) || '',\n    onChange: e => handleChange('name', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"l\",\n    variant: \"primary\",\n    htmlType: \"submit\",\n    disabled: disabledButton(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }, t('add'))))));\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Views/Checkout/InfoCard/CheckoutDetail/CreditCardDetail/CreateCard.jsx"],"names":["React","Col","Row","CreditCardDetailForm","Trans","useTranslation","PayMeSvg","StyledCountdown","RefreshSvg","Button","InputUI","Title","CreateCard","formik","cardId","deadline","resendCode","showResend","codeFormik","handleChange","setShowResend","disabledButton","handleChangeCode","disabledButtonCode","t","handleSubmit","values","activate_code","handleBlur","e","target","value","touched","errors","number","expire_date","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Col, Row} from 'antd'\nimport {CreditCardDetailForm} from '../../style'\nimport {Trans, useTranslation} from 'react-i18next'\nimport {PayMeSvg} from '../../../../../Icons/PayMe'\nimport {StyledCountdown} from '../../../../Auth/style'\nimport {RefreshSvg} from '../../../../../Icons/refresh'\nimport {Button} from '../../../../../UIComponents/Button'\nimport {InputUI} from '../../../../../UIComponents/mu-inputs'\nimport {Title} from '../../../../../UIComponents/Typography/Title'\n\nexport const CreateCard = (\n    {\n        formik,\n        cardId,\n        deadline,\n        resendCode,\n        showResend,\n        codeFormik,\n        handleChange,\n        setShowResend,\n        disabledButton,\n        handleChangeCode,\n        disabledButtonCode\n    }\n) => {\n    const {t} = useTranslation()\n    \n    return (\n        <>\n            {\n                cardId\n                    ? (\n                        <CreditCardDetailForm onSubmit={codeFormik.handleSubmit}>\n                            <Row gutter={[0, 24]}>\n                                <Col span={24}>\n                                    <Title>{t('enter_code_activation')}</Title>\n                                </Col>\n                                <Col span={24}>\n                                    <PayMeSvg/>\n                                </Col>\n                                <Col span={24}>\n                                    <InputUI\n                                        inputType='masked'\n                                        name='activate_code'\n                                        mask='9 9 9 9 9 9'\n                                        label={t('code_activation')}\n                                        maskChar='*'\n                                        value={codeFormik.values.activate_code || ''}\n                                        onBlur={codeFormik.handleBlur}\n                                        onChange={(e) => handleChangeCode('activate_code', e.target.value)}\n                                        error={codeFormik.touched.activate_code && codeFormik.errors.activate_code}\n                                    />\n                                </Col>\n                                {\n                                    showResend\n                                        ? (\n                                            <Col span={24}>\n                                                <Button\n                                                    size='l'\n                                                    onClick={() => resendCode()}\n                                                >\n                                                    <RefreshSvg/>\n                                                    {t('send_again')}\n                                                </Button>\n                                            </Col>\n                                        )\n                                        : (\n                                            <Col span={24}>\n                                                <Trans i18nKey='get_code_sentence'>\n                                                    <StyledCountdown\n                                                        format='s'\n                                                        value={deadline}\n                                                        onFinish={() => setShowResend(true)}\n                                                    />\n                                                </Trans>\n                                            </Col>\n                                        )\n                                }\n                                <Col span={24}>\n                                    <Button\n                                        size='l'\n                                        variant='primary'\n                                        htmlType='submit'\n                                        disabled={disabledButtonCode()}\n                                    >\n                                        {t('confirm')}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </CreditCardDetailForm>\n                    )\n                    : (\n                        <CreditCardDetailForm onSubmit={formik.handleSubmit}>\n                            <Row gutter={[0, 24]}>\n                                <Col span={24}>\n                                    <Title>{t('enter_bank_card_details')}</Title>\n                                </Col>\n                                <Col span={24}>\n                                    <PayMeSvg/>\n                                </Col>\n                                <Col span={24}>\n                                    <InputUI\n                                        inputType='masked'\n                                        mask='9999 9999 9999 9999'\n                                        name='number'\n                                        maskChar='*'\n                                        onBlur={formik.handleBlur}\n                                        label={t('enter_card_number')}\n                                        value={formik.values.number || ''}\n                                        onChange={(e) => handleChange('number', e.target.value)}\n                                        error={formik.touched.number && formik.errors.number}\n                                    />\n                                </Col>\n                                <Col span={24}>\n                                    <InputUI\n                                        name='expire_date'\n                                        label={t('expiry_date')}\n                                        inputType='keyboardDate'\n                                        placeholder={t('MM/YY')}\n                                        format='MM/YY'\n                                        value={formik.values.expire_date || null}\n                                        onBlur={formik.handleBlur}\n                                        onChange={(value) => handleChange('expire_date', value)}\n                                        error={formik.touched.expire_date && formik.errors.expire_date}\n                                    />\n                                </Col>\n                                <Col span={24}>\n                                    <InputUI\n                                        name='name'\n                                        label={t('card_name')}\n                                        value={formik.values?.name || ''}\n                                        onChange={(e) => handleChange('name', e.target.value)}\n                                    />\n                                </Col>\n                                <Col span={24}>\n                                    <Button\n                                        size='l'\n                                        variant='primary'\n                                        htmlType='submit'\n                                        disabled={disabledButton()}\n                                    >\n                                        {t('add')}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </CreditCardDetailForm>\n                    )\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}