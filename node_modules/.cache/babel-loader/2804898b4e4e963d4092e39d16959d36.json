{"ast":null,"code":"import { httpDelete, httpGet, httpPost } from './index';\nexport default {\n  creatingPost: ({\n    data\n  }) => httpPost({\n    url: '/posts/',\n    data\n  }),\n  deletePost: ({\n    post_id\n  }) => httpDelete({\n    url: `/posts/${post_id}/`\n  }),\n  addLikeToPost: ({\n    post_id\n  }) => httpPost({\n    url: `/posts/${post_id}/likes/`\n  }),\n  getPost: ({\n    post_id,\n    params\n  }) => httpGet({\n    url: `/posts/${post_id}/`,\n    params\n  }),\n  removeLikeFromPost: ({\n    post_id\n  }) => httpDelete({\n    url: `/posts/${post_id}/likes/`\n  }),\n  createPostMediaId: ({\n    data,\n    post_id\n  }) => httpPost({\n    url: `/posts/${post_id}/medias/`,\n    data\n  }),\n  createPostsComment: ({\n    post_id,\n    data\n  }) => httpPost({\n    url: `/posts/${post_id}/comments/`,\n    data\n  }),\n  getPostComments: ({\n    post_id,\n    params\n  }) => httpGet({\n    url: `/posts/${post_id}/comments/`,\n    params\n  }),\n  getPostOfferings: ({\n    params,\n    post_id\n  }) => httpGet({\n    url: `/posts/${post_id}/offerings/`,\n    params\n  }),\n  deletePostsMedia: ({\n    post_id,\n    media_id\n  }) => httpDelete({\n    url: `/posts/${post_id}/medias/${media_id}`\n  }),\n  deletePostComment: ({\n    post_id,\n    comment_id\n  }) => httpDelete({\n    url: `/posts/${post_id}/comments/${comment_id}/`\n  }),\n  likeComment: ({\n    post_id,\n    comment_id,\n    data\n  }) => httpPost({\n    url: `/posts/${post_id}/comments/${comment_id}/likes/`,\n    data\n  }),\n  deleteLike: ({\n    post_id,\n    comment_id\n  }) => httpDelete({\n    url: `/posts/${post_id}/comments/${comment_id}/likes/`\n  }),\n  createPostMedia: ({\n    data,\n    post_id,\n    onUploadProgress\n  }) => httpPost({\n    url: `/posts/${post_id}/medias/`,\n    data,\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    },\n    onUploadProgress\n  }),\n  replyToComment: ({\n    post_id,\n    comment_id,\n    data\n  }) => httpPost({\n    url: `/posts/${post_id}/comments/${comment_id}/replies/`,\n    data\n  }),\n  commentReplyList: ({\n    post_id,\n    comment_id\n  }) => httpGet({\n    url: `/posts/${post_id}/comments/${comment_id}/replies/`\n  })\n};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/Service/post.js"],"names":["httpDelete","httpGet","httpPost","creatingPost","data","url","deletePost","post_id","addLikeToPost","getPost","params","removeLikeFromPost","createPostMediaId","createPostsComment","getPostComments","getPostOfferings","deletePostsMedia","media_id","deletePostComment","comment_id","likeComment","deleteLike","createPostMedia","onUploadProgress","headers","replyToComment","commentReplyList"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,OAApB,EAA6BC,QAA7B,QAA4C,SAA5C;AAEA,eAAe;AACXC,EAAAA,YAAY,EAAE,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAYF,QAAQ,CAAC;AAACG,IAAAA,GAAG,EAAE,SAAN;AAAiBD,IAAAA;AAAjB,GAAD,CADvB;AAEXE,EAAAA,UAAU,EAAE,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAeP,UAAU,CAAC;AAACK,IAAAA,GAAG,EAAG,UAASE,OAAQ;AAAxB,GAAD,CAF1B;AAGXC,EAAAA,aAAa,EAAE,CAAC;AAACD,IAAAA;AAAD,GAAD,KAAeL,QAAQ,CAAC;AAACG,IAAAA,GAAG,EAAG,UAASE,OAAQ;AAAxB,GAAD,CAH3B;AAIXE,EAAAA,OAAO,EAAE,CAAC;AAACF,IAAAA,OAAD;AAAUG,IAAAA;AAAV,GAAD,KAAuBT,OAAO,CAAC;AAACI,IAAAA,GAAG,EAAG,UAASE,OAAQ,GAAxB;AAA4BG,IAAAA;AAA5B,GAAD,CAJ5B;AAKXC,EAAAA,kBAAkB,EAAE,CAAC;AAACJ,IAAAA;AAAD,GAAD,KAAeP,UAAU,CAAC;AAACK,IAAAA,GAAG,EAAG,UAASE,OAAQ;AAAxB,GAAD,CALlC;AAMXK,EAAAA,iBAAiB,EAAE,CAAC;AAACR,IAAAA,IAAD;AAAOG,IAAAA;AAAP,GAAD,KAAqBL,QAAQ,CAAC;AAACG,IAAAA,GAAG,EAAG,UAASE,OAAQ,UAAxB;AAAmCH,IAAAA;AAAnC,GAAD,CANrC;AAOXS,EAAAA,kBAAkB,EAAE,CAAC;AAACN,IAAAA,OAAD;AAAUH,IAAAA;AAAV,GAAD,KAAqBF,QAAQ,CAAC;AAACG,IAAAA,GAAG,EAAG,UAASE,OAAQ,YAAxB;AAAqCH,IAAAA;AAArC,GAAD,CAPtC;AAQXU,EAAAA,eAAe,EAAE,CAAC;AAACP,IAAAA,OAAD;AAAUG,IAAAA;AAAV,GAAD,KAAuBT,OAAO,CAAC;AAACI,IAAAA,GAAG,EAAG,UAASE,OAAQ,YAAxB;AAAqCG,IAAAA;AAArC,GAAD,CARpC;AASXK,EAAAA,gBAAgB,EAAE,CAAC;AAACL,IAAAA,MAAD;AAASH,IAAAA;AAAT,GAAD,KAAuBN,OAAO,CAAC;AAACI,IAAAA,GAAG,EAAG,UAASE,OAAQ,aAAxB;AAAsCG,IAAAA;AAAtC,GAAD,CATrC;AAUXM,EAAAA,gBAAgB,EAAE,CAAC;AAACT,IAAAA,OAAD;AAAUU,IAAAA;AAAV,GAAD,KAAyBjB,UAAU,CAAC;AAACK,IAAAA,GAAG,EAAG,UAASE,OAAQ,WAAUU,QAAS;AAA3C,GAAD,CAV1C;AAWXC,EAAAA,iBAAiB,EAAE,CAAC;AAACX,IAAAA,OAAD;AAAUY,IAAAA;AAAV,GAAD,KAA2BnB,UAAU,CAAC;AAACK,IAAAA,GAAG,EAAG,UAASE,OAAQ,aAAYY,UAAW;AAA/C,GAAD,CAX7C;AAYXC,EAAAA,WAAW,EAAE,CAAC;AAACb,IAAAA,OAAD;AAAUY,IAAAA,UAAV;AAAsBf,IAAAA;AAAtB,GAAD,KAAiCF,QAAQ,CAAC;AACnDG,IAAAA,GAAG,EAAG,UAASE,OAAQ,aAAYY,UAAW,SADK;AACKf,IAAAA;AADL,GAAD,CAZ3C;AAeXiB,EAAAA,UAAU,EAAE,CAAC;AAACd,IAAAA,OAAD;AAAUY,IAAAA;AAAV,GAAD,KAA2BnB,UAAU,CAAC;AAACK,IAAAA,GAAG,EAAG,UAASE,OAAQ,aAAYY,UAAW;AAA/C,GAAD,CAftC;AAgBXG,EAAAA,eAAe,EAAE,CAAC;AAAClB,IAAAA,IAAD;AAAOG,IAAAA,OAAP;AAAgBgB,IAAAA;AAAhB,GAAD,KAAuCrB,QAAQ,CAAC;AAC7DG,IAAAA,GAAG,EAAG,UAASE,OAAQ,UADsC;AAC3BH,IAAAA,IAD2B;AAE7DoB,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFoD;AAK7DD,IAAAA;AAL6D,GAAD,CAhBrD;AAuBXE,EAAAA,cAAc,EAAE,CAAC;AAAClB,IAAAA,OAAD;AAAUY,IAAAA,UAAV;AAAsBf,IAAAA;AAAtB,GAAD,KAAiCF,QAAQ,CAAC;AACtDG,IAAAA,GAAG,EAAG,UAASE,OAAQ,aAAYY,UAAW,WADQ;AACIf,IAAAA;AADJ,GAAD,CAvB9C;AA0BXsB,EAAAA,gBAAgB,EAAE,CAAC;AAACnB,IAAAA,OAAD;AAAUY,IAAAA;AAAV,GAAD,KAA2BlB,OAAO,CAAC;AACjDI,IAAAA,GAAG,EAAG,UAASE,OAAQ,aAAYY,UAAW;AADG,GAAD;AA1BzC,CAAf","sourcesContent":["import {httpDelete, httpGet, httpPost} from './index'\r\n\r\nexport default {\r\n    creatingPost: ({data}) => httpPost({url: '/posts/', data}),\r\n    deletePost: ({post_id}) => httpDelete({url: `/posts/${post_id}/`}),\r\n    addLikeToPost: ({post_id}) => httpPost({url: `/posts/${post_id}/likes/`}),\r\n    getPost: ({post_id, params}) => httpGet({url: `/posts/${post_id}/`, params}),\r\n    removeLikeFromPost: ({post_id}) => httpDelete({url: `/posts/${post_id}/likes/`}),\r\n    createPostMediaId: ({data, post_id}) => httpPost({url: `/posts/${post_id}/medias/`, data}),\r\n    createPostsComment: ({post_id, data}) => httpPost({url: `/posts/${post_id}/comments/`, data}),\r\n    getPostComments: ({post_id, params}) => httpGet({url: `/posts/${post_id}/comments/`, params}),\r\n    getPostOfferings: ({params, post_id}) => httpGet({url: `/posts/${post_id}/offerings/`, params}),\r\n    deletePostsMedia: ({post_id, media_id}) => httpDelete({url: `/posts/${post_id}/medias/${media_id}`}),\r\n    deletePostComment: ({post_id, comment_id}) => httpDelete({url: `/posts/${post_id}/comments/${comment_id}/`}),\r\n    likeComment: ({post_id, comment_id, data}) => httpPost({\r\n        url: `/posts/${post_id}/comments/${comment_id}/likes/`, data\r\n    }),\r\n    deleteLike: ({post_id, comment_id}) => httpDelete({url: `/posts/${post_id}/comments/${comment_id}/likes/`}),\r\n    createPostMedia: ({data, post_id, onUploadProgress}) => httpPost({\r\n        url: `/posts/${post_id}/medias/`, data,\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress\r\n    }),\r\n    replyToComment: ({post_id, comment_id, data}) => httpPost({\r\n        url: `/posts/${post_id}/comments/${comment_id}/replies/`, data\r\n    }),\r\n    commentReplyList: ({post_id, comment_id}) => httpGet({\r\n        url: `/posts/${post_id}/comments/${comment_id}/replies/`\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}