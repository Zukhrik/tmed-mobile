{"ast":null,"code":"export function numberFormat(number, decimals, dec_point = '.', thousands_sep = ' ') {\n  // Format a number with grouped thousands\n  let i, j, kw, kd, km, nl, lkd;\n\n  if (isNaN(decimals = Math.abs(decimals))) {\n    decimals = 2;\n  }\n\n  if (dec_point === undefined) {\n    dec_point = '.';\n  }\n\n  if (thousands_sep === undefined) {\n    thousands_sep = ' ';\n  }\n\n  i = parseInt(number = (+number || 0).toFixed(decimals)) + '';\n\n  if ((j = i.length) > 3) {\n    j = j % 3;\n  } else {\n    j = 0;\n  }\n\n  km = j ? i.substr(0, j) + thousands_sep : '';\n  kw = i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousands_sep);\n  kd = '0' + (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).replace(/-/, 0).slice(2) : '');\n  nl = parseFloat(kd).valueOf();\n\n  if (nl > 0) {\n    lkd = nl.toString().substr(1);\n  } else {\n    lkd = '';\n  }\n\n  return km + kw + lkd;\n}","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/t-med(mobile)/src/utils/number-utils.js"],"names":["numberFormat","number","decimals","dec_point","thousands_sep","i","j","kw","kd","km","nl","lkd","isNaN","Math","abs","undefined","parseInt","toFixed","length","substr","replace","slice","parseFloat","valueOf","toString"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,MAAtB,EAA8BC,QAA9B,EAAwCC,SAAS,GAAG,GAApD,EAAyDC,aAAa,GAAG,GAAzE,EAA8E;AAAG;AACpF,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,GAA1B;;AACA,MAAIC,KAAK,CAACV,QAAQ,GAAGW,IAAI,CAACC,GAAL,CAASZ,QAAT,CAAZ,CAAT,EAA0C;AACtCA,IAAAA,QAAQ,GAAG,CAAX;AACH;;AACD,MAAIC,SAAS,KAAKY,SAAlB,EAA6B;AACzBZ,IAAAA,SAAS,GAAG,GAAZ;AACH;;AACD,MAAIC,aAAa,KAAKW,SAAtB,EAAiC;AAC7BX,IAAAA,aAAa,GAAG,GAAhB;AACH;;AACDC,EAAAA,CAAC,GAAGW,QAAQ,CAACf,MAAM,GAAG,CAAC,CAACA,MAAD,IAAW,CAAZ,EAAegB,OAAf,CAAuBf,QAAvB,CAAV,CAAR,GAAsD,EAA1D;;AACA,MAAI,CAACI,CAAC,GAAGD,CAAC,CAACa,MAAP,IAAiB,CAArB,EAAwB;AACpBZ,IAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACH,GAFD,MAEO;AACHA,IAAAA,CAAC,GAAG,CAAJ;AACH;;AACDG,EAAAA,EAAE,GAAIH,CAAC,GAAGD,CAAC,CAACc,MAAF,CAAS,CAAT,EAAYb,CAAZ,IAAiBF,aAApB,GAAoC,EAA3C;AACAG,EAAAA,EAAE,GAAGF,CAAC,CAACc,MAAF,CAASb,CAAT,EAAYc,OAAZ,CAAoB,gBAApB,EAAsC,OAAOhB,aAA7C,CAAL;AACAI,EAAAA,EAAE,GAAG,OAAON,QAAQ,GAAGC,SAAS,GAAGU,IAAI,CAACC,GAAL,CAASb,MAAM,GAAGI,CAAlB,EAAqBY,OAArB,CAA6Bf,QAA7B,EAAuCkB,OAAvC,CAA+C,GAA/C,EAAoD,CAApD,EAAuDC,KAAvD,CAA6D,CAA7D,CAAf,GAAiF,EAAhG,CAAL;AACAX,EAAAA,EAAE,GAAGY,UAAU,CAACd,EAAD,CAAV,CAAee,OAAf,EAAL;;AACA,MAAIb,EAAE,GAAG,CAAT,EAAY;AACRC,IAAAA,GAAG,GAAGD,EAAE,CAACc,QAAH,GAAcL,MAAd,CAAqB,CAArB,CAAN;AACH,GAFD,MAEO;AACHR,IAAAA,GAAG,GAAG,EAAN;AACH;;AACD,SAAOF,EAAE,GAAGF,EAAL,GAAUI,GAAjB;AACH","sourcesContent":["export function numberFormat(number, decimals, dec_point = '.', thousands_sep = ' ') {  // Format a number with grouped thousands\r\n    let i, j, kw, kd, km, nl, lkd\r\n    if (isNaN(decimals = Math.abs(decimals))) {\r\n        decimals = 2\r\n    }\r\n    if (dec_point === undefined) {\r\n        dec_point = '.'\r\n    }\r\n    if (thousands_sep === undefined) {\r\n        thousands_sep = ' '\r\n    }\r\n    i = parseInt(number = (+number || 0).toFixed(decimals)) + ''\r\n    if ((j = i.length) > 3) {\r\n        j = j % 3\r\n    } else {\r\n        j = 0\r\n    }\r\n    km = (j ? i.substr(0, j) + thousands_sep : '')\r\n    kw = i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousands_sep)\r\n    kd = '0' + (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).replace(/-/, 0).slice(2) : '')\r\n    nl = parseFloat(kd).valueOf()\r\n    if (nl > 0) {\r\n        lkd = nl.toString().substr(1)\r\n    } else {\r\n        lkd = ''\r\n    }\r\n    return km + kw + lkd\r\n}"]},"metadata":{},"sourceType":"module"}