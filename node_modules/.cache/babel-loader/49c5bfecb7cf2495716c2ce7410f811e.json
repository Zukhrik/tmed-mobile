{"ast":null,"code":"import React,{useCallback}from'react';import{Col,Row}from'antd';import{useStore}from'effector-react';import{PostMoreWrapper}from'../style';import{useTranslation}from'react-i18next';import{useHistory,useParams}from'react-router-dom';import{Text}from'../../../UIComponents/Typography/Text';import{deletePostMount}from'../../../Models/tape-model';import{currentPostMoreList,postMore}from'../../../data';import{$appModel,saveURLMount}from'../../../Models/app';import{$accountModel}from'../../../Models/account-model';export var PostMore=function PostMore(_ref){var data=_ref.data;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useParams=useParams(),username=_useParams.username;var _useStore=useStore($appModel),token=_useStore.$app.token;var _useHistory=useHistory(),push=_useHistory.push,pathname=_useHistory.location.pathname;var _useStore2=useStore($accountModel),currentProfile=_useStore2.$profiles.currentProfile;var handleItemClick=useCallback(function(action){var author=currentProfile&&\"@\".concat(currentProfile.slug_name);var params={post_id:data.id,author:author};if(!!token){if(action==='delete'){deletePostMount(params);}if(action==='repost'){saveURLMount(pathname);push(\"/repost/\".concat(params.post_id));}}},[data.id,currentProfile,push,token,pathname]);return/*#__PURE__*/React.createElement(PostMoreWrapper,null,/*#__PURE__*/React.createElement(Row,{align:\"middle\"},currentProfile&&currentProfile.slug_name===username||(currentProfile&&currentProfile.slug_name)===data.author.slug_name?currentPostMoreList.map(function(item,idx){var Icon=item.icon;return/*#__PURE__*/React.createElement(Col,{span:24,key:\"\".concat(idx+1),style:{whiteSpace:'nowrap'},onClick:function onClick(){return handleItemClick(item.text);}},/*#__PURE__*/React.createElement(Row,{wrap:false,align:\"middle\",justify:\"space-between\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Text,null,t(\"\".concat(item.text)))),/*#__PURE__*/React.createElement(Col,{className:\"icon-box\"},/*#__PURE__*/React.createElement(Icon,null))));}):postMore.map(function(item,idx){var Icon=item.icon;return/*#__PURE__*/React.createElement(Col,{span:24,key:\"\".concat(idx+1),style:{whiteSpace:'nowrap'},onClick:function onClick(){return handleItemClick(item.text);}},/*#__PURE__*/React.createElement(Row,{gutter:12,wrap:false,align:\"middle\",justify:\"space-between\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Text,null,t(\"\".concat(item.text)))),/*#__PURE__*/React.createElement(Col,{className:\"icon-box\"},/*#__PURE__*/React.createElement(Icon,null))));})));};","map":{"version":3,"sources":["/Users/zuhriddinkamilzanov/Desktop/tMed-mobile/src/Components/Post/PostMore/index.jsx"],"names":["React","useCallback","Col","Row","useStore","PostMoreWrapper","useTranslation","useHistory","useParams","Text","deletePostMount","currentPostMoreList","postMore","$appModel","saveURLMount","$accountModel","PostMore","data","t","username","token","$app","push","pathname","location","currentProfile","$profiles","handleItemClick","action","author","slug_name","params","post_id","id","map","item","idx","Icon","icon","whiteSpace","text"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react'\nimport {Col, Row} from 'antd'\nimport {useStore} from 'effector-react'\nimport {PostMoreWrapper} from '../style'\nimport {useTranslation} from 'react-i18next'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {Text} from '../../../UIComponents/Typography/Text'\nimport {deletePostMount} from '../../../Models/tape-model'\nimport {currentPostMoreList, postMore} from '../../../data'\nimport {$appModel, saveURLMount} from '../../../Models/app'\nimport {$accountModel} from '../../../Models/account-model'\n\nexport const PostMore = ({data}) => {\n    const {t} = useTranslation()\n    const {username} = useParams()\n    const {$app: {token}} = useStore($appModel)\n    const {push, location: {pathname}} = useHistory()\n    const {$profiles: {currentProfile}} = useStore($accountModel)\n    \n    const handleItemClick = useCallback((action) => {\n        const author = currentProfile && `@${currentProfile.slug_name}`\n        const params = {\n            post_id: data.id,\n            author\n        }\n        if (!!token) {\n            if (action === 'delete') {\n                deletePostMount(params)\n            }\n            \n            if (action === 'repost') {\n                saveURLMount(pathname)\n                push(`/repost/${params.post_id}`)\n            }\n        }\n    }, [data.id, currentProfile, push, token, pathname])\n    \n    return (\n        <PostMoreWrapper>\n            <Row align='middle'>\n                {\n                    (currentProfile && currentProfile.slug_name === username) ||\n                    (currentProfile && currentProfile.slug_name) === data.author.slug_name\n                        ? currentPostMoreList.map((item, idx) => {\n                            const Icon = item.icon\n                            return (\n                                <Col\n                                    span={24}\n                                    key={`${idx + 1}`}\n                                    style={{whiteSpace: 'nowrap'}}\n                                    onClick={() => handleItemClick(item.text)}\n                                >\n                                    <Row\n                                        wrap={false}\n                                        align='middle'\n                                        justify='space-between'\n                                    >\n                                        <Col>\n                                            <Text>\n                                                {t(`${item.text}`)}\n                                            </Text>\n                                        </Col>\n                                        <Col className='icon-box'>\n                                            <Icon/>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            )\n                        })\n                        : postMore.map((item, idx) => {\n                            const Icon = item.icon\n                            return (\n                                <Col\n                                    span={24}\n                                    key={`${idx + 1}`}\n                                    style={{whiteSpace: 'nowrap'}}\n                                    onClick={() => handleItemClick(item.text)}\n                                >\n                                    <Row\n                                        gutter={12}\n                                        wrap={false}\n                                        align='middle'\n                                        justify='space-between'\n                                    >\n                                        <Col>\n                                            <Text>\n                                                {t(`${item.text}`)}\n                                            </Text>\n                                        </Col>\n                                        <Col className='icon-box'>\n                                            <Icon/>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            )\n                        })\n                }\n            </Row>\n        </PostMoreWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}