/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2022 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
/**
 * [[include:modules/observer/README.md]]
 * @packageDocumentation
 * @module modules/observer
 */
import type { IJodit, SnapshotType, IObserver } from 'jodit/types';
import { ViewComponent } from 'jodit/core/component';
import { Snapshot } from './snapshot';
import { Stack } from './stack';
declare module 'jodit/config' {
    interface Config {
        observer: {
            /**
             * Limit of history length
             */
            maxHistoryLength: number;
            /**
             * Delay on every change
             */
            timeout: number;
        };
    }
}
/**
 * The module monitors the status of the editor and creates / deletes the required number of Undo / Redo shots .
 */
export declare class Observer extends ViewComponent<IJodit> implements IObserver {
    /** @override */
    className(): string;
    private __startValue;
    protected get startValue(): SnapshotType;
    protected set startValue(value: SnapshotType);
    stack: Stack;
    snapshot: Snapshot;
    private updateTick;
    upTick(): void;
    /**
     * Push new command in stack on some changes
     */
    private onChange;
    /**
     * Update history stack
     */
    private updateStack;
    /**
     * Return state of the WYSIWYG editor to step back
     */
    redo(): void;
    /**
     * Return the state of the WYSIWYG editor to step forward
     */
    undo(): void;
    clear(): void;
    replaceSnapshot(): void;
    private fireChangeStack;
    constructor(editor: IJodit);
    destruct(): void;
}
