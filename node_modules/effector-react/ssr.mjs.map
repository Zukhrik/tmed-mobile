{"version":3,"file":"ssr.mjs","sources":["effector-react/useStore.ts","effector-react/withDisplayName.ts","effector-react/ssr.ts","effector-react/createGate.ts","effector-react/useList.ts","effector-react/useIsomorphicLayoutEffect.ts","effector-react/throw.ts"],"sourcesContent":["import {Store, is, clearNode, createStore} from 'effector'\nimport React from 'react'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {throwError} from './throw'\n\nexport function useStore<State>(store: Store<State>): State {\n  if (!is.store(store)) throwError('expect useStore argument to be a store')\n\n  const currentValue = store.getState()\n  const inc = React.useReducer((n: any, action: void) => n + 1, 0)[1]\n  const currentStore = React.useRef({\n    store,\n    value: currentValue,\n    pending: false,\n  })\n  useIsomorphicLayoutEffect(() => {\n    const stop = store.updates.watch(upd => {\n      const ref = currentStore.current\n      if (!ref.pending) {\n        ref.value = upd\n        ref.pending = true\n        inc()\n        ref.pending = false\n      }\n    })\n    const newValue = store.getState()\n    const ref = currentStore.current\n    if (ref.store === store && ref.value !== newValue) {\n      ref.value = newValue\n      ref.pending = true\n      inc()\n      ref.pending = false\n    }\n    ref.store = store\n    return stop\n  }, [store])\n  return currentValue\n}\n\nexport function useStoreMap<State, Result, Keys extends ReadonlyArray<any>>(\n  configOrStore:\n    | {\n        store: Store<State>\n        keys: Keys\n        fn(state: State, keys: Keys): Result\n        updateFilter?: (update: Result, current: Result) => boolean\n      }\n    | Store<State>,\n  separateFn?: (state: State, keys: Keys) => Result,\n): Result {\n  let fn: (state: State, keys: Keys) => Result\n  let updateFilter: (update: Result, current: Result) => boolean\n  let store: Store<State>\n  let keys: Keys\n  if (separateFn) {\n    fn = separateFn\n    store = configOrStore as Store<State>\n    keys = ([] as unknown) as Keys\n  } else {\n    fn = (configOrStore as any).fn\n    store = (configOrStore as any).store\n    keys = (configOrStore as any).keys\n    updateFilter = (configOrStore as any).updateFilter\n  }\n  if (!is.store(store)) throwError('useStoreMap expects a store')\n  if (!Array.isArray(keys)) throwError('useStoreMap expects an array as keys')\n  if (typeof fn !== 'function') throwError('useStoreMap expects a function')\n  const result: Store<Result> = React.useMemo(\n    () =>\n      createStore(fn(store.getState(), keys), {updateFilter}).on(\n        store,\n        (_, state) => fn(state, keys),\n      ),\n    keys,\n  )\n  const state = useStore(result)\n  useIsomorphicLayoutEffect(\n    () => () => {\n      result.off(store)\n      clearNode(result, {deep: true})\n    },\n    keys,\n  )\n  return state\n}\n","export function withDisplayName(name: string, Component: any) {\n  Component.displayName = name\n  return Component\n}\n","import React from 'react'\nimport {Domain, is, launch} from 'effector'\nimport {\n  useStore as commonUseStore,\n  useStoreMap as commonUseStoreMap,\n} from './useStore'\nimport {useList as commonUseList} from './useList'\nimport {withDisplayName} from './withDisplayName'\nimport {useGate as commonUseGate, createGateImplementation} from './createGate'\nimport {Gate} from './index.h'\n\nfunction createDefer() {\n  const result = {} as any\n  result.req = new Promise((rs, rj) => {\n    result.rs = rs\n    result.rj = rj\n  })\n  result.req.catch((err: any) => {})\n  return result\n}\n\nconst Scope = React.createContext(null)\nexport const {Provider} = Scope\n\nfunction useScopeStore(store: any) {\n  const scope = React.useContext(Scope) as any\n  if (!scope)\n    throw Error('No scope found, consider adding <Provider> to app root')\n  return scope.find(store).meta.wrapped\n}\n\nexport function createGate<Props>(config: {\n  domain: Domain\n  defaultState: Props\n  name?: string\n}) {\n  if (!config || !is.domain(config.domain))\n    throw Error('config.domain should exists')\n\n  return createGateImplementation({\n    domain: config.domain,\n    name: config.name,\n    defaultState: 'defaultState' in config ? config.defaultState : {},\n    hook: useGate,\n  })\n}\n\nexport function useGate<Props>(\n  GateComponent: Gate<Props>,\n  props: Props = {} as any,\n) {\n  const open = useEvent(GateComponent.open)\n  const close = useEvent(GateComponent.close)\n  const set = useEvent(GateComponent.set)\n  const ForkedGate = React.useMemo(\n    () =>\n      ({\n        open,\n        close,\n        set,\n      } as Gate<Props>),\n    [GateComponent, open],\n  )\n  commonUseGate(ForkedGate, props)\n}\n\nexport function createStoreConsumer(store: any) {\n  return (props: any) => {\n    const state = useStore(store)\n    return props.children(state)\n  }\n}\n\nexport function createContextComponent(\n  store: any,\n  context: any,\n  renderProp: any,\n) {\n  return (props: any) => {\n    const ctx = React.useContext(context)\n    const state = useStore(store)\n    return renderProp(props, state, ctx)\n  }\n}\n\nexport function createComponent(shape: any) {\n  throw new Error('not implemented')\n}\n\nexport function createReactState(store: any, Component: any) {\n  const wrappedComponentName =\n    Component.displayName || Component.name || 'Unknown'\n  return withDisplayName(`Connect(${wrappedComponentName})`, (props: any) =>\n    React.createElement(Component, Object.assign({}, props, useStore(store))),\n  )\n}\n\nexport function connect(Component: any) {\n  return (store: any) => createReactState(store, Component)\n}\n\n/** useStore wrapper for scopes */\nexport function useStore(store: any) {\n  return commonUseStore(useScopeStore(store))\n}\n/** useList wrapper for scopes */\nexport function useList(store: any, opts: any) {\n  return commonUseList(useScopeStore(store), opts)\n}\n/** useStoreMap wrapper for scopes */\nexport function useStoreMap(configOrStore: any, separateFn: any) {\n  if (separateFn)\n    return commonUseStoreMap(useScopeStore(configOrStore), separateFn)\n  return commonUseStoreMap({\n    store: useScopeStore(configOrStore.store),\n    keys: configOrStore.keys,\n    fn: configOrStore.fn,\n    updateFilter: configOrStore.updateFilter,\n  })\n}\n\nfunction resolveUnit(unit: any, scope: any) {\n  const localUnit = scope.find(unit)\n  return is.effect(unit)\n    ? (params: any) => {\n        const req = createDefer()\n        //@ts-ignore\n        launch({target: localUnit, params: {params, req}, forkPage: scope})\n        return req.req\n      }\n    : (payload: any) => {\n        //@ts-ignore\n        launch({target: localUnit, params: payload, forkPage: scope})\n        return payload\n      }\n}\n\n/**\nbind event to scope\n\nworks like React.useCallback, but for scopes\n*/\nexport function useEvent(eventObject: any) {\n  const scope = React.useContext(Scope) as any\n  const isShape = !is.unit(eventObject) && typeof eventObject === 'object'\n  const events = isShape ? eventObject : {event: eventObject}\n\n  return React.useMemo(() => {\n    if (is.unit(eventObject)) {\n      return resolveUnit(eventObject, scope)\n    }\n    const shape = Array.isArray(eventObject) ? [] : ({} as any)\n    for (const key in eventObject) {\n      shape[key] = resolveUnit(eventObject[key], scope)\n    }\n    return shape\n  }, [scope, ...Object.keys(events), ...Object.values(events)])\n}\n","import React from 'react'\nimport {createStore, launch, Store, Domain, createEvent} from 'effector'\nimport {Gate} from './index.h'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {withDisplayName} from './withDisplayName'\n\nexport function useGate<Props>(\n  GateComponent: Gate<Props>,\n  props: Props = {} as any,\n) {\n  const propsRef = React.useRef<any>(null)\n  useIsomorphicLayoutEffect(() => {\n    GateComponent.open(propsRef.current)\n    return () => GateComponent.close(propsRef.current) as any\n  }, [GateComponent])\n  if (!shallowCompare(propsRef.current, props)) {\n    propsRef.current = props\n    GateComponent.set(props)\n  }\n}\n\nfunction shallowCompare(a: any, b: any) {\n  if (a === b) return true\n  if (\n    typeof a === 'object' &&\n    a !== null &&\n    typeof b === 'object' &&\n    b !== null\n  ) {\n    const aKeys = Object.keys(a)\n    const bKeys = Object.keys(b)\n    if (aKeys.length !== bKeys.length) return false\n    for (let i = 0; i < aKeys.length; i++) {\n      const key = aKeys[i]\n      if (a[key] !== b[key]) return false\n    }\n    return true\n  }\n  return false\n}\nexport function createGateImplementation<State>({\n  name = 'gate',\n  domain,\n  defaultState,\n  hook: useGateHook,\n}: {\n  name?: string\n  domain?: Domain\n  defaultState: State | {}\n  hook: typeof useGate\n}): Gate<State> {\n  const fullName = `${domain ? `${domain.compositeName.fullName}/` : ''}${name}`\n  const set = createEvent<State>(`${fullName}.set`)\n  const open = createEvent<State>(`${fullName}.open`)\n  const close = createEvent<State>(`${fullName}.close`)\n  const status = createStore(Boolean(false), {\n    name: `${fullName}.status`,\n  })\n    .on(open, () => Boolean(true))\n    .on(close, () => Boolean(false))\n  const state = createStore(defaultState as State, {\n    name: `${fullName}.state`,\n  })\n    .on(set, (_, state) => state)\n    .reset(close)\n  if (domain) {\n    const {hooks} = domain as any\n    launch({\n      target: [\n        hooks.store,\n        hooks.store,\n        hooks.event,\n        hooks.event,\n        hooks.event,\n      ] as any,\n      params: [status, state, open, close, set],\n    })\n  }\n  function GateComponent(props: State) {\n    useGateHook(GateComponent as any, props)\n    return null\n  }\n  GateComponent.open = open\n  GateComponent.close = close\n  GateComponent.status = status\n  GateComponent.state = state\n  GateComponent.set = set\n  return withDisplayName(`Gate:${fullName}`, GateComponent)\n}\nexport function createGate<Props>(\n  name: string = 'gate',\n  defaultState: Props = {} as any,\n): Gate<Props> {\n  let domain\n  if (typeof name === 'object' && name !== null) {\n    if ('defaultState' in name) {\n      //@ts-ignore\n      defaultState = name.defaultState\n    }\n    //@ts-ignore\n    if (name.domain) domain = name.domain\n    //@ts-ignore\n    name = name.name\n  }\n  return createGateImplementation({\n    name,\n    domain,\n    defaultState,\n    hook: useGate,\n  })\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react'\nimport {Store, is} from 'effector'\nimport {useStore, useStoreMap} from './useStore'\nimport {withDisplayName} from './withDisplayName'\nimport {throwError} from './throw'\n\nexport function useList<T>(\n  list: Store<T[]>,\n  renderItem:\n    | {\n        keys?: any[]\n        fn(item: T, index: number): React.ReactNode\n        getKey?: (item: T) => string\n      }\n    | ((item: T, index: number) => React.ReactNode),\n): React.ReactNode {\n  let keys = [] as any[]\n  let fn\n  let getKey: (item: T) => string\n  if (typeof renderItem === 'object' && renderItem !== null) {\n    if (renderItem.keys) keys = renderItem.keys\n    fn = renderItem.fn\n    if (renderItem.getKey) getKey = renderItem.getKey\n  } else {\n    fn = renderItem\n  }\n  if (!is.store(list)) throwError('expect useList first argument to be a store')\n  if (typeof fn !== 'function')\n    throwError(\"expect useList's renderItem to be a function\")\n  if (!Array.isArray(keys)) throwError(\"expect useList's keys to be an array\")\n  const Item = React.useMemo(() => {\n    const Item = withDisplayName(\n      `${list.shortName || 'Unknown'}.Item`,\n      (\n        props:\n          | {index: number; keys: any[]; keyVal: never; value: never}\n          | {index: never; keys: any[]; keyVal: string; value: T},\n      ) => {\n        const {index, keys, keyVal, value} = props\n        const isKeyed = !!fnRef.current[1]\n        if (isKeyed) {\n          return fnRef.current[0](value, keyVal as any)\n        }\n        const item = useStoreMap({\n          store: list,\n          keys: [index, ...keys],\n          fn: (list, keys) => list[keys[0]],\n        })\n        return fnRef.current[0](item, index)\n      },\n    )\n    return React.memo(Item)\n  }, [list, !!getKey!])\n  const fnRef = React.useRef([fn, getKey!] as const)\n  fnRef.current = [fn, getKey!]\n  const keysSelfMemo = React.useMemo(() => keys, keys)\n  if (getKey!) {\n    return useStore(list).map(value => {\n      const key = fnRef.current[1](value)\n      return React.createElement(Item, {\n        keyVal: key,\n        key,\n        keys: keysSelfMemo,\n        value,\n      })\n    })\n  } else {\n    const length = useStoreMap({\n      store: list,\n      keys: [list],\n      fn: list => list.length,\n    })\n    return Array.from({length}, (_, i) =>\n      React.createElement(Item, {\n        index: i,\n        key: i,\n        keys: keysSelfMemo,\n      }),\n    )\n  }\n}\n","import React from 'react'\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n","export const throwError = (message: string) => {\n  throw Error(message)\n}\n"],"names":["useStore","store","is","throwError","currentValue","getState","inc","React","useReducer","n","currentStore","useRef","value","pending","useIsomorphicLayoutEffect","stop","updates","watch","upd","ref","current","newValue","useStoreMap","configOrStore","separateFn","fn","updateFilter","keys","Array","isArray","result","useMemo","createStore","on","_","state","off","clearNode","deep","withDisplayName","name","Component","displayName","useScopeStore","scope","useContext","Scope","Error","find","meta","wrapped","createGate","config","domain","defaultState","hook","useGateHook","GateComponent","props","fullName","compositeName","set","createEvent","open","close","status","Boolean","reset","hooks","launch","target","event","params","createGateImplementation","useGate","useEvent","propsRef","a","b","aKeys","Object","bKeys","length","i","key","shallowCompare","commonUseGate","createStoreConsumer","children","createContextComponent","context","renderProp","ctx","createComponent","createReactState","createElement","assign","connect","commonUseStore","useList","opts","list","renderItem","getKey","Item","shortName","index","keyVal","fnRef","item","memo","keysSelfMemo","map","from","commonUseList","commonUseStoreMap","resolveUnit","unit","localUnit","effect","req","Promise","rs","rj","catch","err","createDefer","forkPage","payload","eventObject","events","shape","values","window","useLayoutEffect","useEffect","message","createContext","Provider"],"mappings":"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"}